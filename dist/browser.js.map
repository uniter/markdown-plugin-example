{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/microdash/index.js","webpack:///./node_modules/phpcommon/index.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/pauser/index.js","webpack:///./node_modules/phpcore/src/Value.js","webpack:///./node_modules/phpify/api/psync.js","webpack:///./node_modules/phpruntime/psync.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/phpify/src/php/initialiser_stub.php","webpack:///./node_modules/phpcore/src/Reference/Reference.js","webpack:///./node_modules/es5-ext/object/valid-value.js","webpack:///./node_modules/d/index.js","webpack:///./node_modules/es5-ext/object/is-value.js","webpack:///./node_modules/es6-symbol/index.js","webpack:///./node_modules/phpcore/src/KeyValuePair.js","webpack:///./node_modules/type/value/is.js","webpack:///./node_modules/lie/lib/browser.js","webpack:///./node_modules/phpcore/src/Reference/Null.js","webpack:///./node_modules/es5-ext/object/valid-callable.js","webpack:///./node_modules/phpcore/src/Type/TypeInterface.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/microdash/src/each.js","webpack:///./node_modules/phpcore/src/Variable.js","webpack:///./node_modules/phpcore/src/Reference/ReferenceSlot.js","webpack:///./node_modules/es6-weak-map/index.js","webpack:///./node_modules/es5-ext/function/is-arguments.js","webpack:///./node_modules/es5-ext/string/is-string.js","webpack:///./node_modules/ext/global-this/index.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/phpcommon/src/Error/PHPError.js","webpack:///./node_modules/phpcore/src/Function/FunctionContextInterface.js","webpack:///./node_modules/phpcore/src/KeyReferencePair.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/index.js","webpack:///./node_modules/type/object/is.js","webpack:///./node_modules/es5-ext/object/assign/index.js","webpack:///./node_modules/microdash/src/isArray.js","webpack:///./node_modules/microdash/src/getType.js","webpack:///./node_modules/microdash/src/forOwn.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/phpcommon/src/Error/Exception.js","webpack:///./node_modules/phpcore/src/Exception/NoActiveOutputBufferException.js","webpack:///./node_modules/phpruntime/constants.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/Exception/MissingFormatArgumentException.js","webpack:///./node_modules/phpcore/src/Debug/DebugValue.js","webpack:///./node_modules/phpcore/src/Debug/DebugVariable.js","webpack:///./node_modules/phpcore/src/PHPState.js","webpack:///./node_modules/phpcore/src/Closure.js","webpack:///./node_modules/phpcore/src/Reference/Element/ElementProvider.js","webpack:///./node_modules/phpcore/src/Reference/Element.js","webpack:///./node_modules/phpcore/src/FFI/Call.js","webpack:///./node_modules/phpcore/src/FFI/Value/PHPObject.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/is-implemented.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/shim.js","webpack:///./node_modules/es5-ext/object/is-object.js","webpack:///./node_modules/type/plain-function/is.js","webpack:///./node_modules/es5-ext/object/normalize-options.js","webpack:///./node_modules/es5-ext/string/#/contains/index.js","webpack:///./node_modules/es6-iterator/get.js","webpack:///./node_modules/es6-symbol/validate-symbol.js","webpack:///./node_modules/es6-iterator/index.js","webpack:///./node_modules/type/lib/resolve-exception.js","webpack:///./node_modules/phpcore/src/FFI/Result.js","webpack:///./node_modules/is-promise/index.js","webpack:///./node_modules/phpcore/src/FFI/Value/ValueStorage.js","webpack:///./node_modules/phpcore/src/Exception/LoadFailedException.js","webpack:///./node_modules/phpcore/src/Value/Exit.js","webpack:///./node_modules/phpcore/src/Output/OutputBufferInterface.js","webpack:///./node_modules/phpcore/src/Value/String.js","webpack:///browser/entry.php","webpack:///./node_modules/phpify/src/API.js","webpack:///./node_modules/microdash/src/escapeRegExp.js","webpack:///./node_modules/microdash/src/extend.js","webpack:///./node_modules/microdash/src/filter.js","webpack:///./node_modules/microdash/src/isBoolean.js","webpack:///./node_modules/microdash/src/isFunction.js","webpack:///./node_modules/microdash/src/isNumber.js","webpack:///./node_modules/microdash/src/isPlainObject.js","webpack:///./node_modules/microdash/src/isString.js","webpack:///./node_modules/microdash/src/map.js","webpack:///./node_modules/phpify/src/EnvironmentProvider.js","webpack:///./node_modules/phpify/src/FileSystem.js","webpack:///./node_modules/immediate/lib/browser.js","webpack:///./node_modules/phpify/src/IO.js","webpack:///./node_modules/phpify/src/Loader.js","webpack:///./node_modules/phpify/src/ModuleRepository.js","webpack:///./node_modules/phpify/src/Performance.js","webpack:///./node_modules/phpconfig/dist/index.js","webpack:///./node_modules/phpconfig/dist/Config.js","webpack:///./node_modules/phpconfig/dist/ConfigExporter.js","webpack:///./node_modules/phpconfig/dist/ConfigImporter.js","webpack:///./node_modules/phpconfig/dist/ConfigLoader.js","webpack:///./node_modules/phpconfig/dist/ConfigSet.js","webpack:///./node_modules/phpconfig/dist/Loader.js","webpack:///./node_modules/phpconfig/dist/Requirer.js","webpack:///./node_modules/phpconfig/dist/SerialisationChecker.js","webpack:///./node_modules/phpconfig/dist sync","webpack:///./node_modules/phpruntime/src/builtin/builtins.js","webpack:///./node_modules/phpruntime/src/builtin/constants/array.js","webpack:///./node_modules/phpruntime/src/builtin/functions/array.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///./node_modules/phpcommon/src/Error/PHPFatalError.js","webpack:///./node_modules/phpcommon/src/Error/PHPParseError.js","webpack:///./node_modules/phpcommon/src/Translator.js","webpack:///./node_modules/template-string/index.js","webpack:///./node_modules/phpruntime/src/builtin/functions/math/baseConversion.js","webpack:///./node_modules/phpruntime/src/builtin/functions/class.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/config.js","webpack:///./node_modules/phpruntime/src/builtin/functions/misc/constant.js","webpack:///./node_modules/phpruntime/src/builtin/interfaces/SPL/Countable.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/environment.js","webpack:///./node_modules/phpruntime/src/builtin/functions/errorHandling.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/extension.js","webpack:///./node_modules/phpruntime/src/builtin/constants/filesystem.js","webpack:///./node_modules/phpruntime/src/builtin/functions/filesystem.js","webpack:///./node_modules/phpruntime/src/builtin/functions/functionHandling.js","webpack:///./node_modules/phpruntime/src/builtin/functions/functionHandling/CallbackValue.js","webpack:///./node_modules/phpruntime/src/builtin/functions/string/html.js","webpack:///./node_modules/phpruntime/src/builtin/classes/Exception/InvalidArgumentException.js","webpack:///./node_modules/phpruntime/src/builtin/classes/Exception/LogicException.js","webpack:///./node_modules/phpruntime/src/builtin/functions/outputControl.js","webpack:///./node_modules/phpruntime/src/builtin/functions/pcre/common.js","webpack:///./node_modules/phpruntime/src/builtin/constants/pcre.js","webpack:///./node_modules/phpruntime/src/builtin/constants/php.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/php.js","webpack:///./node_modules/phpruntime/src/builtin/functions/spl.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/FormatConverter.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/FormatParser.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/Formatter.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/NativeFormatter.js","webpack:///./node_modules/phpruntime/src/builtin/constants/string.js","webpack:///./node_modules/phpruntime/src/builtin/functions/string.js","webpack:///./node_modules/phpruntime/src/builtin/functions/dateAndTime/time.js","webpack:///./node_modules/phpruntime/src/builtin/functions/misc/time.js","webpack:///./node_modules/phpruntime/src/builtin/functions/variableHandling.js","webpack:///./node_modules/phpcore/psync.js","webpack:///./node_modules/phpcore/src/shared/debugFormatterInstaller.js","webpack:///./node_modules/phpcore/src/Debug/DebugFactory.js","webpack:///./node_modules/phpcore/src/Debug/DebugFormatter.js","webpack:///./node_modules/phpcore/src/Debug/DebugFormatterInstaller.js","webpack:///./node_modules/phpcore/src/Debug/ValueFormatter.js","webpack:///./node_modules/phpcore/src/shared/runtimeFactory.js","webpack:///./node_modules/phpcore/src/Engine.js","webpack:///./node_modules/pauser/src/Wrapper.js","webpack:///./node_modules/phpcore/src/Environment.js","webpack:///./node_modules/phpcore/src/shared/globalStackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Stack/GlobalStackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Stack/NonV8FrameStackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Stack/StackCleaner.js","webpack:///./node_modules/phpcore/src/FFI/Stack/V8FrameStackHooker.js","webpack:///./node_modules/phpcore/src/builtin/builtins.js","webpack:///./node_modules/phpcore/src/builtin/functions/optionsAndInfo/config.js","webpack:///./node_modules/phpcore/src/builtin/constants/errorHandling.js","webpack:///./node_modules/phpcore/src/builtin/ini/errorHandling.js","webpack:///./node_modules/phpcore/src/builtin/messages/error.en_GB.js","webpack:///./node_modules/phpcore/src/builtin/messages/misc.en_GB.js","webpack:///./node_modules/phpcore/src/builtin/messages/notice.en_GB.js","webpack:///./node_modules/phpcore/src/builtin/constants/reserved.js","webpack:///./node_modules/phpcore/src/builtin/functions/spl.js","webpack:///./node_modules/phpcore/src/builtin/classes/stdClass.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/ArgumentCountError.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/ArrayAccess.js","webpack:///./node_modules/phpcore/src/builtin/classes/Closure.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/CompileError.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error.js","webpack:///./node_modules/phpcore/src/builtin/classes/Exception.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/Iterator.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/IteratorAggregate.js","webpack:///./node_modules/phpcore/src/builtin/classes/JSObject.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/ParseError.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/Throwable.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/Traversable.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/TypeError.js","webpack:///./node_modules/phpcore/src/Reference/AccessorReference.js","webpack:///./node_modules/phpcore/src/Call.js","webpack:///./node_modules/phpcore/src/CallFactory.js","webpack:///./node_modules/phpcore/src/CallStack.js","webpack:///./node_modules/phpcore/src/ClassAutoloader.js","webpack:///./node_modules/phpcore/src/Function/ClosureContext.js","webpack:///./node_modules/phpcore/src/ClosureFactory.js","webpack:///./node_modules/phpcore/src/Reference/Element/ElementProviderFactory.js","webpack:///./node_modules/phpcore/src/Reference/Element/ElementHookCollection.js","webpack:///./node_modules/phpcore/src/Reference/Element/HookableElementProvider.js","webpack:///./node_modules/phpcore/src/Reference/Element/HookableElement.js","webpack:///./node_modules/phpcore/src/Error/ErrorConfiguration.js","webpack:///./node_modules/phpcore/src/Error/ErrorConverter.js","webpack:///./node_modules/phpcore/src/Error/ErrorPromoter.js","webpack:///./node_modules/phpcore/src/Error/ErrorReporting.js","webpack:///./node_modules/phpcore/src/FFI/Value/AsyncObjectValue.js","webpack:///./node_modules/phpcore/src/FFI/Call/Caller.js","webpack:///./node_modules/phpcore/src/FFI/Internals/ClassInternalsClassFactory.js","webpack:///./node_modules/phpcore/src/FFI/Export/ExportFactory.js","webpack:///./node_modules/phpcore/src/FFI/Export/ExportRepository.js","webpack:///./node_modules/phpcore/src/FFI/FFIFactory.js","webpack:///./node_modules/phpcore/src/FFI/Internals/FunctionInternalsClassFactory.js","webpack:///./node_modules/phpcore/src/FFI/Internals/Internals.js","webpack:///./node_modules/phpcore/src/FFI/Call/NativeCaller.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyClassFactory.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyClassRepository.js","webpack:///./node_modules/es6-weak-map/is-implemented.js","webpack:///./node_modules/es6-weak-map/polyfill.js","webpack:///./node_modules/es5-ext/function/noop.js","webpack:///./node_modules/es5-ext/object/create.js","webpack:///./node_modules/es5-ext/object/valid-object.js","webpack:///./node_modules/es5-ext/string/random-uniq.js","webpack:///./node_modules/type/function/is.js","webpack:///./node_modules/type/prototype/is.js","webpack:///./node_modules/es5-ext/object/assign/is-implemented.js","webpack:///./node_modules/es5-ext/object/assign/shim.js","webpack:///./node_modules/es5-ext/object/keys/index.js","webpack:///./node_modules/es5-ext/object/keys/is-implemented.js","webpack:///./node_modules/es5-ext/object/keys/shim.js","webpack:///./node_modules/es5-ext/string/#/contains/is-implemented.js","webpack:///./node_modules/es5-ext/string/#/contains/shim.js","webpack:///./node_modules/es6-iterator/array.js","webpack:///./node_modules/es6-symbol/is-implemented.js","webpack:///./node_modules/ext/global-this/is-implemented.js","webpack:///./node_modules/ext/global-this/implementation.js","webpack:///./node_modules/es6-symbol/polyfill.js","webpack:///./node_modules/es6-symbol/is-symbol.js","webpack:///./node_modules/es6-symbol/lib/private/generate-name.js","webpack:///./node_modules/es6-symbol/lib/private/setup/standard-symbols.js","webpack:///./node_modules/es6-symbol/lib/private/setup/symbol-registry.js","webpack:///./node_modules/es5-ext/array/#/clear.js","webpack:///./node_modules/d/auto-bind.js","webpack:///./node_modules/type/value/ensure.js","webpack:///./node_modules/type/string/coerce.js","webpack:///./node_modules/type/lib/to-short-string.js","webpack:///./node_modules/type/lib/safe-to-string.js","webpack:///./node_modules/type/plain-function/ensure.js","webpack:///./node_modules/es5-ext/object/copy.js","webpack:///./node_modules/es5-ext/array/from/index.js","webpack:///./node_modules/es5-ext/array/from/is-implemented.js","webpack:///./node_modules/es5-ext/array/from/shim.js","webpack:///./node_modules/es5-ext/function/is-function.js","webpack:///./node_modules/es5-ext/number/to-pos-integer.js","webpack:///./node_modules/es5-ext/number/to-integer.js","webpack:///./node_modules/es5-ext/math/sign/index.js","webpack:///./node_modules/es5-ext/math/sign/is-implemented.js","webpack:///./node_modules/es5-ext/math/sign/shim.js","webpack:///./node_modules/es5-ext/object/map.js","webpack:///./node_modules/es5-ext/object/for-each.js","webpack:///./node_modules/es5-ext/object/_iterate.js","webpack:///./node_modules/es6-iterator/string.js","webpack:///./node_modules/es6-iterator/valid-iterable.js","webpack:///./node_modules/es6-iterator/is-iterable.js","webpack:///./node_modules/es6-iterator/for-of.js","webpack:///./node_modules/es6-weak-map/is-native-implemented.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyFactory.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyMemberFactory.js","webpack:///./node_modules/phpcore/src/FFI/Stack/StackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Export/UnwrapperRepository.js","webpack:///./node_modules/phpcore/src/FFI/Call/ValueCaller.js","webpack:///./node_modules/phpcore/src/FFI/Value/ValueCoercer.js","webpack:///./node_modules/phpcore/src/FFI/Value/ValueHelper.js","webpack:///./node_modules/phpcore/src/Function/FunctionContext.js","webpack:///./node_modules/phpcore/src/FunctionFactory.js","webpack:///./node_modules/phpcore/src/Function/FunctionSpec.js","webpack:///./node_modules/phpcore/src/Function/FunctionSpecFactory.js","webpack:///./node_modules/phpcore/src/Load/Includer.js","webpack:///./node_modules/phpcore/src/INIState.js","webpack:///./node_modules/phpcore/src/Load/Loader.js","webpack:///./node_modules/phpcore/src/Load/LoadScope.js","webpack:///./node_modules/phpcore/src/Function/MethodContext.js","webpack:///./node_modules/phpcore/src/MethodSpec.js","webpack:///./node_modules/phpcore/src/Module.js","webpack:///./node_modules/phpcore/src/ModuleFactory.js","webpack:///./node_modules/phpcore/src/Namespace.js","webpack:///./node_modules/phpcore/src/Class.js","webpack:///./node_modules/phpcore/src/Reference/StaticProperty.js","webpack:///./node_modules/phpcore/src/Reference/UndeclaredStaticProperty.js","webpack:///./node_modules/phpcore/src/NamespaceFactory.js","webpack:///./node_modules/phpcore/src/NamespaceScope.js","webpack:///./node_modules/phpcore/src/Load/OnceIncluder.js","webpack:///./node_modules/phpcore/src/OptionSet.js","webpack:///./node_modules/phpcore/src/Output/Output.js","webpack:///./node_modules/phpcore/src/Output/OutputBuffer.js","webpack:///./node_modules/phpcore/src/Output/OutputFactory.js","webpack:///./node_modules/phpcore/src/Function/Parameter.js","webpack:///./node_modules/phpcore/src/Function/ParameterFactory.js","webpack:///./node_modules/phpcore/src/Function/ParameterListFactory.js","webpack:///./node_modules/phpcore/src/Function/ParameterTypeFactory.js","webpack:///./node_modules/phpcore/src/ReferenceFactory.js","webpack:///./node_modules/phpcore/src/Scope.js","webpack:///./node_modules/phpcore/src/ScopeFactory.js","webpack:///./node_modules/phpcore/src/Output/StdoutBuffer.js","webpack:///./node_modules/phpcore/src/SuperGlobalScope.js","webpack:///./node_modules/phpcore/src/Tools.js","webpack:///./node_modules/phpcore/src/List.js","webpack:///./node_modules/phpcore/src/ToolsFactory.js","webpack:///./node_modules/phpcore/src/Error/TraceFormatter.js","webpack:///./node_modules/phpcore/src/Type/TypeFactory.js","webpack:///./node_modules/phpcore/src/Type/ArrayType.js","webpack:///./node_modules/phpcore/src/Type/CallableType.js","webpack:///./node_modules/phpcore/src/Type/ClassType.js","webpack:///./node_modules/phpcore/src/Type/IterableType.js","webpack:///./node_modules/phpcore/src/Type/MixedType.js","webpack:///./node_modules/phpcore/src/ValueFactory.js","webpack:///./node_modules/phpcore/src/Iterator/ArrayIterator.js","webpack:///./node_modules/phpcore/src/Value/Array.js","webpack:///./node_modules/phpcore/src/Value/BarewordString.js","webpack:///./node_modules/phpcore/src/Value/Boolean.js","webpack:///./node_modules/phpcore/src/Value/Float.js","webpack:///./node_modules/phpcore/src/Value/Integer.js","webpack:///./node_modules/phpcore/src/Value/Null.js","webpack:///./node_modules/phpcore/src/Value/Object.js","webpack:///./node_modules/phpcore/src/Reference/ObjectElement.js","webpack:///./node_modules/phpcore/src/Reference/Property.js","webpack:///./node_modules/phpcore/src/VariableFactory.js","webpack:///./node_modules/phpcore/src/RuntimeFactory.js","webpack:///./node_modules/phpcore/src/Runtime.js","webpack:///./node_modules/phpcore/src/Stream.js","webpack:///./node_modules/events/events.js","webpack:///src/Markdown.php","webpack:///vendor/autoload.php","webpack:///vendor/composer/ClassLoader.php","webpack:///vendor/composer/InstalledVersions.php","webpack:///vendor/composer/autoload_classmap.php","webpack:///vendor/composer/autoload_namespaces.php","webpack:///vendor/composer/autoload_psr4.php","webpack:///vendor/composer/autoload_real.php","webpack:///vendor/composer/autoload_static.php","webpack:///vendor/composer/installed.php","webpack:///./node_modules/uniter-markdown-plugin/dist/config.phpcore.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/BoldNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/DocumentNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/ExpressionNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/HeadingNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/InlineCodeNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/ItalicNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/ListItemNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/PlainTextNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/UnorderedListNode.js","webpack:///./browser/bootstrap.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","each","escapeRegExp","extend","filter","forOwn","isArray","isBoolean","isFunction","isNumber","isPlainObject","isString","map","Array","Exception","PHPError","PHPFatalError","PHPParseError","Translator","getOwnPropertyDescriptors","obj","keys","descriptors","length","getOwnPropertyDescriptor","formatRegExp","format","f","objects","arguments","push","inspect","join","args","len","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","process","noDeprecation","apply","this","warned","throwDeprecation","Error","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","constructor","ret","primitive","simple","formatPrimitive","visibleKeys","array","hash","forEach","val","idx","arrayToHash","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","RegExp","toString","isDate","Date","output","base","braces","toUTCString","formatProperty","match","formatArray","pop","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","set","split","line","substr","ar","arg","re","objectToString","e","pad","debuglog","env","NODE_DEBUG","toUpperCase","test","pid","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","add","kCustomPromisifiedSymbol","undefined","callbackifyOnRejected","reason","cb","newReason","promisify","original","TypeError","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","then","nextTick","rej","Wrapper","wrapper","options","phpCommon","NullReference","CLASS_NAME_NOT_VALID","createNullReference","callStack","factory","onSet","raiseError","E_WARNING","throwUnimplemented","Value","type","addToArray","raiseTranslatedError","E_ERROR","addToFloat","floatValue","createFloat","coerceToFloat","getNative","addToNull","addToString","stringValue","coerceToNumber","bitwiseAnd","rightValue","createInteger","coerceToInteger","bitwiseOr","callMethod","callStaticMethod","clone","method","coerceToArray","createArray","coerceToNativeError","coerceToObject","createStdClassObject","getInstancePropertyByName","createString","setValue","coerceToString","concat","decrement","divide","divideByArray","divideByBoolean","leftValue","divideByNonArray","divideByFloat","divideByInteger","divideByNull","divideByObject","divideByString","formatAsString","getCallableName","getConstantByName","getDisplayType","getElementByKey","getForAssignment","getLength","getProxy","getPushElement","getReference","getStaticPropertyByName","getType","getValue","getValueOrNull","increment","instantiate","isAnInstanceOf","isCallable","isIterable","isTheClassOfArray","isTheClassOfBoolean","isTheClassOfFloat","isTheClassOfInteger","isTheClassOfNull","isTheClassOfObject","isTheClassOfString","isEmpty","isEqualTo","createBoolean","isEqualToArray","isEqualToBoolean","isEqualToFloat","isEqualToInteger","isEqualToNull","isEqualToObject","isEqualToString","isGreaterThan","isGreaterThanOrEqual","isIdenticalTo","isIdenticalToArray","isIdenticalToObject","isLessThan","isLessThanOrEqual","isNotEqualTo","isNotIdenticalTo","isNumeric","isSet","logicalAnd","coerceToBoolean","logicalNot","modulo","dividend","divisor","multiply","multiplyByArray","multiplyByBoolean","multiplyByNonArray","multiplyByFloat","multiplyByInteger","multiplyByNull","multiplyByObject","multiplyByString","subtract","subtractFromNull","strict","API","EnvironmentProvider","FileSystem","IO","Loader","ModuleRepository","performance","global","phpConfigImporter","configImporter","loader","createLoader","builtins","runtime","install","webpackPolyfill","paths","children","installModules","path","checkExistence","exists","handlePath","aPath","configure","bootstrap","functionName","Reference","concatWith","decrementBy","divideBy","isDefined","valueFactory","createNull","incrementBy","multiplyBy","postDecrement","originalValue","decrementedValue","postIncrement","incrementedValue","preDecrement","preIncrement","isValue","isPlainFunction","assign","normalizeOpts","contains","dscr","w","gs","_undefined","KeyValuePair","getKey","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","state","queue","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","getThen","thenable","called","onError","onSuccess","result","tryCatch","status","out","callback","all","iterable","values","resolved","allResolver","outValue","race","response","util","TypeInterface","allowsNull","allowsValue","getDisplayName","getExpectedMessage","isScalar","g","Function","window","hasOwn","iterator","thisArg","ReferenceSlot","Variable","reference","nameValue","getName","E_NOTICE","setReferenceOrValue","referenceOrValue","setReference","toArray","toBoolean","toFloat","toInteger","unset","WeakMap","objToString","id","globalThis","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","xs","res","resolvedPath","resolvedAbsolute","cwd","charAt","normalize","isAbsolute","trailingSlash","slice","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","level","message","filePath","lineNumber","originalMessage","E_DEPRECATED","E_PARSE","E_STRICT","getFilePath","getLevel","getLineNumber","getMessage","FunctionContextInterface","getTraceFrameName","getUnprefixedName","KeyReferencePair","possibleTypes","REGEX","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","NoActiveOutputBufferException","sapi","operatingSystem","hostName","releaseName","versionInfo","machineType","phpVersion","major","minor","release","zendVersion","MissingFormatArgumentException","argumentPosition","DebugValue","DebugVariable","scope","variableName","getVariable","builtinTypes","AccessorReference","Call","CallFactory","CallStack","ClassAutoloader","Closure","ClosureContext","ClosureFactory","ElementProviderFactory","ErrorConfiguration","ErrorConverter","ErrorPromoter","ErrorReporting","FFIAsyncObjectValue","FFICall","FFICaller","FFIClassInternalsClassFactory","FFIExportFactory","FFIExportRepository","FFIFactory","FFIFunctionInternalsClassFactory","FFIInternals","FFINativeCaller","FFIPHPObject","FFIProxyClassFactory","FFIProxyClassRepository","FFIProxyFactory","FFIProxyMemberFactory","FFIResult","FFIStackHooker","FFIUnwrapperRepository","FFIValueCaller","FFIValueCoercer","FFIValueHelper","FFIValueStorage","FunctionContext","FunctionFactory","FunctionSpec","FunctionSpecFactory","Includer","INIState","LoadScope","MethodContext","MethodSpec","Module","ModuleFactory","Namespace","NamespaceFactory","NamespaceScope","OnceIncluder","OptionSet","Output","OutputBuffer","OutputFactory","Parameter","ParameterFactory","ParameterListFactory","ParameterTypeFactory","ReferenceFactory","Scope","ScopeFactory","StdoutBuffer","SuperGlobalScope","Tools","ToolsFactory","TraceFormatter","TypeFactory","ValueFactory","VariableFactory","PHPState","globalStackHooker","installedBuiltinTypes","stdin","stdout","stderr","pausable","optionGroups","globalScope","ffiInternals","ffiClassInternalsClassFactory","ffiFunctionInternalsClassFactory","includer","onceIncluder","optionSet","toolsFactory","callFactory","elementProviderFactory","elementProvider","createProvider","moduleFactory","translator","iniState","getConstant","errorConfiguration","errorConverter","traceFormatter","errorReporting","errorPromoter","ffiValueStorage","referenceFactory","classAutoloader","superGlobalScope","ffiCaller","ffiNativeCaller","ffiValueCaller","ffiFactory","ffiProxyMemberFactory","ffiProxyClassFactory","ffiProxyClassRepository","ffiProxyFactory","ffiUnwrapperRepository","ffiExportFactory","ffiExportRepository","ffiValueHelper","variableFactory","typeFactory","parameterFactory","parameterTypeFactory","parameterListFactory","functionSpecFactory","scopeFactory","functionFactory","closureFactory","globalNamespace","globalModule","globalNamespaceScope","globalsSuperGlobal","defineVariable","setClosureFactory","setGlobalScope","setGlobalNamespace","setCallStack","createAccessor","globalsArray","globalValues","exportVariables","elementHookCollection","createElementHookCollection","hookableElementProvider","createHookableProvider","onElementReferenceSet","elementReference","referenceSet","globalVariableName","onElementValueSet","valueSet","onElementUnset","newNative","coerce","bindings","ClassInternals","FunctionInternals","ffiStackHooker","throwableClassObject","installFunctionGroup","groupFactory","groupBuiltins","functionAliases","defineNonCoercingFunction","originalName","aliasName","aliasFunction","installClass","definitionFactory","defineClass","installClassGroup","installConstantGroup","defineConstant","installDefaultINIOptionGroup","installTranslationCatalogues","cataloguesByLocale","addTranslations","translationCatalogues","constantGroups","defaultINIGroups","functionGroups","classGroups","classes","groupOptions","bindingGroups","groupBindings","bindingFactory","bindingName","bindingOptions","getOption","setUpState","hook","ini","createFFIResult","syncCallback","asyncCallback","fqcn","classObject","defineCoercingFunction","defineFunction","nativeValue","parsed","parseName","namespace","fqfn","defineGlobal","hasVariable","defineGlobalAccessor","valueGetter","valueSetter","accessorReference","internals","disableAutoCoercion","defineSuperGlobal","defineSuperGlobalAccessor","getBinding","getCallFactory","getCallStack","getErrorReporting","getFFIValueHelper","getFunction","getGlobal","getGlobalNamespace","getGlobalScope","getINIOption","getLoader","getModuleFactory","getOptions","getOutput","getReferenceFactory","getScopeFactory","getStderr","getStdin","getStdout","getSuperGlobalScope","getToolsFactory","getTranslator","getValueFactory","setGlobal","namespaceScope","enclosingScope","unwrappedFunction","wrappedFunction","thisObject","functionSpec","scopeClass","invoke","ElementReference","ElementProvider","createElement","arrayValue","getPairForAssignment","overrideKey","referToElement","getValueReference","isReference","setKey","keyValue","defineElement","isFirstElement","pushElement","pointToElement","getCurrentClass","getFunctionArgs","getFunctionName","getLastLine","getScope","getStaticClass","getThisObject","getTraceFilePath","instrument","isUserland","suppressesErrors","suppressesOwnErrors","PHPObject","nativeCaller","objectValue","methodName","phpObject","getObjectValue","plainObject","customCreate","validate","objIsPrototypeOf","isPrototypeOf","nullDesc","__proto__","isNullBase","nullPolyfill","tmpObj1","tmpObj2","ignore","function","classRe","functionToString","src","opts1","isArguments","ArrayIterator","StringIterator","iteratorSymbol","Iterator","clear","callable","autoBind","list","context","__list__","__context__","__nextIndex__","_onAdd","_onDelete","_onClear","_next","__redo__","shift","_unBind","next","_createResult","done","_resolve","redo","j","stringCoerce","toShortString","resolveMessage","defaultMessage","inputOptions","isOptional","errorMessage","isPromise","Result","getAsync","getSync","pause","createPause","resultValue","resume","throw","now","default","ValueStorage","exportToObjectValueMap","objectValueToExportMap","proxyPrivatesMap","getExportForObjectValue","getObjectValueForExport","exportedValue","getPrivatesForNativeProxy","proxy","hasExportForObjectValue","has","hasObjectValueForExport","hasPrivatesForNativeProxy","setExportForObjectValue","setObjectValueForExport","setPrivatesForNativeProxy","privates","LoadFailedException","previousError","getPreviousError","ExitValue","statusValue","getStatus","OutputBufferInterface","clean","flush","getContents","getDepth","write","StringValue","addToBoolean","booleanValue","namespaceOrNamespaceScope","classNameValue","methodNameValue","isForwarding","getClass","parseFloat","parseInt","coerceToKey","coercedLeftValue","quotient","divisorValue","round","textValue","className","hasClass","getMethodSpec","hasFunction","classIs","coercedMultiplicandValue","multiplier","coercedMultiplierValue","product","onesComplement","use","$markdown","$domDocument","environmentProvider","requireCache","moduleRepository","fileSystem","string","sources","source","collection","iteratee","fasterMap","slowerMap","phpRuntime","io","createEnvironment","phpifyConfig","phpCoreConfig","environment","environmentOptions","include","addons","realPath","isDirectory","isFile","moduleExists","open","openSync","unlink","unlinkSync","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","channel","port1","onmessage","port2","postMessage","oldQueue","task","stdio","info","warn","bootstraps","getEnvironment","phpCoreConfigs","importLibrary","configs","mergeAll","phpModuleFactoryFetcher","init","isInitialised","load","configuredModules","loadingModuleFactoryOnly","moduleFactoryFetcher","cachePath","configuredModule","configuredModuleFactory","moduleID","using","execute","Performance","getTimeInMicroseconds","timing","navigationStart","getTime","createConfigLoader","Config_1","ConfigExporter_1","ConfigImporter_1","ConfigLoader_1","ConfigSet_1","Loader_1","Requirer_1","SerialisationChecker_1","requirer","existsSync","Config","exporter","rootConfig","ConfigSetClass","exportLibrary","mainLibraryName","subLibraryName","getConfigsForLibrary","subConfig","_this","libraryConfig","pluginConfigFilePaths","_a","pluginConfig","require","topLevelConfig","getLibraryConfigPathsFromPlugin","_b","isolatedPathToSubLibraryConfig","pathToSubLibraryConfigUnderMain","mainLibraryConfig","getSubLibraryConfigPathsFromPlugin","mainConfig","pathToMainConfig","getMainLibraryConfigPathsFromPlugin","getLibraryConfigPathsFromPlugins","pluginConfigs","libraryConfigPaths","_i","pluginConfigs_1","pluginSubLibraryConfigPaths","ConfigExporter","serialisationChecker","libraryName","allConfig","_c","_d","settings","getLibraryConfigFromRoot","isSerialisable","plugins","ConfigImporter","exportedLibraryConfig","ConfigLoader","ConfigClass","getConfig","searchPaths","config","settingName","ConfigSet","concatArrays","concatenatedArray","rawSettingValue","settingValue","getBoolean","defaultValue","mergedSettingValues","mergedConfig","doMerge","mergeObjects","mergeUniqueObjects","propertyName","newValue","path_1","fileName","searchDirectories","searchDirectories_1","searchDirectory","searchPath","Requirer","nodeRequire","SerialisationChecker","isObjectSerialisable","objectsSeen","includes","object_1","isValueSerialisable","webpackEmptyContext","req","arrayConstants","arrayFunctions","baseConversionMathFunctions","classFunctions","configOptionsAndInfoFunctions","constantFunctions","Countable","environmentFunctions","errorHandlingFunctions","extensionOptionsAndInfoFunctions","filesystemConstants","filesystemFunctions","functionHandlingFunctions","htmlStringFunctions","InvalidArgumentException","LogicException","outputControlFunctions","pcreCommonFunctions","pcreConstants","phpConstants","phpOptionsAndInfoFunctions","splFunctions","stringBindings","stringConstants","stringFunctions","timeDateAndTimeFunctions","timeFunctions","variableHandlingFunctions","methods","firstArrayValue","remainingElementPairs","returnNull","getKeys","getElementPairByKey","arrayReference","argumentIndex","elementValue","remainingElementPair","keyReference","searchValueReference","strictMatchReference","callbackReference","firstArrayReference","callbackValue","mappedElementValue","mergedElements","nativeKeyToElementMap","nativeKeys","nextIndex","mergedKey","nativeKey","sortFlagsReference","resultPairs","usedValues","sort","elementA","elementB","nativeValueA","nativeValueB","localeCompare","elementPair","getValues","modeReference","getPointer","getCurrentElement","setPointer","glueReference","piecesReference","tmp","glueValue","piecesValue","needleReference","haystackReference","haystackValue","needleValue","strictMatch","currentKey","getKeyByIndex","sortFlags","nativeKeyA","nativeKeyB","copy","fill","readUInt8","ctor","superCtor","super_","TempCtor","templateString","currentLocale","addTranslation","locale","translation","structure","keyParts","keyPart","setLocale","translate","placeholderVariables","variables","numberReference","unsignedNumber","classNameReference","callAutoloaderReference","callAutoloader","autoloadClass","objectReference","currentClass","getClassName","getCallerScope","allowStringReference","allowString","is","optionNameReference","optionName","valueValue","isCaseInsensitive","getDescendant","caseInsensitive","hasConstant","variableNameReference","ERROR_CONSTANT_NAME_TO_LEVEL","levelReference","currentLevelValue","getErrorReportingLevel","setErrorReportingLevel","errorMessageReference","errorTypeReference","errorConstantName","errorLevel","errorType","find","constantName","getFileSystem","pathReference","pathValue","newIncludePathReference","oldIncludePath","CallbackValue","argumentReference","expectedReferenceArgumentIndex","expectedReferenceError","argumentValues","argumentArrayReference","getValueReferences","callerCall","getCaller","nameReference","referenceCallback","valueCallback","characterRegexCache","ENT_COMPAT","ENT_HTML401","ENT_NOQUOTES","ENT_QUOTES","HTML_ENTITIES","HTML_SPECIALCHARS","TRANSLATION_TABLES","getTranslationTable","tableID","flags","encoding","tableData","quotesMode","'","toLowerCase","htmlEncode","translationTable","doubleEncode","entityHTML","character","pattern","regex","cacheKey","tableReference","flagsReference","encodingReference","stringReference","doubleEncodeReference","extendClass","callSuperConstructor","cleanCurrentBuffer","popBuffer","flushCurrentBuffer","contents","getCurrentBufferContents","outputCallbackReference","chunkSizeReference","pushBuffer","REGEX_SPECIAL_CHAR_PATTERN","delimiterReference","quoted","systemConstants","extensionName","idString","padding","getID","FormatConverter","FormatParser","Formatter","NativeFormatter","stringFormatter","convert","directive","showPositiveSign","alignmentSpecifier","padStart","widthSpecifier","paddingCharacter","padEnd","TYPE_SPECIFIER_TO_TYPE","parse","formatString","explicitArgumentPosition","precisionSpecifier","showPositiveNumberSigns","typeSpecifier","directives","lastMatchEnd","nextArgumentPosition","exec","kind","text","substring","nativeFormatter","argReferences","argNatives","argReference","argValue","formatParser","formatConverter","formatter","limitReference","elements","limit","templateReference","searchReference","replaceReference","subjectReference","countReference","search","replacement","subject","count","buildRegex","offsetReference","position","haystack","needle","offset","fromCharCode","lastIndexOf","replacePairs","replaceKeys","replaceValues","startReference","lengthReference","trimmedHaystack","characterMaskReference","nativeString","characterMask","characterMaskRegex","getAsFloatReference","getAsFloat","timeInSeconds","getAsFloatValue","getPerformance","toFixed","floor","microsecondsReference","endMicroseconds","microsecondsValue","createTypeChecker","valueReference","syntaxOnlyReference","callableNameReference","syntaxOnly","isFinite","returnReference","exportedCodeString","shouldReturn","exportValue","dumps","objectIDHash","dump","arraysEncountered","names","nativeLength","currentIndentation","nextIndentation","representation","elementRepresentation","getInstancePropertyNames","debugFormatterInstaller","runtimeFactory","DebugFactory","DebugFormatter","DebugFormatterInstaller","debugFactory","ValueFormatter","createDebugFormatter","valueFormatter","createValue","body","debugVariable","formattedValue","addAttribute","attributes","headingValue","headingStyle","attribute","hasBody","header","debugFormatter","devtoolsFormatters","keyString","Engine","Environment","PHPStateWrapper","RuntimeFactory","RuntimeWrapper","ValueWrapper","topLevelScope","getState","tools","topLevelNamespaceScope","isMainProgram","async","sync","handleError","errorValue","getInternalProperty","reportError","getProperty","createNamespaceScope","expose","toNativeWithSyncApi","evaluatedAsync","evaluatedSync","asyncReturnValue","syncReturnValue","executeSync","usingV8StackTraceAPI","captureStackTrace","GlobalStackHooker","NonV8FrameStackHooker","StackCleaner","V8FrameStackHooker","stackCleaner","frameStackHooker","hooker","hookErrorStacksForAllSubFrames","frame","frames","top","NativeError","originalDescriptor","cleanStack","stackTrace","stack","stackTraceLimit","frameIndex","resultFrames","stackLines","CustomError","prepareStackTrace","cleanedStack","Infinity","newLimit","errorHandlingConstants","errorHandlingDefaultINIOptions","errorMessages","miscellaneousMessages","noticeMessages","reservedConstants","stdClass","ArgumentCountError","ArrayAccess","CompileError","IteratorAggregate","JSObject","ParseError","Throwable","Traversable","optionValue","optionValueReference","previousOptionValue","E_ALL","callableReference","callableValue","appendAutoloadCallable","removeAutoloadCallable","defineUnwrapper","getNonPrivateProperties","propertyValue","closureReference","newThisReference","newScopeReference","closureValue","newScopeValue","newThisValue","scopeClassName","createClosureObject","bindClosure","isStatic","invokeClosure","closure","thisObj","coerceObject","coerceList","popFFICall","createFFICall","finally","promote","messageReference","messageValue","setProperty","shadowConstructor","getLastFilePath","setInternalProperty","getTrace","implement","getFile","getLine","getTraceAsString","iteratorValue","aggregateValue","getIterator","nativeObject","newStaticClass","finder","isGlobal","calls","getCallerFilePath","caller","getUserlandCaller","getCallerLastLine","getCurrent","getUserlandCallee","staticClass","currentCall","chronoIndex","file","instrumentCurrent","errorClass","reportsOwnContext","translationKey","createErrorObject","raiseUncatchableFatalError","splStack","autoloadCallable","magicAutoloadFunction","autoloader","getOwnFunction","found","existingAutoloadCallable","getNamespacePrefix","ElementHookCollection","HookableElementProvider","baseElementProvider","onElementReferenceSetCallbacks","onElementValueSetCallbacks","onElementUnsetCallbacks","handleElementReferenceSet","handleElementValueSet","handleElementUnset","HookableElement","decoratedElement","HookableElementReference","getDisplayErrors","iniOption","E_RECOVERABLE_ERROR","errorLevelToBits","bits","converter","candidateLevel","nativeError","formattedTrace","suffix","displayErrors","allowedErrorBitmask","levelBits","normalisedLineNumber","normalisedFilePath","AsyncObjectValue","valueCaller","wrappedObjectValue","getObject","Caller","callMethodAsync","catch","callMethodSyncLike","useSyncApiAlthoughPsync","pushFFICall","ClassInternalsClassFactory","baseInternals","unwrapperRepository","definedInterfaceNames","enableAutoCoercion","superClass","unwrapper","instance","argValues","instanceValue","nativeArg","construct","Class","interfaces","interfaceName","ExportFactory","proxyFactory","coercedObject","getUnwrapperForClass","ExportRepository","exportFactory","valueStorage","export","ValueCoercer","modeToValueCoercerMap","createAsyncObjectValue","createPHPObject","createValueCoercer","autoCoercionEnabled","FunctionInternalsClassFactory","valueCoercer","effectiveArguments","coerceArguments","Internals","valueHelper","isAsync","isPsync","isSync","NativeCaller","ProxyClassFactory","proxyMemberFactory","currentPrototype","methodNamesProxied","ProxyClass","Boolean","getInternalClass","createProxyMethod","getSuperClass","ProxyClassRepository","proxyClassFactory","classToProxyClassMap","getProxyClass","weakMap","delete","WeakMapPoly","ensureValue","randomUniq","forOf","toStringTagSymbol","isNative","objHasOwnProperty","__weakMapData__","shim","nullObject","polyProps","props","generated","random","isPrototype","foo","bar","trzy","max","dest","searchString","__kind__","validTypes","symbol","toPrimitive","naiveFallback","__global__","SymbolPolyfill","HiddenSymbol","isNativeSafe","validateSymbol","NativeSymbol","generateName","setupStandardSymbols","setupSymbolRegistry","description","__description__","__name__","valueOf","objPrototype","created","ie11BugWorkaround","postfix","hasInstance","isConcatSpreadable","species","unscopables","registry","for","keyFor","define","ensurePlainFunction","normalizeOptions","dgs","overwriteDefinition","resolveContext","resolveException","valueToString","safeToString","reNewLine","char","error2","aFrom","propertyNames","ensure","toPosInt","validValue","arrayLike","Context","mapFn","isFunctionStringTag","sign","abs","isNaN","targetObj","objPropertyIsEnumerable","propertyIsEnumerable","defVal","compareFn","__length__","some","doBreak","broken","ProxyFactory","proxyClassRepository","ProxyMemberFactory","StackHooker","UnwrapperRepository","classToUnwrapperMap","repository","getInterfaces","interfaceObject","ValueCaller","argumentValue","isAutoCoercionEnabled","ValueHelper","proxyToSyncApiProxy","reproxy","toValueWithAsyncApi","newStaticClassForNextCall","currentObject","wrapperFunc","validateArguments","populateDefaultArguments","isPHPCoreWrapped","originalFunc","createMethodSpec","originalClass","setNewStaticClassIfWrapped","parameterList","argumentReferenceList","coercedArguments","parameter","coerceArgument","createAliasFunction","aliasFunctionSpec","createAliasFunctionSpec","isStaticCall","getFunctionTraceFrameName","getParameterByPosition","getUnprefixedFunctionName","currentParameter","isRequired","populateDefaultArgument","spec","createTranslatedErrorObject","expectedCount","actualCount","callerFile","callerLine","validateArgument","parameters","createClosureSpec","parametersSpecData","createParameterList","createFunctionSpec","includedPaths","hasModuleBeenIncluded","includedPath","includeScope","includeFunction","createLoadScope","parentPath","subOptions","errorResult","completeWith","moduleResult","subError","valueOrModule","executeResult","effectiveScope","callerFilePath","createClosure","defineVariables","getClassNameOrThrow","getMethodName","getParentClassNameOrThrow","getStaticClassNameOrThrow","importGlobal","importStatic","initialValue","raiseScopedTranslatedError","suppressErrors","suppressOwnErrors","unsuppressErrors","unsuppressOwnErrors","namespaceFactory","exportRepository","parent","constants","functions","existingFunction","definition","proxyConstructor","rootInternalPrototype","staticProperties","InternalClass","constructorName","methodData","getPrefix","unwrappedThisObject","unwrappedArgs","unwrapArguments","neverCoerce","resolvedClass","resolveClass","properties","propertyData","declareProperty","visibility","instanceProperty","initialise","methodIsStatic","effectiveName","existingDefinition","getConstantDefinition","lowerName","usesNamespace","constant","subNamespace","part","getParent","lowercaseName","relativeToGlobalNamespace","StaticPropertyReference","UndeclaredStaticPropertyReference","getMethod","staticPropertiesData","interfaceNames","currentNativeObject","isForwardingStaticCall","exportInstanceForJS","extends","calledClass","callingClass","staticProperty","getVisibility","isInFamilyOf","hasStaticPropertyByName","getThisObjectForInstance","instantiateBare","createObject","instantiateWithInternals","interfaceMatches","otherClass","proxyInstanceForJS","throwUndeclaredStaticPropertyAccessFatalError","parentNamespace","imports","prefix","getNamespaceName","loweredPrefix","alias","normalizedSource","includeOnce","stdoutBuffer","currentOutputBuffer","outputBufferStack","newOutputBuffer","createOutputBuffer","previousBuffer","bufferedData","UNKNOWN","typeObject","passedByReference","defaultValueProvider","actualType","definitionFilePath","definitionLineNumber","expectedType","callerLineNumber","definitionFile","definitionLine","createParameter","parameterSpecData","parameterIndex","parameterType","createParameterType","ref","createArrayType","createCallableType","createClassType","createIterableType","createMixedType","currentFunction","thisObjectVariable","createVariable","errorsSuppressed","variable","staticVariables","staticVariable","ownErrorsSuppressed","List","createDebugVar","createInstance","createKeyReferencePair","createKeyValuePair","createList","eval","evalScope","exit","createExit","getNormalizedPath","getParentClassName","getPath","getPathDirectory","directory","implyArray","implyObject","requireOnce","tick","startLine","startColumn","endLine","endColumn","getElementByIndex","traceStrings","callData","ArrayType","CallableType","ClassType","IterableType","MixedType","nullIsAllowed","ArrayValue","BarewordStringValue","BooleanValue","FloatValue","IntegerValue","NullValue","ObjectValue","nextObjectID","nullValue","coercePromise","createFromNative","coercedValues","createArrayIterator","arrayLikeValue","createBarewordString","previousThrowable","errorObject","createFromNativeArray","createFromNativeObject","hasAMethod","orderedElements","nativeArray","createTranslatedExceptionObject","instantiateObject","constructorArgNatives","constructorArgValues","argNative","pointer","advance","getCurrentElementReference","getCurrentElementValue","getCurrentKey","getIteratedValue","isNotFinished","sanitiseKey","keyNative","keysToElements","orderedElement","resultArray","addToInteger","addToObject","objectOrClassValue","hasNonNumericKey","references","equal","identical","otherValue","reset","newElements","newKeysToElements","nextNumericKey","shiftLeftBy","shiftRightBy","integerValue","getElement","coercedMultiplicand","toNegative","toPositive","ObjectElement","PropertyReference","internalProperties","nextPropertyIndex","nonPrivateProperties","privatePropertiesByFQCN","thisValue","cloneObjectValue","getPropertyNames","isMethodDefined","propertyReference","getExternalName","fqcnMap","createProperty","actual","expected","classInHierarchy","classOfObject","sortedNames","nameHash","propertyReferences","getIndex","isVisible","nameA","nameB","propertyNamesToValues","pointToProperty","valueForAssignment","isFirstProperty","pointIfFirstProperty","Stream","Runtime","compile","createSubFactory","defaultOptions","defaultEnvironment","defaultTopLevelScope","existingOptions","newOptions","allBuiltins","allOptionGroups","addon","newBuiltins","EventEmitter","read","readAll","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","ownKeys","getOwnPropertySymbols","NumberIsNaN","emitter","errorListener","eventTargetAgnosticAddListener","handler","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","RangeError","setMaxListeners","getMaxListeners","doError","er","originalListener","spliceOne","rawListeners","eventNames","$name","$where","$myMarkdownTree","$this","$vendorDir","$classMap","$prefix","$prepend","$paths","$first","$length","$useIncludePath","$classMapAuthoritative","$apcuPrefix","$file","$class","$hit","$logicalPathPsr4","$ext","$subPath","$lastPos","$search","$pathEnd","$dir","$pos","$logicalPathPsr0","$dirs","$packages","$installed","$packageName","$constraint","$parser","$provided","$ranges","$data","$loader","$baseDir","$useStaticLoader","$map","$path","$namespace","BoldNode_1","DocumentNode_1","ExpressionNode_1","HeadingNode_1","InlineCodeNode_1","ItalicNode_1","ListItemNode_1","PlainTextNode_1","UnorderedListNode_1","extendStatics","__extends","b","__","BoldNode","toHtml","htmls","_super","ModeSpecificBoldNode","DocumentNode","ModeSpecificDocumentNode","ExpressionNode","expression","HeadingNode","tagName","ModeSpecificHeadingNode","InlineCodeNode","ItalicNode","ModeSpecificItalicNode","ListItemNode","ModeSpecificListItemNode","PlainTextNode","UnorderedListNode","listItemNodes","ModeSpecificUnorderedListNode","engine"],"mappings":"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WACP,OAAO,KAIfxW,EAAOD,QAAUwjB,G,6BC9BjB,SAASC,EAAcC,EAAOC,GAI1Bve,KAAKse,MAAQA,EAIbte,KAAKue,aAAeA,EAfhB,EAAQ,GAkBdvhB,OAAOqhB,EAAc3hB,UAAW,CAM9BuP,SAAU,WAGN,OAFejM,KAECse,MAAME,YAFPxe,KAE4Bue,cAActS,YAQ7DoF,UAAW,WAGP,OAFerR,KAECse,MAAME,YAFPxe,KAE4Bue,cAAclN,eAIjExW,EAAOD,QAAUyjB,G,6BC1CjBxjB,EAAOD,QAAU,EAAQ,EAAR,CAAkkf,EACA1W,EACAoN,EACAuJ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAxR,EACAyR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA1Z,GACA2Z,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAna,GACAoa,GACA5M,GACA6M,IAEA,IACIjN,GAAS,GAAGlZ,eA+IZgB,GAAYoK,EAAUpK,UACtBI,GAAagK,EAAUhK,WAoB3B,SAASglB,GACL5S,EACA6S,EACAC,EACAC,GACAC,GACAC,GACAC,GACApnB,GACAqnB,GACAxb,IAEA,IA6HIyb,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GAGAC,GAxIAC,GAAc,IAAInF,EAAYD,EAAMa,GACpCwE,GAAyB,IAAI9E,EAC7B+E,GAAkBD,GAAuBE,iBACzCC,GAAgB,IAAI5C,EAAcD,GAClC8C,GAAa,IAAIrmB,GACjBsmB,GAAW,IAAInD,EACfoD,GAActkB,KAAKskB,YAAYhoB,KAAK0D,MACpCukB,GAAqB,IAAIpF,EAAmBkF,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","file":"browser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 68);\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./src/each'),\n    escapeRegExp = require('./src/escapeRegExp'),\n    extend = require('./src/extend'),\n    filter = require('./src/filter'),\n    forOwn = require('./src/forOwn'),\n    isArray = require('./src/isArray'),\n    isBoolean = require('./src/isBoolean'),\n    isFunction = require('./src/isFunction'),\n    isNumber = require('./src/isNumber'),\n    isPlainObject = require('./src/isPlainObject'),\n    isString = require('./src/isString'),\n    map = require('./src/map');\n\nmodule.exports = {\n    each: each,\n    escapeRegExp: escapeRegExp,\n    extend: extend(Object),\n    filter: filter,\n    forOwn: forOwn,\n    isArray: isArray(Array),\n    isBoolean: isBoolean,\n    isFunction: isFunction,\n    isNumber: isNumber,\n    isPlainObject: isPlainObject,\n    isString: isString,\n    map: map(Array)\n};\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar Exception = require('./src/Error/Exception'),\n    PHPError = require('./src/Error/PHPError'),\n    PHPFatalError = require('./src/Error/PHPFatalError'),\n    PHPParseError = require('./src/Error/PHPParseError'),\n    Translator = require('./src/Translator');\n\nmodule.exports = {\n    Exception: Exception,\n    PHPError: PHPError,\n    PHPFatalError: PHPFatalError,\n    PHPParseError: PHPParseError,\n    Translator: Translator\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","/*\n * Pauser - Wrapper for optional Pausable usage\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/pauser/\n *\n * Released under the MIT license\n * https://github.com/asmblah/pauser/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar Wrapper = require('./src/Wrapper');\n\nmodule.exports = function (args, wrapper, options) {\n    return new Wrapper(args, wrapper, options);\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Reference/Null')\n], function (\n    _,\n    phpCommon,\n    NullReference\n) {\n    var PHPError = phpCommon.PHPError,\n\n        CLASS_NAME_NOT_VALID = 'core.class_name_not_valid',\n        METHOD_CALLED_ON_NON_OBJECT = 'core.method_called_on_non_object',\n        NON_OBJECT_METHOD_CALL = 'core.non_object_method_call',\n        UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types',\n\n        createNullReference = function (value) {\n            var callStack = value.callStack;\n\n            return new NullReference(value.factory, {\n                onSet: function () {\n                    callStack.raiseError(PHPError.E_WARNING, 'Cannot use a scalar value as an array');\n                }\n            });\n        },\n        throwUnimplemented = function () {\n            throw new Error('Unimplemented');\n        };\n\n    function Value(factory, callStack, type, value) {\n        this.factory = factory;\n        this.callStack = callStack;\n        this.type = type;\n        this.value = value;\n    }\n\n    _.extend(Value.prototype, {\n        /**\n         * Adds this value to an array\n         */\n        addToArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        addToFloat: function (floatValue) {\n            var leftValue = this;\n\n            // Coerce to float and return a float if either operand is a float\n            return leftValue.factory.createFloat(leftValue.coerceToFloat().getNative() + floatValue.getNative());\n        },\n\n        addToNull: function () {\n            return this;\n        },\n\n        addToString: function (stringValue) {\n            return stringValue.coerceToNumber().add(this.coerceToNumber());\n        },\n\n        /**\n         * Calculates the bitwise-AND of this and a right-operand\n         *\n         * @param {Value} rightValue\n         * @returns {IntegerValue}\n         */\n        bitwiseAnd: function (rightValue) {\n            var value = this;\n\n            /*jshint bitwise:false */\n            return value.factory.createInteger(\n                (\n                    value.coerceToInteger().getNative() & rightValue.coerceToInteger().getNative()\n                ) >>> 0 // Force unsigned native JS number\n            );\n        },\n\n        /**\n         * Calculates the bitwise-OR of this and a right-operand\n         *\n         * @param {Value} rightValue\n         * @returns {IntegerValue}\n         */\n        bitwiseOr: function (rightValue) {\n            var value = this;\n\n            /*jshint bitwise:false */\n            return value.factory.createInteger(\n                (\n                    value.coerceToInteger().getNative() | rightValue.coerceToInteger().getNative()\n                ) >>> 0 // Force unsigned native JS number\n            );\n        },\n\n        /**\n         * Calls a method on an object\n         *\n         * @param {string} name\n         */\n        callMethod: function (name) {\n            var value = this;\n\n            value.callStack.raiseTranslatedError(PHPError.E_ERROR, NON_OBJECT_METHOD_CALL, {\n                name: name,\n                type: value.type\n            });\n        },\n\n        /**\n         * Calls a static method of a given class or the class of a given object\n         */\n        callStaticMethod: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Returns a clone of this value, or throws an Error if not supported\n         *\n         * @throws {ObjectValue}\n         */\n        clone: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, METHOD_CALLED_ON_NON_OBJECT, {\n                method: '__clone'\n            });\n        },\n\n        /**\n         * Coerces this value to an array. For all Value types except ArrayValue,\n         * the result will be wrapped in an array using this default implementation\n         *\n         * @returns {FloatValue}\n         */\n        coerceToArray: function () {\n            var value = this;\n\n            return value.factory.createArray([value]);\n        },\n\n        /**\n         * Coerces this value to a number as a FloatValue\n         *\n         * @returns {FloatValue}\n         */\n        coerceToFloat: function () {\n            var value = this;\n\n            return value.factory.createFloat(Number(value.value));\n        },\n\n        /**\n         * Coerces this value to an IntegerValue\n         *\n         * @returns {IntegerValue}\n         */\n        coerceToInteger: function () {\n            var value = this;\n\n            /*jshint bitwise:false */\n            return value.factory.createInteger(Number(value.value) >>> 0);\n        },\n\n        /**\n         * Unwraps an instance of Throwable to a native JS error\n         *\n         * @throws {Error}\n         */\n        coerceToNativeError: function () {\n            // NB: This is actually only implemented by ObjectValue\n            throw new Error('Only instances of Throwable may be thrown: tried to throw a(n) ' + this.type);\n        },\n\n        /**\n         * Coerces this value to a number as a FloatValue\n         *\n         * @returns {FloatValue}\n         */\n        coerceToNumber: function () {\n            return this.coerceToFloat();\n        },\n\n        coerceToObject: function () {\n            var value = this,\n                object = value.factory.createStdClassObject();\n\n            /**\n             * Scalars are coerced to objects as follows:\n             *\n             * > var_dump((object)21);\n             *\n             * object(stdClass)#1 (1) {\n             *   [\"scalar\"]=>\n             *   int(21)\n             * }\n             */\n            object.getInstancePropertyByName(value.factory.createString('scalar')).setValue(value);\n\n            return object;\n        },\n\n        coerceToString: throwUnimplemented,\n\n        /**\n         * Concatenates this value's string representation with the provided other value's\n         *\n         * @param {StringValue} rightValue\n         * @returns {StringValue}\n         */\n        concat: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createString(\n                leftValue.coerceToString().getNative() + rightValue.coerceToString().getNative()\n            );\n        },\n\n        decrement: throwUnimplemented,\n\n        /**\n         * Divides this value by another\n         */\n        divide: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Divides an array value by this one\n         */\n        divideByArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Divides a boolean value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByBoolean: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides a float value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByFloat: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides an integer value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByInteger: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides a non-array value by this value\n         *\n         * @throws {PHPFatalError}\n         */\n        divideByNonArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Divides a null value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNull: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides an object value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByObject: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides a string value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByString: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Formats the value for display in stack traces etc.\n         *\n         * @returns {string}\n         */\n        formatAsString: throwUnimplemented,\n\n        getCallableName: throwUnimplemented,\n\n        /**\n         * Fetches a constant of a class by its name\n         */\n        getConstantByName: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Fetches the type of this value for display purposes, eg. \"boolean\"\n         *\n         * @returns {string}\n         */\n        getDisplayType: function () {\n            return this.type;\n        },\n\n        getElementByKey: function () {\n            return createNullReference(this);\n        },\n\n        getForAssignment: function () {\n            return this;\n        },\n\n        getInstancePropertyByName: throwUnimplemented,\n\n        getLength: function () {\n            return this.coerceToString().getLength();\n        },\n\n        /**\n         * Fetches a native representation of this value\n         *\n         * @returns {*}\n         */\n        getNative: function () {\n            return this.value;\n        },\n\n        /**\n         * Exports a \"proxying\" version of the native value. For normal primitive values\n         * (string, boolean, int, float) this will just be the native value,\n         * but for objects it will be an instance of PHPObject (see ObjectValue.prototype.getProxy())\n         *\n         * @returns {*}\n         */\n        getProxy: function () {\n            return this.getNative();\n        },\n\n        getPushElement: function () {\n            return createNullReference(this);\n        },\n\n        getReference: function () {\n            throw new Error('Cannot get a reference to a value');\n        },\n\n        /**\n         * Fetches a static property for a class by its name\n         */\n        getStaticPropertyByName: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        getType: function () {\n            return this.type;\n        },\n\n        getValue: function () {\n            return this;\n        },\n\n        /**\n         * Returns this value if defined (this is for the Reference/Value interface -\n         * values are always classed as defined)\n         *\n         * @return {Value}\n         */\n        getValueOrNull: function () {\n            return this;\n        },\n\n        /**\n         * Coerces this value to a number and adds one to it\n         *\n         * @returns {Value}\n         */\n        increment: throwUnimplemented,\n\n        /**\n         * Creates an instance of the class this value refers to\n         *\n         * @throws {PHPFatalError}\n         */\n        instantiate: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        isAnInstanceOf: throwUnimplemented,\n\n        /**\n         * Determines whether this value is callable\n         *\n         * @param {Namespace} globalNamespace\n         * @returns {boolean}\n         */\n        isCallable: throwUnimplemented,\n\n        /**\n         * Determines whether this value is iterable\n         *\n         * @returns {boolean}\n         */\n        isIterable: throwUnimplemented,\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfBoolean: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfFloat: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfInteger: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfNull: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfObject: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfString: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether the value is classed as \"empty\" or not\n         *\n         * @returns {boolean}\n         */\n        isEmpty: throwUnimplemented,\n\n        /**\n         * Determines whether this value is loosely equal to the provided other value\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualTo: function (rightValue) {\n            /*jshint eqeqeq:false */\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.value == leftValue.value);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided array value\n         *\n         * @param {ArrayValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToArray: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided boolean value\n         *\n         * @param {BooleanValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToBoolean: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided float value\n         *\n         * @param {FloatValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToFloat: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided integer value\n         *\n         * @param {IntegerValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToInteger: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided null value\n         *\n         * @param {NullValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToNull: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided object value\n         *\n         * @param {ObjectValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToObject: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided string value\n         *\n         * @param {StringValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToString: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is greater than the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isGreaterThan: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() > rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is greater than or equal to the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isGreaterThanOrEqual: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() >= rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Determines whether this value is strictly equal\n         * to the provided other value\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isIdenticalTo: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(\n                rightValue.type === leftValue.type &&\n                rightValue.value === leftValue.value\n            );\n        },\n\n        /**\n         * Determines whether this value is strictly equal\n         * to the provided array value\n         *\n         * @param {ArrayValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isIdenticalToArray: function (rightValue) {\n            return this.isIdenticalTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is strictly equal\n         * to the provided object value\n         *\n         * @param {ObjectValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isIdenticalToObject: function (rightValue) {\n            return this.isIdenticalTo(rightValue);\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is less than the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isLessThan: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() < rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is less than or equal to the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isLessThanOrEqual: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() <= rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Loosely compares this value to the provided other value,\n         * returning true if they are not equal and false otherwise\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isNotEqualTo: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(!leftValue.isEqualTo(rightValue).getNative());\n        },\n\n        /**\n         * Strictly compares this value to the provided other value,\n         * returning true if they are not of the same type\n         * or of the same type but with a different value,\n         * and false otherwise\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isNotIdenticalTo: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(!leftValue.isIdenticalTo(rightValue).getNative());\n        },\n\n        /**\n         * Returns true if this value is numeric and false otherwise\n         *\n         * @returns {boolean}\n         */\n        isNumeric: throwUnimplemented,\n\n        /**\n         * Determines whether this value is classed as \"set\" or not\n         *\n         * @returns {boolean}\n         */\n        isSet: function () {\n            // All values except NULL are classed as 'set'\n            return true;\n        },\n\n        /**\n         * Performs a logical-AND of this value and the other value given\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        logicalAnd: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(\n                leftValue.coerceToBoolean().getNative() &&\n                rightValue.coerceToBoolean().getNative()\n            );\n        },\n\n        /**\n         * Performs a logical-NOT of this value.\n         * If this value is truthy this will return false,\n         * otherwise if falsy it will return true\n         *\n         * @returns {BooleanValue}\n         */\n        logicalNot: function () {\n            var value = this;\n\n            return value.factory.createBoolean(!value.coerceToBoolean().getNative());\n        },\n\n        /**\n         * Calculates the modulo (remainder of an integer division) of this value with another\n         *\n         * @param {Value} rightValue\n         * @returns {IntegerValue}\n         */\n        modulo: function (rightValue) {\n            var value = this,\n                // Coerce both operands to integers first, to ensure an integer division\n                dividend = value.coerceToInteger().getNative(),\n                divisor = rightValue.coerceToInteger().getNative();\n\n            if (divisor === 0) {\n                value.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return value.factory.createBoolean(false);\n            }\n\n            return value.factory.createInteger(dividend % divisor);\n        },\n\n        /**\n         * Multiplies this value with another\n         */\n        multiply: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Multiplies an array value by this value\n         *\n         * @throws {PHPFatalError}\n         */\n        multiplyByArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Multiplies a boolean value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByBoolean: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies a float value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByFloat: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies an integer value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByInteger: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies a non-array value by this value\n         *\n         * @throws {PHPFatalError}\n         */\n        multiplyByNonArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Multiplies a null value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNull: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies an object value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByObject: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies a string value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByString: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Subtracts another value from this one\n         *\n         * @returns {Value}\n         */\n        subtract: throwUnimplemented,\n\n        /**\n         * Subtracts this value from null\n         */\n        subtractFromNull: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        }\n    });\n\n    return Value;\n}, {strict: true});\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*global global */\nvar API = require('../src/API'),\n    EnvironmentProvider = require('../src/EnvironmentProvider'),\n    FileSystem = require('../src/FileSystem'),\n    IO = require('../src/IO'),\n    Loader = require('../src/Loader'),\n    ModuleRepository = require('../src/ModuleRepository'),\n    Performance = require('../src/Performance'),\n    performance = new Performance(Date, global),\n    phpConfigImporter = require('phpconfig').configImporter,\n    phpRuntime = require('phpruntime/psync'),\n    io = new IO(console),\n    environmentProvider = new EnvironmentProvider(phpRuntime, performance, io),\n    api = new API(FileSystem, Loader, ModuleRepository, environmentProvider, phpConfigImporter, require.cache),\n    loader = api.createLoader();\n\nmodule.exports = loader;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * \"Promise-synchronous\" (psync) mode entrypoint\n *\n * Allows the public API to be Promise-based even when not using Pausable,\n * so that switching to/from async mode does not require changes to the consuming application.\n */\n\n'use strict';\n\nvar builtins = require('./src/builtin/builtins'),\n    runtime = require('phpcore/psync');\n\nruntime.install(builtins);\n\nmodule.exports = runtime;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","require(\"/Users/danielp/work/dan/uniter-projects/uniter-markdown-plugin-example/node_modules/phpify/api/psync\").installModules(function (path, checkExistence) {\n    var exists = false;\n\n    function handlePath(aPath) {\n        if (!checkExistence) {\n            return aPath;\n        }\n\n        if (aPath === path) {\n            exists = true;\n        }\n\n        // Return something that should not match with the path variable,\n        // so that the case itself is not executed and we eventually\n        // reach the return after the end of the switch\n        return null;\n    }\n\n    switch (path) {\n    case handlePath(\"src/Markdown.php\"): return require(\"./../../../../src/Markdown.php\");\n    case handlePath(\"vendor/autoload.php\"): return require(\"./../../../../vendor/autoload.php\");\n    case handlePath(\"vendor/composer/ClassLoader.php\"): return require(\"./../../../../vendor/composer/ClassLoader.php\");\n    case handlePath(\"vendor/composer/InstalledVersions.php\"): return require(\"./../../../../vendor/composer/InstalledVersions.php\");\n    case handlePath(\"vendor/composer/autoload_classmap.php\"): return require(\"./../../../../vendor/composer/autoload_classmap.php\");\n    case handlePath(\"vendor/composer/autoload_namespaces.php\"): return require(\"./../../../../vendor/composer/autoload_namespaces.php\");\n    case handlePath(\"vendor/composer/autoload_psr4.php\"): return require(\"./../../../../vendor/composer/autoload_psr4.php\");\n    case handlePath(\"vendor/composer/autoload_real.php\"): return require(\"./../../../../vendor/composer/autoload_real.php\");\n    case handlePath(\"vendor/composer/autoload_static.php\"): return require(\"./../../../../vendor/composer/autoload_static.php\");\n    case handlePath(\"vendor/composer/installed.php\"): return require(\"./../../../../vendor/composer/installed.php\");\n    }\n\n    return checkExistence ? exists : null;\n})\n.configure({\"stdio\":true}, [require(\"/Users/danielp/work/dan/uniter-projects/uniter-markdown-plugin-example/node_modules/uniter-markdown-plugin/dist/config.phpcore\"), {}])\n.bootstrap([require(\"./../../../../browser/bootstrap.js\")]);","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error('Reference.' + functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * Interface for references to extend to allow instanceof checking\n *\n * @constructor\n */\nfunction Reference() {\n    throw new Error('Reference is abstract, no need to instantiate it');\n}\n\n_.extend(Reference.prototype, {\n    /**\n     * Coerces the value from this reference and the specified one to strings,\n     * concatenates them together and then assigns the result back to this reference.\n     *\n     * Used by the `.=` operator\n     *\n     * @param {Value} rightValue\n     */\n    concatWith: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().concat(rightValue));\n    },\n\n    /**\n     * Subtracts the specified value from the value from this reference\n     * and then assigns the result back to this reference\n     *\n     * Used by the `-=` operator\n     *\n     * @param {Value} rightValue\n     */\n    decrementBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().subtract(rightValue));\n    },\n\n    /**\n     * Divides the value from this reference by the specified value\n     * and then assigns the result back to this reference\n     *\n     * Used by the `/=` operator\n     *\n     * @param {Value} rightValue\n     */\n    divideBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().divide(rightValue));\n    },\n\n    /**\n     * Formats the reference (which may not be defined) for display in stack traces etc.\n     *\n     * @returns {string}\n     */\n    formatAsString: function () {\n        var reference = this;\n\n        return reference.isDefined() ?\n            reference.getValue().formatAsString() :\n            'NULL';\n    },\n\n    /**\n     * Fetches the value of this reference when it is being assigned to a variable or another reference.\n     * This is used to implement the copy-on-assignment behaviour of PHP arrays\n     *\n     * @returns {Value}\n     */\n    getForAssignment: throwUnimplemented('getForAssignment'),\n\n    /**\n     * Fetches an instance property of this reference's value (assuming it contains an object) by its name\n     *\n     * @param {string} name\n     * @returns {PropertyReference}\n     */\n    getInstancePropertyByName: function (name) {\n        return this.getValue().getInstancePropertyByName(name);\n    },\n\n    /**\n     * Fetches the native value of the PHP value being referred to\n     *\n     * @returns {*}\n     */\n    getNative: function () {\n        return this.getValue().getNative();\n    },\n\n    /**\n     * Fetches this reference\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        return this;\n    },\n\n    /**\n     * Fetches the value this reference stores, if any\n     *\n     * @returns {Value|null}\n     */\n    getValue: throwUnimplemented('getValue'),\n\n    /**\n     * Returns this reference's value if defined, NULL otherwise.\n     * No notice/warning will be raised if the reference has no value defined.\n     *\n     * @return {Value}\n     */\n    getValueOrNull: function () {\n        var reference = this;\n\n        return reference.isDefined() ?\n            reference.getValue() :\n            reference.valueFactory.createNull();\n    },\n\n    /**\n     * Adds the specified value to the value from this reference\n     * and then assigns the result back to this reference\n     *\n     * Used by the `+=` operator\n     *\n     * @param {Value} rightValue\n     */\n    incrementBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().add(rightValue));\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: throwUnimplemented('isDefined'),\n\n    /**\n     * Determines whether the reference is classed as \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: throwUnimplemented('isEmpty'),\n\n    /**\n     * Determines whether the reference is classed as \"set\" or not\n     *\n     * @returns {boolean}\n     */\n    isSet: throwUnimplemented('isSet'),\n\n    /**\n     * Multiplies the specified value by the value from this reference\n     * and then assigns the result back to this reference\n     *\n     * Used by the `*=` operator\n     *\n     * @param {Value} rightValue\n     */\n    multiplyBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().multiply(rightValue));\n    },\n\n    /**\n     * Decrements the stored value, returning its original value\n     *\n     * @returns {Value}\n     */\n    postDecrement: function () {\n        var reference = this,\n            originalValue = reference.getValue(),\n            decrementedValue = originalValue.decrement();\n\n        reference.setValue(decrementedValue);\n\n        return originalValue;\n    },\n\n    /**\n     * Increments the stored value, returning its original value\n     *\n     * @returns {Value}\n     */\n    postIncrement: function () {\n        var reference = this,\n            originalValue = reference.getValue(),\n            incrementedValue = originalValue.increment();\n\n        reference.setValue(incrementedValue);\n\n        return originalValue;\n    },\n\n    /**\n     * Decrements the stored value, returning its new value\n     *\n     * @returns {Value}\n     */\n    preDecrement: function () {\n        var reference = this,\n            decrementedValue = reference.getValue().decrement();\n\n        reference.setValue(decrementedValue);\n\n        return decrementedValue;\n    },\n\n    /**\n     * Increments the stored value, returning its new value\n     *\n     * @returns {Value}\n     */\n    preIncrement: function () {\n        var reference = this,\n            incrementedValue = reference.getValue().increment();\n\n        reference.setValue(incrementedValue);\n\n        return incrementedValue;\n    },\n\n    /**\n     * Sets the value of this reference. If it was already assigned a value it will be overwritten,\n     * otherwise if it was already assigned a sub-reference then that reference will be assigned the value\n     *\n     * @param {Value} value\n     * @returns {Value} Returns the value that was set\n     */\n    setValue: throwUnimplemented('setValue')\n});\n\nmodule.exports = Reference;\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction KeyValuePair(key, value) {\n    this.key = key;\n    this.value = value;\n}\n\n_.extend(KeyValuePair.prototype, {\n    getKey: function () {\n        return this.key;\n    },\n\n    getValue: function () {\n        return this.value;\n    }\n});\n\nmodule.exports = KeyValuePair;\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"finally\"] = function (callback) {\n  if (typeof callback !== 'function') {\n    return this;\n  }\n  var p = this.constructor;\n  return this.then(resolve, reject);\n\n  function resolve(value) {\n    function yes () {\n      return value;\n    }\n    return p.resolve(callback()).then(yes);\n  }\n  function reject(reason) {\n    function no () {\n      throw reason;\n    }\n    return p.resolve(callback()).then(no);\n  }\n};\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\nfunction NullReference(valueFactory, options) {\n    options = options || {};\n\n    this.onSet = options.onSet;\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(NullReference, Reference);\n\n_.extend(NullReference.prototype, {\n    getReference: function () {\n        return this;\n    },\n\n    getValue: function () {\n        return this.valueFactory.createNull();\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return false;\n    },\n\n    /**\n     * Determines whether this reference is empty or not\n     * (NULL references are always empty)\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return true; // PHP NULL is classed as empty\n    },\n\n    isSet: function () {\n        return false;\n    },\n\n    setValue: function () {\n        var reference = this;\n\n        if (reference.onSet) {\n            reference.onSet();\n        }\n    }\n});\n\nmodule.exports = NullReference;\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error(functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * @interface\n */\nfunction TypeInterface() {\n    throw new Error('TypeInterface cannot be instantiated');\n}\n\n_.extend(TypeInterface.prototype, {\n    /**\n     * Determines whether a parameter defined with this type (for example)\n     * would allow a null value\n     *\n     * @returns {bool}\n     */\n    allowsNull: throwUnimplemented('allowsNull'),\n\n    /**\n     * Determines whether a parameter defined with this type (for example)\n     * would allow the given value\n     *\n     * @param {Value} value\n     * @returns {bool}\n     */\n    allowsValue: throwUnimplemented('allowsValue'),\n\n    /**\n     * Fetches the display name for this type (eg. \"string\" or \"My\\Lib\\MyClass\")\n     *\n     * @returns {string}\n     */\n    getDisplayName: throwUnimplemented('getDisplayName'),\n\n    /**\n     * Fetches the message to display when this type is an expected type,\n     * eg. in an error message where the given argument did not match\n     *\n     * @param {Translator} translator\n     * @returns {string}\n     */\n    getExpectedMessage: throwUnimplemented('getExpectedMessage'),\n\n    /**\n     * Determines whether this type is for a scalar value (integer, string or boolean)\n     *\n     * @returns {bool}\n     */\n    isScalar: throwUnimplemented('isScalar')\n});\n\nmodule.exports = TypeInterface;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar hasOwn = {}.hasOwnProperty,\n    isArray = require('./isArray')(Array);\n\nmodule.exports = function (object, iterator, thisArg) {\n    var key,\n        length;\n\n    if (!object) {\n        return;\n    }\n\n    if (isArray(object) || hasOwn.call(object, 'length')) {\n        for (key = 0, length = object.length; key < length; key++) {\n            if (iterator.call(thisArg, object[key], key, object) === false) {\n                break;\n            }\n        }\n\n        return;\n    }\n\n    /*jshint forin: false */\n    for (key in object) {\n        if (hasOwn.call(object, key)) {\n            if (iterator.call(thisArg, object[key], key, object) === false) {\n                break;\n            }\n        }\n    }\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Reference/ReferenceSlot')\n], function (\n    _,\n    phpCommon,\n    ReferenceSlot\n) {\n    var USED_THIS_OUTSIDE_OBJECT_CONTEXT = 'core.used_this_outside_object_context',\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * Variables can either hold a value directly or hold a pointer\n     * to a reference (an array element, object instance property or static class property etc.)\n     *\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @param {string} name\n     * @constructor\n     */\n    function Variable(callStack, valueFactory, name) {\n        /**\n         * @type {string}\n         */\n        this.name = name;\n        /**\n         * @type {Reference|null}\n         */\n        this.reference = null;\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Value|null}\n         */\n        this.value = null;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Variable.prototype, {\n        /**\n         * Coerces this value and the specified one to strings,\n         * concatenates them together and then assigns the result back to this variable\n         *\n         * @param {Value} rightValue\n         */\n        concatWith: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().concat(rightValue));\n        },\n\n        decrementBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().subtract(rightValue));\n        },\n\n        /**\n         * Divides the value of this variable by the specified value\n         *\n         * Used by the `/=` operator\n         *\n         * @param {Value} rightValue\n         */\n        divideBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().divide(rightValue));\n        },\n\n        /**\n         * Formats the variable (which may not be defined) for display in stack traces etc.\n         *\n         * @returns {string}\n         */\n        formatAsString: function () {\n            var variable = this;\n\n            return variable.isDefined() ?\n                variable.getValue().formatAsString() :\n                'NULL';\n        },\n\n        /**\n         * Fetches a property of an object stored in this variable\n         *\n         * @param {Value} nameValue\n         * @returns {PropertyReference}\n         */\n        getInstancePropertyByName: function (nameValue) {\n            var variable = this;\n\n            if (variable.name === 'this' && variable.value === null) {\n                variable.callStack.raiseTranslatedError(PHPError.E_ERROR, USED_THIS_OUTSIDE_OBJECT_CONTEXT);\n            }\n\n            return variable.getValue().getInstancePropertyByName(nameValue);\n        },\n\n        /**\n         * Fetches the name of this variable, which must be unique within its scope\n         *\n         * @returns {string}\n         */\n        getName: function () {\n            return this.name;\n        },\n\n        /**\n         * Fetches the value of this variable. If it holds a value directly\n         * this will be returned, otherwise if it is a reference to another\n         * variable or reference (array element/object property etc.)\n         * then the value of the reference will be fetched\n         *\n         * @returns {Value}\n         */\n        getValue: function () {\n            var variable = this;\n\n            if (variable.value) {\n                return variable.value;\n            }\n\n            if (variable.reference) {\n                return variable.reference.getValue();\n            }\n\n            if (variable.name === 'this') {\n                variable.callStack.raiseTranslatedError(PHPError.E_ERROR, USED_THIS_OUTSIDE_OBJECT_CONTEXT);\n            }\n\n            variable.callStack.raiseError(PHPError.E_NOTICE, 'Undefined variable: ' + variable.name);\n\n            return variable.valueFactory.createNull();\n        },\n\n        /**\n         * Returns this variable's value if defined, NULL otherwise.\n         * No notice/warning will be raised if the variable has no value defined.\n         *\n         * @return {Value}\n         */\n        getValueOrNull: function () {\n            var variable = this;\n\n            return variable.isDefined() ?\n                variable.getValue() :\n                variable.valueFactory.createNull();\n        },\n\n        getNative: function () {\n            return this.getValue().getNative();\n        },\n\n        /**\n         * Fetches a reference to this variable's value\n         *\n         * @returns {Reference}\n         */\n        getReference: function () {\n            var variable = this;\n\n            if (variable.reference) {\n                // This variable already refers to something else, so return its target\n                return variable.reference;\n            }\n\n            // Implicitly define a \"slot\" to contain this variable's value\n            variable.reference = new ReferenceSlot(variable.valueFactory);\n\n            if (variable.value) {\n                variable.reference.setValue(variable.value);\n                variable.value = null; // This variable now has a reference (to the slot) and not a value\n            }\n\n            return variable.reference;\n        },\n\n        incrementBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().add(rightValue));\n        },\n\n        /**\n         * Determines whether this variable is defined,\n         * either with a value directly assigned or by being\n         * a reference to another variable/reference\n         *\n         * @returns {boolean}\n         */\n        isDefined: function () {\n            var variable = this;\n\n            return !!(variable.value || variable.reference);\n        },\n\n        /**\n         * Determines whether this variable is classed as \"empty\" or not\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            var variable = this;\n\n            return !variable.isDefined() || variable.getValue().isEmpty();\n        },\n\n        /**\n         * Determines whether this variable is classed as \"set\" or not\n         *\n         * @returns {boolean}\n         */\n        isSet: function () {\n            var variable = this;\n\n            return variable.isDefined() && variable.getValue().isSet();\n        },\n\n        /**\n         * Multiplies the value of this variable by the specified value\n         *\n         * Used by the `*=` operator\n         *\n         * @param {Value} rightValue\n         */\n        multiplyBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().multiply(rightValue));\n        },\n\n        /**\n         * Decrements the stored value, returning its original value\n         *\n         * @returns {Value}\n         */\n        postDecrement: function () {\n            var variable = this,\n                decrementedValue = variable.getValue().decrement(),\n                result = variable.getValue();\n\n            if (decrementedValue) {\n                variable.setValue(decrementedValue);\n            }\n\n            return result;\n        },\n\n        /**\n         * Decrements the stored value, returning its new value\n         *\n         * @returns {Value}\n         */\n        preDecrement: function () {\n            var variable = this,\n                decrementedValue = variable.getValue().decrement();\n\n            if (decrementedValue) {\n                variable.setValue(decrementedValue);\n            }\n\n            return variable.getValue();\n        },\n\n        /**\n         * Increments the stored value, returning its original value\n         *\n         * @returns {Value}\n         */\n        postIncrement: function () {\n            var variable = this,\n                incrementedValue = variable.getValue().increment(),\n                result = variable.getValue();\n\n            if (incrementedValue) {\n                variable.setValue(incrementedValue);\n            }\n\n            return result;\n        },\n\n        /**\n         * Increments the stored value, returning its new value\n         *\n         * @returns {Value}\n         */\n        preIncrement: function () {\n            var variable = this,\n                incrementedValue = variable.getValue().increment();\n\n            if (incrementedValue) {\n                variable.setValue(incrementedValue);\n            }\n\n            return variable.getValue();\n        },\n\n        /**\n         * Sets either the value or the reference of this variable depending on the argument provided\n         *\n         * @param {Reference|Value|Variable} referenceOrValue\n         */\n        setReferenceOrValue: function (referenceOrValue) {\n            var variable = this;\n\n            if (variable.valueFactory.isValue(referenceOrValue)) {\n                variable.setValue(referenceOrValue);\n            } else {\n                variable.setReference(referenceOrValue.getReference());\n            }\n        },\n\n        /**\n         * Sets the value of this variable. If it holds a value directly\n         * this will be overwritten, otherwise if it is a reference to another\n         * variable or reference (array element/object property etc.)\n         * then the value of the reference will be changed instead.\n         * Returns the value that was assigned\n         *\n         * @param {Reference|Value} value\n         * @returns {Value}\n         */\n        setValue: function (value) {\n            var variable = this;\n\n            if (variable.name === 'this' && value.getType() === 'null') {\n                // Normalise the value of $this to either be set to an ObjectValue\n                // or be unset\n                variable.value = null;\n\n                return value;\n            }\n\n            if (variable.reference) {\n                variable.reference.setValue(value);\n            } else {\n                variable.value = value.getForAssignment();\n            }\n\n            return value;\n        },\n\n        setReference: function (reference) {\n            var variable = this;\n\n            variable.reference = reference;\n            variable.value = null;\n\n            return variable;\n        },\n\n        toArray: function () {\n            return this.value.toArray();\n        },\n\n        toBoolean: function () {\n            return this.value.toBoolean();\n        },\n\n        toFloat: function () {\n            return this.value.toFloat();\n        },\n\n        toInteger: function () {\n            return this.value.toInteger();\n        },\n\n        unset: function () {\n            var variable = this;\n\n            variable.value = variable.reference = null;\n        }\n    });\n\n    return Variable;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\n/**\n * Stores a value that may be referred to by multiple variables or references\n *\n * @param {ValueFactory} valueFactory\n * @constructor\n */\nfunction ReferenceSlot(valueFactory) {\n    /**\n     * Implicitly define this slot with a value of NULL\n     *\n     * @type {Value}\n     */\n    this.value = valueFactory.createNull();\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(ReferenceSlot, Reference);\n\n_.extend(ReferenceSlot.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    getForAssignment: function () {\n        return this.getValue();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getValue: function () {\n        return this.value;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isDefined: function () {\n        return true;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    setValue: function (value) {\n        this.value = value;\n\n        return value;\n    }\n});\n\nmodule.exports = ReferenceSlot;\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? WeakMap : require(\"./polyfill\");\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call((function () { return arguments; })());\n\nmodule.exports = function (value) { return objToString.call(value) === id; };\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Exception = require('./Exception');\n\n/**\n * Represents any kind of PHP error (warning, notice, parse, fatal)\n *\n * @param {string} level\n * @param {string} message\n * @param {string|null=} filePath\n * @param {number|null=} lineNumber\n * @constructor\n */\nfunction PHPError(level, message, filePath, lineNumber) {\n    // Form a readable string for the error, for when the library is used outside PHPCore\n    // (as inside PHPCore, these errors will be intercepted and inspected using the getter methods below)\n    Exception.call(\n        this,\n        'PHP ' + level + ': ' + message + ' in ' + (filePath || '(unknown)') + ' on line ' + (lineNumber || '(unknown)')\n    );\n\n    /**\n     * @type {string|null} Path to the file the error occurred in\n     */\n    this.filePath = filePath;\n    /**\n     * @type {string}\n     */\n    this.level = level;\n    /**\n     * @type {number|null} Which line the error occurred on, if known\n     */\n    this.lineNumber = lineNumber;\n    /**\n     * @type {string} Original message without level prefix\n     */\n    this.originalMessage = message;\n}\n\nutil.inherits(PHPError, Exception);\n\n_.extend(PHPError, {\n    E_DEPRECATED: 'Deprecated',\n    E_ERROR: 'Fatal error',\n    E_NOTICE: 'Notice',\n    E_PARSE: 'Parse error',\n    E_STRICT: 'Strict standards',\n    E_WARNING: 'Warning'\n});\n\n_.extend(PHPError.prototype, {\n    /**\n     * Fetches the PHP module file the error occurred in if known, otherwise returns null\n     *\n     * @return {string|null}\n     */\n    getFilePath: function () {\n        return this.filePath;\n    },\n\n    /**\n     * Fetches the level of the error (E_DEPRECATED, E_WARNING etc.)\n     *\n     * @return {string}\n     */\n    getLevel: function () {\n        return this.level;\n    },\n\n    /**\n     * Fetches the line the error occurred on if known, otherwise returns null\n     *\n     * @return {number|null}\n     */\n    getLineNumber: function () {\n        return this.lineNumber;\n    },\n\n    /**\n     * Fetches the message for the error, without the level prefix\n     *\n     * @return {string}\n     */\n    getMessage: function () {\n        return this.originalMessage;\n    }\n});\n\nmodule.exports = PHPError;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error(functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * @interface\n */\nfunction FunctionContextInterface() {\n    throw new Error('FunctionContextInterface cannot be instantiated');\n}\n\n_.extend(FunctionContextInterface.prototype, {\n    /**\n     * Fetches the fully-qualified name of the function\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getName: throwUnimplemented('getName'),\n\n    /**\n     * Fetches the name of the function as required for stack traces\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getTraceFrameName: throwUnimplemented('getTraceFrameName'),\n\n    /**\n     * Fetches the name of the function, without any qualifying namespace and/or class prefix\n     * (eg. as used by __FUNCTION__)\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: throwUnimplemented('getUnprefixedName')\n});\n\nmodule.exports = FunctionContextInterface;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction KeyReferencePair(key, reference) {\n    this.key = key;\n    this.reference = reference;\n}\n\n_.extend(KeyReferencePair.prototype, {\n    getKey: function () {\n        return this.key;\n    },\n\n    getReference: function () {\n        return this.reference;\n    }\n});\n\nmodule.exports = KeyReferencePair;\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.setPrototypeOf : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar getType = require('./getType');\n\nmodule.exports = function (Array) {\n    return Array.isArray || function (object) {\n        return getType(object) === 'Array';\n    };\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar REGEX = /\\[object ([^\\]]+)\\]/;\n\nmodule.exports = function (object) {\n    return {}.toString.call(object).match(REGEX)[1];\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar hasOwn = {}.hasOwnProperty;\n\nmodule.exports = function (object, iterator, thisArg) {\n    var key;\n\n    /*jshint forin: false */\n    for (key in object) {\n        if (hasOwn.call(object, key)) {\n            if (iterator.call(thisArg, object[key], key, object) === false) {\n                break;\n            }\n        }\n    }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util');\n\nfunction Exception(message) {\n    this.message = message;\n}\n\nutil.inherits(Exception, Error);\n\n_.extend(Exception.prototype, {\n    'type': 'Exception'\n});\n\nmodule.exports = Exception;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    util = require('util'),\n    Exception = phpCommon.Exception;\n\n/**\n * Represents an attempt to fetch or pop the active output buffer when none is active\n *\n * @constructor\n */\nfunction NoActiveOutputBufferException() {\n    Exception.call(this, 'No output buffer is active');\n}\n\nutil.inherits(NoActiveOutputBufferException, Exception);\n\nmodule.exports = NoActiveOutputBufferException;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = {\n    sapi: 'cli',\n\n    operatingSystem: {\n        name: 'Uniter',           // Operating system name. eg. FreeBSD\n        hostName: 'localhost',    // Host name. eg. localhost.example.com\n        releaseName: '1.0.0',     // Release name. eg. 5.1.2-RELEASE\n        versionInfo: '(Generic)', // Version information. Varies a lot between operating systems\n        machineType: 'JavaScript' // Machine type. eg. i386\n    },\n\n    phpVersion: {\n        major: 5,\n        minor: 4,\n        release: 0\n    },\n\n    zendVersion: {\n        major: 2,\n        minor: 5,\n        release: 0\n    }\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar util = require('util'),\n    phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception;\n\n/**\n * Thrown when a format by the printf(...) family of functions is missing an argument\n *\n * @param {number} argumentPosition\n * @constructor\n */\nfunction MissingFormatArgumentException(argumentPosition) {\n    Exception.call(this, 'Missing argument #' + (argumentPosition + 1));\n\n    /**\n     * @type {number}\n     */\n    this.argumentPosition = argumentPosition;\n}\n\nutil.inherits(MissingFormatArgumentException, Exception);\n\nmodule.exports = MissingFormatArgumentException;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Represents a PHP value to be displayed in the devtools debugger\n *\n * @param {Value} value\n * @constructor\n */\nfunction DebugValue(value) {\n    /**\n     * @type {Value}\n     */\n    this.value = value;\n}\n\n_.extend(DebugValue.prototype, {\n    /**\n     * Fetches the value this debug value represents\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        return this.value;\n    },\n\n    /**\n     * Determines whether the value is defined: should always be true\n     * (this is shared by the interface of DebugVariable, which may return false\n     * if the variable has not (yet) been defined in the scope)\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return true;\n    }\n});\n\nmodule.exports = DebugValue;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Scope} scope\n * @param {string} variableName\n * @constructor\n */\nfunction DebugVariable(scope, variableName) {\n    /**\n     * @type {Scope}\n     */\n    this.scope = scope;\n    /**\n     * @type {string}\n     */\n    this.variableName = variableName;\n}\n\n_.extend(DebugVariable.prototype, {\n    /**\n     * Fetches the value currently assigned to the variable this DebugVariable is tracking\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        var variable = this;\n\n        return variable.scope.getVariable(variable.variableName).getValue();\n    },\n\n    /**\n     * Determines whether the wrapped Value is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var variable = this;\n\n        return variable.scope.getVariable(variable.variableName).isDefined();\n    }\n});\n\nmodule.exports = DebugVariable;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('./builtin/builtins'),\n    require('phpcommon'),\n    require('util'),\n    require('./Reference/AccessorReference'),\n    require('./Call'),\n    require('./CallFactory'),\n    require('./CallStack'),\n    require('./ClassAutoloader'),\n    require('./Closure'),\n    require('./Function/ClosureContext'),\n    require('./ClosureFactory'),\n    require('./Reference/Element/ElementProviderFactory'),\n    require('./Error/ErrorConfiguration'),\n    require('./Error/ErrorConverter'),\n    require('./Error/ErrorPromoter'),\n    require('./Error/ErrorReporting'),\n    require('./FFI/Value/AsyncObjectValue'),\n    require('./FFI/Call'),\n    require('./FFI/Call/Caller'),\n    require('./FFI/Internals/ClassInternalsClassFactory'),\n    require('./FFI/Export/ExportFactory'),\n    require('./FFI/Export/ExportRepository'),\n    require('./FFI/FFIFactory'),\n    require('./FFI/Internals/FunctionInternalsClassFactory'),\n    require('./FFI/Internals/Internals'),\n    require('./FFI/Call/NativeCaller'),\n    require('./FFI/Value/PHPObject'),\n    require('./FFI/Value/Proxy/ProxyClassFactory'),\n    require('./FFI/Value/Proxy/ProxyClassRepository'),\n    require('./FFI/Value/Proxy/ProxyFactory'),\n    require('./FFI/Value/Proxy/ProxyMemberFactory'),\n    require('./FFI/Result'),\n    require('./FFI/Stack/StackHooker'),\n    require('./FFI/Export/UnwrapperRepository'),\n    require('./FFI/Call/ValueCaller'),\n    require('./FFI/Value/ValueCoercer'),\n    require('./FFI/Value/ValueHelper'),\n    require('./FFI/Value/ValueStorage'),\n    require('./Function/FunctionContext'),\n    require('./FunctionFactory'),\n    require('./Function/FunctionSpec'),\n    require('./Function/FunctionSpecFactory'),\n    require('./Load/Includer'),\n    require('./INIState'),\n    require('./Load/Loader'),\n    require('./Load/LoadScope'),\n    require('./Function/MethodContext'),\n    require('./MethodSpec'),\n    require('./Module'),\n    require('./ModuleFactory'),\n    require('./Namespace'),\n    require('./NamespaceFactory'),\n    require('./NamespaceScope'),\n    require('./Reference/Null'),\n    require('./Load/OnceIncluder'),\n    require('./OptionSet'),\n    require('./Output/Output'),\n    require('./Output/OutputBuffer'),\n    require('./Output/OutputFactory'),\n    require('./Function/Parameter'),\n    require('./Function/ParameterFactory'),\n    require('./Function/ParameterListFactory'),\n    require('./Function/ParameterTypeFactory'),\n    require('./ReferenceFactory'),\n    require('./Scope'),\n    require('./ScopeFactory'),\n    require('./Output/StdoutBuffer'),\n    require('./SuperGlobalScope'),\n    require('./Tools'),\n    require('./ToolsFactory'),\n    require('./Error/TraceFormatter'),\n    require('./Type/TypeFactory'),\n    require('./Value'),\n    require('./ValueFactory'),\n    require('./Variable'),\n    require('./VariableFactory')\n], function (\n    _,\n    builtinTypes,\n    phpCommon,\n    util,\n    AccessorReference,\n    Call,\n    CallFactory,\n    CallStack,\n    ClassAutoloader,\n    Closure,\n    ClosureContext,\n    ClosureFactory,\n    ElementProviderFactory,\n    ErrorConfiguration,\n    ErrorConverter,\n    ErrorPromoter,\n    ErrorReporting,\n    FFIAsyncObjectValue,\n    FFICall,\n    FFICaller,\n    FFIClassInternalsClassFactory,\n    FFIExportFactory,\n    FFIExportRepository,\n    FFIFactory,\n    FFIFunctionInternalsClassFactory,\n    FFIInternals,\n    FFINativeCaller,\n    FFIPHPObject,\n    FFIProxyClassFactory,\n    FFIProxyClassRepository,\n    FFIProxyFactory,\n    FFIProxyMemberFactory,\n    FFIResult,\n    FFIStackHooker,\n    FFIUnwrapperRepository,\n    FFIValueCaller,\n    FFIValueCoercer,\n    FFIValueHelper,\n    FFIValueStorage,\n    FunctionContext,\n    FunctionFactory,\n    FunctionSpec,\n    FunctionSpecFactory,\n    Includer,\n    INIState,\n    Loader,\n    LoadScope,\n    MethodContext,\n    MethodSpec,\n    Module,\n    ModuleFactory,\n    Namespace,\n    NamespaceFactory,\n    NamespaceScope,\n    NullReference,\n    OnceIncluder,\n    OptionSet,\n    Output,\n    OutputBuffer,\n    OutputFactory,\n    Parameter,\n    ParameterFactory,\n    ParameterListFactory,\n    ParameterTypeFactory,\n    ReferenceFactory,\n    Scope,\n    ScopeFactory,\n    StdoutBuffer,\n    SuperGlobalScope,\n    Tools,\n    ToolsFactory,\n    TraceFormatter,\n    TypeFactory,\n    Value,\n    ValueFactory,\n    Variable,\n    VariableFactory\n) {\n    var THROWABLE_INTERFACE = 'Throwable',\n        hasOwn = {}.hasOwnProperty,\n        setUpState = function (state, installedBuiltinTypes, optionGroups) {\n            var globalNamespace = state.globalNamespace;\n\n            /**\n             * Bindings allow components of an addon to share data.\n             *\n             * @param {Function} groupFactory\n             */\n            function installBindingGroup(groupFactory) {\n                var groupBindings = groupFactory(state.ffiInternals);\n\n                _.each(groupBindings, function (bindingFactory, bindingName) {\n                    var bindingOptions = state.optionSet.getOption(bindingName);\n\n                    state.bindings[bindingName] = bindingFactory(bindingOptions);\n                });\n            }\n\n            /**\n             * Installs a set of related functions into PHP-land\n             *\n             * @param {Function} groupFactory\n             */\n            function installFunctionGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals),\n                    functionAliases = {};\n\n                _.each(groupBuiltins, function (fn, name) {\n                    if (typeof fn === 'function') {\n                        state.defineNonCoercingFunction(name, fn);\n                    } else {\n                        // Gather function aliases (strings) and install the aliases at the end\n                        // (see below), to ensure that the original functions exist first\n                        // as an alias can only be installed using an existing function's FunctionSpec\n                        functionAliases[name] = fn;\n                    }\n                });\n\n                _.forOwn(functionAliases, function (originalName, aliasName) {\n                    globalNamespace.aliasFunction(originalName, aliasName);\n                });\n            }\n\n            /**\n             * Installs a single class into PHP-land\n             *\n             * @param {Function} definitionFactory\n             * @param {string} name\n             */\n            function installClass(definitionFactory, name) {\n                state.defineClass(name, definitionFactory);\n            }\n\n            /**\n             * Installs a set of related classes into PHP-land\n             *\n             * @param {Function} groupFactory\n             */\n            function installClassGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals);\n\n                _.each(groupBuiltins, function (definitionFactory, name) {\n                    state.defineClass(name, definitionFactory);\n                });\n            }\n\n            /**\n             * Installs a set of related constants into PHP-land\n             *\n             * @param {Function} groupFactory\n             */\n            function installConstantGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals);\n\n                _.each(groupBuiltins, function (value, name) {\n                    globalNamespace.defineConstant(name, state.valueFactory.coerce(value));\n                });\n            }\n\n            /**\n             * Installs a set of defaults for INI options\n             *\n             * @param {Function} groupFactory\n             */\n            function installDefaultINIOptionGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals);\n\n                _.each(groupBuiltins, function (value, name) {\n                    state.iniState.set(name, value);\n                });\n            }\n\n            /**\n             * Installs a set of related runtime options\n             *\n             * @param {Function} groupFactory\n             */\n            function installOptionGroup(groupFactory) {\n                var groupOptions = groupFactory(state.ffiInternals);\n\n                _.extend(state.options, groupOptions);\n            }\n\n            /**\n             * Installs a set of translations for one or more locales\n             *\n             * @param {object} cataloguesByLocale\n             */\n            function installTranslationCatalogues(cataloguesByLocale) {\n                state.translator.addTranslations(cataloguesByLocale);\n            }\n\n            // Core builtins\n            _.each(builtinTypes.translationCatalogues, installTranslationCatalogues);\n            _.each(builtinTypes.constantGroups, installConstantGroup);\n            _.each(builtinTypes.defaultINIGroups, installDefaultINIOptionGroup);\n            _.each(builtinTypes.functionGroups, installFunctionGroup);\n            _.each(builtinTypes.classGroups, installClassGroup);\n\n            if (_.isArray(builtinTypes.classes)) {\n                // Allow the class set to be an array, for grouping classes\n                // so that they will load in a specific order (ie. when handling dependencies between them)\n                _.each(builtinTypes.classes, function (classes) {\n                    _.forOwn(classes, installClass);\n                });\n            } else {\n                _.forOwn(builtinTypes.classes, installClass);\n            }\n\n            // Optional installed builtins\n            _.each(optionGroups, installOptionGroup);\n            state.bindings = {};\n            _.each(installedBuiltinTypes.translationCatalogues, installTranslationCatalogues);\n            _.each(installedBuiltinTypes.constantGroups, installConstantGroup);\n            _.each(installedBuiltinTypes.defaultINIGroups, installDefaultINIOptionGroup);\n            _.each(installedBuiltinTypes.bindingGroups, installBindingGroup);\n            // TODO: Add \"exposures\" for addons to expose things to transpiled code\n            // TODO: Add \"externals\" for addons to expose things to external code (eg. engine.getExternal(...))?\n            _.each(installedBuiltinTypes.functionGroups, installFunctionGroup);\n            _.each(installedBuiltinTypes.classGroups, installClassGroup);\n            _.forOwn(installedBuiltinTypes.classes, installClass);\n        },\n        Exception = phpCommon.Exception,\n        Translator = phpCommon.Translator;\n\n    /**\n     * Encapsulates an internal PHP state, defining classes, functions, global variables etc.\n     *\n     * For now this class also serves as the main dependency injection container for all services\n     * that relate to a specific internal PHP environment's state.\n     *\n     * @param {Runtime} runtime\n     * @param {GlobalStackHooker} globalStackHooker\n     * @param {Object} installedBuiltinTypes\n     * @param {Stream} stdin\n     * @param {Stream} stdout\n     * @param {Stream} stderr\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @param {Function[]} optionGroups\n     * @param {Object} options\n     * @constructor\n     */\n    function PHPState(\n        runtime,\n        globalStackHooker,\n        installedBuiltinTypes,\n        stdin,\n        stdout,\n        stderr,\n        pausable,\n        mode,\n        optionGroups,\n        options\n    ) {\n        var callFactory = new CallFactory(Call, FFICall),\n            elementProviderFactory = new ElementProviderFactory(),\n            elementProvider = elementProviderFactory.createProvider(),\n            moduleFactory = new ModuleFactory(Module),\n            translator = new Translator(),\n            iniState = new INIState(),\n            getConstant = this.getConstant.bind(this),\n            errorConfiguration = new ErrorConfiguration(iniState),\n            errorConverter = new ErrorConverter(getConstant),\n            traceFormatter = new TraceFormatter(translator),\n            errorReporting = new ErrorReporting(\n                errorConfiguration,\n                errorConverter,\n                traceFormatter,\n                translator,\n                stdout,\n                stderr\n            ),\n            errorPromoter = new ErrorPromoter(errorReporting),\n            ffiValueStorage = new FFIValueStorage(),\n            valueFactory = new ValueFactory(\n                pausable,\n                mode,\n                elementProvider,\n                translator,\n                callFactory,\n                errorPromoter,\n                ffiValueStorage\n            ),\n            callStack = new CallStack(valueFactory, translator, errorReporting, stderr),\n            referenceFactory = new ReferenceFactory(\n                AccessorReference,\n                NullReference,\n                valueFactory\n            ),\n            classAutoloader = new ClassAutoloader(valueFactory),\n            superGlobalScope = new SuperGlobalScope(callStack, valueFactory),\n\n            ffiCaller = new FFICaller(\n                callFactory,\n                callStack,\n                errorPromoter,\n                pausable,\n                mode\n            ),\n            ffiNativeCaller = new FFINativeCaller(ffiCaller, mode),\n            ffiValueCaller = new FFIValueCaller(ffiCaller, mode),\n            ffiFactory = new FFIFactory(\n                FFIAsyncObjectValue,\n                FFIPHPObject,\n                FFIValueCoercer,\n                valueFactory,\n                callStack,\n                ffiNativeCaller,\n                ffiValueCaller\n            ),\n            ffiProxyMemberFactory = new FFIProxyMemberFactory(\n                valueFactory,\n                ffiValueStorage,\n                ffiNativeCaller\n            ),\n            ffiProxyClassFactory = new FFIProxyClassFactory(ffiValueStorage, ffiProxyMemberFactory),\n            ffiProxyClassRepository = new FFIProxyClassRepository(ffiProxyClassFactory),\n            ffiProxyFactory = new FFIProxyFactory(ffiProxyClassRepository, mode),\n            ffiUnwrapperRepository = new FFIUnwrapperRepository(),\n            ffiExportFactory = new FFIExportFactory(ffiUnwrapperRepository, ffiProxyFactory),\n            ffiExportRepository = new FFIExportRepository(ffiExportFactory, ffiValueStorage),\n            ffiValueHelper = new FFIValueHelper(ffiProxyFactory, ffiFactory, ffiValueStorage, mode),\n\n            variableFactory = new VariableFactory(Variable, callStack, valueFactory),\n            typeFactory = new TypeFactory(),\n            parameterFactory = new ParameterFactory(Parameter, callStack, translator),\n            parameterTypeFactory = new ParameterTypeFactory(typeFactory),\n            parameterListFactory = new ParameterListFactory(parameterFactory, parameterTypeFactory),\n            functionSpecFactory = new FunctionSpecFactory(\n                FunctionSpec,\n                FunctionContext,\n                MethodContext,\n                ClosureContext,\n                callStack,\n                parameterListFactory,\n                valueFactory\n            ),\n            scopeFactory = new ScopeFactory(\n                LoadScope,\n                Scope,\n                NamespaceScope,\n                callStack,\n                translator,\n                superGlobalScope,\n                functionSpecFactory,\n                valueFactory,\n                variableFactory,\n                referenceFactory\n            ),\n            functionFactory = new FunctionFactory(\n                MethodSpec,\n                scopeFactory,\n                callFactory,\n                valueFactory,\n                callStack\n            ),\n            closureFactory = new ClosureFactory(functionFactory, valueFactory, callStack, Closure),\n            namespaceFactory = new NamespaceFactory(\n                Namespace,\n                callStack,\n                functionFactory,\n                functionSpecFactory,\n                valueFactory,\n                classAutoloader,\n                ffiExportRepository,\n                ffiFactory\n            ),\n            globalNamespace = namespaceFactory.create(),\n            // The global/default module (not eg. the same as the command line module)\n            globalModule = moduleFactory.create(null),\n            // \"Invisible\" global namespace scope, not defined by any code\n            globalNamespaceScope = new NamespaceScope(\n                globalNamespace,\n                valueFactory,\n                callStack,\n                globalModule,\n                globalNamespace,\n                true\n            ),\n            globalScope,\n            ffiInternals,\n            ffiClassInternalsClassFactory,\n            ffiFunctionInternalsClassFactory,\n            globalsSuperGlobal = superGlobalScope.defineVariable('GLOBALS'),\n            loader = new Loader(valueFactory, pausable),\n            includer,\n            onceIncluder,\n            optionSet,\n            output = new Output(new OutputFactory(OutputBuffer), new StdoutBuffer(stdout)),\n            state = this,\n            toolsFactory;\n\n        scopeFactory.setClosureFactory(closureFactory);\n        globalScope = scopeFactory.create();\n        scopeFactory.setGlobalScope(globalScope);\n        classAutoloader.setGlobalNamespace(globalNamespace);\n        valueFactory.setCallStack(callStack);\n        valueFactory.setGlobalNamespace(globalNamespace);\n\n        // Make a copy of the options object so we don't mutate it\n        options = _.extend({}, options || {});\n\n        optionSet = new OptionSet(options);\n\n        includer = new Includer(\n            callStack,\n            valueFactory,\n            scopeFactory,\n            loader,\n            optionSet\n        );\n        onceIncluder = new OnceIncluder(valueFactory, includer);\n        toolsFactory = new ToolsFactory(\n            Tools,\n            callStack,\n            translator,\n            globalNamespace,\n            loader,\n            includer,\n            onceIncluder,\n            referenceFactory,\n            scopeFactory,\n            valueFactory\n        );\n\n        ffiInternals = new FFIInternals(\n            mode,\n            pausable,\n            valueFactory,\n            callFactory,\n            callStack,\n            ffiValueHelper,\n            classAutoloader,\n            errorConfiguration,\n            errorPromoter,\n            errorReporting,\n            globalNamespace,\n            globalScope,\n            iniState,\n            optionSet,\n            output,\n            runtime,\n            stdout,\n            traceFormatter,\n            translator,\n            state\n        );\n        ffiClassInternalsClassFactory = new FFIClassInternalsClassFactory(\n            ffiInternals,\n            ffiUnwrapperRepository,\n            valueFactory,\n            globalNamespace,\n            globalNamespaceScope\n        );\n        ffiFunctionInternalsClassFactory = new FFIFunctionInternalsClassFactory(\n            ffiInternals,\n            valueFactory,\n            ffiFactory,\n            globalNamespace,\n            globalNamespaceScope\n        );\n\n        // Set up the $GLOBALS superglobal\n        globalsSuperGlobal.setReference(\n            referenceFactory.createAccessor(\n                function () {\n                    var globalsArray,\n                        globalValues = globalScope.exportVariables(),\n                        elementHookCollection = elementProviderFactory.createElementHookCollection(),\n                        hookableElementProvider = elementProviderFactory.createHookableProvider(\n                            elementProvider,\n                            elementHookCollection\n                        );\n\n                    // Use a hookable array for $GLOBALS, so that we do not take a performance hit\n                    // for normal non-$GLOBALS arrays, as we would if we added hooking to all of them\n                    // without using the decorator pattern\n                    globalsArray = valueFactory.createArray(globalValues, hookableElementProvider);\n\n                    // $GLOBALS should have a recursive reference to itself\n                    globalsArray.getElementByKey(valueFactory.createString('GLOBALS'))\n                        .setReference(globalsSuperGlobal.getReference());\n\n                    // Install hooks to ensure that modifications to the $GLOBALS array\n                    // are reflected in the corresponding global variables\n                    elementHookCollection.onElementReferenceSet(function (elementReference, referenceSet) {\n                        var globalVariableName = elementReference.getKey().getNative();\n\n                        globalScope.getVariable(globalVariableName).setReference(referenceSet);\n                    });\n                    elementHookCollection.onElementValueSet(function (elementReference, valueSet) {\n                        var globalVariableName = elementReference.getKey().getNative();\n\n                        globalScope.getVariable(globalVariableName).setValue(valueSet);\n                    });\n                    elementHookCollection.onElementUnset(function (elementReference) {\n                        var globalVariableName = elementReference.getKey().getNative();\n\n                        globalScope.getVariable(globalVariableName).unset();\n                    });\n\n                    return globalsArray;\n                },\n                function (newNative) {\n                    // Clear these accessors first\n                    globalsSuperGlobal.unset();\n\n                    globalsSuperGlobal.setValue(valueFactory.coerce(newNative));\n                }\n            )\n        );\n\n        this.bindings = null;\n        this.callFactory = callFactory;\n        this.callStack = callStack;\n        this.ClassInternals = ffiClassInternalsClassFactory.create();\n        this.errorReporting = errorReporting;\n        this.FunctionInternals = ffiFunctionInternalsClassFactory.create();\n        this.globalNamespace = globalNamespace;\n        this.globalNamespaceScope = globalNamespaceScope;\n        this.globalScope = globalScope;\n        this.iniState = iniState;\n        this.options = options;\n        this.optionSet = optionSet;\n        this.ffiInternals = ffiInternals;\n        this.ffiStackHooker = new FFIStackHooker(globalStackHooker, this.optionSet);\n        this.ffiValueHelper = ffiValueHelper;\n        this.output = output;\n\n        this.loader = loader;\n        this.moduleFactory = moduleFactory;\n        this.referenceFactory = referenceFactory;\n        this.scopeFactory = scopeFactory;\n        this.callStack = callStack;\n        this.classAutoloader = classAutoloader;\n        this.pausable = pausable;\n        this.stderr = stderr;\n        this.stdin = stdin;\n        this.stdout = stdout;\n        this.superGlobalScope = superGlobalScope;\n        this.throwableClassObject = null;\n        this.toolsFactory = toolsFactory;\n        this.translator = translator;\n        this.valueFactory = valueFactory;\n\n        setUpState(this, installedBuiltinTypes, optionGroups || []);\n\n        // Install custom FFI JS engine stack trace handling, if enabled\n        this.ffiStackHooker.hook();\n\n        // Set any INI options provided\n        _.forOwn(options.ini, function (value, name) {\n            iniState.set(name, value);\n        });\n    }\n\n    _.extend(PHPState.prototype, {\n        /**\n         * Defines the given alias for the given function\n         *\n         * @param {string} originalName\n         * @param {string} aliasName\n         */\n        aliasFunction: function (originalName, aliasName) {\n            this.globalNamespace.aliasFunction(originalName, aliasName);\n        },\n\n        /**\n         * Creates a new FFI Result, to provide the result of a call to a JS function\n         *\n         * @param {Function} syncCallback\n         * @param {Function|null} asyncCallback\n         * @returns {FFIResult}\n         */\n        createFFIResult: function (syncCallback, asyncCallback) {\n            return new FFIResult(syncCallback, asyncCallback, this.pausable);\n        },\n\n        /**\n         * Defines a new class (in any namespace)\n         *\n         * @param {string} fqcn FQCN of the class to define\n         * @param {function} definitionFactory Called with `internals` object, returns the class definition\n         * @returns {Class} Returns the instance of Class that represents a PHP class\n         */\n        defineClass: function (fqcn, definitionFactory) {\n            var state = this,\n                classInternals = new state.ClassInternals(fqcn),\n                classObject = classInternals.defineClass(definitionFactory);\n\n            if (fqcn === THROWABLE_INTERFACE) {\n                if (state.throwableClassObject) {\n                    throw new Error('PHPState.defineClass(...) :: Throwable interface is already defined');\n                }\n\n                state.throwableClassObject = classObject;\n            }\n\n            return classObject;\n        },\n\n        /**\n         * Defines a global function from a native JS one. If a fully-qualified name is provided\n         * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n         *\n         * @param {string} name\n         * @param {Function} fn\n         */\n        defineCoercingFunction: function (name, fn) {\n            this.defineFunction(name, function () {\n                return fn;\n            });\n        },\n\n        /**\n         * Defines a constant with the given native value\n         *\n         * @param {string} name\n         * @param {*} nativeValue\n         * @param {object} options\n         */\n        defineConstant: function (name, nativeValue, options) {\n            var state = this,\n                parsed = state.globalNamespace.parseName(name),\n                value = state.valueFactory.coerce(nativeValue);\n\n            parsed.namespace.defineConstant(parsed.name, value, options);\n        },\n\n        /**\n         * Defines a global function from a native JS one. If a fully-qualified name is provided\n         * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n         *\n         * @param {string} fqfn\n         * @param {Function} definitionFactory\n         */\n        defineFunction: function (fqfn, definitionFactory) {\n            var state = this,\n                functionInternals = new state.FunctionInternals(fqfn);\n\n            functionInternals.defineFunction(definitionFactory);\n        },\n\n        /**\n         * Defines a global variable and gives it the provided value,\n         * if not already defined. If the variable is already defined\n         * in this scope then an error will be thrown\n         *\n         * @param {string} name\n         * @param {Value|*} value Value object or native value to be coerced\n         * @throws {Error} Throws when the global scope already defines the specified variable\n         */\n        defineGlobal: function (name, value) {\n            var state = this;\n\n            if (state.globalScope.hasVariable(name)) {\n                throw new Error(\n                    'PHPState.defineGlobal() :: Variable \"' + name + '\" is already defined in the global scope'\n                );\n            }\n\n            state.globalScope.defineVariable(name).setValue(state.valueFactory.coerce(value));\n        },\n\n        /**\n         * Defines a global variable using a getter/setter pair\n         *\n         * @param {string} name\n         * @param {Function} valueGetter\n         * @param {Function} valueSetter\n         */\n        defineGlobalAccessor: function (name, valueGetter, valueSetter) {\n            var state = this,\n                accessorReference = state.referenceFactory.createAccessor(valueGetter, valueSetter);\n\n            state.globalScope.defineVariable(name).setReference(accessorReference);\n        },\n\n        /**\n         * Defines a global function from a native JS one. If a fully-qualified name is provided\n         * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n         *\n         * @param {string} name\n         * @param {Function} fn\n         */\n        defineNonCoercingFunction: function (name, fn) {\n            this.defineFunction(name, function (internals) {\n                internals.disableAutoCoercion();\n\n                return fn;\n            });\n        },\n\n        /**\n         * Defines a super global variable (available in all scopes implicitly,\n         * unlike a normal global which is not available unless imported with a `global` statement)\n         * and gives it the provided value. If a native value is given then it will be coerced to a PHP one.\n         *\n         * @param {string} name\n         * @param {Value|*} value\n         */\n        defineSuperGlobal: function (name, value) {\n            var state = this;\n\n            state.superGlobalScope\n                .defineVariable(name)\n                .setValue(state.valueFactory.coerce(value));\n        },\n\n        /**\n         * Defines a super global variable (see above) using a getter/setter pair\n         *\n         * @param {string} name\n         * @param {Function} valueGetter\n         * @param {Function} valueSetter\n         */\n        defineSuperGlobalAccessor: function (name, valueGetter, valueSetter) {\n            var state = this,\n                accessorReference = state.referenceFactory.createAccessor(valueGetter, valueSetter);\n\n            state.superGlobalScope.defineVariable(name).setReference(accessorReference);\n        },\n\n        /**\n         * Fetches the specified binding from an installed addon\n         *\n         * @param {string} bindingName\n         * @returns {*}\n         */\n        getBinding: function (bindingName) {\n            var state = this;\n\n            if (state.bindings === null) {\n                // Option groups are loaded before bindings, so if any of them attempt to access a binding\n                // too early then throw a meaningful error message\n                throw new Exception('Option groups cannot access bindings too early');\n            }\n\n            if (!hasOwn.call(state.bindings, bindingName)) {\n                throw new Exception('No binding is defined with name \"' + bindingName + '\"');\n            }\n\n            return state.bindings[bindingName];\n        },\n\n        getCallFactory: function () {\n            return this.callFactory;\n        },\n\n        getCallStack: function () {\n            return this.callStack;\n        },\n\n        getConstant: function (name) {\n            var value;\n\n            try {\n                value = this.globalNamespace.getConstant(name, true);\n            } catch (error) {\n                return null;\n            }\n\n            return value.getNative();\n        },\n\n        /**\n         * Fetches the ErrorReporting service\n         *\n         * @returns {ErrorReporting}\n         */\n        getErrorReporting: function () {\n            return this.errorReporting;\n        },\n\n        /**\n         * Fetches the FFI value helper service\n         *\n         * @returns {ValueHelper}\n         */\n        getFFIValueHelper: function () {\n            return this.ffiValueHelper;\n        },\n\n        /**\n         * Fetches either a global function or one in a namespace\n         *\n         * @param {string} name FQCN of the function to fetch\n         * @return {Function}\n         */\n        getFunction: function (name) {\n            var parsed = this.globalNamespace.parseName(name);\n\n            return parsed.namespace.getFunction(parsed.name);\n        },\n\n        /**\n         * Fetches the value of a global variable, if defined.\n         * If the variable is not defined then a NULL value will be returned.\n         *\n         * @param {string} name\n         * @return {Value}\n         */\n        getGlobal: function (name) {\n            return this.globalScope.getVariable(name).getValueOrNull();\n        },\n\n        getGlobalNamespace: function () {\n            return this.globalNamespace;\n        },\n\n        getGlobalScope: function () {\n            return this.globalScope;\n        },\n\n        /**\n         * Fetches the native value of an INI option\n         *\n         * @param {string} name\n         * @returns {*}\n         */\n        getINIOption: function (name) {\n            return this.iniState.get(name);\n        },\n\n        /**\n         * Fetches the Loader for the runtime state, used for include/require and eval(...)\n         *\n         * @returns {Loader}\n         */\n        getLoader: function () {\n            return this.loader;\n        },\n\n        getModuleFactory: function () {\n            return this.moduleFactory;\n        },\n\n        getOptions: function () {\n            return this.optionSet.getOptions();\n        },\n\n        /**\n         * Fetches the Output service for the runtime state, used for handling buffering and writing to standard out\n         *\n         * @returns {Output}\n         */\n        getOutput: function () {\n            return this.output;\n        },\n\n        /**\n         * Fetches the ReferenceFactory service\n         *\n         * @returns {ReferenceFactory}\n         */\n        getReferenceFactory: function () {\n            return this.referenceFactory;\n        },\n\n        /**\n         * Fetches the ScopeFactory for the runtime state\n         *\n         * @returns {ScopeFactory}\n         */\n        getScopeFactory: function () {\n            return this.scopeFactory;\n        },\n\n        getStderr: function () {\n            return this.stderr;\n        },\n\n        getStdin: function () {\n            return this.stdin;\n        },\n\n        getStdout: function () {\n            return this.stdout;\n        },\n\n        getSuperGlobalScope: function () {\n            return this.superGlobalScope;\n        },\n\n        /**\n         * Fetches the ToolsFactory service\n         *\n         * @returns {ToolsFactory}\n         */\n        getToolsFactory: function () {\n            return this.toolsFactory;\n        },\n\n        /**\n         * Fetches the Translator service\n         *\n         * @returns {Translator}\n         */\n        getTranslator: function () {\n            return this.translator;\n        },\n\n        getValueFactory: function () {\n            return this.valueFactory;\n        },\n\n        /**\n         * Sets the value of an existing PHP global. If a native value is given\n         * then it will be coerced to a PHP one.\n         * If the global is not defined than an error will be thrown -\n         * use .defineGlobal(...) when defining a new variable\n         *\n         * @param {string} name\n         * @param {Value|*} value Value object or native value to be coerced\n         * @throws {Error} Throws if the variable is not defined in the global scope\n         */\n        setGlobal: function (name, value) {\n            var state = this;\n\n            if (!state.globalScope.hasVariable(name)) {\n                throw new Error(\n                    'PHPState.setGlobal() :: Variable \"' + name + '\" is not defined in the global scope'\n                );\n            }\n\n            state.globalScope.getVariable(name).setValue(state.valueFactory.coerce(value));\n        }\n    });\n\n    return PHPState;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {ClosureFactory} closureFactory\n     * @param {ValueFactory} valueFactory\n     * @param {NamespaceScope} namespaceScope\n     * @param {Function} unwrappedFunction\n     * @param {Function} wrappedFunction\n     * @param {Scope} enclosingScope\n     * @param {ObjectValue|null} thisObject\n     * @param {FunctionSpec} functionSpec\n     * @constructor\n     */\n    function Closure(\n        closureFactory,\n        valueFactory,\n        namespaceScope,\n        enclosingScope,\n        unwrappedFunction,\n        wrappedFunction,\n        thisObject,\n        functionSpec\n    ) {\n        /**\n         * @type {ClosureFactory}\n         */\n        this.closureFactory = closureFactory;\n        /**\n         * @type {Scope}\n         */\n        this.enclosingScope = enclosingScope;\n        /**\n         * @type {FunctionSpec}\n         */\n        this.functionSpec = functionSpec;\n        /**\n         * @type {NamespaceScope}\n         */\n        this.namespaceScope = namespaceScope;\n        /**\n         * @type {ObjectValue|null}\n         */\n        this.thisObject = thisObject;\n        /**\n         * @type {Function}\n         */\n        this.unwrappedFunction = unwrappedFunction;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n        /**\n         * @type {Function}\n         */\n        this.wrappedFunction = wrappedFunction;\n    }\n\n    _.extend(Closure.prototype, {\n        /**\n         * Creates a new closure identical to this one,\n         * but bound to the specified `$this` object and class scope\n         *\n         * @param {ObjectValue|NullValue} thisObject\n         * @param {Class|undefined} scopeClass\n         * @returns {closure.enclosingScope}\n         */\n        bind: function (thisObject, scopeClass) {\n            var closure = this;\n\n            return closure.closureFactory.create(\n                closure.enclosingScope,\n                closure.unwrappedFunction,\n                closure.namespaceScope,\n                scopeClass || null,\n                thisObject,\n                closure.functionSpec\n            );\n        },\n\n        /**\n         * Invokes this closure with the provided arguments, returning its result\n         *\n         * @param {Value[]} args\n         * @param {ObjectValue|undefined} thisObject\n         * @returns {Value}\n         */\n        invoke: function (args, thisObject) {\n            // Store the current PHP thisObj to set for the closure\n            var closure = this;\n\n            return closure.valueFactory.coerce(\n                closure.wrappedFunction.apply(thisObject || closure.thisObject, args)\n            );\n        }\n    });\n\n    return Closure;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    ElementReference = require('../Element');\n\n/**\n * Creates standard (unhooked) array elements\n *\n * @constructor\n */\nfunction ElementProvider() {\n\n}\n\n_.extend(ElementProvider.prototype, {\n    /**\n     * Creates a standard (unhooked) array element\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {ArrayValue} arrayValue\n     * @param {Value} key\n     * @param {Value|null} value\n     * @param {Reference|null} reference\n     * @returns {ElementReference}\n     */\n    createElement: function (valueFactory, callStack, arrayValue, key, value, reference) {\n        return new ElementReference(valueFactory, callStack, arrayValue, key, value, reference);\n    }\n});\n\nmodule.exports = ElementProvider;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    KeyReferencePair = require('../KeyReferencePair'),\n    KeyValuePair = require('../KeyValuePair'),\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n    ReferenceSlot = require('./ReferenceSlot');\n\nfunction ElementReference(valueFactory, callStack, arrayValue, key, value, reference) {\n    if (value && reference) {\n        throw new Error('Array elements can only have a value or be a reference, not both');\n    }\n\n    this.arrayValue = arrayValue;\n    this.key = key;\n    this.reference = reference || null;\n    this.callStack = callStack;\n    this.value = value || null;\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(ElementReference, Reference);\n\n_.extend(ElementReference.prototype, {\n    getKey: function () {\n        return this.key;\n    },\n\n    /**\n     * Fetches the relevant type of Pair class to represent this array element.\n     * If the element is a reference (to a variable, another array element or object property)\n     * then a KeyReferencePair will be returned.\n     * Otherwise the element simply holds a value, in which case a KeyValuePair will be returned.\n     *\n     * @param {Value|undefined} overrideKey Optional key to use rather than this element's\n     * @returns {KeyReferencePair|KeyValuePair}\n     * @throws {Error} Throws when the element is neither defined as a reference nor with a value\n     */\n    getPairForAssignment: function (overrideKey) {\n        var element = this;\n\n        if (!overrideKey) {\n            overrideKey = element.key;\n        }\n\n        if (element.value) {\n            return new KeyValuePair(overrideKey, element.value.getForAssignment());\n        }\n\n        if (element.reference) {\n            return new KeyReferencePair(overrideKey, element.reference);\n        }\n\n        throw new Error('Element is not defined');\n    },\n\n    /**\n     * Fetches a reference to this element's value\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        var element = this;\n\n        if (element.reference) {\n            // This element already refers to something else, so return its target\n            return element.reference;\n        }\n\n        // Implicitly define a \"slot\" to contain this element's value\n        element.reference = new ReferenceSlot(element.valueFactory);\n\n        if (element.value) {\n            element.reference.setValue(element.value);\n            element.value = null; // This element now has a reference (to the slot) and not a value\n        }\n\n        return element.reference;\n    },\n\n    getValue: function () {\n        var element = this;\n\n        // Special value of native null (vs. NullValue) represents undefined\n        if (!element.value && !element.reference) {\n            element.callStack.raiseError(PHPError.E_NOTICE, 'Undefined ' + element.arrayValue.referToElement(element.key.getNative()));\n            return element.valueFactory.createNull();\n        }\n\n        return element.value ? element.value : element.reference.getValue();\n    },\n\n    getValueReference: function () {\n        var element = this;\n\n        return element.reference || element.value || null;\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var element = this;\n\n        return !!(element.value || element.reference);\n    },\n\n    /**\n     * Determines whether the specified array element is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        var element = this;\n\n        if (element.value) {\n            return element.value.isEmpty();\n        }\n\n        if (element.reference) {\n            return element.reference.getValue().isEmpty();\n        }\n\n        return true; // Undefined elements are empty\n    },\n\n    isReference: function () {\n        return !!this.reference;\n    },\n\n    isSet: function () {\n        var element = this;\n\n        if (element.value) {\n            return element.value.isSet();\n        }\n\n        if (element.reference) {\n            return element.reference.getValue().isSet();\n        }\n\n        return false;\n    },\n\n    /**\n     * Sets the key for this element\n     *\n     * @param {Value} keyValue\n     */\n    setKey: function (keyValue) {\n        this.key = keyValue;\n    },\n\n    setReference: function (reference) {\n        var element = this;\n\n        element.reference = reference;\n        element.value = null;\n\n        element.arrayValue.defineElement(element);\n\n        return reference;\n    },\n\n    setValue: function (value) {\n        var element = this,\n            isFirstElement = (element.arrayValue.getLength() === 0);\n\n        if (element.key === null) {\n            // This reference refers to a new element to push onto the end of an array\n            element.arrayValue.pushElement(element);\n        }\n\n        if (element.reference) {\n            element.reference.setValue(value);\n        } else {\n            element.arrayValue.defineElement(element);\n            element.value = value.getForAssignment();\n        }\n\n        if (isFirstElement) {\n            element.arrayValue.pointToElement(element);\n        }\n\n        return value;\n    },\n\n    unset: function () {\n        var element = this;\n\n        element.value = element.reference = null;\n    }\n});\n\nmodule.exports = ElementReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Value[]} args\n * @constructor\n */\nfunction Call(args) {\n    /**\n     * @type {Reference[]|Value[]|Variable[]}\n     */\n    this.args = args;\n}\n\n_.extend(Call.prototype, {\n    /**\n     * Fetches the current class for the call, if any\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the path to the file this call was made from\n     *\n     * @returns {string|null}\n     */\n    getFilePath: function () {\n        return '(JavaScript code)';\n    },\n\n    /**\n     * Fetches the Value objects passed as arguments to the called function\n     *\n     * @returns {Value[]}\n     */\n    getFunctionArgs: function () {\n        return this.args;\n    },\n\n    /**\n     * Fetches the name of the current function\n     *\n     * @returns {string}\n     */\n    getFunctionName: function () {\n        return '(JavaScript function)';\n    },\n\n    /**\n     * Fetches the number of the last line executed inside this call's scope\n     *\n     * @returns {number|null}\n     */\n    getLastLine: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the scope inside the called function\n     *\n     * @returns {Scope}\n     */\n    getScope: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the static class introduced by this call's scope. If null,\n     * the call was a forwarding call, and so the parent call's static class should be used\n     *\n     * @returns {Class|null}\n     */\n    getStaticClass: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the ObjectValue that is the current `$this` object, if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the path to the file this call was made from, suitable for stack traces (so without any eval context)\n     *\n     * @returns {string|null}\n     */\n    getTraceFilePath: function () {\n        return '(JavaScript code)';\n    },\n\n    /**\n     * Registers a finder for looking up the current/last line number inside the called function\n     */\n    instrument: function () {\n        throw new Error('Unable to instrument an FFI Call');\n    },\n\n    /**\n     * Determines whether this call is a userland call (from inside PHP-land) or not\n     *\n     * @returns {boolean}\n     */\n    isUserland: function () {\n        return false;\n    },\n\n    /**\n     * Determines whether all errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesErrors: function () {\n        return false;\n    },\n\n    /**\n     * Determines whether own errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesOwnErrors: function () {\n        return false;\n    }\n});\n\nmodule.exports = Call;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * Provides a proxy for accessing all data/methods of an instance of a PHP-defined class.\n     *\n     * Objects that implement __call(), __get(), __set() or define a public property\n     * anywhere along their class ancestry could benefit from being unwrapped to a PHPObject\n     * as this will permit access to those from native JS code, at the expense of a more complex API.\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {NativeCaller} nativeCaller\n     * @param {ObjectValue} objectValue\n     * @constructor\n     */\n    function PHPObject(\n        valueFactory,\n        nativeCaller,\n        objectValue\n    ) {\n        /**\n         * @type {NativeCaller}\n         */\n        this.nativeCaller = nativeCaller;\n        /**\n         * @type {ObjectValue}\n         */\n        this.objectValue = objectValue;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(PHPObject.prototype, {\n        /**\n         * Calls the specified method of the wrapped ObjectValue, returning a Promise.\n         * Allows JS-land code to call objects exported/returned from PHP-land,\n         * where asynchronous (blocking) operation is possible.\n         *\n         * @param {string} methodName\n         * @returns {Promise<*>|*}\n         */\n        callMethod: function (methodName) {\n            var phpObject = this,\n                // Arguments will be from JS-land, so coerce any to internal PHP value objects\n                args = _.map([].slice.call(arguments, 1), function (arg) {\n                    return phpObject.valueFactory.coerce(arg);\n                });\n\n            return phpObject.nativeCaller.callMethod(phpObject.objectValue, methodName, args);\n        },\n\n        /**\n         * Fetches the unwrapped ObjectValue that this PHPObject was created from\n         *\n         * @returns {ObjectValue}\n         */\n        getObjectValue: function () {\n            return this.objectValue;\n        }\n    });\n\n    return PHPObject;\n}, {strict: true});\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject         = require(\"../is-object\")\n  , value            = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty   = Object.defineProperty\n  , nullDesc         = { configurable: true, enumerable: false, writable: true, value: undefined }\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n})(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n);\n\nrequire(\"../create\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) { return (isValue(value) && map[typeof value]) || false; };\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isValue       = require(\"../value/is\")\n  , isObject      = require(\"../object/is\")\n  , stringCoerce  = require(\"../string/coerce\")\n  , toShortString = require(\"./to-short-string\");\n\nvar resolveMessage = function (message, value) {\n\treturn message.replace(\"%v\", toShortString(value));\n};\n\nmodule.exports = function (value, defaultMessage, inputOptions) {\n\tif (!isObject(inputOptions)) throw new TypeError(resolveMessage(defaultMessage, value));\n\tif (!isValue(value)) {\n\t\tif (\"default\" in inputOptions) return inputOptions[\"default\"];\n\t\tif (inputOptions.isOptional) return null;\n\t}\n\tvar errorMessage = stringCoerce(inputOptions.errorMessage);\n\tif (!isValue(errorMessage)) errorMessage = defaultMessage;\n\tthrow new TypeError(resolveMessage(errorMessage, value));\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    isPromise = require('is-promise'),\n    Promise = require('lie');\n\n/**\n * Represents a result returned from JS-land back to PHP-land. This allows\n * a result that may be fetched asynchronously to be used in async mode\n * while also providing a way to fetch it synchronously in sync mode.\n *\n * @param {Function} syncCallback\n * @param {Function=} asyncCallback\n * @param {Resumable=} pausable\n * @constructor\n */\nfunction Result(syncCallback, asyncCallback, pausable) {\n    /**\n     * @type {Function|null}\n     */\n    this.asyncCallback = asyncCallback;\n    /**\n     * @type {Resumable|null}\n     */\n    this.pausable = pausable || null;\n    /**\n     * @type {Function}\n     */\n    this.syncCallback = syncCallback;\n}\n\n_.extend(Result.prototype, {\n    /**\n     * Fetches the result asynchronously. If only a synchronous callback is provided,\n     * it will be used but then its result will be wrapped in a resolved Promise.\n     *\n     * @returns {Promise}\n     */\n    getAsync: function () {\n        var promise;\n\n        if (this.asyncCallback) {\n            // We have an async callback - it must return a valid Promise (thenable)\n            promise = this.asyncCallback();\n\n            if (!isPromise(promise)) {\n                throw new Error('Async callback did not return a Promise');\n            }\n\n            return promise;\n        }\n\n        // Otherwise if no async callback was provided, fall back to using the sync one\n        // but maintain the same API by wrapping it in a resolved Promise\n        return Promise.resolve(this.getSync());\n    },\n\n    /**\n     * Fetches the result synchronously\n     *\n     * @returns {*}\n     */\n    getSync: function () {\n        return this.syncCallback();\n    },\n\n    /**\n     * Resolves this FFI result to a value, awaiting the Promise\n     * returned by the async callback if needed\n     *\n     * @param {ValueFactory} valueFactory\n     * @return {Value}\n     */\n    resolve: function (valueFactory) {\n        var result = this,\n            pause;\n\n        if (!result.pausable) {\n            /**\n             * We're in either sync or psync mode - use the synchronous fetcher\n             * as we are unable to wait for an asynchronous operation to complete.\n             * Remember that we still need to coerce the result as needed,\n             * in case the fetcher returns an unwrapped native JS value.\n             */\n            return valueFactory.coerce(result.getSync());\n        }\n\n        pause = result.pausable.createPause();\n\n        // Wait for the returned promise to resolve or reject before continuing\n        result.getAsync().then(function (resultValue) {\n            // Remember we still need to coerce the result as above\n            pause.resume(valueFactory.coerce(resultValue));\n        }, function (error) {\n            pause.throw(error);\n        });\n\n        return pause.now();\n    }\n});\n\nmodule.exports = Result;\n","module.exports = isPromise;\nmodule.exports.default = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * @constructor\n */\nfunction ValueStorage() {\n    /**\n     * @type {WeakMap<Object|*, ObjectValue>}\n     */\n    this.exportToObjectValueMap = new WeakMap();\n    /**\n     * @type {WeakMap<ObjectValue, Object|*>}\n     */\n    this.objectValueToExportMap = new WeakMap();\n    /**\n     * @type {WeakMap<object, {objectValue: ObjectValue, useSyncApiAlthoughPsync: boolean}>}\n     */\n    this.proxyPrivatesMap = new WeakMap();\n}\n\n_.extend(ValueStorage.prototype, {\n    /**\n     * Fetches the cached export for the given object value\n     * (cached both for identity and to save on memory usage)\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {Object|*}\n     */\n    getExportForObjectValue: function (objectValue) {\n        return this.objectValueToExportMap.get(objectValue);\n    },\n\n    /**\n     * Fetches the original ObjectValue that was exported\n     *\n     * @param {Object|*} exportedValue\n     * @returns {ObjectValue}\n     */\n    getObjectValueForExport: function (exportedValue) {\n        return this.exportToObjectValueMap.get(exportedValue);\n    },\n\n    /**\n     * Fetches the private data for the given native proxy\n     *\n     * @param {ProxyClass} proxy\n     * @returns {{objectValue: ObjectValue, useSyncApiAlthoughPsync: boolean}}\n     */\n    getPrivatesForNativeProxy: function (proxy) {\n        return this.proxyPrivatesMap.get(proxy);\n    },\n\n    /**\n     * Determines whether we have a cached export for an object value\n     * (cached both for identity and to save on memory usage)\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {boolean}\n     */\n    hasExportForObjectValue: function (objectValue) {\n        return this.objectValueToExportMap.has(objectValue);\n    },\n\n    /**\n     * Determines whether we have an original ObjectValue for the given export value\n     *\n     * @param {Object} exportedValue\n     * @returns {boolean}\n     */\n    hasObjectValueForExport: function (exportedValue) {\n        return this.exportToObjectValueMap.has(exportedValue);\n    },\n\n    /**\n     * Determines whether there is private data for the given native proxy\n     * (ie. whether it is actually a valid native proxy)\n     *\n     * @param {ProxyClass} proxy\n     * @returns {boolean}\n     */\n    hasPrivatesForNativeProxy: function (proxy) {\n        return this.proxyPrivatesMap.has(proxy);\n    },\n\n    /**\n     * Stores the given export for the specified object value\n     *\n     * @param {ObjectValue} objectValue\n     * @param {Object|*} exportedValue\n     */\n    setExportForObjectValue: function (objectValue, exportedValue) {\n        var storage = this;\n\n        storage.objectValueToExportMap.set(objectValue, exportedValue);\n    },\n\n    /**\n     * Stores an export for an object value (note that an object value may be unwrapped\n     * to several exports, eg. for psync mode, both an async and a sync API proxy)\n     *\n     * @param {Object|*} exportedValue\n     * @param {ObjectValue} objectValue\n     */\n    setObjectValueForExport: function (exportedValue, objectValue) {\n        this.exportToObjectValueMap.set(exportedValue, objectValue);\n    },\n\n    /**\n     * Stores the private data for the given native proxy\n     *\n     * @param {ProxyClass} proxy\n     * @param {{objectValue: ObjectValue, useSyncApiAlthoughPsync: boolean}} privates\n     */\n    setPrivatesForNativeProxy: function (proxy, privates) {\n        var storage = this;\n\n        if (storage.proxyPrivatesMap.has(proxy)) {\n            throw new Error('Proxy already has privates set');\n        }\n\n        storage.proxyPrivatesMap.set(proxy, privates);\n    }\n});\n\nmodule.exports = ValueStorage;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    Exception = phpCommon.Exception;\n\n/**\n * Represents a failed load operation. Loads may be made by an include/require or an eval(...)\n *\n * @param {Error} previousError\n * @constructor\n */\nfunction LoadFailedException(previousError) {\n    Exception.call(this, 'Load failed' + (previousError ? ' :: ' + previousError.message : ''));\n\n    /**\n     * @type {Error}\n     */\n    this.previousError = previousError;\n}\n\nutil.inherits(LoadFailedException, Exception);\n\n_.extend(LoadFailedException.prototype, {\n    /**\n     * Fetches the previous error or exception that caused the load to fail\n     *\n     * @returns {Error}\n     */\n    getPreviousError: function () {\n        return this.previousError;\n    }\n});\n\nmodule.exports = LoadFailedException;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    util,\n    Value\n) {\n    function ExitValue(factory, callStack, statusValue) {\n        Value.call(this, factory, callStack, 'exit', null);\n\n        this.statusValue = statusValue;\n    }\n\n    util.inherits(ExitValue, Value);\n\n    _.extend(ExitValue.prototype, {\n        getStatus: function () {\n            var value = this;\n\n            return value.statusValue ? value.statusValue.getNative() : 0;\n        }\n    });\n\n    return ExitValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error(functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * @interface\n */\nfunction OutputBufferInterface() {\n    throw new Error('OutputBufferInterface cannot be instantiated');\n}\n\n_.extend(OutputBufferInterface.prototype, {\n    /**\n     * Discards the contents of this buffer without flushing it through\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    clean: throwUnimplemented('clean'),\n\n    /**\n     * Writes the contents of this buffer through to the next buffer and then discards them from this buffer\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    flush: throwUnimplemented('flush'),\n\n    /**\n     * Fetches the current contents of this buffer if it is actually a buffering one\n     *\n     * @returns {string|null}\n     */\n    getContents: throwUnimplemented('getContents'),\n\n    /**\n     * Fetches the depth of this buffer\n     *\n     * @returns {number}\n     */\n    getDepth: throwUnimplemented('getDepth'),\n\n    /**\n     * Writes data to this buffer, storing it for future use\n     *\n     * @param {string} data\n     */\n    write: throwUnimplemented('write')\n});\n\nmodule.exports = OutputBufferInterface;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Reference/Null'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    NullReference,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function StringValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'string', value);\n    }\n\n    util.inherits(StringValue, Value);\n\n    _.extend(StringValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToString(this);\n        },\n\n        addToBoolean: function (booleanValue) {\n            return this.coerceToNumber().add(booleanValue);\n        },\n\n        /**\n         * Calls a function or static method based on the contents of the string\n         *\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        call: function (args, namespaceOrNamespaceScope) {\n            var classNameValue,\n                match,\n                methodNameValue,\n                value = this;\n\n            if (value.value.indexOf('::') > -1) {\n                /**\n                 * Handle static method call format:\n                 *\n                 *     $func = 'My\\Stuff\\MyClass::myStaticMethod';\n                 *     $func(...);\n                 */\n                match = value.value.match(/(.*)::(.*)/);\n\n                classNameValue = value.factory.createString(match[1]);\n                methodNameValue = value.factory.createString(match[2]);\n\n                return classNameValue.callStaticMethod(\n                    methodNameValue,\n                    args,\n                    namespaceOrNamespaceScope\n                );\n            }\n\n            // Otherwise must just be the name of a function\n            return namespaceOrNamespaceScope.getGlobalNamespace().getFunction(value.value).apply(null, args);\n        },\n\n        /**\n         * Calls a static method of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @param {bool=} isForwarding eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value}\n         */\n        callStaticMethod: function (nameValue, args, namespaceOrNamespaceScope, isForwarding) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.callMethod(nameValue.getNative(), args, null, null, null, !!isForwarding);\n        },\n\n        coerceToBoolean: function () {\n            return this.factory.createBoolean(this.value !== '' && this.value !== '0');\n        },\n\n        /**\n         * Coerces this string to a float value\n         *\n         * @returns {FloatValue}\n         */\n        coerceToFloat: function () {\n            var value = this;\n\n            return value.factory.createFloat(/^(\\d|-[\\d.])/.test(value.value) ? parseFloat(value.value) : 0);\n        },\n\n        /**\n         * Coerces this string to an integer value\n         *\n         * @returns {IntegerValue}\n         */\n        coerceToInteger: function () {\n            var value = this;\n\n            return value.factory.createInteger(/^(\\d|-[\\d.])/.test(value.value) ? parseInt(value.value, 10) : 0);\n        },\n\n        coerceToKey: function () {\n            return this;\n        },\n\n        /**\n         * Coerces this string to either a FloatValue or IntegerValue, depending on its contents\n         *\n         * @returns {FloatValue|IntegerValue}\n         */\n        coerceToNumber: function () {\n            var value = this,\n                isFloat = /^-?\\d*(\\.|[eE][-+]?)\\d/.test(value.value);\n\n            if (isFloat) {\n                return value.coerceToFloat();\n            } else {\n                return value.coerceToInteger();\n            }\n        },\n\n        coerceToString: function () {\n            return this;\n        },\n\n        /**\n         * Divides this string by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByString(this);\n        },\n\n        /**\n         * Divides a float by this string\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        divideByFloat: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.coerceToNumber().getNative();\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() / divisor);\n        },\n\n        /**\n         * Divides a non-array value by this string\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisorValue = rightValue.coerceToNumber(),\n                quotient;\n\n            if (divisorValue.getNative() === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            quotient = coercedLeftValue.getNative() / divisorValue.getNative();\n\n            // Return result as a float if needed, otherwise keep as integer\n            return Math.round(quotient) !== quotient || divisorValue.getType() === 'float' ?\n                rightValue.factory.createFloat(quotient) :\n                rightValue.factory.createInteger(quotient);\n        },\n\n        /**\n         * Formats the string for display in stack traces etc.\n         *\n         * @returns {string}\n         */\n        formatAsString: function () {\n            // To match Zend's output, simply wrap the string value in single-quotes,\n            // leaving any embedded single-quotes unescaped\n            var textValue = this.value;\n\n            if (textValue.length > 15) {\n                // Truncate long strings to improve readability (as per Zend's output)\n                textValue = textValue.substr(0, 15) + '...';\n            }\n\n            return '\\'' + textValue + '\\'';\n        },\n\n        getCallableName: function () {\n            // Strip any leading backslash off to normalise\n            return this.value.replace(/^\\\\/, '');\n        },\n\n        /**\n         * Fetches the value of a constant from the class this string refers to\n         *\n         * @param {string} name\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getConstantByName: function (name, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.getConstantByName(name);\n        },\n\n        getElementByKey: function (key) {\n            var keyValue,\n                value = this;\n\n            key = key.coerceToKey(value.callStack);\n\n            if (!key) {\n                // Could not be coerced to a key: error will already have been handled, just return NULL\n                return new NullReference(value.factory);\n            }\n\n            keyValue = key.getNative();\n\n            return value.factory.createString(value.value.charAt(keyValue));\n        },\n\n        getLength: function () {\n            return this.value.length;\n        },\n\n        /**\n         * Fetches the value of a static property of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getStaticPropertyByName: function (nameValue, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.getStaticPropertyByName(nameValue.getNative());\n        },\n\n        /**\n         * Creates an instance of the class this string contains the FQCN of\n         *\n         * @param {Value[]} args\n         * @param {NamespaceScope} namespaceScope\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args, namespaceScope) {\n            var value = this,\n                classObject = namespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.instantiate(args);\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfString(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function (globalNamespace) {\n            // Must just be the name of a function or static method - as this is a normal string\n            // and not a bareword, it should just be resolved as a FQCN\n            // and not relative to the current namespace scope\n\n            var className,\n                classObject,\n                match,\n                methodName,\n                value = this;\n\n            if (value.value.indexOf('::') > -1) {\n                /**\n                 * Handle static method call format:\n                 *\n                 *     $func = 'My\\Stuff\\MyClass::myStaticMethod';\n                 *     $func(...);\n                 */\n                match = value.value.match(/(.*)::(.*)/);\n\n                className = match[1];\n                methodName = match[2];\n\n                if (!globalNamespace.hasClass(className)) {\n                    return false;\n                }\n\n                classObject = globalNamespace.getClass(className);\n\n                return classObject.getMethodSpec(methodName) !== null;\n            }\n\n            return globalNamespace.hasFunction(value.value);\n        },\n\n        /**\n         * Determines whether this value is classed as \"empty\" or not\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            var value = this;\n\n            // NB: string(\"0.0\") is _not_ classed as empty\n            return value.value === '' || value.value === '0';\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToString(this);\n        },\n\n        isEqualToNull: function () {\n            var value = this;\n\n            return value.factory.createBoolean(value.getNative() === '');\n        },\n\n        isEqualToObject: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToString: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(leftValue.value === rightValue.value);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Returns true if the string is numeric, false otherwise\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return /(\\d+(\\.)?)?\\d+([Ee][+-]\\d+)?/.test(this.value);\n        },\n\n        isTheClassOfArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfBoolean: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfFloat: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfInteger: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfNull: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfObject: function (objectValue) {\n            var rightValue = this;\n\n            return rightValue.factory.createBoolean(\n                objectValue.classIs(rightValue.value)\n            );\n        },\n\n        isTheClassOfString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        /**\n         * Multiplies this string by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByString(this);\n        },\n\n        /**\n         * Multiplies a float by this string\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        multiplyByFloat: function (leftValue) {\n            var coercedMultiplicandValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.coerceToNumber().getNative();\n\n            return rightValue.factory.createFloat(coercedMultiplicandValue.getNative() * multiplier);\n        },\n\n        /**\n         * Multiplies a non-array value by this string\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedMultiplicandValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                coercedMultiplierValue = rightValue.coerceToNumber(),\n                product = coercedMultiplicandValue.getNative() * coercedMultiplierValue.getNative();\n\n            // Return result as a float if either coerced operand is a float, otherwise keep as integer\n            return coercedMultiplicandValue.getType() === 'float' || coercedMultiplierValue.getType() === 'float' ?\n                rightValue.factory.createFloat(product) :\n                rightValue.factory.createInteger(product);\n        },\n\n        onesComplement: function () {\n            return this.factory.createString('?');\n        }\n    });\n\n    return StringValue;\n}, {strict: true});\n","<?php\n\nuse MyUniterProjects\\MarkdownPluginExample\\Markdown;\n\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\n$markdown = new Markdown();\n\n$domDocument->getElementById('main')->innerHTML = $markdown->getHtml();\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * API entry point for creating Loaders for compiled PHP modules to use\n *\n * @param {class} FileSystem\n * @param {class} Loader\n * @param {class} ModuleRepository\n * @param {EnvironmentProvider} environmentProvider\n * @param {ConfigImporter} phpConfigImporter\n * @param {Object} requireCache\n * @constructor\n */\nfunction API(\n    FileSystem,\n    Loader,\n    ModuleRepository,\n    environmentProvider,\n    phpConfigImporter,\n    requireCache\n) {\n    /**\n     * @type {EnvironmentProvider}\n     */\n    this.environmentProvider = environmentProvider;\n    /**\n     * @type {class}\n     */\n    this.FileSystem = FileSystem;\n    /**\n     * @type {class}\n     */\n    this.Loader = Loader;\n    /**\n     * @type {class}\n     */\n    this.ModuleRepository = ModuleRepository;\n    /**\n     * @type {ConfigImporter}\n     */\n    this.phpConfigImporter = phpConfigImporter;\n    /**\n     * @type {Object}\n     */\n    this.requireCache = requireCache;\n}\n\n_.extend(API.prototype, {\n    /**\n     * Creates a new, isolated Loader along with a FileSystem\n     * and PHPCore/PHPRuntime environment for compiled PHP modules to use\n     *\n     * @returns {Loader}\n     */\n    createLoader: function () {\n        var api = this,\n            moduleRepository = new api.ModuleRepository(api.requireCache),\n            fileSystem = new api.FileSystem(moduleRepository);\n\n        return new api.Loader(moduleRepository, fileSystem, api.environmentProvider, api.phpConfigImporter);\n    }\n});\n\nmodule.exports = API;\n","'use strict';\n\nvar REGEX = /[|\\\\{}()[\\]^$+*?.]/g;\n\n// From https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\nmodule.exports = function (string) {\n    if (typeof string !== 'string') {\n        throw new TypeError('Expected a string');\n    }\n\n    return string.replace(REGEX,  '\\\\$&');\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./each'),\n    forOwn = require('./forOwn');\n\nmodule.exports = function (Object) {\n    return Object.assign || function (object) {\n        var sources = [].slice.call(arguments, 1);\n\n        each(sources, function (source) {\n            forOwn(source, function (value, key) {\n                object[key] = value;\n            });\n        });\n\n        return object;\n    };\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./each');\n\nmodule.exports = function (collection, iteratee, thisArg) {\n    var result = [];\n\n    each(collection, function (value, key) {\n        if (iteratee.call(thisArg, value, key, collection)) {\n            result.push(value);\n        }\n    });\n\n    return result;\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'boolean';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'function';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'number';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar getType = require('./getType');\n\nmodule.exports = function (object) {\n    return getType(object) === 'Object';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'string';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./each'),\n    map = Array.prototype.map;\n\n/**\n * Faster implementation using native Array.map(...) where supported\n *\n * @param {Array} collection\n * @param {Function} iteratee\n * @param {*} thisArg\n * @return {Array}\n */\nfunction fasterMap(collection, iteratee, thisArg) {\n    return collection !== null && typeof collection !== 'undefined' ?\n        map.call(collection, iteratee.bind(thisArg)) :\n        [];\n}\n\n/**\n * Manual implementation where Array.map(...) is not supported\n *\n * @param {Array} collection\n * @param {Function} iteratee\n * @param {*} thisArg\n * @return {Array}\n */\nfunction slowerMap(collection, iteratee, thisArg) {\n    var result = [];\n\n    each(collection, function (value, key) {\n        result[key] = iteratee.call(thisArg, value, key, collection);\n    });\n\n    return result;\n}\n\nmodule.exports = function (Array) {\n    return Array.prototype.map ? fasterMap : slowerMap;\n};\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the Environment for a loader\n *\n * @param {Object} phpRuntime\n * @param {Performance} performance\n * @param {IO} io\n * @constructor\n */\nfunction EnvironmentProvider(phpRuntime, performance, io) {\n    /**\n     * @type {IO}\n     */\n    this.io = io;\n    /**\n     * @type {Performance}\n     */\n    this.performance = performance;\n    /**\n     * @type {Object}\n     */\n    this.phpRuntime = phpRuntime;\n}\n\n_.extend(EnvironmentProvider.prototype, {\n    /**\n     * Creates a new Environment\n     *\n     * @param {FileSystem} fileSystem\n     * @param {Object} phpifyConfig\n     * @param {Object} phpCoreConfig\n     * @returns {Environment}\n     */\n    createEnvironment: function (fileSystem, phpifyConfig, phpCoreConfig) {\n        var provider = this,\n            environmentOptions = Object.assign({}, phpCoreConfig, {\n                fileSystem: fileSystem,\n                include: function (filePath, promise) {\n                    var result;\n\n                    try {\n                        result = fileSystem.getModuleFactory(filePath);\n                    } catch (error) {\n                        promise.reject(error);\n                        return;\n                    }\n\n                    promise.resolve(result);\n                },\n                performance: provider.performance\n            }),\n            addons = environmentOptions.addons || [],\n            environment;\n\n        delete environmentOptions.addons;\n\n        environment = provider.phpRuntime.createEnvironment(\n            environmentOptions,\n            addons\n        );\n\n        provider.io.install(environment, phpifyConfig);\n\n        return environment;\n    }\n});\n\nmodule.exports = EnvironmentProvider;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    path = require('path'),\n    Promise = require('lie');\n\n/**\n * Virtual FileSystem for use in the browser with compiled PHP modules\n *\n * @param {ModuleRepository} moduleRepository\n * @constructor\n */\nfunction FileSystem(moduleRepository) {\n    /**\n     * @type {ModuleRepository}\n     */\n    this.moduleRepository = moduleRepository;\n}\n\n_.extend(FileSystem.prototype, {\n    /**\n     * Fetches the module wrapper factory function for a compiled PHP module,\n     * if it exists in the compiled bundle\n     *\n     * @param {string} filePath\n     * @returns {Function}\n     * @throws {Error} Throws when the specified compiled module does not exist\n     */\n    getModuleFactory: function (filePath) {\n        var fileSystem = this;\n\n        filePath = fileSystem.realPath(filePath);\n\n        // TODO: If a PHP source file has been written to the virtual FS, and eval-ish support\n        //       is installed, allow the dynamically-generated module to be compiled and run\n\n        return fileSystem.moduleRepository.getModuleFactory(filePath);\n    },\n\n    /**\n     * Determines whether the specified directory path exists in the FileSystem.\n     * Currently always returns true, as we cannot be sure from the info we have\n     *\n     * @returns {boolean}\n     */\n    isDirectory: function () {\n        // TODO: Implement once we have support for non-PHP files in the VFS\n        return false;\n    },\n\n    /**\n     * Determines whether the specified file exists in the FileSystem.\n     * Currently only compiled PHP modules can be in the FileSystem, so only those\n     * may be detected.\n     *\n     * @param {string} filePath\n     * @returns {boolean}\n     */\n    isFile: function (filePath) {\n        var fileSystem = this;\n\n        filePath = fileSystem.realPath(filePath);\n\n        return fileSystem.moduleRepository.moduleExists(filePath);\n    },\n\n    /**\n     * Opens a Stream for the specified file asynchronously\n     *\n     * @param {string} filePath\n     * @returns {Promise} Resolves with a Stream for the file on success, rejects on failure\n     */\n    open: function (filePath) {\n        return new Promise(function (resolve, reject) {\n            reject(new Error('Could not open \"' + filePath + '\" :: Streams are not currently supported by PHPify'));\n        });\n    },\n\n    /**\n     * Opens a Stream for the specified file synchronously\n     *\n     * @param {string} filePath\n     * @returns {Stream}\n     */\n    openSync: function (filePath) {\n        throw new Error('Could not open \"' + filePath + '\" :: Streams are not currently supported by PHPify');\n    },\n\n    /**\n     * Converts the specified module path to a full one,\n     * normalizing any parent- or current-directory symbols\n     *\n     * @param {string} filePath\n     * @returns {string}\n     */\n    realPath: function (filePath) {\n        filePath = path.normalize(filePath);\n\n        // Strip any leading slash, as the virtual FS does not expect it\n        filePath = filePath.replace(/^\\/+/, '');\n\n        return filePath;\n    },\n\n    /**\n     * Deletes a file or folder asynchronously\n     *\n     * @param {string} filePath\n     * @returns {Promise} Resolves on success, rejects on failure\n     */\n    unlink: function (filePath) {\n        return new Promise(function (resolve, reject) {\n            reject(new Error('Could not delete \"' + filePath + '\" :: not currently supported by PHPify'));\n        });\n    },\n\n    /**\n     * Deletes a file or folder synchronously\n     *\n     * @param {string} filePath\n     */\n    unlinkSync: function (filePath) {\n        throw new Error('Could not delete \"' + filePath + '\" :: not currently supported by PHPify');\n    }\n});\n\nmodule.exports = FileSystem;\n","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Hooks Uniter's PHP stdout and stderr streams up to the console, if available and enabled\n *\n * @param {Console} console\n * @constructor\n */\nfunction IO(console) {\n    /**\n     * @type {Console}\n     */\n    this.console = console;\n}\n\n_.extend(IO.prototype, {\n    /**\n     * Hooks the IO for a PHP engine up to the console\n     *\n     * @param {Environment} environment\n     * @param {Object} phpifyConfig\n     */\n    install: function (environment, phpifyConfig) {\n        var io = this;\n\n        if (!io.console) {\n            // Console is not available - nothing to do\n            return;\n        }\n\n        if (phpifyConfig.stdio === false) {\n            // Standard I/O has been disabled in config - nothing to do\n            return;\n        }\n\n        environment.getStdout().on('data', function (data) {\n            io.console.info(data);\n        });\n\n        environment.getStderr().on('data', function (data) {\n            io.console.warn(data);\n        });\n    }\n});\n\nmodule.exports = IO;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Public API for compiled PHP modules\n *\n * @param {ModuleRepository} moduleRepository\n * @param {FileSystem} fileSystem\n * @param {EnvironmentProvider} environmentProvider\n * @param {ConfigImporterInterface} phpConfigImporter\n * @constructor\n */\nfunction Loader(\n    moduleRepository,\n    fileSystem,\n    environmentProvider,\n    phpConfigImporter\n) {\n    /**\n     * @type {Environment|null} Lazily-initialised by .getEnvironment()\n     */\n    this.environment = null;\n    /**\n     * @type {EnvironmentProvider}\n     */\n    this.environmentProvider = environmentProvider;\n    /**\n     * @type {FileSystem}\n     */\n    this.fileSystem = fileSystem;\n    /**\n     * @type {ModuleRepository}\n     */\n    this.moduleRepository = moduleRepository;\n    /**\n     * @type {ConfigImporterInterface}\n     */\n    this.phpConfigImporter = phpConfigImporter;\n    /**\n     * @type {Object} Populated from the Initialiser by .configure(...)\n     */\n    this.phpCoreConfig = {};\n    /**\n     * @type {Object} Populated from the Initialiser by .configure(...)\n     */\n    this.phpifyConfig = {};\n}\n\n_.extend(Loader.prototype, {\n    /**\n     * Executes zero or more bootstrap modules within the environment.\n     * Must be done as a separate method call from .installModules(...), as the PHP module factory fetcher\n     * function installed needs to be available here, because bootstrap modules may themselves\n     * be PHP modules (useful for including Composer's autoloader, for example)\n     *\n     * @param {Function[]} bootstraps\n     * @returns {Loader} For chaining\n     */\n    bootstrap: function (bootstraps) {\n        var loader = this;\n\n        // Now execute any bootstraps against the environment, before any modules run\n        bootstraps.forEach(function (bootstrap) {\n            // If the bootstrap returned a function, invoke it with the environment,\n            // otherwise do nothing (the bootstrap module has already had the chance to run)\n            if (typeof bootstrap === 'function') {\n                bootstrap(loader.getEnvironment());\n            }\n        });\n\n        return loader;\n    },\n\n    /**\n     * Populates the PHPify and PHPCore configurations\n     *\n     * @param {Object} phpifyConfig\n     * @param {Object[]} phpCoreConfigs\n     * @returns {Loader} For chaining\n     */\n    configure: function (phpifyConfig, phpCoreConfigs) {\n        var loader = this;\n\n        loader.phpifyConfig = phpifyConfig;\n        loader.phpCoreConfig = loader.phpConfigImporter\n            .importLibrary({configs: phpCoreConfigs})\n            .mergeAll();\n\n        return loader;\n    },\n\n    /**\n     * Fetches the Environment for this loader, creating it if necessary\n     *\n     * @return {Environment}\n     */\n    getEnvironment: function () {\n        var loader = this;\n\n        if (!loader.environment) {\n            loader.environment = loader.environmentProvider.createEnvironment(\n                loader.fileSystem,\n                loader.phpifyConfig,\n                loader.phpCoreConfig\n            );\n        }\n\n        return loader.environment;\n    },\n\n    /**\n     * Fetches the module wrapper factory function for a compiled PHP module,\n     * if it exists in the compiled bundle\n     *\n     * @param {string} filePath\n     * @returns {Function}\n     * @throws {Error} Throws when the specified compiled module does not exist\n     */\n    getModuleFactory: function (filePath) {\n        return this.moduleRepository.getModuleFactory(filePath);\n    },\n\n    /**\n     * Installs a function into the loader for fetching the compiled module wrappers of PHP modules\n     *\n     * @param {Function} phpModuleFactoryFetcher\n     * @returns {Loader} For chaining\n     */\n    installModules: function (phpModuleFactoryFetcher) {\n        var loader = this;\n\n        loader.moduleRepository.init(phpModuleFactoryFetcher);\n\n        return loader;\n    },\n\n    /**\n     * Determines whether this loader has already been initialised\n     * (whether the Environment has been created, lazily, when loading a PHP module)\n     *\n     * @return {boolean}\n     */\n    isInitialised: function () {\n        return this.environment !== null;\n    },\n\n    /**\n     * Configures the environment and path for the given module, and either executes it\n     * and exports the result or just exports the module factory depending on mode.\n     * Used by all compiled PHP modules.\n     *\n     * @param {string} filePath\n     * @param {Object} module CommonJS module object\n     * @param {Function} moduleFactory\n     */\n    load: function (filePath, module, moduleFactory) {\n        var loader = this;\n\n        module.exports = loader.moduleRepository.load(filePath, module.id, moduleFactory, loader.getEnvironment());\n    }\n});\n\nmodule.exports = Loader;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty;\n\n/**\n * Contains a cache of configured PHP modules and the module factory fetcher\n * to use for both fetching any as-yet unloaded modules and determining their existence\n *\n * @param {Object} requireCache\n * @constructor\n */\nfunction ModuleRepository(requireCache) {\n    /**\n     * @type {Object.<string, {id: string|number, factory: Function}>} PHP module factories, indexed by path\n     */\n    this.configuredModules = {};\n    /**\n     * @type {boolean} Indicates that a module's factory function should be returned without execution\n     */\n    this.loadingModuleFactoryOnly = false;\n    /**\n     * A special function, generated by the PHP module compiler,\n     * that can be called to fetch the module wrapper of any compiled modules\n     * or return true/false to determine whether they exist.\n     * Note that this is set by the special Initialiser module\n     * generated at compile-time (see Transformer)\n     *\n     * @type {Function|null}\n     */\n    this.moduleFactoryFetcher = null;\n    /**\n     * @type {Object} require.cache\n     */\n    this.requireCache = requireCache;\n}\n\n_.extend(ModuleRepository.prototype, {\n    /**\n     * Fetches the module wrapper factory function for a compiled PHP module,\n     * if it exists in the compiled bundle\n     *\n     * @param {string} filePath\n     * @returns {Function}\n     * @throws {Error} Throws when the specified compiled module does not exist\n     */\n    getModuleFactory: function (filePath) {\n        var cachePath,\n            configuredModule,\n            configuredModuleFactory,\n            repository = this;\n\n        if (hasOwn.call(repository.configuredModules, filePath)) {\n            // Module has already been configured: return the cached module factory\n            return repository.configuredModules[filePath].factory;\n        }\n\n        // Module has not yet been loaded: require it via the fetcher function. The transpiled module\n        // will call back into the loader via `.load(...)` to configure it.\n        // The `loadingModuleFactoryOnly` flag ensures that the module is not executed,\n        // only its module factory is exported instead\n        repository.loadingModuleFactoryOnly = true;\n        configuredModuleFactory = repository.moduleFactoryFetcher(filePath, false);\n        repository.loadingModuleFactoryOnly = false;\n\n        if (configuredModuleFactory === null) {\n            throw new Error('File \"' + filePath + '\" is not in the compiled PHP file map');\n        }\n\n        // By this point, the require()'d module should have called back via .prepare()\n        // [via <Public API::Loader>.run()] and so its wrapper should be in the\n        if (!hasOwn.call(repository.configuredModules, filePath)) {\n            throw new Error('Unexpected state: module \"' + filePath + '\" should have been loaded by now');\n        }\n        if (repository.configuredModules[filePath].factory !== configuredModuleFactory) {\n            throw new Error('Unexpected state: factory for module \"' + filePath + '\" loaded incorrectly');\n        }\n\n        cachePath = './' + filePath;\n        configuredModule = repository.configuredModules[filePath];\n\n        if (!hasOwn.call(repository.requireCache, configuredModule.id)) {\n            throw new Error(\n                'Expected path \"' + cachePath + '\" (id \"' + configuredModule.id + '\") to be in require.cache, ' +\n                'but it was not'\n            );\n        }\n\n        // Delete the module's exports object from the cache: it was not executed as we only wanted\n        // to extract the factory function, so that will have been stored instead.\n        // If the module's factory function is ever needed again, it will be fetched from the\n        // .configuredModules[...] cache instead\n        delete repository.requireCache[configuredModule.id];\n\n        return repository.configuredModules[filePath].factory;\n    },\n\n    /**\n     * Initializes the repository with a function\n     * for fetching the compiled module wrappers of PHP modules\n     *\n     * @param {Function} phpModuleFactoryFetcher\n     */\n    init: function (phpModuleFactoryFetcher) {\n        this.moduleFactoryFetcher = phpModuleFactoryFetcher;\n    },\n\n    /**\n     * Configures the environment and path for the given module, and either executes it\n     * and returns the result or just returns the module factory depending on mode.\n     * Used by all compiled PHP modules\n     *\n     * @param {string} filePath\n     * @param {string|number} moduleID\n     * @param {Function} moduleFactory\n     * @param {Environment} environment\n     * @returns {Function}\n     */\n    load: function (filePath, moduleID, moduleFactory, environment) {\n        var repository = this,\n            configuredModuleFactory = moduleFactory.using({path: filePath}, environment);\n\n        repository.configuredModules[filePath] = {\n            id: moduleID,\n            factory: configuredModuleFactory\n        };\n\n        if (repository.loadingModuleFactoryOnly) {\n            // Only the factory is needed, don't execute\n            return configuredModuleFactory;\n        }\n\n        // Create, execute and return the result of the module\n        return configuredModuleFactory().execute();\n    },\n\n    /**\n     * Determines whether the module with the given path exists in the bundle\n     *\n     * @param {string} filePath\n     * @return {boolean}\n     */\n    moduleExists: function (filePath) {\n        var repository = this;\n\n        if (hasOwn.call(repository.configuredModules, filePath)) {\n            // Module has already been configured: return the cached module factory\n            return true;\n        }\n\n        // Module has not yet been loaded: determine its existence using the fetcher function.\n        // To save space in the compiled bundle, the large switch statement with a case for each\n        // compiled PHP module doubles as an existence-check (see Transformer for details)\n        return repository.moduleFactoryFetcher(filePath, true);\n    }\n});\n\nmodule.exports = ModuleRepository;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Performance option wrapper\n *\n * @param {class} Date\n * @param {global} global\n * @constructor\n */\nfunction Performance(Date, global) {\n    /**\n     * @type {class}\n     */\n    this.Date = Date;\n    /**\n     * @type {global}\n     */\n    this.global = global;\n}\n\n_.extend(Performance.prototype, {\n    /**\n     * Returns the time since the Unix epoch in microseconds\n     *\n     * @returns {number}\n     */\n    getTimeInMicroseconds: function () {\n        var performance = this;\n\n        if (performance.global.performance) {\n            // Use 5-microsecond-precise Performance API, if available\n            return (\n                performance.global.performance.timing.navigationStart + performance.global.performance.now()\n            ) * 1000;\n        }\n\n        // Fall back to fake microsecond accuracy (will be correct to the nearest millisecond)\n        return new performance.Date().getTime() * 1000;\n    }\n});\n\nmodule.exports = Performance;\n","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConfigLoader = exports.configImporter = void 0;\nvar Config_1 = require(\"./Config\");\nvar ConfigExporter_1 = require(\"./ConfigExporter\");\nvar ConfigImporter_1 = require(\"./ConfigImporter\");\nvar ConfigLoader_1 = require(\"./ConfigLoader\");\nvar ConfigSet_1 = require(\"./ConfigSet\");\nvar Loader_1 = require(\"./Loader\");\nvar Requirer_1 = require(\"./Requirer\");\nvar SerialisationChecker_1 = require(\"./SerialisationChecker\");\nvar UNIFIED_CONFIG_FILE_NAME = 'uniter.config.js';\nvar requirer = new Requirer_1.default(require);\nvar createConfigLoader = function (existsSync) {\n    return new ConfigLoader_1.default(requirer, new Loader_1.default(existsSync, requirer, UNIFIED_CONFIG_FILE_NAME), new ConfigExporter_1.default(new SerialisationChecker_1.default()), Config_1.default, ConfigSet_1.default);\n};\nexports.createConfigLoader = createConfigLoader;\nvar configImporter = new ConfigImporter_1.default(ConfigSet_1.default);\nexports.configImporter = configImporter;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEmpty(subConfig) {\n    return Object.keys(subConfig).length === 0;\n}\n/**\n * @inheritDoc\n */\nvar Config = /** @class */ (function () {\n    function Config(requirer, exporter, rootConfig, ConfigSetClass) {\n        this.requirer = requirer;\n        this.exporter = exporter;\n        this.rootConfig = rootConfig;\n        this.ConfigSetClass = ConfigSetClass;\n    }\n    /**\n     * @inheritDoc\n     */\n    Config.prototype.exportLibrary = function (mainLibraryName, subLibraryName) {\n        return this.exporter.exportLibrary(this.rootConfig, mainLibraryName, subLibraryName);\n    };\n    /**\n     * @inheritDoc\n     */\n    Config.prototype.getConfigsForLibrary = function (mainLibraryName, subLibraryName) {\n        var _this = this;\n        var libraryConfig = this.exporter.exportLibrary(this.rootConfig, mainLibraryName, subLibraryName);\n        var configs = libraryConfig.pluginConfigFilePaths.map(function (path) {\n            var _a;\n            var pluginConfig = (_a = _this.requirer.require(path)) !== null && _a !== void 0 ? _a : {};\n            if (typeof pluginConfig !== 'object') {\n                throw new Error(subLibraryName\n                    ? \"Imported config for sub-library \\\"\" + subLibraryName + \"\\\" under main library \\\"\" + mainLibraryName + \"\\\" should be an object\"\n                    : \"Imported config for main library \\\"\" + mainLibraryName + \"\\\" should be an object\");\n            }\n            return pluginConfig;\n        });\n        if (!isEmpty(libraryConfig.topLevelConfig)) {\n            configs.push(libraryConfig.topLevelConfig);\n        }\n        return new this.ConfigSetClass(configs);\n    };\n    return Config;\n}());\nexports.default = Config;\n//# sourceMappingURL=Config.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hasOwn = {}.hasOwnProperty;\n/**\n * Fetches the config for the given library from the root config\n *\n * @param {RootConfig} allConfig\n * @param {string} mainLibraryName\n * @param {string=} subLibraryName\n * @returns {SubConfig}\n */\nfunction getLibraryConfigFromRoot(allConfig, mainLibraryName, subLibraryName) {\n    var _a, _b, _c, _d;\n    var mainConfig = (_b = ((_a = allConfig.settings) !== null && _a !== void 0 ? _a : {})[mainLibraryName]) !== null && _b !== void 0 ? _b : {};\n    if (typeof mainConfig !== 'object') {\n        throw new Error(\"Config for main library \\\"\" + mainLibraryName + \"\\\" should be an object\");\n    }\n    if (subLibraryName == null) {\n        return mainConfig;\n    }\n    var subConfig = (_d = ((_c = allConfig.settings) !== null && _c !== void 0 ? _c : {})[subLibraryName]) !== null && _d !== void 0 ? _d : null;\n    if (subConfig === null) {\n        subConfig = {};\n    }\n    // Config for the sub-library that is specified under the main library\n    // should override settings for the sub-library that are set outside\n    return Object.assign({}, subConfig, mainConfig[subLibraryName]);\n}\n/**\n * Fetches the config for the given main library from a plugin config\n *\n * @param {PluginConfig} pluginConfig\n * @param {string} mainLibraryName\n * @returns {string[]}\n */\nfunction getMainLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName) {\n    var _a, _b;\n    var mainConfig = (_a = pluginConfig[mainLibraryName]) !== null && _a !== void 0 ? _a : null;\n    if (mainConfig === null) {\n        // No config is specified for the main library by this plugin\n        return [];\n    }\n    if (typeof mainConfig === 'string') {\n        // Main config is provided via the simple path-string syntax;\n        // the main library config should be required from the given path\n        return [mainConfig];\n    }\n    if (typeof mainConfig === 'object') {\n        // Main config is provided via the extended object syntax;\n        // the main library config (if given) should be required from the path\n        // given as a property of this object with the main library's name\n        var pathToMainConfig = (_b = mainConfig[mainLibraryName]) !== null && _b !== void 0 ? _b : null;\n        if (pathToMainConfig === null) {\n            // Main library's extended syntax does not specify anything for itself\n            return [];\n        }\n        if (typeof pathToMainConfig !== 'string') {\n            throw new Error(\"Value for main library extended config path \\\"\" + mainLibraryName + \".\" + mainLibraryName + \"\\\" should be a path\");\n        }\n        return [pathToMainConfig];\n    }\n    throw new Error(\"Value for main library \\\"\" + mainLibraryName + \"\\\" should be a path or object\");\n}\n/**\n * Fetches the config for the given sub-library from a plugin config\n *\n * @param {PluginConfig} pluginConfig\n * @param {string} mainLibraryName\n * @param {string} subLibraryName\n * @returns {string[]}\n */\nfunction getSubLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName) {\n    var _a, _b;\n    var isolatedPathToSubLibraryConfig = (_a = pluginConfig[subLibraryName]) !== null && _a !== void 0 ? _a : null;\n    var pathToSubLibraryConfigUnderMain = null;\n    var mainLibraryConfig = (_b = pluginConfig[mainLibraryName]) !== null && _b !== void 0 ? _b : {};\n    if (hasOwn.call(pluginConfig, subLibraryName)) {\n        if (typeof isolatedPathToSubLibraryConfig !== 'string') {\n            throw new Error(\"Isolated value for sub-library \\\"\" + subLibraryName + \"\\\" should be a path\");\n        }\n    }\n    if (typeof mainLibraryConfig === 'object') {\n        // Main config is provided via the extended object syntax;\n        // the sub-library config (if given) should be required from the path\n        // given as a property of this object with the sub-library's name\n        if (hasOwn.call(mainLibraryConfig, subLibraryName)) {\n            if (typeof mainLibraryConfig[subLibraryName] !== 'string') {\n                throw new Error(\"Value for sub-library under \\\"\" + mainLibraryName + \".\" + subLibraryName + \"\\\" should be a path\");\n            }\n            pathToSubLibraryConfigUnderMain = mainLibraryConfig[subLibraryName];\n        }\n    }\n    else if (typeof mainLibraryConfig !== 'string') {\n        throw new Error(\"Value for main library extended config path \\\"\" + mainLibraryName + \".\" + mainLibraryName + \"\\\" should be a path or object\");\n    }\n    var paths = [];\n    if (isolatedPathToSubLibraryConfig !== null) {\n        paths.push(isolatedPathToSubLibraryConfig);\n    }\n    // Sub-library config given under main should take precedence,\n    // so that defaults may be specified in the \"isolated\" config\n    // and then overridden here\n    if (pathToSubLibraryConfigUnderMain !== null) {\n        paths.push(pathToSubLibraryConfigUnderMain);\n    }\n    return paths;\n}\n/**\n * Fetches the paths to plugins for a given library from a single plugin config\n *\n * @param {PluginConfig} pluginConfig\n * @param {string} mainLibraryName\n * @param {string=} subLibraryName\n * @returns {string[]}\n */\nfunction getLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName) {\n    return subLibraryName\n        ? getSubLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName)\n        : getMainLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName);\n}\n/**\n * Fetches the paths to plugins for a given library from a set of plugin configs\n *\n * @param {PluginConfig[]} pluginConfigs\n * @param {string} mainLibraryName\n * @param {string} subLibraryName\n * @returns {string[]}\n */\nfunction getLibraryConfigPathsFromPlugins(pluginConfigs, mainLibraryName, subLibraryName) {\n    var libraryConfigPaths = [];\n    for (var _i = 0, pluginConfigs_1 = pluginConfigs; _i < pluginConfigs_1.length; _i++) {\n        var pluginConfig = pluginConfigs_1[_i];\n        var pluginSubLibraryConfigPaths = getLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName);\n        libraryConfigPaths.push.apply(libraryConfigPaths, pluginSubLibraryConfigPaths);\n    }\n    return libraryConfigPaths;\n}\n/**\n * @inheritDoc\n */\nvar ConfigExporter = /** @class */ (function () {\n    function ConfigExporter(serialisationChecker) {\n        this.serialisationChecker = serialisationChecker;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigExporter.prototype.exportLibrary = function (rootConfig, mainLibraryName, subLibraryName) {\n        var libraryName = subLibraryName !== null && subLibraryName !== void 0 ? subLibraryName : mainLibraryName;\n        var topLevelConfig = getLibraryConfigFromRoot(rootConfig, mainLibraryName, subLibraryName);\n        if (!this.serialisationChecker.isSerialisable(topLevelConfig)) {\n            throw new Error(\"Top-level config for library \\\"\" + libraryName + \"\\\" is not serialisable\");\n        }\n        return {\n            libraryName: libraryName,\n            topLevelConfig: topLevelConfig,\n            pluginConfigFilePaths: rootConfig.plugins\n                ? getLibraryConfigPathsFromPlugins(rootConfig.plugins, mainLibraryName, subLibraryName)\n                : [],\n        };\n    };\n    return ConfigExporter;\n}());\nexports.default = ConfigExporter;\n//# sourceMappingURL=ConfigExporter.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @inheritDoc\n */\nvar ConfigImporter = /** @class */ (function () {\n    function ConfigImporter(ConfigSetClass) {\n        this.ConfigSetClass = ConfigSetClass;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigImporter.prototype.importLibrary = function (exportedLibraryConfig) {\n        return new this.ConfigSetClass(exportedLibraryConfig.configs);\n    };\n    return ConfigImporter;\n}());\nexports.default = ConfigImporter;\n//# sourceMappingURL=ConfigImporter.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A type predicate for determining at runtime whether a valid root config was given.\n *\n * @param {RootConfig | SubConfig} config\n * @returns {boolean}\n */\nfunction isValidConfig(config) {\n    return (Object.keys(config).filter(function (settingName) {\n        // Only the keys \"plugins\" and/or \"settings\" are allowed\n        return settingName !== 'plugins' && settingName !== 'settings';\n    }).length === 0);\n}\n/**\n * @inheritDoc\n */\nvar ConfigLoader = /** @class */ (function () {\n    function ConfigLoader(requirer, loader, exporter, ConfigClass, ConfigSetClass) {\n        this.requirer = requirer;\n        this.loader = loader;\n        this.exporter = exporter;\n        this.ConfigClass = ConfigClass;\n        this.ConfigSetClass = ConfigSetClass;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigLoader.prototype.getConfig = function (searchPaths) {\n        var rootConfig = this.loader.load(searchPaths);\n        if (!isValidConfig(rootConfig)) {\n            throw new Error('Given root config is invalid: may only specify \"plugins\" or \"settings\" or both');\n        }\n        return new this.ConfigClass(this.requirer, this.exporter, rootConfig, this.ConfigSetClass);\n    };\n    return ConfigLoader;\n}());\nexports.default = ConfigLoader;\n//# sourceMappingURL=ConfigLoader.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hasOwn = {}.hasOwnProperty;\n/**\n * @inheritDoc\n */\nvar ConfigSet = /** @class */ (function () {\n    function ConfigSet(configs) {\n        this.configs = configs;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.concatArrays = function (settingName) {\n        var concatenatedArray = [];\n        for (var _i = 0, _a = this.configs; _i < _a.length; _i++) {\n            var _b = settingName, rawSettingValue = _a[_i][_b];\n            var settingValue = rawSettingValue !== null && rawSettingValue !== void 0 ? rawSettingValue : [];\n            if (!Array.isArray(settingValue)) {\n                throw new Error(\"Invalid value for setting \" + settingName + \": all values must be arrays but \" + typeof settingValue + \" (\" + settingValue + \") given\");\n            }\n            concatenatedArray.push.apply(concatenatedArray, settingValue);\n        }\n        return concatenatedArray;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.getBoolean = function (settingName, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = false; }\n        // TODO: Optimise by only extracting values for this specific setting from each config.\n        //       For now this is assumed to be efficient enough (as deep and complex config trees\n        //       are unlikely)\n        var mergedSettingValues = this.mergeAll();\n        if (!hasOwn.call(mergedSettingValues, settingName)) {\n            // Setting has no value specified in any config\n            return defaultValue;\n        }\n        var settingValue = mergedSettingValues[settingName];\n        if (typeof settingValue !== 'boolean') {\n            throw new Error(\"Expected value for setting \\\"\" + settingName + \"\\\" to be a boolean but it was a \" + typeof settingValue);\n        }\n        return settingValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.mergeAll = function () {\n        var mergedConfig = {};\n        var doMerge = function (config) {\n            var _a;\n            var _b;\n            for (var _i = 0, _c = Object.keys(config); _i < _c.length; _i++) {\n                var settingName = _c[_i];\n                var settingValue = config[settingName];\n                if (settingValue === null || typeof settingValue !== 'object') {\n                    // Latest setting is not a non-null object: this one should replace any value completely\n                    mergedConfig[settingName] = settingValue;\n                    continue;\n                }\n                if (Array.isArray(settingValue)) {\n                    // Latest setting value is an array\n                    if (Array.isArray(mergedConfig[settingName])) {\n                        // Setting in work area is also an array: just concatenate onto the end\n                        (_a = mergedConfig[settingName]).push.apply(_a, settingValue);\n                    }\n                    else {\n                        // Setting in work area is not an array: this one should replace the value completely\n                        mergedConfig[settingName] = settingValue;\n                    }\n                }\n                else {\n                    // Latest setting is an object: merge it onto the existing one (if any)\n                    Object.assign((_b = mergedConfig[settingName]) !== null && _b !== void 0 ? _b : (mergedConfig[settingName] = {}), settingValue);\n                }\n            }\n        };\n        for (var _i = 0, _a = this.configs; _i < _a.length; _i++) {\n            var config = _a[_i];\n            doMerge(config);\n        }\n        return mergedConfig;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.mergeObjects = function (settingName) {\n        var mergedConfig = {};\n        for (var _i = 0, _a = this.configs; _i < _a.length; _i++) {\n            var _b = settingName, rawSettingValue = _a[_i][_b];\n            var settingValue = rawSettingValue !== null && rawSettingValue !== void 0 ? rawSettingValue : {};\n            if (typeof settingValue !== 'object') {\n                throw new Error(\"Invalid value for setting \" + settingName + \": all values must be objects but \" + typeof settingValue + \" (\" + settingValue + \") given\");\n            }\n            Object.assign(mergedConfig, settingValue);\n        }\n        return mergedConfig;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.mergeUniqueObjects = function (settingName) {\n        var _a;\n        var mergedConfig = {};\n        for (var _i = 0, _b = this.configs; _i < _b.length; _i++) {\n            var config = _b[_i];\n            var settingValue = void 0;\n            if (settingName) {\n                // A setting was specified: merge all values for that setting\n                var rawSettingValue = config[settingName];\n                settingValue = (_a = rawSettingValue) !== null && _a !== void 0 ? _a : {};\n                if (typeof settingValue !== 'object') {\n                    throw new Error(\"Invalid value for setting \" + settingName + \": all values must be objects but \" + typeof settingValue + \" (\" + settingValue + \") given\");\n                }\n            }\n            else {\n                // No setting was specified: merge the configs themselves\n                settingValue = config;\n            }\n            for (var _c = 0, _d = Object.keys(settingValue); _c < _d.length; _c++) {\n                var propertyName = _d[_c];\n                if (hasOwn.call(mergedConfig, propertyName) &&\n                    // Allow a setting to be overridden with the exact same value\n                    // (eg. where multiple plugins are used that define the same flag setting)\n                    mergedConfig[propertyName] !== settingValue[propertyName]) {\n                    var newValue = settingValue[propertyName];\n                    var propertyOrSettingName = settingName !== null && settingName !== void 0 ? settingName : propertyName;\n                    var propertyOrSetting = settingName\n                        ? \"property \\\"\" + propertyName + \"\\\"\"\n                        : 'setting';\n                    throw new Error(\"Invalid value for setting \" + propertyOrSettingName + \": all objects must be unique but \" + propertyOrSetting + \" has both value (\" + mergedConfig[propertyName] + \") and value (\" + newValue + \")\");\n                }\n            }\n            Object.assign(mergedConfig, settingValue);\n        }\n        return mergedConfig;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.toArray = function () {\n        return this.configs;\n    };\n    return ConfigSet;\n}());\nexports.default = ConfigSet;\n//# sourceMappingURL=ConfigSet.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path_1 = require(\"path\");\n/**\n * @inheritDoc\n */\nvar Loader = /** @class */ (function () {\n    function Loader(existsSync, requirer, fileName) {\n        this.existsSync = existsSync;\n        this.requirer = requirer;\n        this.fileName = fileName;\n    }\n    /**\n     * @inheritDoc\n     */\n    Loader.prototype.load = function (searchDirectories) {\n        for (var _i = 0, searchDirectories_1 = searchDirectories; _i < searchDirectories_1.length; _i++) {\n            var searchDirectory = searchDirectories_1[_i];\n            var searchPath = path_1.join(searchDirectory, this.fileName);\n            if (this.existsSync(searchPath)) {\n                return this.requirer.require(searchPath);\n            }\n        }\n        return {};\n    };\n    return Loader;\n}());\nexports.default = Loader;\n//# sourceMappingURL=Loader.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @inheritDoc\n */\nvar Requirer = /** @class */ (function () {\n    function Requirer(nodeRequire) {\n        this.nodeRequire = nodeRequire;\n    }\n    /**\n     * @inheritDoc\n     */\n    Requirer.prototype.require = function (path) {\n        return this.nodeRequire(path);\n    };\n    return Requirer;\n}());\nexports.default = Requirer;\n//# sourceMappingURL=Requirer.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @inheritDoc\n */\nvar SerialisationChecker = /** @class */ (function () {\n    function SerialisationChecker() {\n    }\n    /**\n     * @inheritDoc\n     */\n    SerialisationChecker.prototype.isSerialisable = function (object) {\n        return this.isObjectSerialisable(object);\n    };\n    SerialisationChecker.prototype.isObjectSerialisable = function (object, objectsSeen) {\n        if (objectsSeen === void 0) { objectsSeen = []; }\n        if (objectsSeen.includes(object)) {\n            return false;\n        }\n        objectsSeen = objectsSeen.concat([object]);\n        if (object instanceof Function || object instanceof RegExp) {\n            return false;\n        }\n        if (Array.isArray(object)) {\n            for (var _i = 0, object_1 = object; _i < object_1.length; _i++) {\n                var element = object_1[_i];\n                if (!this.isValueSerialisable(element, objectsSeen)) {\n                    return false;\n                }\n            }\n        }\n        for (var _a = 0, _b = Object.keys(object); _a < _b.length; _a++) {\n            var settingName = _b[_a];\n            if (!this.isValueSerialisable(object[settingName], objectsSeen)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    SerialisationChecker.prototype.isValueSerialisable = function (value, objectsSeen) {\n        if (objectsSeen === void 0) { objectsSeen = []; }\n        if (value == null ||\n            typeof value === 'boolean' ||\n            typeof value === 'number' ||\n            typeof value === 'string') {\n            return true;\n        }\n        if (typeof value === 'object') {\n            return this.isObjectSerialisable(value, objectsSeen);\n        }\n        return false;\n    };\n    return SerialisationChecker;\n}());\nexports.default = SerialisationChecker;\n//# sourceMappingURL=SerialisationChecker.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 95;","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar arrayConstants = require('./constants/array'),\n    arrayFunctions = require('./functions/array'),\n    baseConversionMathFunctions = require('./functions/math/baseConversion'),\n    classFunctions = require('./functions/class'),\n    configOptionsAndInfoFunctions = require('./functions/optionsAndInfo/config'),\n    constantFunctions = require('./functions/misc/constant'),\n    Countable = require('./interfaces/SPL/Countable'),\n    environmentFunctions = require('./functions/optionsAndInfo/environment'),\n    errorHandlingFunctions = require('./functions/errorHandling'),\n    extensionOptionsAndInfoFunctions = require('./functions/optionsAndInfo/extension'),\n    filesystemConstants = require('./constants/filesystem'),\n    filesystemFunctions = require('./functions/filesystem'),\n    functionHandlingFunctions = require('./functions/functionHandling'),\n    htmlStringFunctions = require('./functions/string/html'),\n    InvalidArgumentException = require('./classes/Exception/InvalidArgumentException'),\n    LogicException = require('./classes/Exception/LogicException'),\n    outputControlFunctions = require('./functions/outputControl'),\n    pcreCommonFunctions = require('./functions/pcre/common'),\n    pcreConstants = require('./constants/pcre'),\n    phpConstants = require('./constants/php'),\n    phpOptionsAndInfoFunctions = require('./functions/optionsAndInfo/php'),\n    splFunctions = require('./functions/spl'),\n    stringBindings = require('./bindings/string'),\n    stringConstants = require('./constants/string'),\n    stringFunctions = require('./functions/string'),\n    timeDateAndTimeFunctions = require('./functions/dateAndTime/time'),\n    timeFunctions = require('./functions/misc/time'),\n    variableHandlingFunctions = require('./functions/variableHandling');\n\nmodule.exports = {\n    bindingGroups: [\n        stringBindings\n    ],\n    classGroups: [\n        function () {\n            return {\n                'Countable': Countable\n            };\n        },\n        function () {\n            return {\n                'LogicException': LogicException\n            };\n        },\n        function () {\n            return {\n                'InvalidArgumentException': InvalidArgumentException\n            };\n        }\n    ],\n    constantGroups: [\n        arrayConstants,\n        filesystemConstants,\n        pcreConstants,\n        phpConstants,\n        stringConstants\n    ],\n    functionGroups: [\n        arrayFunctions,\n        baseConversionMathFunctions,\n        classFunctions,\n        configOptionsAndInfoFunctions,\n        constantFunctions,\n        environmentFunctions,\n        errorHandlingFunctions,\n        extensionOptionsAndInfoFunctions,\n        filesystemFunctions,\n        functionHandlingFunctions,\n        htmlStringFunctions,\n        outputControlFunctions,\n        pcreCommonFunctions,\n        phpOptionsAndInfoFunctions,\n        splFunctions,\n        stringFunctions,\n        timeDateAndTimeFunctions,\n        timeFunctions,\n        variableHandlingFunctions\n    ]\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'COUNT_NORMAL': 0,\n        'COUNT_RECURSIVE': 1\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty,\n    phpCommon = require('phpcommon'),\n    COUNT_NORMAL = 0,\n    IMPLODE = 'implode',\n    KeyValuePair = require('phpcore/src/KeyValuePair'),\n    SORT_REGULAR = 0,\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        methods,\n        valueFactory = internals.valueFactory;\n\n    methods = {\n        /**\n         * Determines the difference between arrays. A new array will be returned,\n         * with all the elements of the first array that are not present in any of the other arrays\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-diff.php}\n         *\n         * @returns {ArrayValue|NullValue}\n         */\n        'array_diff': function () {\n            var firstArrayValue,\n                remainingElementPairs,\n                returnNull = false;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'array_diff() expects at least 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            firstArrayValue = arguments[0].getValue();\n\n            if (firstArrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'array_diff(): Argument #0 is not an array'\n                );\n                return valueFactory.createNull();\n            }\n\n            // Start with the key-value pairs for the elements of the first array,\n            // as for each successive array we will compare their values against the values\n            // of this first one\n            remainingElementPairs = firstArrayValue.getKeys().map(function (keyValue) {\n                return firstArrayValue.getElementPairByKey(keyValue);\n            });\n\n            _.each([].slice.call(arguments, 1), function (arrayReference, argumentIndex) {\n                var arrayValue = arrayReference.getValue();\n\n                if (arrayValue.getType() !== 'array') {\n                    callStack.raiseError(\n                        PHPError.E_WARNING,\n                        'array_diff(): Argument #' + (argumentIndex + 2) + ' is not an array'\n                    );\n                    returnNull = true;\n                    return false;\n                }\n\n                _.each(arrayValue.getKeys(), function (keyValue) {\n                    var elementValue = arrayValue.getElementByKey(keyValue).getValue();\n\n                    remainingElementPairs = remainingElementPairs.filter(function (remainingElementPair) {\n                        return elementValue.getValue().isNotEqualTo(remainingElementPair.getValue()).getNative();\n                    });\n                });\n            });\n\n            if (returnNull) {\n                return valueFactory.createNull();\n            }\n\n            return valueFactory.createArray(remainingElementPairs);\n        },\n\n        /**\n         * Determines whether the given key or index exists in the array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-key-exists.php}\n         *\n         * @param {Variable|Value} keyReference\n         * @param {Variable|ArrayValue} arrayReference\n         * @returns {BooleanValue}\n         */\n        'array_key_exists': function (keyReference, arrayReference) {\n            var arrayValue,\n                keyValue;\n\n            keyValue = keyReference.getValue();\n            arrayValue = arrayReference.getValue();\n\n            return valueFactory.createBoolean(arrayValue.getElementByKey(keyValue).isDefined());\n        },\n\n        /**\n         * Fetch all keys (or a subset of the keys) in an array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-keys.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @param {Variable|Value} searchValueReference\n         * @param {Variable|BooleanValue} strictMatchReference\n         * @returns {ArrayValue}\n         */\n        'array_keys': function (arrayReference, searchValueReference, strictMatchReference) {\n            var arrayValue;\n\n            if (searchValueReference || strictMatchReference) {\n                throw new Error('array_keys() :: Search functionality is not yet supported');\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            return valueFactory.createArray(arrayValue.getKeys());\n        },\n\n        /**\n         * Maps one or more arrays to a new array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-map.php}\n         *\n         * @param {Variable|Value} callbackReference\n         * @param {Variable|ArrayValue} firstArrayReference\n         * @returns {ArrayValue}\n         */\n        'array_map': function (callbackReference, firstArrayReference) {\n            var callbackValue = callbackReference.getValue(),\n                firstArrayValue = firstArrayReference.getValue(),\n                result = [];\n\n            if (arguments.length > 2) {\n                throw new Error('array_map() :: Multiple input arrays are not yet supported');\n            }\n\n            _.each(firstArrayValue.getKeys(), function (keyValue) {\n                // Pass the global namespace as the namespace scope -\n                // any normal function callback will need to be fully-qualified\n                // TODO: Test what happens with barewords, eg. `array_map(MyClass::staticMethod, [...])`\n                var elementValue = firstArrayValue.getElementByKey(keyValue),\n                    mappedElementValue = callbackValue.call([elementValue], globalNamespace);\n\n                result.push(new KeyValuePair(keyValue, mappedElementValue));\n            });\n\n            return valueFactory.createArray(result);\n        },\n\n        /**\n         * Merges one or more arrays together, returning a new array with the result\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-merge.php}\n         *\n         * @returns {IntegerValue}\n         */\n        'array_merge': function () {\n            var nativeKeyToElementMap = {},\n                mergedElements,\n                nativeKeys = [],\n                nextIndex = 0,\n                returnNull = false;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'array_merge() expects at least 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            _.each(arguments, function (arrayReference, argumentIndex) {\n                var arrayValue = arrayReference.getValue();\n\n                if (arrayValue.getType() !== 'array') {\n                    callStack.raiseError(\n                        PHPError.E_WARNING,\n                        'array_merge(): Argument #' + (argumentIndex + 1) + ' is not an array'\n                    );\n                    returnNull = true;\n                    return false;\n                }\n\n                _.each(arrayValue.getKeys(), function (key) {\n                    var mergedKey,\n                        nativeKey;\n\n                    if (key.isNumeric()) {\n                        nativeKey = nextIndex++;\n                        mergedKey = valueFactory.createInteger(nativeKey);\n                        nativeKeys.push(nativeKey);\n                    } else {\n                        nativeKey = key.getNative();\n                        mergedKey = key;\n\n                        if (!hasOwn.call(nativeKeyToElementMap, nativeKey)) {\n                            nativeKeys.push(nativeKey);\n                        }\n                    }\n\n                    nativeKeyToElementMap[nativeKey] = arrayValue.getElementPairByKey(key, mergedKey);\n                });\n            });\n\n            if (returnNull) {\n                return valueFactory.createNull();\n            }\n\n            mergedElements = _.map(nativeKeys, function (nativeKey) {\n                return nativeKeyToElementMap[nativeKey];\n            });\n\n            return valueFactory.createArray(mergedElements);\n        },\n\n        /**\n         * Pops the last element off the end of an array and returns it\n         *\n         * - Also resets the internal array pointer\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-pop.php}\n         *\n         * @param {Value|Variable|Reference} arrayReference\n         * @return {Value}\n         */\n        'array_pop': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            return arrayValue.pop();\n        },\n\n        /**\n         * Pushes one or more elements onto the end of an array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-push.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @returns {IntegerValue} The new length of the array after pushing\n         */\n        'array_push': function (arrayReference) {\n            var arrayValue,\n                i,\n                reference,\n                value;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'array_push() expects at least 2 parameters, 0 given');\n                return valueFactory.createNull();\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            for (i = 1; i < arguments.length; i++) {\n                reference = arguments[i];\n                value = reference.getValue();\n                arrayValue.push(value);\n            }\n\n            return valueFactory.createInteger(arrayValue.getLength());\n        },\n\n        /**\n         * Shifts an element off the beginning of an array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-shift.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @returns {ArrayValue}\n         */\n        'array_shift': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            return arrayValue.shift();\n        },\n\n        /**\n         * Returns a new array without duplicate values from a source array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-unique.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @param {Variable|IntegerValue} sortFlagsReference\n         * @returns {ArrayValue}\n         */\n        'array_unique': function (arrayReference, sortFlagsReference) {\n            var arrayValue,\n                resultPairs = [],\n                usedValues = {};\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'array_unique() expects at least 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            if (sortFlagsReference) {\n                throw new Error('array_unique() :: Sort flags are not yet supported');\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            // Work on a copy, so we don't mutate the original array\n            arrayValue = arrayValue.getForAssignment();\n\n            // First sort the elements alphabetically by value (default/SORT_STRING behaviour)\n            arrayValue.sort(function (elementA, elementB) {\n                var nativeValueA = elementA.getValue().coerceToString().getNative(),\n                    nativeValueB = elementB.getValue().coerceToString().getNative();\n\n                return String(nativeValueB).localeCompare(nativeValueA);\n            });\n\n            _.each(arrayValue.getKeys(), function (keyValue) {\n                var elementPair = arrayValue.getElementPairByKey(keyValue),\n                    nativeValue = elementPair.getValue().coerceToString().getNative();\n\n                if (hasOwn.call(usedValues, nativeValue)) {\n                    return;\n                }\n\n                usedValues[nativeValue] = true;\n\n                resultPairs.push(elementPair);\n            });\n\n            return valueFactory.createArray(resultPairs);\n        },\n\n        /**\n         * Returns all the values from the array and indexes the array numerically.\n         *\n         * @see {@link http://php.net/manual/en/function.array-values.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @returns {ArrayValue}\n         */\n        'array_values': function (arrayReference) {\n            var arrayValue;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'array_values() expects exactly 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            return valueFactory.createArray(arrayValue.getValues());\n        },\n\n        /**\n         * Counts the specified array or object. May be hooked\n         * by implementing interface Countable\n         *\n         * @see {@link https://secure.php.net/manual/en/function.count.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @param {Variable|Value} modeReference\n         * @returns {IntegerValue}\n         */\n        'count': function (arrayReference, modeReference) {\n            var array = arrayReference.getValue(),\n                mode = modeReference ? modeReference.getNative() : 0,\n                type = array.getType();\n\n            if (type === 'object' && array.classIs('Countable')) {\n                return array.callMethod('count');\n            }\n\n            if (mode !== COUNT_NORMAL) {\n                throw new Error('Unsupported mode for count(...) :: ' + mode);\n            }\n\n            return valueFactory.createInteger(\n                type === 'array' || type === 'object' ? array.getLength() : 1\n            );\n        },\n        'current': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            if (arrayValue.getPointer() >= arrayValue.getLength()) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return arrayValue.getCurrentElement().getValue();\n        },\n\n        /**\n         * Set the internal pointer of an array to its last element,\n         * returning the value of that last element.\n         * False will be returned for an empty array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.end.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @returns {Value}\n         */\n        'end': function (arrayReference) {\n            var arrayValue = arrayReference.getValue(),\n                keys = arrayValue.getKeys();\n\n            if (keys.length === 0) {\n                return valueFactory.createBoolean(false);\n            }\n\n            // Advance the array's internal pointer to the last element\n            arrayValue.setPointer(keys.length - 1);\n\n            return arrayValue.getElementByKey(keys[keys.length - 1]).getValue();\n        },\n\n        'implode': function (glueReference, piecesReference) {\n            var glueValue = glueReference.getValue(),\n                piecesValue = piecesReference.getValue(),\n                tmp,\n                values;\n\n            // For backwards-compatibility, PHP supports receiving args in either order\n            if (glueValue.getType() === 'array') {\n                tmp = glueValue;\n                glueValue = piecesValue;\n                piecesValue = tmp;\n            }\n\n            values = piecesValue.getValues();\n\n            _.each(values, function (value, key) {\n                values[key] = value.coerceToString().getNative();\n            });\n\n            return valueFactory.createString(values.join(glueValue.getNative()));\n        },\n\n        /**\n         * Determines whether a value (the \"needle\") exists in a given array (the \"haystack\")\n         *\n         * @see {@link https://secure.php.net/manual/en/function.in-array.php}\n         *\n         * @param {Variable|Value} needleReference\n         * @param {Variable|Value} haystackReference\n         * @param {Variable|Value} strictMatchReference\n         * @returns {BooleanValue}\n         */\n        'in_array': function (needleReference, haystackReference, strictMatchReference) {\n            var contains = false,\n                haystackValue,\n                needleValue,\n                strictMatch;\n\n            haystackValue = haystackReference.getValue();\n            needleValue = needleReference.getValue();\n            strictMatch = strictMatchReference ? strictMatchReference.getNative() : false;\n\n            _.each(haystackValue.getValues(), function (elementValue) {\n                if (\n                    (strictMatch && elementValue.isIdenticalTo(needleValue).getNative()) ||\n                    (!strictMatch && elementValue.isEqualTo(needleValue).getNative())\n                ) {\n                    contains = true;\n                    return false;\n                }\n            });\n\n            return valueFactory.createBoolean(contains);\n        },\n\n        'join': function (glueReference, piecesReference) {\n            return methods[IMPLODE](glueReference, piecesReference);\n        },\n\n        /**\n         * Fetches the key for the element the array's internal pointer is pointing at\n         *\n         * @see {@link https://secure.php.net/manual/en/function.key.php}\n         *\n         * @param {ArrayValue|Reference|Variable|Value} arrayReference\n         * @return {Value}\n         */\n        'key': function (arrayReference) {\n            var arrayValue,\n                currentKey;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'key() expects exactly 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            if (arrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'key() expects parameter 1 to be array, ' +\n                    arrayValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            currentKey = arrayValue.getKeyByIndex(arrayValue.getPointer());\n\n            return currentKey !== null ?\n                currentKey :\n                valueFactory.createNull();\n        },\n\n        /**\n         * Sorts an array in-place, by key, in reverse order\n         *\n         * @see {@link https://secure.php.net/manual/en/function.krsort.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @param {Variable|Value|undefined} sortFlagsReference\n         * @returns {IntegerValue}\n         */\n        'krsort': function (arrayReference, sortFlagsReference) {\n            var arrayValue,\n                sortFlags;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'krsort() expects at least 1 parameter, 0 given');\n                return valueFactory.createBoolean(false);\n            }\n\n            arrayValue = arrayReference.getValue();\n            sortFlags = sortFlagsReference ? sortFlagsReference.getValue().getNative() : SORT_REGULAR;\n\n            if (arrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'krsort() expects parameter 1 to be array, ' +\n                    arrayValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createBoolean(false);\n            }\n\n            if (sortFlags !== SORT_REGULAR) {\n                throw new Error(\n                    'krsort() :: Only SORT_REGULAR (' +\n                    SORT_REGULAR +\n                    ') is supported, ' +\n                    sortFlags +\n                    ' given'\n                );\n            }\n\n            arrayValue.sort(function (elementA, elementB) {\n                var nativeKeyA = elementA.getKey().getNative(),\n                    nativeKeyB = elementB.getKey().getNative();\n\n                return String(nativeKeyB).localeCompare(nativeKeyA);\n            });\n\n            return valueFactory.createBoolean(true);\n        },\n        'next': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            if (arrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'next() expects parameter 1 to be array, ' +\n                    arrayValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            arrayValue.setPointer(arrayValue.getPointer() + 1);\n\n            if (arrayValue.getPointer() >= arrayValue.getLength()) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return arrayValue.getCurrentElement().getValue();\n        },\n\n        /**\n         * Alias of count()\n         *\n         * @see {@link https://secure.php.net/manual/en/function.sizeof.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @param {Variable|Value} modeReference\n         * @returns {IntegerValue}\n         */\n        'sizeof': 'count'\n    };\n\n    return methods;\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar util = require('util'),\n    PHPError = require('./PHPError');\n\n/**\n * Represents a fatal PHP error\n *\n * @param {string} message\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction PHPFatalError(message, filePath, lineNumber) {\n    PHPError.call(this, PHPError.E_ERROR, message, filePath, lineNumber);\n}\n\nutil.inherits(PHPFatalError, PHPError);\n\nmodule.exports = PHPFatalError;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar util = require('util'),\n    PHPError = require('./PHPError');\n\n/**\n * Represents a PHP parse error\n *\n * @param {string} message\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction PHPParseError(message, filePath, lineNumber) {\n    PHPError.call(this, PHPError.E_PARSE, message, filePath, lineNumber);\n}\n\nutil.inherits(PHPParseError, PHPError);\n\nmodule.exports = PHPParseError;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    DEFAULT_LOCALE = 'en_GB',\n    hasOwn = {}.hasOwnProperty,\n    templateString = require('template-string');\n\n/**\n * Stores translations for internal strings in different locales\n *\n * @constructor\n */\nfunction Translator() {\n    /**\n     * @type {Object.<string, Object.<string, string>>}\n     */\n    this.cataloguesByLocale = {};\n    /**\n     * @type {string}\n     */\n    this.currentLocale = DEFAULT_LOCALE;\n}\n\n_.extend(Translator.prototype, {\n    /**\n     * Adds a translation for a specific key within a given locale\n     *\n     * @param {string} locale e.g. en_GB\n     * @param {string} key e.g. error.my_error.my_sub_msg\n     * @param {string} translation\n     */\n    addTranslation: function (locale, key, translation) {\n        var translator = this;\n\n        if (!hasOwn.call(translator.cataloguesByLocale, locale)) {\n            translator.cataloguesByLocale[locale] = {};\n        }\n\n        this.cataloguesByLocale[locale][key] = translation;\n    },\n\n    /**\n     * Adds multiple translations, potentially across multiple locales' catalogues\n     *\n     * @param {Object.<string, object>} structure\n     */\n    addTranslations: function (structure) {\n        var translator = this;\n\n        function add(locale, keyParts, data) {\n            if (_.isPlainObject(data)) {\n                _.forOwn(data, function (data, keyPart) {\n                    add(locale, keyParts.concat([keyPart]), data);\n                });\n            } else {\n                translator.addTranslation(locale, keyParts.join('.'), data);\n            }\n        }\n\n        _.forOwn(structure, function (data, locale) {\n            add(locale, [], data);\n        });\n    },\n\n    /**\n     * Selects which catalogue of messages should be used for translation by locale\n     *\n     * @param {string} locale\n     */\n    setLocale: function (locale) {\n        this.currentLocale = locale;\n    },\n\n    /**\n     * Translates the given key for the current locale (falling back to the default locale if not defined)\n     * and fills in any placeholders with the given variables\n     *\n     * @param {string} key\n     * @param {Object.<string, string>=} placeholderVariables\n     * @returns {string}\n     * @throws {Error} When the translation is not defined for the current nor fallback locales\n     */\n    translate: function (key, placeholderVariables) {\n        var translation,\n            translator = this;\n\n        if (hasOwn.call(translator.cataloguesByLocale, translator.currentLocale) &&\n            hasOwn.call(translator.cataloguesByLocale[translator.currentLocale], key)\n        ) {\n            // The translation is defined for the current locale - use it\n            translation = translator.cataloguesByLocale[translator.currentLocale][key];\n        } else {\n            // Fall back to the default locale's catalogue\n\n            if (!hasOwn.call(translator.cataloguesByLocale[DEFAULT_LOCALE], key)) {\n                throw new Error(\n                    'Translation \"' + key + '\" is not defined for current locale \"' + translator.currentLocale +\n                    '\" nor the default locale \"' + DEFAULT_LOCALE + '\"'\n                );\n            }\n\n            translation = translator.cataloguesByLocale[DEFAULT_LOCALE][key];\n        }\n\n        return templateString(translation, placeholderVariables);\n    }\n});\n\nmodule.exports = Translator;\n","/*\n * TemplateString - Simple template strings\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/template-string/\n *\n * Released under the MIT license\n * https://github.com/asmblah/template-string/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar hasOwn = {}.hasOwnProperty;\n\n/**\n * Replaces placeholders in `string` of the form `${...}`\n * if they are specified as own properties of `variables`\n *\n * @param {string} string\n * @param {Object.<string, string>} variables\n * @returns {string}\n */\nfunction templateString(string, variables) {\n    if (!variables) {\n        // Nothing to do if no variables object was provided\n        return string;\n    }\n\n    return string.replace(/\\$\\{([^}]+)}/g, function (all, name) {\n        if (hasOwn.call(variables, name)) {\n            return variables[name];\n        }\n\n        return all;\n    });\n}\n\nmodule.exports = templateString;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Converts a decimal integer to hexadecimal\n         *\n         * @see {@link https://secure.php.net/manual/en/function.dechex.php}\n         *\n         * @param {Variable|Value} numberReference\n         * @returns {StringValue}\n         */\n        'dechex': function (numberReference) {\n            /*jshint bitwise:false */\n            var number,\n                unsignedNumber;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'dechex() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            number = numberReference ?\n                numberReference.getValue().getNative() :\n                null;\n            unsignedNumber = number >>> 0; // Cast to a 32-bit unsigned integer\n\n            return valueFactory.createString(unsignedNumber.toString(16));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        classAutoloader = internals.classAutoloader,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Determines whether the specified class exists\n         *\n         * @see {@link https://secure.php.net/manual/en/function.class-exists.php}\n         *\n         * @param {Variable|Value} classNameReference      The name of the class to check for\n         * @param {Variable|Value} callAutoloaderReference True to invoke the autoloader, false otherwise\n         * @returns {BooleanValue}\n         */\n        'class_exists': function (classNameReference, callAutoloaderReference) {\n            var className = classNameReference.getNative(),\n                callAutoloader = callAutoloaderReference ? callAutoloaderReference.getNative() : true;\n\n            // Autoload the class if not already defined and autoloading is requested\n            if (!globalNamespace.hasClass(className) && callAutoloader) {\n                classAutoloader.autoloadClass(className);\n            }\n\n            return valueFactory.createBoolean(globalNamespace.hasClass(className));\n        },\n\n        /**\n         * Fetches the name of either the current class or the class of a specified object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-class.php}\n         *\n         * @param {Variable|Value} objectReference\n         * @returns {StringValue|BooleanValue}\n         */\n        'get_class': function (objectReference) {\n            var currentClass,\n                objectValue;\n\n            if (!objectReference) {\n                currentClass = callStack.getCallerScope().getCurrentClass();\n\n                if (!currentClass) {\n                    callStack.raiseError(\n                        PHPError.E_WARNING,\n                        'get_class() called without object from outside a class'\n                    );\n\n                    return valueFactory.createBoolean(false);\n                }\n\n                return valueFactory.createString(currentClass.getName());\n            }\n\n            objectValue = objectReference.getValue();\n\n            if (objectValue.getType() !== 'object') {\n                // If specified, the value must be an object\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'get_class() expects parameter 1 to be object, ' + objectValue.getType() + ' given'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createString(objectValue.getClassName());\n        },\n\n        /**\n         * Checks if the object is of this class or has this class as one of its parents\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-a.php}\n         *\n         * @param {Variable|Value} objectReference\n         * @param {Variable|Value} classNameReference\n         * @param {Variable|Value} allowStringReference\n         * @returns {BooleanValue}\n         */\n        'is_a': function (objectReference, classNameReference, allowStringReference) {\n            var allowString,\n                className,\n                classNameValue,\n                objectValue;\n\n            objectValue = objectReference.getValue();\n            classNameValue = classNameReference.getValue();\n\n            className = classNameValue.getNative();\n            allowString = allowStringReference ? allowStringReference.getNative() : false;\n\n            if (objectValue.getType() === 'object') {\n                return valueFactory.createBoolean(objectValue.classIs(className));\n            }\n\n            if (objectValue.getType() === 'string') {\n                if (!allowString) {\n                    // First arg is not allowed to be a string - just return false (no warning/notice)\n                    return valueFactory.createBoolean(false);\n                }\n\n                return valueFactory.createBoolean(\n                    globalNamespace.getClass(objectValue.getNative()).is(className)\n                );\n            }\n\n            // Invalid \"object\" given - just return false (no warning/notice)\n            return valueFactory.createBoolean(false);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the value of a PHP configuration option as it was set in the INI file.\n         * Any changes made at runtime (eg. with ini_set(...)) will _not_ be taken into account.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-cfg-var.php}\n         *\n         * @param {Reference|Value|Variable} optionNameReference\n         * @return {Value}\n         */\n        'get_cfg_var': function (optionNameReference) {\n            var optionName = optionNameReference ?\n                optionNameReference.getValue().getNative() :\n                null;\n\n            if (optionName === 'cfg_file_path') {\n                return valueFactory.createString('/pseudo/uniter/php.ini');\n            }\n\n            throw new Error(\n                'Cannot fetch option \"' + optionName + '\" - only cfg_file_path config option is currently supported'\n            );\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Defines a new constant, optionally making it case-insensitive (in name)\n         *\n         * @see {@link https://secure.php.net/manual/en/function.define.php}\n         *\n         * @param {Value|Variable} nameValue\n         * @param {Value|Variable} valueValue\n         * @param {Value|Variable|undefined} isCaseInsensitive\n         * @returns {IntegerValue}\n         */\n        'define': function (nameValue, valueValue, isCaseInsensitive) {\n            var match,\n                name,\n                namespace,\n                path;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'define() expects at least 2 parameters, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            name = nameValue.getValue().getNative();\n            isCaseInsensitive = isCaseInsensitive ? isCaseInsensitive.getValue().getNative() : false;\n            valueValue = valueValue.getValue();\n\n            name = name.replace(/^\\//, '');\n            match = name.match(/^(.*?)\\\\([^\\\\]+)$/);\n\n            if (match) {\n                path = match[1];\n                name = match[2];\n                namespace = globalNamespace.getDescendant(path);\n            } else {\n                namespace = globalNamespace;\n            }\n\n            namespace.defineConstant(name, valueValue, {\n                caseInsensitive: isCaseInsensitive\n            });\n        },\n        /**\n         * Returns true if a constant is defined with the given name, false otherwise\n         *\n         * @see {@link https://secure.php.net/manual/en/function.defined.php}\n         *\n         * @param {Value|Variable} nameValue\n         * @returns {BooleanValue}\n         */\n        'defined': function (nameValue) {\n            var match,\n                name,\n                namespace,\n                path;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'defined() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            name = nameValue.getValue().getNative();\n\n            name = name.replace(/^\\//, '');\n            match = name.match(/^(.*?)\\\\([^\\\\]+)$/);\n\n            if (match) {\n                path = match[1];\n                name = match[2];\n                namespace = globalNamespace.getDescendant(path);\n            } else {\n                namespace = globalNamespace;\n            }\n\n            return valueFactory.createBoolean(namespace.hasConstant(name));\n        }\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    function Countable() {\n\n    }\n\n    return {\n        'Countable': Countable\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the value of an environment variable\n         *\n         * @see {@link https://secure.php.net/manual/en/function.getenv.php}\n         *\n         * @param {Reference|Value|Variable|null} variableNameReference\n         * @return {Value}\n         */\n        'getenv': function (variableNameReference) {\n            if (variableNameReference) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createArray([]);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        errorConfiguration = internals.errorConfiguration,\n        valueFactory = internals.valueFactory,\n        // Maps the error type PHP constant name to the internal PHPError type that should be raised\n        ERROR_CONSTANT_NAME_TO_LEVEL = {\n            'E_USER_DEPRECATED': PHPError.E_DEPRECATED,\n            'E_USER_ERROR': PHPError.E_ERROR,\n            'E_USER_NOTICE': PHPError.E_NOTICE,\n            'E_USER_WARNING': PHPError.E_WARNING\n        };\n\n    return {\n        /**\n         * Sets or determines which PHP errors will be reported\n         *\n         * @see {@link https://secure.php.net/manual/en/function.error-reporting.php}\n         *\n         * @returns {IntegerValue}\n         */\n        'error_reporting': function (levelReference) {\n            var currentLevelValue = valueFactory.coerce(errorConfiguration.getErrorReportingLevel());\n\n            if (!levelReference) {\n                // When no argument is given, just return the current reporting level\n\n                return currentLevelValue;\n            }\n\n            errorConfiguration.setErrorReportingLevel(levelReference.getValue().getNative());\n\n            return currentLevelValue;\n        },\n\n        /**\n         * Generates a user-level error/warning/notice message\n         *\n         * @see {@link https://secure.php.net/manual/en/function.trigger-error.php}\n         *\n         * @returns {BooleanValue}\n         */\n        'trigger_error': function (errorMessageReference, errorTypeReference) {\n            var errorConstantName,\n                errorLevel,\n                errorMessage,\n                errorType;\n\n            errorMessage = errorMessageReference.getNative();\n            errorType = errorTypeReference ? errorTypeReference.getNative() : null;\n\n            if (errorType === null) {\n                errorConstantName = 'E_USER_NOTICE';\n            } else {\n                errorConstantName = Object.keys(ERROR_CONSTANT_NAME_TO_LEVEL).find(function (constantName) {\n                    return internals.getConstant(constantName) === errorType;\n                });\n\n                if (!errorConstantName) {\n                    callStack.raiseError(PHPError.E_WARNING, 'Invalid error type specified');\n\n                    return valueFactory.createBoolean(false);\n                }\n            }\n\n            errorLevel = ERROR_CONSTANT_NAME_TO_LEVEL[errorConstantName];\n\n            callStack.raiseError(errorLevel, errorMessage);\n\n            return valueFactory.createBoolean(true);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the names of all extension modules that have been loaded\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-loaded-extensions.php}\n         *\n         * @param {Reference|Value|Variable|null} onlyZendExtensions\n         * @return {ArrayValue}\n         */\n        'get_loaded_extensions': function (/* onlyZendExtensions */) {\n            return valueFactory.createArray([]);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'DIRECTORY_SEPARATOR': '/',\n        'PATH_SEPARATOR': ':' // Be Unix-y and use colon rather than semi-colon (Windows)\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar INCLUDE_PATH_INI = 'include_path',\n    PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        iniState = internals.iniState,\n        optionSet = internals.optionSet,\n        valueFactory = internals.valueFactory;\n\n    function getFileSystem() {\n        var fileSystem = optionSet.getOption('fileSystem');\n\n        if (!fileSystem) {\n            throw new Error('filesystem :: No `fileSystem` option is configured');\n        }\n\n        return fileSystem;\n    }\n\n    return {\n        'dirname': function (pathReference) {\n            var pathValue = pathReference.getValue(),\n                path = pathValue.getNative();\n\n            if (path && path.indexOf('/') === -1) {\n                path = '.';\n            } else {\n                path = path.replace(/\\/[^\\/]+$/, '');\n            }\n\n            pathValue = valueFactory.createString(path);\n\n            return pathValue;\n        },\n        /**\n         * Determines whether a file or directory exists with the given path\n         *\n         * @see {@link https://secure.php.net/manual/en/function.file-exists.php}\n         *\n         * @returns {BooleanValue}\n         */\n        'file_exists': function (pathReference) {\n            var fileSystem,\n                path;\n\n            if (!pathReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'file_exists() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            fileSystem = getFileSystem();\n            path = pathReference.getValue().getNative();\n\n            return valueFactory.createBoolean(fileSystem.isFile(path) || fileSystem.isDirectory(path));\n        },\n\n        /**\n         * Determines whether a file (not a directory) exists with the given path\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-include-path.php}\n         *\n         * @returns {StringValue}\n         */\n        'get_include_path': function () {\n            return valueFactory.createString(iniState.get(INCLUDE_PATH_INI));\n        },\n\n        /**\n         * Determines whether a file (not a directory) exists with the given path\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-file.php}\n         *\n         * @returns {BooleanValue}\n         */\n        'is_file': function (pathReference) {\n            var fileSystem,\n                path;\n\n            if (!pathReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'is_file() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            fileSystem = getFileSystem();\n            path = pathReference.getValue().getNative();\n\n            return valueFactory.createBoolean(fileSystem.isFile(path));\n        },\n\n        /**\n         * Changes the include path, returning the old one\n         *\n         * @see {@link https://secure.php.net/manual/en/function.set-include-path.php}\n         *\n         * @returns {StringValue} Returns the old include path that was set previously\n         */\n        'set_include_path': function (newIncludePathReference) {\n            var oldIncludePath = iniState.get(INCLUDE_PATH_INI);\n\n            iniState.set(INCLUDE_PATH_INI, newIncludePathReference.getValue().getNative());\n\n            return valueFactory.createString(oldIncludePath);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    CallbackValue = require('./functionHandling/CallbackValue'),\n    PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Calls the specified function, returning its result\n         *\n         * @see {@link https://secure.php.net/manual/en/function.call-user-func.php}\n         *\n         * @param {Variable|Value} callbackReference       The function or callable to call\n         * @param {...Variable|...Value} argumentReference Variable no. of arguments to pass to the callable\n         * @returns {Value}\n         */\n        'call_user_func': function (callbackReference, argumentReference) { //jshint ignore:line\n            var callbackValue = callbackReference.getValue(),\n                expectedReferenceArgumentIndex = null,\n                expectedReferenceError = {},\n                argumentValues = _.map(\n                    [].slice.call(arguments, 1),\n                    function (argumentReference, argumentIndex) {\n                        return new CallbackValue(\n                            function () {\n                                expectedReferenceArgumentIndex = argumentIndex;\n                                throw expectedReferenceError;\n                            },\n                            function () {\n                                return argumentReference.getValue();\n                            }\n                        );\n                    }\n                );\n\n            try {\n                return callbackValue.call(argumentValues, globalNamespace);\n            } catch (error) {\n                // Allow any other errors through\n                if (error !== expectedReferenceError) {\n                    throw error;\n                }\n\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Parameter ' + (expectedReferenceArgumentIndex + 1) +\n                        ' to ' + callbackValue.getCallableName(globalNamespace) +\n                        '() expected to be a reference, value given'\n                );\n\n                return valueFactory.createNull();\n            }\n        },\n        /**\n         * Calls the specified function, returning its result\n         *\n         * @see {@link https://secure.php.net/manual/en/function.call-user-func-array.php}\n         *\n         * @param {Variable|Value} callbackReference      The function or callable to call\n         * @param {Variable|Value} argumentArrayReference An array of arguments to pass to the callable\n         * @returns {Value}\n         */\n        'call_user_func_array': function (callbackReference, argumentArrayReference) {\n            var callbackValue = callbackReference.getValue(),\n                argumentArrayValue = argumentArrayReference.getValue(),\n                argumentValues = argumentArrayValue.getValueReferences();\n\n            return callbackValue.call(argumentValues, globalNamespace);\n        },\n\n        /**\n         * Fetches an array containing all arguments passed to the function.\n         * If called from outside a function, FALSE will be returned.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.func-get-args.php}\n         *\n         * @returns {ArrayValue|BooleanValue}\n         */\n        'func_get_args': function () {\n            var callerCall = callStack.getCaller();\n\n            if (callerCall === null) {\n                // We're not in a function scope - no args to get\n\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'func_get_args(): Called from the global scope - no function context'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createArray(callerCall.getFunctionArgs());\n        },\n\n        /**\n         * Fetches the number of arguments passed to the function.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.func-num-args.php}\n         *\n         * @returns {IntegerValue}\n         */\n        'func_num_args': function () {\n            var callerCall = callStack.getCaller();\n\n            if (callerCall === null) {\n                // We're not in a function scope - no args to get\n\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'func_num_args(): Called from the global scope - no function context'\n                );\n\n                return valueFactory.createInteger(-1);\n            }\n\n            return valueFactory.createInteger(callerCall.getFunctionArgs().length);\n        },\n\n        /**\n         * Determines whether the specified function exists,\n         * returning true if so and false otherwise\n         *\n         * @see {@link https://secure.php.net/manual/en/function.function-exists.php}\n         *\n         * @param {Variable|Value} nameReference The name of the function to check for\n         * @returns {BooleanValue}\n         */\n        'function_exists': function (nameReference) {\n            var name = nameReference.getValue().getNative().replace(/^\\\\/, '');\n\n            return valueFactory.createBoolean(globalNamespace.hasFunction(name));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('phpcore/src/Reference/Reference');\n\n/**\n * Represents a Value object whose reference or value\n * are fetched with a callback function\n *\n * @param {Function} referenceCallback\n * @param {Function} valueCallback\n * @constructor\n */\nfunction CallbackValue(referenceCallback, valueCallback) {\n    /**\n     * @type {Function}\n     */\n    this.referenceCallback = referenceCallback;\n    /**\n     * @type {Function}\n     */\n    this.valueCallback = valueCallback;\n}\n\nutil.inherits(CallbackValue, Reference);\n\n_.extend(CallbackValue.prototype, {\n    /**\n     * Fetches the eventual native value of this value via the provided callback\n     *\n     * @returns {*}\n     */\n    getNative: function () {\n        return this.getValue().getNative();\n    },\n\n    /**\n     * Fetches the reference for this value via the provided callback\n     *\n     * @returns {Reference|Value}\n     */\n    getReference: function () {\n        return this.referenceCallback();\n    },\n\n    /**\n     * Fetches the eventual value of this value via the provided callback\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        return this.valueCallback();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isDefined: function () {\n        return true;\n    }\n});\n\nmodule.exports = CallbackValue;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon');\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        characterRegexCache = {}, // For caching the regexes used to do entity replacements, for speed\n        hasOwn = {}.hasOwnProperty,\n        valueFactory = internals.valueFactory,\n        PHPError = phpCommon.PHPError,\n        ENT_COMPAT = internals.getConstant('ENT_COMPAT'),\n        ENT_HTML401 = internals.getConstant('ENT_HTML401'),\n        ENT_NOQUOTES = internals.getConstant('ENT_NOQUOTES'),\n        ENT_QUOTES = internals.getConstant('ENT_QUOTES'),\n        HTML_ENTITIES = internals.getConstant('HTML_ENTITIES'),\n        HTML_SPECIALCHARS = internals.getConstant('HTML_SPECIALCHARS'),\n        TRANSLATION_TABLES = {\n            HTML_ENTITIES: {\n                '&': '&amp;',\n                '<': '&lt;',\n                '>': '&gt;',\n\n                '£': '&pound;' // TODO: Support adding remaining entities via addons\n            },\n            HTML_SPECIALCHARS: {\n                '&': '&amp;',\n                '<': '&lt;',\n                '>': '&gt;'\n            }\n        };\n\n    /**\n     * Fetches a translation table\n     *\n     * @param {string} functionName\n     * @param {number} tableID\n     * @param {number} flags\n     * @param {string} encoding\n     * @return {object}\n     */\n    function getTranslationTable(functionName, tableID, flags, encoding) {\n        /*jshint bitwise: false */\n        var quotesMode = 'double',\n            tableData;\n\n        switch (tableID) {\n            case HTML_SPECIALCHARS:\n                tableData = TRANSLATION_TABLES.HTML_SPECIALCHARS;\n                break;\n            case HTML_ENTITIES:\n                tableData = TRANSLATION_TABLES.HTML_ENTITIES;\n                break;\n            default:\n                throw new Error('Invalid table ID \"' + tableID + '\" given');\n        }\n\n        if ((flags & 3) === ENT_COMPAT) {\n            quotesMode = 'double';\n        } else if ((flags & 3) === ENT_QUOTES) {\n            quotesMode = 'both';\n        } else if ((flags & 3) === ENT_NOQUOTES) {\n            quotesMode = 'none';\n        }\n\n        switch (quotesMode) {\n            case 'double':\n                tableData = Object.assign({}, tableData, { // Don't edit the original table object\n                    '\"': '&quot;'\n                });\n                break;\n            case 'both':\n                tableData = Object.assign({}, tableData, { // Don't edit the original table object\n                    '\"': '&quot;',\n                    '\\'': '&#039;'\n                });\n                break;\n            default:\n            case 'none':\n            // Do nothing\n        }\n\n        if (encoding.toLowerCase() !== 'utf-8') {\n            // Only UTF-8 is supported for now\n            callStack.raiseError(\n                PHPError.E_WARNING,\n                functionName + '(): charset `' + encoding + '\\' not supported, assuming utf-8'\n            );\n        }\n\n        return tableData;\n    }\n\n    /**\n     * Performs the actual HTML-encoding of a string using a given translation table\n     *\n     * @param {string} string String to encode\n     * @param {object} translationTable Translation table (as returned from getTranslationTable())\n     * @param {boolean} doubleEncode\n     */\n    function htmlEncode(string, translationTable, doubleEncode) {\n        _.forOwn(translationTable, function (entityHTML, character) {\n            var cacheKey = (doubleEncode ? '<double>' : '<single>') + character,\n                pattern,\n                regex;\n\n            if (!hasOwn.call(characterRegexCache, cacheKey)) {\n                pattern = '\\\\' + character;\n\n                if (character === '&' && !doubleEncode) {\n                    // Ensure we don't double-encode any entities in the two possible formats\n                    // \"&lt;\" or \"&#012\"\n                    pattern += '(?!\\\\w+;|#\\\\d+;)';\n                }\n\n                regex = new RegExp(pattern, 'g');\n\n                characterRegexCache[cacheKey] = regex;\n            } else {\n                regex = characterRegexCache[cacheKey];\n            }\n\n            string = string.replace(regex, entityHTML);\n        });\n\n        return string;\n    }\n\n    return {\n        /**\n         * Fetches the translation table used by htmlspecialchars(...) or htmlentities(...)\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-html-translation-table.php}\n         *\n         * @param {IntegerValue|Reference|Variable} tableReference\n         * @param {IntegerValue|Reference|Variable} flagsReference\n         * @param {Reference|StringValue|Variable} encodingReference\n         * @returns {ArrayValue}\n         */\n        'get_html_translation_table': function (tableReference, flagsReference, encodingReference) {\n            /*jshint bitwise: false */\n            var tableID = tableReference ?\n                    tableReference.getValue().coerceToInteger().getNative() :\n                    // Default to the htmlspecialchars(...) table\n                    HTML_SPECIALCHARS,\n                flags = flagsReference ?\n                    flagsReference.getValue().coerceToInteger().getNative() :\n                    ENT_COMPAT | ENT_HTML401,\n                encoding = encodingReference ?\n                    encodingReference.getValue().coerceToString().getNative() :\n                    'UTF-8';\n\n            return valueFactory.createArray(\n                getTranslationTable('get_html_translation_table', tableID, flags, encoding)\n            );\n        },\n\n        /**\n         * Converts all applicable characters to HTML entities\n         *\n         * @see {@link https://secure.php.net/manual/en/function.htmlentities.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference\n         * @param {IntegerValue|Reference|Variable} flagsReference\n         * @param {Reference|StringValue|Variable} encodingReference\n         * @param {BooleanValue|Reference|Variable} doubleEncodeReference\n         * @returns {StringValue}\n         */\n        'htmlentities': function (stringReference, flagsReference, encodingReference, doubleEncodeReference) {\n            /*jshint bitwise: false */\n            var doubleEncode,\n                string,\n                flags,\n                encoding,\n                translationTable;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'htmlentities() expects at least 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            doubleEncode = doubleEncodeReference ?\n                doubleEncodeReference.getValue().coerceToBoolean().getNative() :\n                true;\n            string = stringReference.getValue().coerceToString().getNative();\n            flags = flagsReference ?\n                flagsReference.getValue().coerceToInteger().getNative() :\n                ENT_COMPAT | ENT_HTML401;\n            encoding = encodingReference ?\n                encodingReference.getValue().coerceToString().getNative() :\n                'UTF-8';\n            translationTable = getTranslationTable(\n                'htmlentities',\n                HTML_ENTITIES,\n                flags,\n                encoding\n            );\n\n            string = htmlEncode(string, translationTable, doubleEncode);\n\n            return valueFactory.createString(string);\n        },\n\n        /**\n         * Converts all special characters to HTML entities\n         *\n         * @see {@link https://secure.php.net/manual/en/function.htmlspecialchars.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference\n         * @param {IntegerValue|Reference|Variable} flagsReference\n         * @param {Reference|StringValue|Variable} encodingReference\n         * @param {BooleanValue|Reference|Variable} doubleEncodeReference\n         * @returns {StringValue}\n         */\n        'htmlspecialchars': function (stringReference, flagsReference, encodingReference, doubleEncodeReference) {\n            /*jshint bitwise: false */\n            var doubleEncode,\n                string,\n                flags,\n                encoding,\n                translationTable;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'htmlspecialchars() expects at least 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            doubleEncode = doubleEncodeReference ?\n                doubleEncodeReference.getValue().coerceToBoolean().getNative() :\n                true;\n            string = stringReference.getValue().coerceToString().getNative();\n            flags = flagsReference ?\n                flagsReference.getValue().coerceToInteger().getNative() :\n                ENT_COMPAT | ENT_HTML401;\n            encoding = encodingReference ?\n                encodingReference.getValue().coerceToString().getNative() :\n                'UTF-8';\n            translationTable = getTranslationTable(\n                'htmlspecialchars',\n                HTML_SPECIALCHARS,\n                flags,\n                encoding\n            );\n\n            string = htmlEncode(string, translationTable, doubleEncode);\n\n            return valueFactory.createString(string);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Exception thrown if an argument is not of the expected type\n     *\n     * @see {@link https://secure.php.net/manual/en/class.invalidargumentexception.php}\n     * @constructor\n     */\n    function InvalidArgumentException() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base PHP LogicException class\n    internals.extendClass('LogicException');\n\n    internals.disableAutoCoercion();\n\n    return InvalidArgumentException;\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Exception representing an issue with the logic of the program\n     *\n     * @see {@link https://secure.php.net/manual/en/class.logicexception.php}\n     * @constructor\n     */\n    function LogicException() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base PHP Exception class\n    internals.extendClass('Exception');\n\n    internals.disableAutoCoercion();\n\n    return LogicException;\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception,\n    NoActiveOutputBufferException = require('phpcore/src/Exception/NoActiveOutputBufferException'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * Output control functions\n *\n * @param {object} internals\n * @return {object}\n */\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        output = internals.output,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Erases the current output buffer without turning it off\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-clean.php}\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_clean': function () {\n            try {\n                output.cleanCurrentBuffer();\n            } catch (error) {\n                if (!(error instanceof NoActiveOutputBufferException)) {\n                    throw error;\n                }\n\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_clean(): failed to delete buffer. No buffer to delete'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Erases the output buffer and then turns it off, essentially discarding the current buffer\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-end-clean.php}\n         * @TODO: Output E_NOTICE on failure\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_end_clean': function () {\n            try {\n                output.popBuffer();\n            } catch (error) {\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_end_clean(): failed to delete buffer. No buffer to delete'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Sends the output buffer to the next buffer in the chain, then turns off the output buffer.\n         * If the next one in the chain is the default StdoutBuffer, then the buffer contents\n         * will be written to stdout\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-end-flush.php}\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_end_flush': function () {\n            try {\n                output.flushCurrentBuffer();\n                output.popBuffer();\n            } catch (error) {\n                if (!(error instanceof NoActiveOutputBufferException)) {\n                    throw error;\n                }\n\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_end_flush(): failed to delete and flush buffer. No buffer to delete or flush'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Sends the output buffer to the next buffer in the chain.\n         * If the next one in the chain is the default StdoutBuffer, then the buffer contents\n         * will be written to stdout\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-flush.php}\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_flush': function () {\n            try {\n                output.flushCurrentBuffer();\n            } catch (error) {\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_flush(): failed to flush buffer. No buffer to flush'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Fetches the contents of the output buffer and deletes the current buffer\n         * (essentially executing `ob_get_contents()` and then `ob_end_clean()`)\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-clean.php}\n         *\n         * @returns {StringValue|BooleanValue} Returns the output buffer or FALSE if no buffer is active\n         */\n        'ob_get_clean': function () {\n            var contents;\n\n            if (output.getDepth() === 0) {\n                // No buffer is active (except the default StdoutBuffer, which does not count for this)\n                return valueFactory.createBoolean(false);\n            }\n\n            contents = output.getCurrentBufferContents();\n            output.popBuffer();\n\n            return valueFactory.createString(contents);\n        },\n\n        /**\n         * Fetches the contents of the output buffer without clearing it\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-contents.php}\n         *\n         * @returns {StringValue|BooleanValue} Returns the output buffer or FALSE if no buffer is active\n         */\n        'ob_get_contents': function () {\n            var contents;\n\n            if (output.getDepth() === 0) {\n                // No buffer is active (except the default StdoutBuffer, which does not count for this)\n                return valueFactory.createBoolean(false);\n            }\n\n            contents = output.getCurrentBufferContents();\n\n            return valueFactory.createString(contents);\n        },\n\n        /**\n         * Flushes the output buffer, returns it as a string and turns off output buffering\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-flush.php}\n         *\n         * @returns {StringValue|BooleanValue} Returns the output buffer or FALSE if no buffer is active\n         */\n        'ob_get_flush': function () {\n            var contents;\n\n            if (output.getDepth() === 0) {\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_get_flush(): failed to delete and flush buffer. No buffer to delete or flush'\n                );\n\n                // No buffer is active (except the default StdoutBuffer, which does not count for this)\n                return valueFactory.createBoolean(false);\n            }\n\n            contents = output.getCurrentBufferContents();\n            output.flushCurrentBuffer();\n\n            return valueFactory.createString(contents);\n        },\n\n        /**\n         * Fetches the nesting level of the output buffering mechanism\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-level.php}\n         *\n         * @returns {IntegerValue} Returns the nesting level of the output buffering mechanism\n         */\n        'ob_get_level': function () {\n            return valueFactory.createInteger(output.getDepth());\n        },\n\n        /**\n         * Turns on output buffering, or adds a new buffer to the stack if it is already on\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-start.php}\n         *\n         * @param {Variable|Value} outputCallbackReference\n         */\n        'ob_start': function (outputCallbackReference, chunkSizeReference, flagsReference) {\n            if (outputCallbackReference || chunkSizeReference || flagsReference) {\n                throw new Exception('ob_start() :: No arguments are supported yet');\n            }\n\n            output.pushBuffer();\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar REGEX_SPECIAL_CHAR_PATTERN = /[.\\\\+*?[^\\]$(){}=!<>|:#-]/g,\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * Basic-level PCRE support module. JavaScript's own RegExp implementation is used,\n * meaning that only the JavaScript-compliant subset of regular expression is supported.\n */\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Quote (escape) regular expression characters\n         *\n         * @see {@link https://secure.php.net/manual/en/function.preg-quote.php}\n         *\n         * @param {Reference|Variable|Value} stringReference\n         * @param {Reference|Variable|Value} delimiterReference\n         * @returns {StringValue}\n         */\n        'preg_quote': function (stringReference, delimiterReference) {\n            var delimiter,\n                quoted,\n                string;\n\n            if (!stringReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'preg_quote() expects at least 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            string = stringReference.getNative();\n\n            quoted = string.replace(REGEX_SPECIAL_CHAR_PATTERN, '\\\\$&');\n\n            if (delimiterReference) {\n                delimiter = delimiterReference.getNative().charAt(0); // We only consider the first char of delimiter\n                delimiter = delimiter.replace(REGEX_SPECIAL_CHAR_PATTERN, '');\n\n                if (delimiter !== '') {\n                    quoted = quoted.replace(new RegExp('\\\\' + delimiter, 'g'), '\\\\$&');\n                }\n            }\n\n            return valueFactory.createString(quoted);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'PREG_OFFSET_CAPTURE': 256,\n        'PREG_PATTERN_ORDER': 1,\n        'PREG_SET_ORDER': 2\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar systemConstants = require('../../../constants');\n\nmodule.exports = function () {\n    // NB: Some of the most basic constants (eg. PHP_EOL) are defined by the PHPCore library\n\n    return {\n        'PHP_OS': 'Uniter',\n        'PHP_SAPI': systemConstants.sapi,\n        'PHP_VERSION':\n            systemConstants.phpVersion.major + '.' +\n            systemConstants.phpVersion.minor + '.' +\n            systemConstants.phpVersion.release,\n        'PHP_VERSION_ID':\n            systemConstants.phpVersion.major * 10000 +\n            systemConstants.phpVersion.minor * 100 +\n            systemConstants.phpVersion.release\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar systemConstants = require('../../../../constants');\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Returns information about the operating system PHP is running on\n         *\n         * @see {@link https://secure.php.net/manual/en/function.php-uname.php}\n         *\n         * @param {Variable|Value} modeReference\n         * @returns {StringValue}\n         */\n        'php_uname': function (modeReference) {\n            var mode = modeReference ? modeReference.getValue().getNative() : 'a',\n                string;\n\n            switch (mode) {\n                case 's': // Operating system name. eg. FreeBSD\n                    string = systemConstants.operatingSystem.name;\n                    break;\n                case 'n': // Host name. eg. localhost.example.com\n                    string = systemConstants.operatingSystem.hostName;\n                    break;\n                case 'r': // Release name. eg. 5.1.2-RELEASE\n                    string = systemConstants.operatingSystem.releaseName;\n                    break;\n                case 'v': // Version information. Varies a lot between operating systems\n                    string = systemConstants.operatingSystem.versionInfo;\n                    break;\n                case 'm': // Machine type. eg. i386\n                    string = systemConstants.operatingSystem.machineType;\n                    break;\n                default:\n                case 'a': // All modes together (default)\n                    string = systemConstants.operatingSystem.name + ' ' +\n                        systemConstants.operatingSystem.hostName + ' ' +\n                        systemConstants.operatingSystem.releaseName + ' ' +\n                        systemConstants.operatingSystem.versionInfo + ' ' +\n                        systemConstants.operatingSystem.machineType;\n            }\n\n            return valueFactory.createString(string);\n        },\n\n        /**\n         * Returns the PHP version that this version of Uniter is targeting\n         *\n         * @see {@link https://secure.php.net/manual/en/function.phpversion.php}\n         *\n         * @returns {BooleanValue|StringValue}\n         */\n        'phpversion': function (extensionName) {\n            if (extensionName) {\n                // No extensions are supported (yet)\n                return valueFactory.createBoolean(false);\n            }\n\n            // Default behaviour is just to return the PHP version string\n            return valueFactory.createString(\n                systemConstants.phpVersion.major + '.' +\n                systemConstants.phpVersion.minor + '.' +\n                systemConstants.phpVersion.release\n            );\n        },\n\n        /**\n         * Returns the version of the current Zend engine (different to the PHP version)\n         *\n         * Uniter is not related to Zend's engine at all, so this function makes little sense here.\n         * It is required by some scripts though (eg. Zend's test runner `run-tests.php` script),\n         * so it is added for completeness. HHVM also defines this function for compatibility.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.zend-version.php}\n         *\n         * @returns {StringValue}\n         */\n        'zend_version': function () {\n            return valueFactory.createString(\n                systemConstants.zendVersion.major + '.' +\n                systemConstants.zendVersion.minor + '.' +\n                systemConstants.zendVersion.release\n            );\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * SPL-related PHP builtin functions.\n * Note that some functions (eg. spl_autoload_register) are provided by PHPCore\n *\n * @param {object} internals\n * @return {object}\n */\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the unique identifier \"hash\" for a PHP object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.spl-object-hash.php}\n         *\n         * @param {Variable|Value} haystackReference    The object to get a unique identifier for\n         * @returns {StringValue}                       The unique identifier\n         */\n        'spl_object_hash': function (objectReference) {\n            var objectValue = objectReference.getValue(),\n                idString,\n                padding;\n\n            if (objectValue.getType() !== 'object') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'spl_object_hash() expects parameter 1 to be object, ' + objectValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            // Use Uniter's internal unique object IDs to build the \"hash\"\n            idString = objectValue.getID().toString();\n            // PHP object \"hashes\" are 32 bytes long, so emulate that here\n            padding = new Array(32 - idString.length + 1).join('0');\n\n            return valueFactory.createString(padding + idString);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar FormatConverter = require('./string/FormatConverter'),\n    FormatParser = require('./string/FormatParser'),\n    Formatter = require('./string/Formatter'),\n    NativeFormatter = require('./string/NativeFormatter');\n\n/**\n * String handling bindings\n */\nmodule.exports = function () {\n    return {\n        stringFormatter: function () {\n            return new Formatter(new NativeFormatter(new FormatParser(), new FormatConverter()));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Processes a conversion specification supported by the printf(...) family of functions\n *\n * @constructor\n */\nfunction FormatConverter() {\n}\n\n_.extend(FormatConverter.prototype, {\n    /**\n     * Processes a conversion specification, converting the specified value to a string\n     *\n     * @param {*} value\n     * @param {object} directive\n     * @returns {string}\n     */\n    convert: function (value, directive) {\n        switch (directive.type) {\n            case 'signed-decimal': // eg. \"%d\"\n                /*jshint bitwise: false */\n                value = value >> 0; // Cast to signed integer number\n\n                if (directive.showPositiveSign && value > 0) {\n                    value = '+' + value;\n                }\n\n                value += ''; // Cast to string\n\n                // Alignment specifiers for printf(...) refer to which side the number should be on,\n                // but .padStart(...) and .padEnd(...) refer to which side the _padding_ should be on (the opposite)\n                // which is why these might seem reversed\n                value = directive.alignmentSpecifier === 'right' ?\n                    value.padStart(directive.widthSpecifier, directive.paddingCharacter) :\n                    value.padEnd(directive.widthSpecifier, directive.paddingCharacter);\n\n                return value;\n            case 'string': // eg. \"%s\"\n                return value;\n            default:\n                throw new Error('Unsupported conversion specification type \"' + directive.type + '\"');\n        }\n    }\n});\n\nmodule.exports = FormatConverter;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    TYPE_SPECIFIER_TO_TYPE = {\n        'b': 'binary',\n        'c': 'ascii-character',\n        'd': 'signed-decimal',\n        'e': 'lower-exponent',\n        'E': 'upper-exponent',\n        'f': 'locale-aware-float',\n        'F': 'locale-unaware-float',\n        'g': 'lower-exponent-or-float',\n        'G': 'upper-exponent-or-float',\n        'o': 'octal',\n        's': 'string',\n        'u': 'unsigned-decimal',\n        'x': 'lower-hexadecimal',\n        'X': 'upper-hexadecimal'\n    };\n\n/**\n * Parses strings that use the format supported by the printf(...) family of functions\n *\n * @constructor\n */\nfunction FormatParser() {\n}\n\n_.extend(FormatParser.prototype, {\n    /**\n     * Parses the provided format string to a list of directives\n     *\n     * @param {string} formatString\n     * @returns {object[]}\n     */\n    parse: function (formatString) {\n        var alignmentSpecifier,\n            directives = [],\n            explicitArgumentPosition,\n            lastMatchEnd = 0,\n            match,\n            nextArgumentPosition = 0,\n            regex = /%(?:(\\d+)\\$)?(\\+)?(?:([ 0])|'(.))?(-)?(\\d+)?(?:\\.(\\D)?(\\d+))?([%bcdeEfFgGosuxX])/g,\n            paddingCharacter,\n            precisionSpecifier,\n            showPositiveNumberSigns,\n            typeSpecifier,\n            widthSpecifier;\n\n        while ((match = regex.exec(formatString)) !== null) {\n            if (match[9] === '%') {\n                continue;\n            }\n\n            if (lastMatchEnd < match.index) {\n                directives.push({\n                    kind: 'ordinary',\n                    text: formatString.substring(lastMatchEnd, match.index)\n                        // Resolve escapes back to a single literal \"%\" character\n                        .replace(/%%/g, '%')\n                });\n            }\n\n            explicitArgumentPosition = match[1] ? match[1] * 1 - 1 : null;\n\n            // Sign specifier - prefix positive numbers with \"+\"\n            // (by default only negatives are prefixed, with \"-\")\n            showPositiveNumberSigns = !!match[2];\n\n            // Padding character - 0 or a space, or another character if prefixed with a single quote\n            paddingCharacter = match[3] || match[4] || ' ';\n\n            // Whether to justify to the left or to the right (default is to the right)\n            alignmentSpecifier = match[5] === '-' ? 'left': 'right';\n\n            // The minimum no. of characters this conversion should result in\n            // (using the padding character determined above)\n            widthSpecifier = (match[6] || 0) * 1;\n\n            if (match[7]) {\n                // The character to use to pad a number may optionally be specified\n                // between the period and the digit\n                paddingCharacter = match[7];\n            }\n\n            // For a number this specifies how many decimal digits to display after the decimal point.\n            // For a string this acts as a cutoff, specifying the maximum length it will be truncated to\n            precisionSpecifier = (match[8] || 0) * 1;\n\n            typeSpecifier = match[9];\n\n            if (typeSpecifier === 's') {\n                directives.push({\n                    kind: 'conversion-specification',\n                    argumentPosition: explicitArgumentPosition || nextArgumentPosition,\n                    type: 'string'\n                });\n            } else {\n                directives.push({\n                    kind: 'conversion-specification',\n                    argumentPosition: explicitArgumentPosition || nextArgumentPosition,\n                    type: TYPE_SPECIFIER_TO_TYPE[typeSpecifier],\n                    showPositiveSign: showPositiveNumberSigns,\n                    paddingCharacter: paddingCharacter,\n                    alignmentSpecifier: alignmentSpecifier,\n                    widthSpecifier: widthSpecifier,\n                    precisionSpecifier: precisionSpecifier\n                });\n            }\n\n            if (explicitArgumentPosition === null) {\n                nextArgumentPosition++;\n            }\n\n            lastMatchEnd = match.index + match[0].length;\n        }\n\n        if (lastMatchEnd < formatString.length) {\n            directives.push({\n                kind: 'ordinary',\n                text: formatString.substr(lastMatchEnd)\n                    // Resolve escapes back to a single literal \"%\" character\n                    .replace(/%%/g, '%')\n            });\n        }\n\n        return directives;\n    }\n});\n\nmodule.exports = FormatParser;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Formats a string according to the format supported by the printf(...) family of functions\n *\n * @param {NativeFormatter} nativeFormatter\n * @constructor\n */\nfunction Formatter(nativeFormatter) {\n    /**\n     * @type {NativeFormatter}\n     */\n    this.nativeFormatter = nativeFormatter;\n}\n\n_.extend(Formatter.prototype, {\n    /**\n     * Builds and returns the provided format string populated with the given arguments\n     *\n     * @param {string} formatString\n     * @param {Reference[]|Value[]|Variable[]} argReferences\n     * @returns {string}\n     */\n    format: function (formatString, argReferences) {\n        var argNatives = argReferences.map(function (argReference) {\n            var argValue = argReference.getValue();\n\n            if (argValue.getType() === 'object' || argValue.getType() === 'array') {\n                argValue = argValue.coerceToString();\n            }\n\n            return argValue.getNative();\n        });\n\n        return this.nativeFormatter.format(formatString, argNatives);\n    }\n});\n\nmodule.exports = Formatter;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception,\n    MissingFormatArgumentException = require('./Exception/MissingFormatArgumentException');\n\n/**\n * Formats a string according to the format supported by the printf(...) family of functions\n *\n * @param {FormatParser} formatParser\n * @param {FormatConverter} formatConverter\n * @constructor\n */\nfunction NativeFormatter(formatParser, formatConverter) {\n    /**\n     * @type {FormatConverter}\n     */\n    this.formatConverter = formatConverter;\n    /**\n     * @type {FormatParser}\n     */\n    this.formatParser = formatParser;\n}\n\n_.extend(NativeFormatter.prototype, {\n    /**\n     * Builds and returns the provided format string populated with the given arguments\n     *\n     * @param {string} formatString\n     * @param {array} args\n     * @returns {string}\n     */\n    format: function (formatString, args) {\n        var formatter = this,\n            directives = formatter.formatParser.parse(formatString);\n\n        args = args || [];\n\n        return directives\n            .map(function (directive) {\n                var arg;\n\n                if (directive.kind === 'ordinary') {\n                    // Plain text - just output as it was in the format string\n                    return directive.text;\n                }\n\n                if (directive.kind === 'conversion-specification') {\n                    // Conversion specifications are the placeholders \"%s\", \"%d\" etc.\n\n                    if (directive.argumentPosition >= args.length) {\n                        throw new MissingFormatArgumentException(directive.argumentPosition);\n                    }\n\n                    arg = args[directive.argumentPosition];\n\n                    // Perform the conversion\n                    return formatter.formatConverter.convert(arg, directive);\n                }\n\n                throw new Exception('Unsupported directive kind \"' + directive.kind + '\"');\n            })\n            .join('');\n    }\n});\n\nmodule.exports = NativeFormatter;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'HTML_SPECIALCHARS': 0,\n        'HTML_ENTITIES': 1,\n\n        'ENT_NOQUOTES': 0,\n        'ENT_COMPAT': 2,\n        'ENT_QUOTES': 3,\n\n        'ENT_HTML401': 0,\n\n        'ENT_SUBSTITUTE': 8 // Not applicable, as JS string literals cannot contain invalid Unicode escape sequences\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    MissingFormatArgumentException = require('../bindings/string/Exception/MissingFormatArgumentException'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        formatter = internals.getBinding('stringFormatter'),\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Split a string into an array by a certain substring\n         *\n         * @see {@link https://secure.php.net/manual/en/function.explode.php}\n         *\n         * @param {Reference|StringValue|Variable} delimiterReference  The substring to split the input string on\n         * @param {Reference|StringValue|Variable} stringReference  The string to split\n         * @param {Reference|IntegerValue|Variable} limitReference  The string to split\n         * @returns {ArrayValue|BooleanValue} The resulting array on success, or false on failure\n         */\n        'explode': function (delimiterReference, stringReference, limitReference) {\n            var delimiter,\n                elements,\n                limit,\n                string;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'explode() expects at least 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            delimiter = delimiterReference.getValue().coerceToString().getNative();\n            limit = limitReference ? limitReference.getValue().getNative() : null;\n            string = stringReference.getValue().coerceToString().getNative();\n\n            elements = string.split(delimiter);\n\n            if (limit === 0) {\n                limit = 1;\n            }\n\n            if (limit < 0) {\n                elements = elements.slice(0, elements.length + limit);\n            } else if (limit !== null) {\n                if (limit > elements.length) {\n                    limit = elements.length;\n                }\n\n                elements = elements.slice(0, limit - 1).concat(elements.slice(limit - 1).join(delimiter));\n            }\n\n            return valueFactory.createArray(elements);\n        },\n\n        'strlen': function (stringReference) {\n            var stringValue = stringReference.getValue();\n\n            if (stringValue.getType() === 'array' || stringValue.getType() === 'object') {\n                callStack.raiseError(PHPError.E_WARNING, 'strlen() expects parameter 1 to be string, ' + stringValue.getType() + ' given');\n                return valueFactory.createNull();\n            }\n\n            return valueFactory.createInteger(stringValue.getLength());\n        },\n\n        /**\n         * Builds and returns a formatted string\n         *\n         * @see {@link https://secure.php.net/manual/en/function.sprintf.php}\n         *\n         * @param {Reference|Value|Variable} templateReference  The template format string\n         * @returns {StringValue|BooleanValue} The built string on success, or false on failure\n         */\n        'sprintf': function (templateReference) {\n            var args = [].slice.call(arguments, 1);\n\n            try {\n                return valueFactory.createString(\n                    formatter.format(templateReference.getNative(), args)\n                );\n            } catch (error) {\n                if (error instanceof MissingFormatArgumentException) {\n                    callStack.raiseError(PHPError.E_WARNING, 'sprintf(): Too few arguments');\n\n                    return valueFactory.createBoolean(false);\n                }\n\n                throw error;\n            }\n        },\n\n        'str_replace': function (\n            searchReference,\n            replaceReference,\n            subjectReference,\n            countReference\n        ) {\n            function getNative(reference) {\n                var value = reference.getValue();\n\n                return value.getNative();\n            }\n\n            var count = 0,\n                search,\n                replacement,\n                subject,\n                replace = countReference ?\n                    function replace(search, replacement, subject) {\n                        return subject.replace(search, function () {\n                            count++;\n\n                            return replacement;\n                        });\n                    } :\n                    function replace(search, replacement, subject) {\n                        return subject.replace(search, replacement);\n                    };\n\n            if (arguments.length < 3) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'str_replace() expects at least 3 parameters, ' + arguments.length + ' given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            search = getNative(searchReference);\n            replacement = getNative(replaceReference);\n            subject = getNative(subjectReference);\n\n            // Use a regex to search for substrings, for speed\n            function buildRegex(search) {\n                return new RegExp(\n                    _.escapeRegExp(search),\n                    'g'\n                );\n            }\n\n            if (_.isArray(search)) {\n                if (_.isArray(replacement)) {\n                    // Search and replacement are both arrays\n                    _.each(search, function (search, index) {\n                        subject = replace(\n                            buildRegex(search),\n                            index < replacement.length ? replacement[index] : '',\n                            subject\n                        );\n                    });\n                } else {\n                    // Only search is an array, replacement is just a string\n                    _.each(search, function (search) {\n                        subject = replace(\n                            buildRegex(search),\n                            replacement,\n                            subject\n                        );\n                    });\n                }\n            } else {\n                // Simple case: search and replacement are both strings\n                subject = replace(\n                    buildRegex(search),\n                    replacement,\n                    subject\n                );\n            }\n\n            if (countReference) {\n                countReference.setValue(valueFactory.createInteger(count));\n            }\n\n            return valueFactory.createString(subject);\n        },\n\n        'strpos': function (haystackReference, needleReference, offsetReference) {\n            var haystack = haystackReference.getNative(),\n                needle = needleReference.getNative(),\n                offset = offsetReference ? offsetReference.getNative() : 0,\n                position;\n\n            // Negative offsets indicate no. of chars at end of haystack to scan\n            if (offset < 0) {\n                offset = haystack.length + offset;\n            }\n\n            position = haystack.substr(offset).indexOf(needle);\n\n            if (position === -1) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createInteger(offset + position);\n        },\n\n        /**\n         * Fetch the substring after (and including) the last occurrence of a needle\n         *\n         * @see {@link https://secure.php.net/manual/en/function.strrchr.php}\n         *\n         * @param {Reference|StringValue|Variable} haystackReference  The string to search for the needle inside\n         * @param {Reference|StringValue|Variable} needleReference  The substring to look for in the haystack\n         * @returns {StringValue|BooleanValue|NullValue} The resulting string on success, false if not found and null on error\n         */\n        'strrchr': function (haystackReference, needleReference) {\n            var haystack,\n                needleValue,\n                needle,\n                position;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'strrchr() expects exactly 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            haystack = haystackReference.getValue().coerceToString().getNative();\n            needleValue = needleReference.getValue();\n            needle = needleValue.getType() === 'string' ?\n                needleValue.getNative().charAt(0) :\n                String.fromCharCode(needleValue.coerceToInteger().getNative());\n            position = haystack.lastIndexOf(needle);\n\n            if (position === -1) {\n                // Return FALSE if needle is not found in haystack\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createString(haystack.substr(position));\n        },\n\n        'strrpos': function (haystackReference, needleReference, offsetReference) {\n            var haystack = haystackReference.getValue().getNative(),\n                needle = needleReference.getValue().getNative(),\n                offset = offsetReference ? offsetReference.getValue().getNative() : 0,\n                position;\n\n            // Negative offsets indicate no. of chars at end of haystack to scan\n            if (offset < 0) {\n                offset = haystack.length + offset;\n            }\n\n            position = haystack.substr(offset).lastIndexOf(needle);\n\n            if (position === -1) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createInteger(offset + position);\n        },\n\n        /**\n         * Convert a string to lowercase\n         *\n         * @see {@link https://secure.php.net/manual/en/function.strtolower.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference  The string to convert to lowercase\n         * @returns {StringValue|NullValue} The resulting string on success, or null on failure\n         */\n        'strtolower': function (stringReference) {\n            var string;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'strtolower() expects exactly 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            string = stringReference.getValue().coerceToString().getNative();\n\n            return valueFactory.createString(string.toLowerCase());\n        },\n\n        /**\n         * Convert a string to uppercase\n         *\n         * @see {@link https://secure.php.net/manual/en/function.strtoupper.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference  The string to convert to uppercase\n         * @returns {StringValue|NullValue} The resulting string on success, or null on failure\n         */\n        'strtoupper': function (stringReference) {\n            var string;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'strtoupper() expects exactly 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            string = stringReference.getValue().coerceToString().getNative();\n\n            return valueFactory.createString(string.toUpperCase());\n        },\n\n        'strtr': function (stringReference) {\n            var from,\n                to,\n                i,\n                replacePairs,\n                replaceKeys,\n                replaceValues,\n                string = stringReference.getValue().getNative();\n\n            if (arguments.length === 2) {\n                // 2-operand form: second argument is an associative array\n                // mapping substrings to search for to their replacements\n                replacePairs = arguments[1].getValue();\n                replaceKeys = replacePairs.getKeys();\n                replaceValues = replacePairs.getValues();\n\n                _.each(replaceKeys, function (key, index) {\n                    var find = key.coerceToString().getNative(),\n                        replace = replaceValues[index].coerceToString().getNative();\n\n                    string = string.replace(\n                        new RegExp(_.escapeRegExp(find), 'g'),\n                        replace\n                    );\n                });\n            } else {\n                // 3-operand form: replace all characters in $from\n                // with their counterparts at that index in $to\n                from = arguments[1].getValue().getNative();\n                to = arguments[2].getValue().getNative();\n\n                for (i = 0; i < from.length && i < to.length; i++) {\n                    string = string.replace(\n                        new RegExp(_.escapeRegExp(from.charAt(i)), 'g'),\n                        to.charAt(i)\n                    );\n                }\n            }\n\n            return valueFactory.createString(string);\n        },\n\n        'substr': function (stringReference, startReference, lengthReference) {\n            var string = stringReference.getValue().getNative(),\n                start = startReference.getValue().getNative(),\n                length = lengthReference ? lengthReference.getValue().getNative() : string.length,\n                substring;\n\n            if (start < 0) {\n                start = string.length + start;\n            }\n\n            if (length < 0) {\n                length = string.length - start + length;\n            }\n\n            substring = string.substr(start, length);\n\n            return valueFactory.createString(substring);\n        },\n\n        /**\n         * Counts the number of substring occurrences\n         *\n         * @see {@link https://secure.php.net/manual/en/function.substr-count.php}\n         *\n         * @param {Variable|Value} haystackReference    The string to search inside\n         * @param {Variable|Value} needleReference      The string to search inside\n         * @param {Variable|Value} offsetReference      The position to start searching from\n         * @param {Variable|Value} lengthReference      The no. of chars from the offset to search inside\n         * @returns {IntegerValue}                      The number of occurrences found\n         */\n        'substr_count': function (haystackReference, needleReference, offsetReference, lengthReference) {\n            var haystack,\n                needle,\n                offset,\n                length,\n                trimmedHaystack;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'substr_count() expects at least 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            haystack = haystackReference.getValue().coerceToString().getNative();\n            needle = needleReference.getValue().coerceToString().getNative();\n            // Negative offsets are natively supported by JS .substr()\n            offset = offsetReference ? offsetReference.getNative() : 0;\n\n            if (lengthReference) {\n                length = lengthReference.getNative();\n\n                // Negative lengths count back from the end of the string\n                if (length < 0) {\n                    length = haystack.length - offset + length;\n                }\n            }\n\n            trimmedHaystack = haystack.substr(offset, length);\n\n            return valueFactory.createInteger(trimmedHaystack.split(needle).length - 1);\n        },\n\n        /**\n         * Strip whitespace or other characters from both ends of a string\n         *\n         * @see {@link https://secure.php.net/manual/en/function.trim.php}\n         *\n         * @param {Variable|Value} stringReference          The string to trim\n         * @param {Variable|Value} characterMaskReference   Which characters to strip\n         * @returns {StringValue}                           The trimmed string\n         */\n        'trim': function (stringReference, characterMaskReference) {\n            var nativeString = stringReference.getValue().coerceToString().getNative(),\n                characterMask = characterMaskReference ?\n                    characterMaskReference.getValue().getNative() :\n                    ' \\t\\n\\r\\0\\x0b',\n                characterMaskRegex = new RegExp(\n                    '^[' +\n                    _.escapeRegExp(characterMask) +\n                    ']+|[' +\n                    _.escapeRegExp(characterMask) +\n                    ']+$',\n                    'g'\n                );\n\n            return valueFactory.createString(nativeString.replace(characterMaskRegex, ''));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        optionSet = internals.optionSet,\n        valueFactory = internals.valueFactory;\n\n    function getPerformance() {\n        var performance = optionSet.getOption('performance');\n\n        if (!performance) {\n            throw new Error('performance :: No `performance` option is configured');\n        }\n\n        return performance;\n    }\n\n    return {\n        /**\n         * Fetches the current Unix timestamp with microseconds\n         *\n         * @see {@link https://secure.php.net/manual/en/function.microtime.php}\n         *\n         * @param {Variable|Value} getAsFloatReference Whether to return a float with seconds + us\n         * @returns {FloatValue|StringValue}\n         */\n        'microtime': function (getAsFloatReference) {\n            var getAsFloat,\n                getAsFloatValue = getAsFloatReference ?\n                    getAsFloatReference.getValue() :\n                    null,\n                timeInSeconds;\n\n            if (getAsFloatValue && /^(array|object)$/.test(getAsFloatValue.getType())) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'microtime() expects parameter 1 to be boolean, ' +\n                    getAsFloatValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            // Default value (if argument is omitted) is `false`\n            getAsFloat = getAsFloatValue ? getAsFloatValue.coerceToBoolean().getNative() : false;\n\n            // Convert microseconds to seconds (with decimal precision to maintain microsecond accuracy)\n            timeInSeconds = getPerformance().getTimeInMicroseconds() / 1000000;\n\n            if (getAsFloat) {\n                // Return the time since the Unix epoch in seconds, with microsecond accuracy\n                // as a float\n                return valueFactory.createFloat(timeInSeconds);\n            }\n\n            // Return the number of microseconds into the current second first, followed by\n            // the number of whole seconds since the Unix epoch\n            return valueFactory.createString(\n                (timeInSeconds % 1).toFixed(6) + ' ' +\n                Math.floor(timeInSeconds)\n            );\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        optionSet = internals.optionSet,\n        pausable = internals.pausable;\n\n    function getPerformance() {\n        var performance = optionSet.getOption('performance');\n\n        if (!performance) {\n            throw new Error('performance :: No `performance` option is configured');\n        }\n\n        return performance;\n    }\n\n    return {\n        /**\n         * Pauses execution for the specified number of microseconds.\n         * Note that in async mode, this will be implemented by pausing execution\n         * via Pausable and setting a timeout to later resume.\n         * In (p)sync mode, an (inefficient!) busy wait loop is used to perform the wait.\n         * Relying on the busy-wait version is not recommended for production usage!\n         *\n         * @see {@link https://secure.php.net/manual/en/function.usleep.php}\n         *\n         * @param {Variable|Value} microsecondsReference\n         */\n        'usleep': function (microsecondsReference) {\n            var endMicroseconds,\n                microsecondsValue = microsecondsReference.getValue(),\n                pause,\n                performance;\n\n            if (microsecondsValue.getType() !== 'int' && microsecondsValue.getType() !== 'float') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'usleep() expects parameter 1 to be integer or float, ' +\n                        microsecondsValue.getType() + ' given'\n                );\n                return;\n            }\n\n            if (pausable) {\n                // Efficient version, if we're using async mode\n\n                pause = pausable.createPause();\n\n                setTimeout(function () {\n                    pause.resume();\n                }, microsecondsValue.getNative() / 1000);\n\n                pause.now();\n            } else {\n                // Inefficient version, if we're in (p)sync mode\n\n                performance = getPerformance();\n                endMicroseconds = performance.getTimeInMicroseconds() + microsecondsValue.getNative();\n\n                while (performance.getTimeInMicroseconds() < endMicroseconds) { //jshint ignore:line\n                    // Busy wait\n                }\n            }\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty,\n    phpCommon = require('phpcommon'),\n    MAX_DUMPS = 20000,\n    MAX_RECURSION_DEPTH = 5,\n    MAX_STRING_LENGTH = 2048,\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        output = internals.output,\n        valueFactory = internals.valueFactory;\n\n    function createTypeChecker(name, type) {\n        return function (valueReference) {\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    name + '() expects exactly 1 parameter, 0 given'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(valueReference.getValue().getType() === type);\n        };\n    }\n\n    return {\n        /**\n         * Fetches the type of a variable or value\n         *\n         * @see {@link https://secure.php.net/manual/en/function.gettype.php}\n         *\n         * @param {Variable|Value} valueReference The variable or value to fetch the type of\n         * @returns {StringValue}\n         */\n        'gettype': function (valueReference) {\n            var value,\n                type;\n\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'gettype() expects exactly 1 parameter, 0 given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            value = valueReference.getValue();\n            type = value.getType();\n\n            if (type === 'float') {\n                // For historical reasons \"double\" is returned rather than \"float\"\n                type = 'double';\n            } else if (type === 'null') {\n                type = 'NULL';\n            }\n\n            return valueFactory.createString(type);\n        },\n\n        'is_array': createTypeChecker('is_array', 'array'),\n\n        'is_bool': createTypeChecker('is_bool', 'boolean'),\n\n        /**\n         * Determines whether a value is a valid callable function, method, closure or invokable object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-callable.php}\n         *\n         * @param {Reference|Value|Variable} valueReference\n         * @param {BooleanValue|Reference|Variable=} syntaxOnlyReference\n         * @param {Reference|Variable=} callableNameReference\n         * @returns {BooleanValue}\n         */\n        'is_callable': function (valueReference, syntaxOnlyReference, callableNameReference) {\n            var syntaxOnly = syntaxOnlyReference && syntaxOnlyReference.getValue().getNative(),\n                value = valueReference.getValue();\n\n            if (syntaxOnly) {\n                throw new Error('is_callable() :: syntax_only=true is not supported');\n            }\n\n            if (callableNameReference) {\n                throw new Error('is_callable() :: callable_name is not supported');\n            }\n\n            return valueFactory.createBoolean(value.isCallable(globalNamespace));\n        },\n\n        'is_float': createTypeChecker('is_float', 'float'),\n\n        /**\n         * Determines whether the type of a variable is an integer\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-int.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the type of\n         * @returns {BooleanValue}\n         */\n        'is_int': createTypeChecker('is_int', 'int'),\n\n        /**\n         * Determines whether a variable is a number or a string containing a number\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-numeric.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the numericness of\n         * @returns {BooleanValue}\n         */\n        'is_numeric': function (valueReference) {\n            var value;\n\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'is_numeric() expects exactly 1 parameter, 0 given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            value = valueReference.getValue();\n\n            return valueFactory.createBoolean(\n                value.getType() === 'int' ||\n                value.getType() === 'float' ||\n                (\n                    value.getType() === 'string' &&\n                    isFinite(value.getNative())\n                )\n            );\n        },\n\n        /**\n         * Determines whether the type of a variable is an object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-object.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the type of\n         * @returns {BooleanValue}\n         */\n        'is_object': createTypeChecker('is_object', 'object'),\n\n        /**\n         * Determines whether the type of a variable is a string\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-string.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the type of\n         * @returns {BooleanValue}\n         */\n        'is_string': createTypeChecker('is_string', 'string'),\n\n        /**\n         * Outputs or returns a valid PHP code string that will evaluate to the given value\n         *\n         * @see {@link https://secure.php.net/manual/en/function.var-export.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to export\n         * @param {Variable|Reference|Value} returnReference Whether to return the string rather than output\n         * @returns {NullValue|StringValue} Returns NULL when outputting, the code string when return=true\n         */\n        'var_export': function (valueReference, returnReference) {\n            var exportedCodeString,\n                shouldReturn,\n                value;\n\n            function exportValue(value) {\n                var parts;\n\n                switch (value.getType()) {\n                    case 'array':\n                        parts = [];\n                        value.getKeys().forEach(function (keyValue) {\n                            var elementPair = value.getElementPairByKey(keyValue);\n\n                            parts.push(\n                                '  ' +\n                                exportValue(elementPair.getKey()) +\n                                ' => ' +\n                                exportValue(elementPair.getValue()) +\n                                ',\\n'\n                            );\n                        });\n                        return 'array (\\n' + parts.join('') + ')';\n                    case 'boolean':\n                    case 'float':\n                    case 'int':\n                        return '' + value.getNative();\n                    case 'null':\n                        return 'NULL';\n                    case 'object':\n                        if (value.getLength() > 0) {\n                            throw new Error('var_export() :: Non-empty objects not implemented');\n                        }\n\n                        return value.getClassName() + '::__set_state(array(\\n))';\n                    case 'string':\n                        return '\\'' + value.getNative().replace(/['\\\\]/g, '\\\\$&') + '\\'';\n                    default:\n                        throw new Error('var_export() :: Unexpected value type \"' + value.getType() + '\"');\n                }\n            }\n\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'var_export() expects at least 1 parameter, 0 given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            value = valueReference.getValue();\n\n            // Output the string representation by default, or return it if specified\n            shouldReturn = returnReference ? returnReference.getNative() : false;\n\n            exportedCodeString = exportValue(value);\n\n            if (shouldReturn) {\n                return valueFactory.createString(exportedCodeString);\n            }\n\n            // No trailing newline should be output\n            output.write(exportedCodeString);\n\n            return valueFactory.createNull();\n        },\n\n        // NB: This output matches that of PHP with XDebug disabled\n        'var_dump': function (valueReference) {\n            var dumps = 0,\n                value,\n                objectIDHash = {};\n\n            if (!valueReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'var_dump() expects at least 1 parameter, 0 given');\n                return;\n            }\n\n            value = valueReference.getValue();\n\n            function dump(value, depth, isReference, arraysEncountered) {\n                var currentIndentation = new Array(depth).join('  '),\n                    names,\n                    nativeLength,\n                    nativeValue,\n                    nextIndentation = new Array(depth + 1).join('  '),\n                    representation = currentIndentation;\n\n                dumps++;\n\n                if (depth > MAX_RECURSION_DEPTH || dumps > MAX_DUMPS) {\n                    representation += '*RECURSION*';\n                    return representation + '\\n';\n                }\n\n                if (value.getType() === 'array') {\n                    nativeValue = value.getValue();\n\n                    if (arraysEncountered.indexOf(nativeValue) > -1) {\n                        // Within the current branch of values being dumped, we've already\n                        // dumped this array - bail out to avoid infinite recursion\n                        representation += '*RECURSION*';\n\n                        return representation + '\\n';\n                    }\n\n                    if (depth > 1) {\n                        arraysEncountered.push(nativeValue);\n                    }\n\n                    if (isReference) {\n                        representation += '&';\n                    }\n\n                    representation += 'array(' + value.getLength() + ') {\\n';\n\n                    _.each(value.getKeys(), function (key) {\n                        var element = value.getElementByKey(key),\n                            elementRepresentation;\n\n                        elementRepresentation = dump(\n                            element.getValue(),\n                            depth + 1,\n                            element.isReference(),\n                            arraysEncountered.slice()\n                        );\n\n                        representation += nextIndentation +\n                            '[' +\n                            JSON.stringify(key.getNative()) +\n                            ']=>\\n' +\n                            elementRepresentation;\n                    });\n\n                    representation += currentIndentation + '}';\n                } else if (value.getType() === 'object') {\n                    if (hasOwn.call(objectIDHash, value.getID())) {\n                        representation += '*RECURSION*';\n                        return representation + '\\n';\n                    }\n\n                    if (isReference) {\n                        representation += '&';\n                    }\n\n                    names = value.getInstancePropertyNames();\n\n                    representation += 'object(' + value.getClassName() + ')#' + value.getID() + ' (' + names.length + ') {\\n';\n\n                    objectIDHash[value.getID()] = true;\n\n                    _.each(names, function (nameValue) {\n                        var property = value.getInstancePropertyByName(nameValue);\n                        representation += nextIndentation +\n                            '[' +\n                            JSON.stringify(nameValue.getNative()) +\n                            ']=>\\n' +\n                            dump(\n                                property.getValue(),\n                                depth + 1,\n                                property.isReference(),\n                                arraysEncountered.slice()\n                            );\n                    });\n\n                    representation += currentIndentation + '}';\n                } else {\n                    if (isReference) {\n                        representation += '&';\n                    }\n\n                    switch (value.getType()) {\n                    case 'boolean':\n                        representation += 'bool(' + (value.getNative() ? 'true' : 'false') + ')';\n                        break;\n                    case 'float':\n                        representation += 'float(' + value.getNative() + ')';\n                        break;\n                    case 'int':\n                        representation += 'int(' + value.getNative() + ')';\n                        break;\n                    case 'null':\n                        representation += 'NULL';\n                        break;\n                    case 'string':\n                        nativeValue = value.getNative();\n                        nativeLength = nativeValue.length;\n\n                        if (nativeLength > MAX_STRING_LENGTH) {\n                            nativeValue = nativeValue.substr(0, MAX_STRING_LENGTH) + '...';\n                        }\n\n                        representation += 'string(' + nativeLength + ') \"' + nativeValue + '\"';\n                        break;\n                    default:\n                        throw new Error('var_dump() :: Unsupported value type \"' + value.getType() + '\"');\n                    }\n                }\n\n                return representation + '\\n';\n            }\n\n            output.write(dump(value, 1, false, []));\n        }\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * \"Promise-synchronous\" (psync) mode entrypoint\n *\n * Allows the public API to be Promise-based even when not using Pausable,\n * so that switching to/from async mode does not require changes to the consuming application.\n */\n\n'use strict';\n\nvar debugFormatterInstaller = require('./src/shared/debugFormatterInstaller'),\n    runtimeFactory = require('./src/shared/runtimeFactory');\n\ndebugFormatterInstaller.install();\n\nmodule.exports = runtimeFactory.create('psync');\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * DebugFormatterInstaller shared service.\n *\n * Allows current & future class dependencies to be added in a single place.\n */\n\n'use strict';\n\nvar DebugFactory = require('../Debug/DebugFactory'),\n    DebugFormatter = require('../Debug/DebugFormatter'),\n    DebugFormatterInstaller = require('../Debug/DebugFormatterInstaller'),\n    DebugValue = require('../Debug/DebugValue'),\n    ValueFormatter = require('../Debug/ValueFormatter'),\n    debugFactory = new DebugFactory(DebugFormatter, DebugValue, ValueFormatter);\n\nmodule.exports = new DebugFormatterInstaller(global, debugFactory);\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} DebugFormatter\n * @param {class} DebugValue\n * @param {class} ValueFormatter\n * @constructor\n */\nfunction DebugFactory(DebugFormatter, DebugValue, ValueFormatter) {\n    /**\n     * @type {class}\n     */\n    this.DebugFormatter = DebugFormatter;\n    /**\n     * @type {class}\n     */\n    this.DebugValue = DebugValue;\n    /**\n     * @type {class}\n     */\n    this.ValueFormatter = ValueFormatter;\n}\n\n_.extend(DebugFactory.prototype, {\n    /**\n     * Creates a new DebugFormatter\n     *\n     * @returns {DebugFormatter}\n     */\n    createDebugFormatter: function () {\n        var factory = this,\n            valueFormatter = new factory.ValueFormatter(factory);\n\n        return new factory.DebugFormatter(valueFormatter);\n    },\n\n    /**\n     * Creates a DebugValue that wraps the specified value\n     *\n     * @param {Value} value\n     * @returns {DebugValue}\n     */\n    createValue: function (value) {\n        return new this.DebugValue(value);\n    }\n});\n\nmodule.exports = DebugFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    DebugValue = require('./DebugValue'),\n    DebugVariable = require('./DebugVariable');\n\n/**\n * Debugging variable formatter for Chrome's Developer Tools\n *\n * @param {ValueFormatter} valueFormatter\n * @constructor\n */\nfunction DebugFormatter(valueFormatter) {\n    /**\n     * @type {ValueFormatter}\n     */\n    this.valueFormatter = valueFormatter;\n}\n\n_.extend(DebugFormatter.prototype, {\n    /**\n     * Formats an \"expanded\" view of a PHP variable in Chrome's dev tools\n     *\n     * @param {DebugVariable|DebugValue} debugVariable\n     * @returns {[]}\n     */\n    body: function (debugVariable) {\n        var value = debugVariable.getValue(),\n            formattedValue = this.valueFormatter.format(value),\n            structure = [\n                'table',\n                {},\n                [\n                    'tr',\n                    {},\n                    [\n                        'td',\n                        {\n                            'style': 'font-weight: bold;'\n                        },\n                        'type:'\n                    ],\n                    [\n                        'td',\n                        {},\n                        value.getType()\n                    ]\n                ]\n            ];\n\n        function addAttribute(name, value, style) {\n            structure.push([\n                'tr',\n                {},\n                [\n                    'td',\n                    {\n                        'style': 'font-weight: bold;'\n                    },\n                    name + ':'\n                ],\n                [\n                    'td',\n                    {\n                        'style': style\n                    },\n                    value\n                ]\n            ]);\n        }\n\n        if (formattedValue.attributes.length === 0) {\n            // No attributes provided, only value, so add value as the only attribute\n            // so that the value can be expanded in the debugger to see its type along with value\n            addAttribute('value', formattedValue.headingValue, formattedValue.headingStyle);\n        } else {\n            _.each(formattedValue.attributes, function (attribute) {\n                addAttribute(attribute.name, attribute.value, attribute.style);\n            });\n        }\n\n        return structure;\n    },\n\n    /**\n     * Returns true if the value can be expanded with .body(...) above, false otherwise\n     *\n     * @param {DebugVariable|DebugValue|*} debugVariable\n     * @returns {boolean}\n     */\n    hasBody: function (debugVariable) {\n        return (debugVariable instanceof DebugVariable && debugVariable.isDefined()) ||\n            debugVariable instanceof DebugValue;\n    },\n\n    /**\n     * Formats a minimal/inline view of a PHP variable in Chrome's dev tools\n     *\n     * @param {DebugVariable|DebugValue|*} debugVariable\n     * @returns {[]}\n     */\n    header: function (debugVariable) {\n        var formattedValue,\n            value;\n\n        if (!(debugVariable instanceof DebugVariable) && !(debugVariable instanceof DebugValue)) {\n            return null;\n        }\n\n        if (!debugVariable.isDefined()) {\n            return ['span', {'style': 'text-style: italic; color: gray;'}, '<undefined>'];\n        }\n\n        value = debugVariable.getValue();\n\n        formattedValue = this.valueFormatter.format(value);\n\n        return ['span', {'style': formattedValue.headingStyle}, formattedValue.headingValue];\n    }\n});\n\nmodule.exports = DebugFormatter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Installer for the debugging variable formatter\n * for Chrome's Developer Tools\n *\n * @param {Window} window\n * @param {DebugFactory} debugFactory\n * @constructor\n */\nfunction DebugFormatterInstaller(window, debugFactory) {\n    /**\n     * @type {DebugFactory}\n     */\n    this.debugFactory = debugFactory;\n    /**\n     * @type {Window}\n     */\n    this.window = window;\n}\n\n_.extend(DebugFormatterInstaller.prototype, {\n    /**\n     * Installs a DebugFormatter into the global scope\n     * for Chrome's Developer Tools to pick up\n     */\n    install: function () {\n        var installer = this,\n            debugFormatter = installer.debugFactory.createDebugFormatter();\n\n        if (!installer.window.devtoolsFormatters) {\n            installer.window.devtoolsFormatters = [];\n        }\n\n        installer.window.devtoolsFormatters.push(debugFormatter);\n    }\n});\n\nmodule.exports = DebugFormatterInstaller;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    /**\n     * Formats the elements of an ArrayValue as a devtools formatter structure\n     *\n     * @param {ArrayValue} arrayValue\n     * @param {DebugFactory} debugFactory\n     * @returns {*[]}\n     */\n    formatArrayElements = function (arrayValue, debugFactory) {\n        var elements = [\n                'table',\n                {}\n            ];\n\n        _.each(arrayValue.getKeys(), function (keyValue) {\n            var element = arrayValue.getElementByKey(keyValue),\n                keyString = keyValue.getNative();\n\n            // Display the keys of elements with string keys in quotes\n            if (keyValue.getType() === 'string') {\n                keyString = '\"' + keyString + '\"';\n            }\n\n            elements.push([\n                'tr',\n                {},\n                [\n                    'td',\n                    {\n                        'style': 'font-weight: bold;'\n                    },\n                    // Prefix the key of elements that are references with an ampersand\n                    (element.isReference() ? '&' : '') + keyString + ':'\n                ],\n                [\n                    'td',\n                    {},\n                    // Format the element recursively with a DebugValue\n                    // (custom object formatter should be called again if/when expanded in debugger)\n                    ['object', {object: debugFactory.createValue(element.getValue())}]\n                ]\n            ]);\n        });\n\n        return elements;\n    };\n\n/**\n * Debugging value formatter for Chrome's Developer Tools\n *\n * @param {DebugFactory} debugFactory\n * @constructor\n */\nfunction ValueFormatter(debugFactory) {\n    /**\n     * @type {DebugFactory}\n     */\n    this.debugFactory = debugFactory;\n}\n\n_.extend(ValueFormatter.prototype, {\n    /**\n     * Formats a value for display in Chrome's dev tools\n     *\n     * @param {Value} value\n     * @returns {{headingStyle: string, headingValue: (string|number), attributes: object[]}}\n     */\n    format: function (value) {\n        var attributes = [],\n            formatter = this,\n            headingValue = null,\n            headingStyle = '',\n            nativeValue = value.getNative(),\n            prototype;\n\n        if (value.getType() === 'array') {\n            headingValue = 'Array[' + value.getLength() + ']';\n            attributes.push(\n                {\n                    name: 'length',\n                    value: value.getLength(),\n                    style: 'color: blue;'\n                },\n                {\n                    name: 'elements',\n                    value: formatArrayElements(value, formatter.debugFactory)\n                }\n            );\n        } else if (value.getType() === 'null') {\n            headingValue = '<null>';\n            headingStyle = 'font-weight: bold;';\n        } else if (value.getType() === 'object') {\n            if (value.getClassName() === 'JSObject') {\n                attributes.push({\n                    name: 'PHP class',\n                    value: 'JSObject'\n                });\n\n                if (typeof nativeValue === 'function') {\n                    headingValue = '<JS:function ' + nativeValue.name + '()>';\n\n                    attributes.push({\n                        name: 'JS class',\n                        value: '(Function)'\n                    });\n                } else {\n                    prototype = Object.getPrototypeOf(nativeValue);\n\n                    if (prototype.constructor) {\n                        headingValue = '<JS:' + prototype.constructor.name + '>';\n\n                        attributes.push({\n                            name: 'JS class',\n                            value: prototype.constructor.name\n                        });\n                    } else {\n                        headingValue = '<JS:Object>';\n\n                        attributes.push({\n                            name: 'JS class',\n                            value: '(anonymous)'\n                        });\n                    }\n                }\n            } else {\n                headingValue = '<' + value.getClassName() + '>';\n\n                attributes.push({\n                    name: 'class',\n                    value: value.getClassName()\n                });\n            }\n        } else if (\n            value.getType() === 'int' ||\n            value.getType() === 'float' ||\n            value.getType() === 'boolean'\n        ) {\n            headingValue = nativeValue;\n            headingStyle = 'color: blue;';\n        } else if (value.getType() === 'string') {\n            headingValue = '\"' + nativeValue + '\"';\n            headingStyle = 'color: red;';\n        }\n\n        return {\n            attributes: attributes,\n            headingStyle: headingStyle,\n            headingValue: headingValue\n        };\n    }\n});\n\nmodule.exports = ValueFormatter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * RuntimeFactory shared service.\n *\n * Allows current & future class dependencies to be added in a single place.\n */\n\n'use strict';\n\nvar Engine = require('../Engine'),\n    Environment = require('../Environment'),\n    globalStackHooker = require('./globalStackHooker'),\n    phpCommon = require('phpcommon'),\n    PHPStateWrapper = require('../PHPState'),\n    RuntimeFactory = require('../RuntimeFactory'),\n    RuntimeWrapper = require('../Runtime');\n\nmodule.exports = new RuntimeFactory(\n    Environment,\n    Engine,\n    PHPStateWrapper,\n    RuntimeWrapper,\n    phpCommon,\n    globalStackHooker\n);\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    PATH = 'path',\n    Promise = require('lie'),\n    ValueWrapper = require('./Value');\n\n/**\n * Executes a transpiled PHP module\n *\n * @param {Environment} environment PHPCore environment to execute inside\n * @param {Scope|null} topLevelScope Scope for the top-level statements of the module\n * @param {Object} phpCommon\n * @param {Object} options Configuration options for this engine\n * @param {Function} wrapper The wrapper function for the transpiled PHP module\n * @param {Resumable|null} pausable Pausable library for async mode, null for psync or sync modes\n * @param {string} mode\n * @constructor\n */\nfunction Engine(\n    environment,\n    topLevelScope,\n    phpCommon,\n    options,\n    wrapper,\n    pausable,\n    mode\n) {\n    /**\n     * @type {Environment}\n     */\n    this.environment = environment;\n    /**\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @type {object}\n     */\n    this.options = _.extend(\n        {\n            'path': null\n        },\n        options || {}\n    );\n    /**\n     * @type {Resumable}\n     */\n    this.pausable = pausable;\n    /**\n     * @type {Object}\n     */\n    this.phpCommon = phpCommon;\n    /**\n     * @type {Scope|null}\n     */\n    this.topLevelScope = topLevelScope || null;\n    /**\n     * @type {Function}\n     */\n    this.wrapper = wrapper;\n}\n\n_.extend(Engine.prototype, {\n    /**\n     * Defines the given alias for the given function\n     *\n     * @param {string} originalName\n     * @param {string} aliasName\n     */\n    aliasFunction: function (originalName, aliasName) {\n        this.environment.aliasFunction(originalName, aliasName);\n    },\n\n    /**\n     * Creates a new FFI Result, to provide the result of a call to a JS function\n     *\n     * @param {Function} syncCallback\n     * @param {Function|null} asyncCallback\n     * @returns {FFIResult}\n     */\n    createFFIResult: function (syncCallback, asyncCallback) {\n        return this.environment.createFFIResult(syncCallback, asyncCallback);\n    },\n\n    /**\n     * Creates a Pause object for use in async mode\n     *\n     * @returns {PauseException}\n     */\n    createPause: function () {\n        var engine = this;\n\n        if (!engine.pausable) {\n            throw new Error('Pausable is not available');\n        }\n\n        return engine.pausable.createPause();\n    },\n\n    /**\n     * Defines a new class (in any namespace).\n     * Note that the class will be defined on the current engine's environment,\n     * so any other engines that share this environment will also see the new class\n     *\n     * @param {string} name FQCN for the class to define\n     * @param {function} definitionFactory Called with `internals` object, returns the class definition\n     * @returns {Class} Returns the instance of Class that represents a PHP class\n     */\n    defineClass: function (name, definitionFactory) {\n        return this.environment.defineClass(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineCoercingFunction: function (name, fn) {\n        this.environment.defineCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a constant with the given native value\n     *\n     * @param {string} name\n     * @param {*} value\n     * @param {object} options\n     */\n    defineConstant: function (name, value, options) {\n        this.environment.defineConstant(name, value, options);\n    },\n\n    /**\n     * Defines a new function (in any namespace).\n     * Note that the function will be defined on the current engine's environment,\n     * so any other engines that share this environment will also see the new function\n     *\n     * @param {string} name Fully-qualified name for the function to define\n     * @param {function} definitionFactory Called with `internals` object, returns the function definition\n     * @returns {Class} Returns the defined function\n     */\n    defineFunction: function (name, definitionFactory) {\n        return this.environment.defineFunction(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global variable and gives it the provided value\n     *\n     * @param {string} name\n     * @param {*} nativeValue\n     */\n    defineGlobal: function (name, nativeValue) {\n        var engine = this,\n            valueFactory = engine.environment.getState().getValueFactory(),\n            value = valueFactory.coerce(nativeValue);\n\n        engine.environment.defineGlobal(name, value);\n    },\n\n    /**\n     * Defines a global variable using a getter/setter pair\n     *\n     * @param {string} name\n     * @param {Function} valueGetter\n     * @param {Function} valueSetter\n     */\n    defineGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.environment.defineGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineNonCoercingFunction: function (name, fn) {\n        this.environment.defineNonCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a super global variable (available in all scopes implicitly,\n     * unlike a normal global which is not available unless imported with a `global` statement)\n     * and gives it the provided value. If a native value is given then it will be coerced to a PHP one.\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     */\n    defineSuperGlobal: function (name, value) {\n        this.environment.defineSuperGlobal(name, value);\n    },\n\n    defineSuperGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.environment.defineSuperGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    /**\n     * Executes this PHP script, returning either its resulting value if in synchronous mode\n     * or a Promise if in asynchronous mode that will later be resolved with its resulting value\n     * (from a top-level `return` statement, if any - otherwise defaulting to null)\n     *\n     * @returns {Promise|Value}\n     */\n    execute: function __uniterInboundStackMarker__() {\n        var callFactory,\n            callStack,\n            engine = this,\n            environment = engine.environment,\n            errorReporting,\n            globalNamespace,\n            globalScope,\n            mode = engine.mode,\n            module,\n            moduleFactory,\n            options = engine.options,\n            path = options[PATH],\n            isMainProgram = engine.topLevelScope === null,\n            output,\n            pausable = engine.pausable,\n            phpCommon = engine.phpCommon,\n            PHPError = phpCommon.PHPError,\n            PHPParseError = phpCommon.PHPParseError,\n            resultValue,\n            scopeFactory,\n            state,\n            stderr = engine.getStderr(),\n            stdin = engine.getStdin(),\n            tools,\n            toolsFactory,\n            wrapper = engine.wrapper,\n            unwrap = function (wrapper) {\n                return mode === 'async' ? wrapper.async(pausable) : wrapper.sync();\n            },\n            // TODO: Wrap this module with `pauser` to remove the need for this\n            Value = unwrap(ValueWrapper),\n            topLevelNamespaceScope,\n            topLevelScope;\n\n        state = environment.getState();\n        callFactory = state.getCallFactory();\n        errorReporting = state.getErrorReporting();\n        moduleFactory = state.getModuleFactory();\n        scopeFactory = state.getScopeFactory();\n        globalNamespace = state.getGlobalNamespace();\n        callStack = state.getCallStack();\n        globalScope = state.getGlobalScope();\n        output = state.getOutput();\n        toolsFactory = state.getToolsFactory();\n        // Use the provided top-level scope if specified, otherwise use the global scope\n        // (used eg. when an `include(...)` is used inside a function)\n        topLevelScope = engine.topLevelScope || globalScope;\n        module = moduleFactory.create(path);\n        topLevelNamespaceScope = scopeFactory.createNamespaceScope(globalNamespace, globalNamespace, module);\n\n        // Create the runtime tools object, referenced by the transpiled JS output from PHPToJS\n        tools = toolsFactory.create(environment, module, topLevelNamespaceScope, topLevelScope, options);\n\n        // Push the 'main' global scope call onto the stack\n        callStack.push(callFactory.create(topLevelScope, topLevelNamespaceScope));\n\n        function handleError(error, reject) {\n            var errorValue,\n                trace;\n\n            if (error instanceof Value && error.getType() === 'exit') {\n                return error;\n            }\n\n            if (error instanceof Value && error.getType() === 'object') {\n                if (!isMainProgram) {\n                    // For included files/eval etc., just pass the Throwable up the call stack\n                    reject(error);\n\n                    return;\n                }\n\n                errorValue = error;\n                error = errorValue.coerceToNativeError();\n                trace = errorValue.getInternalProperty('trace');\n\n                if (error instanceof PHPParseError) {\n                    // ParseErrors are special - when they reach the top level scope,\n                    // if nothing has caught them then they are displayed as\n                    // \"PHP Parse error: ...\" rather than \"PHP Fatal error: Uncaught ParseError ...\"\n                    errorReporting.reportError(\n                        PHPError.E_PARSE,\n                        errorValue.getProperty('message').getNative(),\n                        errorValue.getProperty('file').getNative(),\n                        errorValue.getProperty('line').getNative(),\n                        trace,\n                        false\n                    );\n                } else {\n                    errorReporting.reportError(\n                        PHPError.E_ERROR,\n                        error.getMessage(),\n                        errorValue.getProperty('file').getNative(),\n                        errorValue.getProperty('line').getNative(),\n                        trace,\n                        errorValue.getInternalProperty('reportsOwnContext')\n                    );\n                }\n\n                reject(error);\n\n                return;\n            }\n\n            if (error instanceof PHPError) {\n                // Some fatal errors are not catchable\n\n                if (isMainProgram) {\n                    errorReporting.reportError(\n                        PHPError.E_ERROR,\n                        error.getMessage(),\n                        error.getFilePath(),\n                        error.getLineNumber(),\n                        null,\n                        false\n                    );\n                }\n\n                reject(error);\n                return;\n            }\n\n            reject(error);\n        }\n\n        // Asynchronous mode - Pausable must be available\n        if (mode === 'async') {\n            return new Promise(function (resolve, reject) {\n                var code = 'return (' +\n                    wrapper.toString() +\n                    '(stdin, stdout, stderr, tools, globalNamespace));';\n\n                pausable.execute(code, {\n                    strict: true,\n                    expose: {\n                        stdin: stdin,\n                        stdout: output,\n                        stderr: stderr,\n                        tools: tools,\n                        globalNamespace: globalNamespace\n                    }\n                }).then(function (resultValue) {\n                    // Pop the top-level scope (of the include, if this module was included) off the stack\n                    // regardless of whether an error occurred\n                    callStack.pop();\n\n                    resolve(resultValue);\n                }, function (error) {\n                    var result;\n\n                    // Pop the top-level scope (of the include, if this module was included) off the stack\n                    // regardless of whether an error occurred\n                    callStack.pop();\n\n                    result = handleError(error, reject);\n\n                    if (result) {\n                        resolve(result);\n                    }\n                });\n            });\n        }\n\n        // Otherwise load the module synchronously\n        try {\n            try {\n                resultValue = wrapper(stdin, output, stderr, tools, globalNamespace);\n\n                return mode === 'psync' && isMainProgram ?\n                    // Promise-sync mode - return a promise resolved with the result\n                    Promise.resolve(resultValue) :\n\n                    // Sync mode - just return the result, with no Promise involved\n                    resultValue;\n            } finally {\n                // Pop the top-level scope (of the include, if this module was included) off the stack\n                // regardless of whether an error occurred\n                callStack.pop();\n            }\n        } catch (error) {\n            if (mode === 'psync' && isMainProgram) {\n                // Promise-sync mode - return a promise...\n\n                return new Promise(function (resolve, reject) {\n                    var resultValue = handleError(error, function (error) {\n                        // ... rejected with the error if applicable\n                        reject(error);\n                    });\n\n                    // Otherwise if it was a special ExitValue, resolve with it\n                    if (resultValue) {\n                        resolve(resultValue);\n                    }\n                });\n            }\n\n            return handleError(error, function (error) {\n                throw error;\n            });\n        }\n    },\n\n    expose: function (object, name) {\n        this.environment.expose(object, name);\n    },\n\n    getConstant: function (name) {\n        return this.environment.getConstant(name);\n    },\n\n    /**\n     * Fetches the value of a global variable, if defined.\n     * If the variable is not defined then a NULL value will be returned.\n     *\n     * @param {string} name\n     * @return {Value}\n     */\n    getGlobal: function (name) {\n        return this.environment.getGlobal(name);\n    },\n\n    getStderr: function () {\n        return this.environment.getStderr();\n    },\n\n    getStdin: function () {\n        return this.environment.getStdin();\n    },\n\n    getStdout: function () {\n        return this.environment.getStdout();\n    },\n\n    /**\n     * Sets the value of an existing PHP global. If a native value is given\n     * then it will be coerced to a PHP one.\n     * If the global is not defined than an error will be thrown -\n     * use .defineGlobal(...) when defining a new variable\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     * @throws {Error} Throws if the variable is not defined in the global scope\n     */\n    setGlobal: function (name, value) {\n        this.environment.setGlobal(name, value);\n    },\n\n    /**\n     * Takes the given proxy and returns a new one with a synchronous API,\n     * even in Promise-synchronous mode\n     *\n     * @param {ProxyClass} proxy\n     * @return {ProxyClass}\n     */\n    toNativeWithSyncApi: function (proxy) {\n        return this.environment.toNativeWithSyncApi(proxy);\n    }\n});\n\nmodule.exports = Engine;\n","/*\n * Pauser - Wrapper for optional Pausable usage\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/pauser/\n *\n * Released under the MIT license\n * https://github.com/asmblah/pauser/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction Wrapper(args, fn, options) {\n    this.args = args;\n    this.evaluatedAsync = false;\n    this.evaluatedSync = false;\n    this.asyncReturnValue = null;\n    this.fn = fn;\n    this.options = options;\n    this.syncReturnValue = null;\n}\n\n_.extend(Wrapper.prototype, {\n    /**\n     * Executes wrapper asynchronously via the Pausable library.\n     *\n     * @param {Pausable} pausable\n     * @returns {*}\n     */\n    async: function (pausable) {\n        var args,\n            wrapper = this;\n\n        if (wrapper.evaluatedAsync) {\n            return wrapper.asyncReturnValue;\n        }\n\n        // Recursively transpile any arguments to the function that are themselves Wrappers\n        args = _.map(wrapper.args, function (arg) {\n            if (arg instanceof Wrapper) {\n                return arg.async(pausable);\n            }\n\n            return arg;\n        });\n\n        wrapper.asyncReturnValue = pausable.executeSync(args, wrapper.fn, wrapper.options);\n        wrapper.evaluatedAsync = true;\n\n        return wrapper.asyncReturnValue;\n    },\n\n    /**\n     * Executes wrapper synchronously when the Pausable library is not available.\n     *\n     * @returns {*}\n     */\n    sync: function () {\n        var args,\n            wrapper = this;\n\n        if (wrapper.evaluatedSync) {\n            return wrapper.syncReturnValue;\n        }\n\n        // Recursively evaluate any arguments to the function that are themselves Wrappers\n        args = _.map(wrapper.args, function (arg) {\n            if (arg instanceof Wrapper) {\n                return arg.sync();\n            }\n\n            return arg;\n        });\n\n        wrapper.syncReturnValue = wrapper.fn.apply(null, args);\n        wrapper.evaluatedSync = true;\n\n        return wrapper.syncReturnValue;\n    }\n});\n\nmodule.exports = Wrapper;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    PHPFatalError = phpCommon.PHPFatalError,\n    PHPParseError = phpCommon.PHPParseError;\n\n/**\n * @param {PHPState} state\n * @constructor\n */\nfunction Environment(state) {\n    /**\n     * @type {PHPState}\n     */\n    this.state = state;\n}\n\n_.extend(Environment.prototype, {\n    /**\n     * Defines the given alias for the given function\n     *\n     * @param {string} originalName\n     * @param {string} aliasName\n     */\n    aliasFunction: function (originalName, aliasName) {\n        this.state.aliasFunction(originalName, aliasName);\n    },\n\n    /**\n     * Creates a new FFI Result, to provide the result of a call to a JS function\n     *\n     * @param {Function} syncCallback\n     * @param {Function|null} asyncCallback\n     * @returns {FFIResult}\n     */\n    createFFIResult: function (syncCallback, asyncCallback) {\n        return this.state.createFFIResult(syncCallback, asyncCallback);\n    },\n\n    /**\n     * Defines a new class (in any namespace)\n     *\n     * @param {string} name FQCN for the class to define\n     * @param {function} definitionFactory Called with `internals` object, returns the class definition\n     * @returns {Class} Returns the instance of Class that represents a PHP class\n     */\n    defineClass: function (name, definitionFactory) {\n        return this.state.defineClass(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineCoercingFunction: function (name, fn) {\n        this.state.defineCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a constant with the given native value\n     *\n     * @param {string} name\n     * @param {*} value\n     * @param {object} options\n     */\n    defineConstant: function (name, value, options) {\n        this.state.defineConstant(name, value, options);\n    },\n\n    /**\n     * Defines a new function (in any namespace).\n     *\n     * @param {string} name Fully-qualified name for the function to define\n     * @param {function} definitionFactory Called with `internals` object, returns the function definition\n     * @returns {Class} Returns the defined function\n     */\n    defineFunction: function (name, definitionFactory) {\n        return this.state.defineFunction(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global variable and gives it the provided value\n     *\n     * @param {string} name\n     * @param {Value} value\n     */\n    defineGlobal: function (name, value) {\n        this.state.defineGlobal(name, value);\n    },\n\n    /**\n     * Defines a global variable using a getter/setter pair\n     *\n     * @param {string} name\n     * @param {Function} valueGetter\n     * @param {Function} valueSetter\n     */\n    defineGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.state.defineGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineNonCoercingFunction: function (name, fn) {\n        this.state.defineNonCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a super global variable (available in all scopes implicitly,\n     * unlike a normal global which is not available unless imported with a `global` statement)\n     * and gives it the provided value. If a native value is given then it will be coerced to a PHP one.\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     */\n    defineSuperGlobal: function (name, value) {\n        this.state.defineSuperGlobal(name, value);\n    },\n\n    defineSuperGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.state.defineSuperGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    expose: function (object, name) {\n        this.state.getGlobalScope().expose(object, name);\n    },\n\n    getConstant: function (name) {\n        return this.state.getConstant(name);\n    },\n\n    /**\n     * Fetches the value of a global variable, if defined.\n     * If the variable is not defined then a NULL value will be returned.\n     *\n     * @param {string} name\n     * @return {Value}\n     */\n    getGlobal: function (name) {\n        return this.state.getGlobal(name);\n    },\n\n    getOptions: function () {\n        return this.state.getOptions();\n    },\n\n    getState: function () {\n        return this.state;\n    },\n\n    getStderr: function () {\n        return this.state.getStderr();\n    },\n\n    getStdin: function () {\n        return this.state.getStdin();\n    },\n\n    getStdout: function () {\n        return this.state.getStdout();\n    },\n\n    /**\n     * Reports a PHPError (fatal or parse error) originating from the parser or transpiler\n     *\n     * @param {PHPError} error\n     * @throws {Error} Throws if a non-PHPError is given\n     */\n    reportError: function (error) {\n        var errorReporting = this.state.getErrorReporting();\n\n        // Handle any PHP errors from the transpiler or parser using the ErrorReporting\n        // mechanism for PHPCore (as INI settings such as `display_errors` should take effect)\n        if (error instanceof PHPFatalError) {\n            errorReporting.reportError(\n                PHPError.E_ERROR,\n                error.getMessage(),\n                error.getFilePath(),\n                error.getLineNumber(),\n                null,\n                false\n            );\n        } else if (error instanceof PHPParseError) {\n            errorReporting.reportError(\n                PHPError.E_PARSE,\n                error.getMessage(),\n                error.getFilePath(),\n                error.getLineNumber(),\n                null,\n                false\n            );\n        } else {\n            throw new Error('Invalid error type given');\n        }\n    },\n\n    /**\n     * Sets the value of an existing PHP global. If a native value is given\n     * then it will be coerced to a PHP one.\n     * If the global is not defined than an error will be thrown -\n     * use .defineGlobal(...) when defining a new variable\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     * @throws {Error} Throws if the variable is not defined in the global scope\n     */\n    setGlobal: function (name, value) {\n        this.state.setGlobal(name, value);\n    },\n\n    /**\n     * Takes the given proxy and returns a new one with a synchronous API,\n     * even in Promise-synchronous mode\n     *\n     * @param {ProxyClass} proxy\n     * @return {ProxyClass}\n     */\n    toNativeWithSyncApi: function (proxy) {\n        return this.state.getFFIValueHelper().toNativeWithSyncApi(proxy);\n    }\n});\n\nmodule.exports = Environment;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * GlobalStackHooker shared service.\n *\n * Allows current & future class dependencies to be added in a single place.\n */\n\n'use strict';\n\nvar usingV8StackTraceAPI = typeof Error.captureStackTrace === 'function' &&\n        Function.prototype.toString.call(Error.captureStackTrace).indexOf('[native code]') > -1,\n    GlobalStackHooker = require('../FFI/Stack/GlobalStackHooker'),\n    NonV8FrameStackHooker = require('../FFI/Stack/NonV8FrameStackHooker'),\n    StackCleaner = require('../FFI/Stack/StackCleaner'),\n    V8FrameStackHooker = require('../FFI/Stack/V8FrameStackHooker'),\n    stackCleaner = new StackCleaner(),\n    frameStackHooker = usingV8StackTraceAPI ?\n        new V8FrameStackHooker(stackCleaner) :\n        new NonV8FrameStackHooker(stackCleaner);\n\nmodule.exports = new GlobalStackHooker(frameStackHooker, global);\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {NonV8FrameStackHooker|V8FrameStackHooker} frameStackHooker\n * @param {Global} global\n * @constructor\n */\nfunction GlobalStackHooker(frameStackHooker, global) {\n    /**\n     * @type {NonV8FrameStackHooker|V8FrameStackHooker}\n     */\n    this.frameStackHooker = frameStackHooker;\n    /**\n     * @type {Global}\n     */\n    this.global = global;\n}\n\n_.extend(GlobalStackHooker.prototype, {\n    /**\n     * Hooks error stack handling for all frames/global contexts accessible from the current one.\n     */\n    hook: function () {\n        var hooker = this,\n            hookErrorStacksForAllSubFrames = function (frame) {\n                try {\n                    hooker.frameStackHooker.hook(frame);\n                } catch (e) {\n                    // Unable to access the context.\n                }\n\n                try {\n                    _.each(frame.frames, function (frame) {\n                        hookErrorStacksForAllSubFrames(frame);\n                    });\n                } catch (e) {\n                    // Unable to access the context.\n                }\n            };\n\n        if (hooker.global.top !== hooker.global) {\n            // We're not the top context, so attempt to hook from there recursively.\n            // Note that due to same-origin policy this may not be feasible.\n            hookErrorStacksForAllSubFrames(hooker.global.top);\n        }\n\n        hookErrorStacksForAllSubFrames(hooker.global);\n    }\n});\n\nmodule.exports = GlobalStackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Handles the hooking of native JS error stack traces for a specific window/frame\n * in environments where <Error>.stack is defined as an accessor property, eg. Firefox/SpiderMonkey\n *\n * @param {StackCleaner} stackCleaner\n * @constructor\n */\nfunction NonV8FrameStackHooker(stackCleaner) {\n    /**\n     * @type {StackCleaner}\n     */\n    this.stackCleaner = stackCleaner;\n}\n\n_.extend(NonV8FrameStackHooker.prototype, {\n    /**\n     * Hooks native JS error stack traces for a specific window/frame\n     *\n     * @param {Window} frame\n     */\n    hook: function (frame) {\n        var hooker = this,\n            NativeError = frame.Error,\n            originalDescriptor = Object.getOwnPropertyDescriptor(NativeError.prototype, 'stack');\n\n        if (originalDescriptor !== null && originalDescriptor.get && originalDescriptor.set) {\n            Object.defineProperty(NativeError.prototype, 'stack', {\n                configurable: true,\n                enumerable: false,\n                get: function () {\n                    // Fetch the stack via the native mechanism before running it through our cleaning routine\n                    return hooker.stackCleaner.cleanStack(originalDescriptor.get.call(this));\n                },\n                set: function (stackTrace) {\n                    // Use the native .stack property value assignment logic for simplicity\n                    originalDescriptor.set.call(this, stackTrace);\n                }\n            });\n        }\n    }\n});\n\nmodule.exports = NonV8FrameStackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    STATE_JS_LAND = 'js land',\n    STATE_PHP_LAND = 'php land';\n\n/**\n * Handles the cleaning of JS/PHP mixed stack traces to remove PHPCore internal frames\n *\n * @constructor\n */\nfunction StackCleaner() {\n\n}\n\n_.extend(StackCleaner.prototype, {\n    /**\n     * Removes all frames from the given stack trace that relate to PHPCore internals,\n     * to produce a more useful and readable output, especially with tools such as Cypress.\n     *\n     * @param {string} stack\n     * @param {number=} stackTraceLimit\n     * @returns {string}\n     */\n    cleanStack: function (stack, stackTraceLimit) {\n        var frameIndex,\n            line,\n            resultFrames = [],\n            state = STATE_JS_LAND,\n            stackLines = stack.split('\\n');\n\n        for (frameIndex = stackLines.length - 1; frameIndex >= 0; frameIndex--) {\n            line = stackLines[frameIndex];\n\n            if (/__uniterInboundStackMarker__/.test(line)) {\n                state = STATE_PHP_LAND;\n            } else if (/__uniterOutboundStackMarker__/.test(line)) {\n                // We're now back out in JS land\n                state = STATE_JS_LAND;\n            } else if (state === STATE_JS_LAND || /__uniter(Module|Function)StackMarker__/.test(line)) {\n                resultFrames.unshift(\n                    line\n                        // Tidy stack frames from top-level PHP modules\n                        .replace(/\\b__uniterModuleStackMarker__/g, '__uniter_php_module__')\n                        // Remove stack markers from named PHP functions\n                        .replace(/\\B__uniterFunctionStackMarker__/g, '')\n                        // Tidy stack frames from PHP closures\n                        .replace(/\\b__uniterFunctionStackMarker__/g, '__uniter_php_closure__')\n                );\n            }\n        }\n\n        if (typeof stackTraceLimit !== 'undefined' && isFinite(stackTraceLimit)) {\n            resultFrames = resultFrames.slice(0, stackTraceLimit);\n        }\n\n        return resultFrames.join('\\n');\n    }\n});\n\nmodule.exports = StackCleaner;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Handles the hooking of native JS error stack traces for a specific window/frame in V8,\n * where we can use the Stack Trace API (https://v8.dev/docs/stack-trace-api)\n *\n * @param {StackCleaner} stackCleaner\n * @constructor\n */\nfunction V8FrameStackHooker(stackCleaner) {\n    /**\n     * @type {StackCleaner}\n     */\n    this.stackCleaner = stackCleaner;\n}\n\n_.extend(V8FrameStackHooker.prototype, {\n    /**\n     * Hooks native JS error stack traces for a specific window/frame\n     *\n     * @param {Window} frame\n     */\n    hook: function (frame) {\n        var hooker = this,\n            NativeError = frame.Error,\n\n            // On init, take note of the current limit so we can continue to apply it until/unless changed\n            // via the setter on the overriding CustomError we define below\n            stackTraceLimit = NativeError.stackTraceLimit;\n\n        // Hook the creation of error stack traces in V8 using the Stack Trace API\n        NativeError.prepareStackTrace = function (error/*, structuredStackTrace*/) {\n            var cleanedStack = hooker.stackCleaner.cleanStack(\n                error.stack,\n                // Allow one extra line for the error message\n                stackTraceLimit + 1\n            );\n\n            // For older versions of V8 we need to write to the .stack property,\n            // as the return value from .prepareStackTrace(...) is not always respected\n            error.stack = cleanedStack;\n\n            return cleanedStack;\n        };\n\n        /**\n         * Capture all stack frames so that we can correctly clean the stack. Note that\n         * Error.stackTraceLimit may still be set elsewhere (to give its \"visible\" value),\n         * which will use the accessor property that shadows this one below.\n         *\n         * Once a stack has been cleaned it will be truncated to the limit set.\n         */\n        NativeError.stackTraceLimit = Infinity;\n\n        /**\n         * Custom Error class that allows hooking static .stackTraceLimit so we can apply it post-cleaning\n         *\n         * @param {string} message\n         * @constructor\n         */\n        function CustomError(message) {\n            this.message = message;\n\n            // Unlike the native Error class that we're overriding, we need to explicitly capture .stack\n            NativeError.captureStackTrace(this, CustomError);\n        }\n\n        // Define the Error.* V8 Stack Trace API static members\n        Object.defineProperties(CustomError, {\n            captureStackTrace: {\n                configurable: true,\n                enumerable: true,\n                value: NativeError.captureStackTrace,\n                writable: true\n            },\n\n            // Name this class as the native Error\n            name: {\n                configurable: true,\n                enumerable: false,\n                value: 'Error'\n            },\n\n            // Shadow the native preparer we set above.\n            prepareStackTrace: {\n                configurable: true,\n                enumerable: true,\n\n                get: function () {\n                    return undefined;\n                },\n\n                set: function () {\n                    // TODO: Support this by also cleaning structuredStackTrace\n                    //       so that it may be passed on to the next preparer in the chain\n                    throw new Error('Uniter: Stacking of Error.prepareStackTrace not yet supported');\n                }\n            },\n\n            /**\n             * Allow Error.stackTraceLimit to be get and set, always returning the correct current value.\n             * However, internally we need to set the limit differently in order to capture enough frames\n             * to correctly clean the stack.\n             *\n             * NB: Attempting to simply redefine this property as an accessor on the native Error class\n             *     seems to result in the V8 Stack Trace API being disabled, hence this custom Error class.\n             */\n            stackTraceLimit: {\n                configurable: true,\n                enumerable: true,\n\n                /**\n                 * Fetches the current (visible) Error.stackTraceLimit\n                 *\n                 * @returns {number}\n                 */\n                get: function () {\n                    return stackTraceLimit;\n                },\n\n                /**\n                 * Handles a new (visible) Error.stackTraceLimit being set\n                 *\n                 * @param {number} newLimit\n                 */\n                set: function (newLimit) {\n                    stackTraceLimit = newLimit;\n                }\n            }\n        });\n\n        // Use the native Error.prototype so that we implement any other properties\n        // and so that instanceof will still work correctly.\n        CustomError.prototype = NativeError.prototype;\n\n        frame.Error = CustomError;\n    }\n});\n\nmodule.exports = V8FrameStackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('./functions/optionsAndInfo/config'),\n    require('./constants/errorHandling'),\n    require('./ini/errorHandling'),\n    require('./messages/error.en_GB'),\n    require('./messages/misc.en_GB'),\n    require('./messages/notice.en_GB'),\n    require('./constants/reserved'),\n    require('./functions/spl'),\n    require('./classes/stdClass'),\n    require('./classes/Error/ArgumentCountError'),\n    require('./interfaces/ArrayAccess'),\n    require('./classes/Closure'),\n    require('./classes/Error/CompileError'),\n    require('./classes/Error'),\n    require('./classes/Exception'),\n    require('./interfaces/Iterator'),\n    require('./interfaces/IteratorAggregate'),\n    require('./classes/JSObject'),\n    require('./classes/Error/ParseError'),\n    require('./interfaces/Throwable'),\n    require('./interfaces/Traversable'),\n    require('./classes/Error/TypeError')\n], function (\n    configOptionsAndInfoFunctions,\n    errorHandlingConstants,\n    errorHandlingDefaultINIOptions,\n    errorMessages,\n    miscellaneousMessages,\n    noticeMessages,\n    reservedConstants,\n    splFunctions,\n    stdClass,\n    ArgumentCountError,\n    ArrayAccess,\n    Closure,\n    CompileError,\n    Error,\n    Exception,\n    Iterator,\n    IteratorAggregate,\n    JSObject,\n    ParseError,\n    Throwable,\n    Traversable,\n    TypeError\n) {\n    return {\n        classes: [\n            {'stdClass': stdClass},\n            {'ArrayAccess': ArrayAccess},\n            {'Closure': Closure},\n            {'Throwable': Throwable},\n            {'Error': Error},\n            {'CompileError': CompileError},\n            {'ParseError': ParseError},\n            {'TypeError': TypeError},\n            {'ArgumentCountError': ArgumentCountError},\n            {'Exception': Exception},\n            {'Iterator': Iterator},\n            {'IteratorAggregate': IteratorAggregate},\n            {'JSObject': JSObject},\n            {'Traversable': Traversable}\n        ],\n        constantGroups: [\n            errorHandlingConstants,\n            reservedConstants\n        ],\n        functionGroups: [\n            configOptionsAndInfoFunctions,\n            splFunctions\n        ],\n        defaultINIGroups: [\n            errorHandlingDefaultINIOptions\n        ],\n        translationCatalogues: [\n            errorMessages,\n            noticeMessages,\n            miscellaneousMessages\n        ]\n    };\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        iniState = internals.iniState,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the value of a PHP configuration option.\n         * Any changes made at runtime (eg. with ini_set(...)) will be taken into account.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ini-get.php}\n         *\n         * @param {Reference|Value|Variable} optionNameReference\n         * @returns {Value}\n         */\n        'ini_get': function (optionNameReference) {\n            var optionName,\n                optionValue;\n\n            if (arguments.length !== 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'ini_get() expects exactly 1 parameter, ' + arguments.length + ' given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            optionName = optionNameReference.getValue().getNative();\n            optionValue = iniState.get(optionName);\n\n            if (optionValue === null) {\n                // Indicate that the option is not defined with bool(false)\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.coerce(optionValue);\n        },\n\n        /**\n         * Sets the value of a defined PHP configuration option at runtime,\n         * returning its previous value.\n         * If the option does not exist, false will be returned.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ini-set.php}\n         *\n         * @param {Reference|Value|Variable} optionNameReference\n         * @param {Reference|Value|Variable} optionValueReference\n         * @returns {Value}\n         */\n        'ini_set': function (optionNameReference, optionValueReference) {\n            var previousOptionValue,\n                optionName,\n                optionValue;\n\n            if (arguments.length !== 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'ini_set() expects exactly 2 parameters, ' + arguments.length + ' given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            optionName = optionNameReference.getValue().getNative();\n            previousOptionValue = iniState.get(optionName);\n\n            if (previousOptionValue === null) {\n                // Indicate that the option is not defined with bool(false)\n                return valueFactory.createBoolean(false);\n            }\n\n            optionValue = optionValueReference.getValue().getNative();\n\n            iniState.set(optionName, optionValue);\n\n            return valueFactory.coerce(previousOptionValue);\n        }\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'E_ERROR': 1,\n        'E_WARNING': 2,\n        'E_PARSE': 4,\n        'E_NOTICE': 8,\n        'E_CORE_ERROR': 16,\n        'E_CORE_WARNING': 32,\n        'E_COMPILE_ERROR': 64,\n        'E_COMPILE_WARNING': 128,\n        'E_USER_ERROR': 256,\n        'E_USER_WARNING': 512,\n        'E_USER_NOTICE': 1024,\n        'E_STRICT': 2048,\n        'E_RECOVERABLE_ERROR': 4096,\n        'E_DEPRECATED': 8192,\n        'E_USER_DEPRECATED': 16384,\n        'E_ALL': 32767\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /*jshint bitwise: false */\n    var E_ALL = internals.getConstant('E_ALL'),\n        E_DEPRECATED = internals.getConstant('E_DEPRECATED'),\n        E_NOTICE = internals.getConstant('E_NOTICE'),\n        E_STRICT = internals.getConstant('E_STRICT');\n\n    return {\n        /**\n         * Determines whether errors should be printed to stdout or hidden from the user.\n         * Errors are always written to stderr regardless of this setting.\n         *\n         * The value `stderr` will cause both messages to be written to stderr.\n         *\n         * @see {@link https://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors}\n         */\n        'display_errors': true,\n\n        /**\n         * Controls what levels of error are reported to the user.\n         *\n         * @see {@link https://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting}\n         */\n        'error_reporting': E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*\n * Translations for error-level error messages\n */\nmodule.exports = {\n    'en_GB': {\n        'core': {\n            'break_or_continue_in_wrong_context': '\\'${type}\\' not in the \\'loop\\' or \\'switch\\' context',\n            'call_to_undefined_function': 'Call to undefined function ${name}()',\n            'cannot_access_property': 'Cannot access ${visibility} property ${className}::$${propertyName}',\n            'cannot_access_when_no_active_class': 'Cannot access ${className}:: when no class scope is active',\n            'cannot_declare_class_as_name_already_in_use': 'Cannot declare class ${className} because the name is already in use',\n            // NB: This translation is in fact different to the above, by a comma\n            'cannot_redeclare_class_as_name_already_in_use': 'Cannot declare class ${className}, because the name is already in use',\n            'cannot_implement_throwable': 'Class ${className} cannot implement interface Throwable, extend Exception or Error instead',\n            'cannot_unset_static_property': 'Attempt to unset static property ${className}::$${propertyName}',\n            'cannot_use_as_name_already_in_use': 'Cannot use ${source} as ${alias} because the name is already in use',\n            'cannot_use_wrong_type_as': 'Cannot use object of type ${actual} as ${expected}',\n            'class_name_not_valid': 'Class name must be a valid object or a string',\n            'class_not_found': 'Class \\'${name}\\' not found',\n            'function_name_must_be_string': 'Function name must be a string',\n            'invalid_value_for_type': 'Argument ${index} passed to ${func}() must be ${expectedType}, ${actualType} given, called in ${callerFile} on line ${callerLine} and defined in ${definitionFile}:${definitionLine}',\n            'method_called_on_non_object': '${method} method called on non-object',\n            'no_parent_class': 'Cannot access parent:: when current class scope has no parent',\n            'non_object_method_call': 'Call to a member function ${name}() on ${type}',\n            'object_from_get_iterator_must_be_traversable': 'Objects returned by ${className}::getIterator() must be traversable or implement interface Iterator',\n            'only_variables_by_reference': 'Only variables can be passed by reference',\n            'too_few_args_for_exact_count': 'Too few arguments to function ${func}(), ${actualCount} passed in ${callerFile} on line ${callerLine} and exactly ${expectedCount} expected',\n            'uncaught_throwable': 'Uncaught ${name}: ${message}',\n            'uncaught_empty_throwable': 'Uncaught ${name}',\n            'undeclared_static_property': 'Access to undeclared static property: ${className}::$${propertyName}',\n            'undefined_class_constant': 'Undefined class constant \\'${name}\\'',\n            'undefined_constant': 'Undefined constant \\'${name}\\'',\n            'undefined_method': 'Call to undefined method ${className}::${methodName}()',\n            'undefined_property': 'Undefined property: ${className}::$${propertyName}',\n            'unsupported_operand_types': 'Unsupported operand types',\n            'used_this_outside_object_context': 'Using $this when not in object context'\n        }\n    }\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*\n * Miscellaneous translations\n */\nmodule.exports = {\n    'en_GB': {\n        'core': {\n            // For uncaught errors (see ErrorReporting)\n            'error_with_context_and_trace': ' in ${filePath}:${line}\\n' +\n                'Stack trace:' + '\\n' +\n                '${formattedTrace}\\n' +\n                '  thrown in ${filePath} on line ${line}',\n            'error_without_context_but_with_trace': '\\n' +\n                'Stack trace:' + '\\n' +\n                '${formattedTrace}\\n' +\n                '  thrown in ${filePath} on line ${line}',\n\n            // For warnings/notices/uncatchable errors etc.\n            'error_without_trace': ' in ${filePath} on line ${line}',\n\n            // The path used in stack traces etc. for eval'd code\n            'eval_path': '${path}(${lineNumber}) : eval()\\'d code',\n\n            // Used for building messages referencing types\n            'instance_of_type_expected': 'an instance of ${expectedType}',\n            'instance_of_type_actual': 'instance of ${actualType}',\n            'of_generic_type_expected': 'of the type ${expectedType}',\n\n            // For any type of error that needs to be scoped to the current function\n            'scoped_error': '${function}(): ${message}',\n\n            // For unknown file paths, line numbers etc.\n            'unknown': 'unknown'\n        }\n    }\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*\n * Translations for notice-level error messages\n */\nmodule.exports = {\n    'en_GB': {\n        'core': {\n            'constant_already_defined': 'Constant ${name} already defined'\n        }\n    }\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'PHP_EOL': '\\n'\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('../../Variable')\n], function (\n    Variable\n) {\n    return function (internals) {\n        var classAutoloader = internals.classAutoloader,\n            valueFactory = internals.valueFactory;\n\n        return {\n            'spl_autoload_register': function (callableReference) {\n                var isReference = (callableReference instanceof Variable),\n                    callableValue = isReference ? callableReference.getValue() : callableReference;\n\n                classAutoloader.appendAutoloadCallable(callableValue);\n            },\n            'spl_autoload_unregister': function (callableReference) {\n                var isReference = (callableReference instanceof Variable),\n                    callableValue = isReference ? callableReference.getValue() : callableReference;\n\n                return valueFactory.createBoolean(\n                    classAutoloader.removeAutoloadCallable(callableValue)\n                );\n            }\n        };\n    };\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nmodule.exports = function (internals) {\n    function stdClass() {\n\n    }\n\n    internals.disableAutoCoercion();\n\n    internals.defineUnwrapper(function () {\n        // When exporting via the public FFI API, unwrap stdClass instances to a plain object\n        // with native property values\n        var objectValue = this,\n            result = {};\n\n        _.forOwn(objectValue.getNonPrivateProperties(), function (propertyValue, propertyName) {\n            result[propertyName] = propertyValue.getNative();\n        });\n\n        return result;\n    });\n\n    return stdClass;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Thrown when an invalid number of arguments are passed to a user-defined function or method\n     *\n     * @see {@link https://secure.php.net/manual/en/class.argumentcounterror.php}\n     * @constructor\n     */\n    function ArgumentCountError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base TypeError class\n    internals.extendClass('TypeError');\n\n    internals.disableAutoCoercion();\n\n    return ArgumentCountError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    function ArrayAccess() {\n\n    }\n\n    return ArrayAccess;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    PHPError = require('phpcommon').PHPError,\n    Promise = require('lie');\n\nmodule.exports = function (internals) {\n    var callFactory = internals.callFactory,\n        callStack = internals.callStack,\n        createStaticMethod = function (method) {\n            method.isStatic = true;\n\n            return method;\n        },\n        errorPromoter = internals.errorPromoter,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    /**\n     * Class used to represent anonymous functions or \"closures\"\n     *\n     * @see {@link https://secure.php.net/manual/en/class.closure.php}\n     * @see {@link https://secure.php.net/manual/en/closure.construct.php}\n     *\n     * @constructor\n     */\n    function Closure() {\n\n    }\n\n    _.extend(Closure.prototype, {\n        /**\n         * Duplicates a closure with a specific bound object and class scope\n         *\n         * @see {@link https://secure.php.net/manual/en/closure.bind.php}\n         *\n         * @param {ObjectValue|Variable} closureReference\n         * @param {ObjectValue|Variable|undefined} newThisReference\n         * @param {StringValue|Variable|undefined} newScopeReference\n         */\n        'bind': createStaticMethod(function (closureReference, newThisReference, newScopeReference) {\n            var closureValue,\n                newScopeValue,\n                newThisValue,\n                scopeClass,\n                scopeClassName;\n\n            if (!closureReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects at least 2 parameters, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            if (!newThisReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects at least 2 parameters, 1 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            closureValue = closureReference.getValue();\n\n            if (closureValue.getType() !== 'object' || !closureValue.classIs('Closure')) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects parameter 1 to be Closure, ' + closureValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newThisValue = newThisReference.getValue();\n\n            if (newThisValue.getType() !== 'object' && newThisValue.getType() !== 'null') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects parameter 2 to be object, ' + newThisValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newScopeValue = newScopeReference ? newScopeReference.getValue() : null;\n\n            if (newScopeValue) {\n                if (newScopeValue.getType() === 'object') {\n                    // Use object's class as the scope class\n                    scopeClassName = newScopeValue.getClassName();\n                } else {\n                    // For any other type, coerce to string to use as class name\n                    // (yes, even integers/floats or resources)\n                    scopeClassName = newScopeValue.coerceToString().getNative();\n                }\n            } else {\n                scopeClassName = null;\n            }\n\n            // Fetch the class to use as the static scope if specified,\n            // otherwise if not specified or \"static\", use the class of the `$this` object\n            if (scopeClassName && scopeClassName !== 'static') {\n                scopeClass = globalNamespace.getClass(scopeClassName);\n            } else if (newThisValue.getType() !== 'null') {\n                scopeClass = newThisValue.getClass();\n            } else {\n                scopeClass = null;\n            }\n\n            return valueFactory.createClosureObject(closureValue.bindClosure(newThisValue, scopeClass));\n        }),\n\n        /**\n         * Duplicates a closure with a specific bound object and class scope\n         *\n         * @see {@link https://secure.php.net/manual/en/closure.bindto.php}\n         *\n         * @param {ObjectValue|Variable|undefined} newThisReference\n         * @param {StringValue|Variable|undefined} newScopeReference\n         */\n        'bindTo': function (newThisReference, newScopeReference) {\n            var closureValue = this,\n                newScopeValue,\n                newThisValue,\n                scopeClass,\n                scopeClassName;\n\n            if (!newThisReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bindTo() expects at least 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newThisValue = newThisReference.getValue();\n\n            if (newThisValue.getType() !== 'object' && newThisValue.getType() !== 'null') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bindTo() expects parameter 1 to be object, ' + newThisValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newScopeValue = newScopeReference ? newScopeReference.getValue() : null;\n\n            if (newScopeValue) {\n                if (newScopeValue.getType() === 'object') {\n                    // Use object's class as the scope class\n                    scopeClassName = newScopeValue.getClassName();\n                } else {\n                    // For any other type, coerce to string to use as class name\n                    // (yes, even integers/floats or resources)\n                    scopeClassName = newScopeValue.coerceToString().getNative();\n                }\n            } else {\n                scopeClassName = null;\n            }\n\n            // Fetch the class to use as the static scope if specified,\n            // otherwise if not specified or \"static\", use the class of the `$this` object\n            if (scopeClassName && scopeClassName !== 'static') {\n                scopeClass = globalNamespace.getClass(scopeClassName);\n            } else if (newThisValue.getType() !== 'null') {\n                scopeClass = newThisValue.getClass();\n            } else {\n                scopeClass = null;\n            }\n\n            return valueFactory.createClosureObject(closureValue.bindClosure(newThisValue, scopeClass));\n        },\n\n        /**\n         * Invokes the closure with the specified arguments, using calling magic.\n         *\n         * @see {@link http://php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke}\n         *\n         * @returns {Value}\n         */\n        '__invoke': function () {\n            return this.invokeClosure([].slice.call(arguments));\n        }\n    });\n\n    internals.disableAutoCoercion();\n\n    /**\n     * This unwrapper will be used when an instance of this builtin PHP class Closure\n     * is returned from PHP-land to JS-land. We need to export a callable native JS function\n     * so that JS-land code can neatly call into the PHP-land closure like this.\n     */\n    internals.defineUnwrapper(function (objectValue) {\n        var closure = objectValue.getInternalProperty('closure');\n\n        // Unwrap PHP Closures to native JS functions that may be called\n        // just like any other (with arguments coerced from JS->PHP\n        // and the return value coerced from PHP->JS automatically)\n        return function __uniterInboundStackMarker__() {\n            // Wrap thisObj in *Value object\n            var thisObj = valueFactory.coerceObject(this),\n                // Wrap all native JS values in *Value objects\n                args = valueFactory.coerceList(arguments);\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            callStack.push(callFactory.createFFICall([].slice.call(arguments)));\n\n            function popFFICall() {\n                callStack.pop();\n            }\n\n            if (internals.mode === 'async') {\n                return new Promise(function (resolve, reject) {\n                    // Call the method via Pausable to allow for blocking operation\n                    internals.pausable.call(\n                        closure.invoke,\n                        [args, thisObj],\n                        closure\n                    )\n                        // Pop the call off the stack _before_ returning, to mirror sync mode's behaviour\n                        .finally(popFFICall)\n                        .then(\n                            function (resultValue) {\n                                resolve(resultValue.getNative());\n                            },\n                            function (error) {\n                                if (valueFactory.isValue(error) && error.getType() === 'object') {\n                                    // Method threw a PHP Throwable, so throw a native JS error for it\n\n                                    // Feed the error into the ErrorReporting mechanism,\n                                    // so it will be written to stdout/stderr as applicable\n                                    reject(errorPromoter.promote(error));\n                                    return;\n                                }\n\n                                // Normal error: just pass it up to the caller\n                                reject(error);\n                            }\n                        );\n                });\n            }\n\n            function invoke() {\n                var nativeError;\n\n                // Call the closure, and then unwrap its result value back to a native one\n                try {\n                    return closure.invoke(args, thisObj).getNative();\n                } catch (error) {\n                    if (valueFactory.isValue(error) && error.getType() === 'object') {\n                        // Feed the error into the ErrorReporting mechanism,\n                        // so it will be written to stdout/stderr as applicable\n                        nativeError = errorPromoter.promote(error);\n\n                        throw nativeError;\n                    }\n\n                    throw error;\n                } finally {\n                    popFFICall();\n                }\n            }\n\n            if (internals.mode === 'psync') {\n                // For Promise-synchronous mode, we need to return a promise\n                // even though the actual invocation must return synchronously\n                return new Promise(function (resolve, reject) {\n                    try {\n                        resolve(invoke());\n                    } catch (error) {\n                        reject(error);\n                    }\n                });\n            }\n\n            // Otherwise we're in sync mode\n            return invoke();\n        };\n    });\n\n    return Closure;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Base class for compilation errors\n     *\n     * @see {@link https://secure.php.net/manual/en/class.compileerror.php}\n     * @constructor\n     */\n    function CompileError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base Error class\n    internals.extendClass('Error');\n\n    internals.disableAutoCoercion();\n\n    return CompileError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        traceFormatter = internals.traceFormatter,\n        valueFactory = internals.valueFactory;\n\n    /**\n     * Base class for all internal non-warning/non-notice Errors\n     *\n     * @see {@link https://secure.php.net/manual/en/class.error.php}\n     * @see {@link https://secure.php.net/manual/en/error.construct.php}\n     *\n     * @param {Reference|Value|Variable=} messageReference\n     * @constructor\n     */\n    function Error(messageReference) {\n        var messageValue = messageReference ?\n                messageReference.getValue() :\n                valueFactory.createString('');\n\n        /**\n         * The internal `line` property is defined by the shadow constructor.\n         *\n         * If this class is extended but a parent constructor call is not used,\n         * then no parent constructor will be called (even this native constructor function).\n         *\n         * To run code regardless of whether the parent constructor is called, we use\n         * a \"shadow constructor\", defined below.\n         */\n\n        /**\n         * A message describing the error\n         *\n         * (Default to empty here - unless overridden by calling the constructor defined above\n         * or overridden by a subclass)\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.message}\n         */\n        this.setProperty('message', messageValue);\n    }\n\n    Error.shadowConstructor = function () {\n        // Define these data properties here, so they are always defined for any derived class of error,\n        // regardless of whether a parent constructor call is used or not\n\n        /**\n         * The file the error was created inside\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.file}\n         */\n        this.setProperty('file', valueFactory.coerce(callStack.getLastFilePath()));\n\n        /**\n         * The line the error was created on\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.line}\n         */\n        this.setProperty('line', valueFactory.coerce(callStack.getLastLine()));\n\n        /**\n         * A message describing the error\n         *\n         * (Default to empty here - unless overridden by calling the constructor defined above\n         * or overridden by a subclass)\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.message}\n         */\n        this.setProperty('message', valueFactory.createString(''));\n\n        this.setInternalProperty('reportsOwnContext', false);\n\n        // This internal trace prop will not be visible to PHP code\n        // except for read-only via the ->getTraceAsString() method.\n        this.setInternalProperty('trace', callStack.getTrace());\n    };\n\n    // Error class should implement Throwable in PHP 7+\n    internals.implement('Throwable');\n\n    _.extend(Error.prototype, {\n        /**\n         * Fetches the path to the file containing the line this error was created from\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/error.getfile.php}\n         *\n         * @returns {StringValue}\n         */\n        getFile: function () {\n            return this.getProperty('file');\n        },\n\n        /**\n         * Fetches the line number this error was created on\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/error.getline.php}\n         *\n         * @returns {IntegerValue}\n         */\n        getLine: function () {\n            return this.getProperty('line');\n        },\n\n        /**\n         * Fetches the message for the error\n         *\n         * @see {@link https://secure.php.net/manual/en/error.getmessage.php}\n         *\n         * @returns {StringValue}\n         */\n        getMessage: function () {\n            return this.getProperty('message');\n        },\n\n        /**\n         * Gets the stack trace as a string\n         *\n         * @see {@link https://secure.php.net/manual/en/error.gettraceasstring.php}\n         *\n         * @returns {StringValue}\n         */\n        getTraceAsString: function () {\n            var trace = this.getInternalProperty('trace');\n\n            return valueFactory.createString(traceFormatter.format(trace));\n        }\n    });\n\n    internals.disableAutoCoercion();\n\n    return Error;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        traceFormatter = internals.traceFormatter,\n        valueFactory = internals.valueFactory;\n\n    /**\n     * Base class for all user Exceptions\n     *\n     * @see {@link https://secure.php.net/manual/en/class.exception.php}\n     * @see {@link https://secure.php.net/manual/en/exception.construct.php}\n     *\n     * @param {Reference|Value|Variable=} messageReference\n     * @constructor\n     */\n    function Exception(messageReference) {\n        var messageValue = messageReference ?\n            messageReference.getValue() :\n            valueFactory.createString(''); // The default exception message is the empty string\n\n        /**\n         * The internal `trace` property is defined by the shadow constructor.\n         *\n         * If this class is extended but a parent constructor call is not used,\n         * then no parent constructor will be called (even this native constructor function).\n         *\n         * To run code regardless of whether the parent constructor is called, we use\n         * a \"shadow constructor\", defined below.\n         */\n\n        this.setProperty('message', messageValue);\n    }\n\n    Exception.shadowConstructor = function () {\n        // Define these data properties here, so they are always defined for any derived class of Exception,\n        // regardless of whether a parent constructor call is used or not\n\n        /**\n         * The file the exception was created inside\n         *\n         * @see {@link https://secure.php.net/manual/en/class.exception.php#exception.props.file}\n         */\n        this.setProperty('file', valueFactory.coerce(callStack.getLastFilePath()));\n\n        /**\n         * The line the exception was created on\n         *\n         * @see {@link https://secure.php.net/manual/en/class.exception.php#exception.props.line}\n         */\n        this.setProperty('line', valueFactory.coerce(callStack.getLastLine()));\n\n        /**\n         * A message describing the exception\n         *\n         * (Default to empty here - unless overridden by calling the constructor defined above\n         * or overridden by a subclass)\n         *\n         * @see {@link https://secure.php.net/manual/en/class.exception.php#exception.props.message}\n         */\n        this.setProperty('message', valueFactory.createString(''));\n\n        this.setInternalProperty('reportsOwnContext', false);\n\n        // This internal trace prop will not be visible to PHP code\n        // except for read-only via the ->getTraceAsString() method.\n        this.setInternalProperty('trace', callStack.getTrace());\n    };\n\n    // Exception class should implement Throwable in PHP 7+\n    internals.implement('Throwable');\n\n    _.extend(Exception.prototype, {\n        /**\n         * Fetches the path to the file containing the line this exception was created from\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.getfile.php}\n         *\n         * @returns {StringValue}\n         */\n        getFile: function () {\n            return this.getProperty('file');\n        },\n\n        /**\n         * Fetches the line number this exception was created on\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.getline.php}\n         *\n         * @returns {IntegerValue}\n         */\n        getLine: function () {\n            return this.getProperty('line');\n        },\n\n        /**\n         * Fetches the message for the exception\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.getmessage.php}\n         *\n         * @returns {StringValue}\n         */\n        getMessage: function () {\n            return this.getProperty('message');\n        },\n\n        /**\n         * Gets the stack trace as a string\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.gettraceasstring.php}\n         *\n         * @returns {StringValue}\n         */\n        getTraceAsString: function () {\n            var trace = this.getInternalProperty('trace');\n\n            return valueFactory.createString(traceFormatter.format(trace));\n        }\n    });\n\n    internals.disableAutoCoercion();\n\n    return Exception;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Interface for user-defined iterators or objects that can be iterated themselves internally\n     *\n     * @see {@link https://secure.php.net/manual/en/class.iterator.php}\n     *\n     * @interface\n     */\n    function Iterator() {\n\n    }\n\n    internals.implement('Traversable');\n\n    Iterator.shadowConstructor = function () {\n        var iteratorValue = this;\n\n        iteratorValue.setInternalProperty('getIterator', function () {\n            // Implementors of Iterator are themselves iterable\n            return iteratorValue;\n        });\n    };\n\n    return Iterator;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Interface for user-defined iterators or objects that can be iterated themselves internally\n     *\n     * @see {@link https://secure.php.net/manual/en/class.iteratoraggregate.php}\n     *\n     * @interface\n     */\n    function IteratorAggregate() {\n\n    }\n\n    internals.implement('Traversable');\n\n    IteratorAggregate.shadowConstructor = function () {\n        var aggregateValue = this;\n\n        aggregateValue.setInternalProperty('getIterator', function () {\n            // Implementors of IteratorAggregate expose their iterator via a ->getIterator() method\n            return aggregateValue.callMethod('getIterator');\n        });\n    };\n\n    IteratorAggregate.prototype.getIterator = function () {\n        throw new Error('Interface method should be implemented by sub-classes');\n    };\n\n    return IteratorAggregate;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    UNDEFINED_METHOD = 'core.undefined_method';\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack;\n\n    function JSObject() {\n\n    }\n\n    _.extend(JSObject.prototype, {\n        /**\n         * JSObject needs to implement its own way of calling out to native JS methods,\n         * because the method property lookup needs to be case-sensitive, unlike PHP\n         *\n         * @param {string} name\n         * @param {*[]} args\n         * @returns {*}\n         */\n        '__call': function __uniterOutboundStackMarker__(name, args) {\n            var object = this,\n                result;\n\n            if (!_.isFunction(object[name])) {\n                callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_METHOD, {\n                    className: 'JSObject',\n                    methodName: name\n                });\n            }\n\n            result = object[name].apply(object, args);\n\n            return result;\n        },\n\n        /**\n         * Fetches a property from the native JS object\n         *\n         * @param {string} propertyName\n         * @returns {*}\n         */\n        '__get': function (propertyName) {\n            return this[propertyName];\n        },\n\n        /**\n         * In JavaScript, objects cannot normally be made callable, only functions\n         * (and Proxies with the \"apply\" trap) -\n         * this magic method is implemented to allow imported JS functions to be callable.\n         *\n         * @returns {*}\n         */\n        '__invoke': function () {\n            var object = this,\n                result;\n\n            if (!_.isFunction(object)) {\n                throw new Error('Attempted to invoke a non-function JS object');\n            }\n\n            result = object.apply(null, arguments);\n\n            return result;\n        },\n\n        /**\n         * Sets a property on the native JS object\n         *\n         * @param {string} propertyName\n         * @param {*} nativeValue\n         */\n        '__set': function (propertyName, nativeValue) {\n            // Ensure we write the native value to properties on native JS objects -\n            // as JSObject is auto-coercing we already have it\n            this[propertyName] = nativeValue;\n        },\n\n        /**\n         * Deletes a property from the native JS object when `unset($jsObject->prop)` is called from PHP-land\n         *\n         * @param {string} propertyName\n         */\n        '__unset': function (propertyName) {\n            delete this[propertyName];\n        }\n    });\n\n    internals.defineUnwrapper(function (nativeObject) {\n        /*\n         * JSObjects are objects that originate from JS-land and were subsequently passed into PHP-land -\n         * when we want to unwrap them to pass back to JS-land, simply return the original native object\n         */\n        return nativeObject;\n    });\n\n    return JSObject;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPParseError = phpCommon.PHPParseError;\n\nmodule.exports = function (internals) {\n    /**\n     * Thrown when an error occurs during parsing of PHP code, eg. when eval(...) is called\n     *\n     * @see {@link https://secure.php.net/manual/en/class.parseerror.php}\n     * @constructor\n     */\n    function ParseError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    internals.extendClass('CompileError');\n\n    internals.disableAutoCoercion();\n\n    internals.defineUnwrapper(function (errorValue) {\n        /*\n         * When throwing/returning a ParseError instance to JS-land, convert it to a PHPParseError from PHPCommon.\n         * Note that this is also used when returning rather than throwing, due to use of this unwrapper.\n         * This is useful for consistency, in the scenario where a ParseError is returned (not thrown)\n         * to JS-land, then later thrown from JS-land.\n         *\n         * Note that this unwrapper shadows the one defined on the Throwable interface.\n         */\n        return new PHPParseError(\n            errorValue.getProperty('message').getNative(),\n            errorValue.getProperty('file').getNative(),\n            errorValue.getProperty('line').getNative()\n        );\n    });\n\n    return ParseError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    util = require('util'),\n    PHPError = phpCommon.PHPError,\n    PHPFatalError = phpCommon.PHPFatalError,\n\n    UNCAUGHT_EMPTY_THROWABLE = 'core.uncaught_empty_throwable',\n    UNCAUGHT_THROWABLE = 'core.uncaught_throwable';\n\nmodule.exports = function (internals) {\n    var translator = internals.translator;\n\n    /**\n     * PHP 7 Throwable interface\n     *\n     * @see {@link https://secure.php.net/manual/en/class.throwable.php}\n     *\n     * @constructor\n     */\n    function Throwable() {\n    }\n\n    util.inherits(Throwable, PHPError);\n\n    internals.disableAutoCoercion();\n\n    internals.defineUnwrapper(function (errorValue) {\n        /*\n         * When throwing/returning a Throwable instance to JS-land, by default convert it to a PHPFatalError from PHPCommon.\n         * Note that this is also used when returning rather than throwing, due to use of this unwrapper.\n         * This is useful for consistency, in the scenario where an Error or Exception is returned (not thrown)\n         * to JS-land, then later thrown from JS-land.\n         */\n        var message = errorValue.getProperty('message').getNative();\n\n        if (message !== '') {\n            message = translator.translate(UNCAUGHT_THROWABLE, {\n                name: errorValue.getClassName(),\n                message: message\n            });\n        } else {\n            message = translator.translate(UNCAUGHT_EMPTY_THROWABLE, {\n                name: errorValue.getClassName()\n            });\n        }\n\n        return new PHPFatalError(\n            message,\n            errorValue.getProperty('file').getNative(),\n            errorValue.getProperty('line').getNative()\n        );\n    });\n\n    return Throwable;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Interface for classes traversable using foreach (extended by Iterator and IteratorAggregate)\n     *\n     * @see {@link https://secure.php.net/manual/en/class.traversable.php}\n     *\n     * @interface\n     */\n    function Traversable() {\n\n    }\n\n    Traversable.shadowConstructor = function () {\n        var traversableValue = this;\n\n        traversableValue.setInternalProperty('getIterator', function () {\n            throw new Error('\\\\Traversable: Sub-interface should have set the iterator getter');\n        });\n    };\n\n    internals.disableAutoCoercion();\n\n    return Traversable;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Base class for type errors\n     *\n     * @see {@link https://secure.php.net/manual/en/class.typeerror.php}\n     * @constructor\n     */\n    function TypeError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base Error class\n    internals.extendClass('Error');\n\n    internals.disableAutoCoercion();\n\n    return TypeError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\nfunction AccessorReference(valueFactory, valueGetter, valueSetter) {\n    this.valueFactory = valueFactory;\n    this.valueGetter = valueGetter;\n    this.valueSetter = valueSetter;\n}\n\nutil.inherits(AccessorReference, Reference);\n\n_.extend(AccessorReference.prototype, {\n    getReference: function () {\n        return this;\n    },\n\n    getValue: function () {\n        var reference = this;\n\n        return reference.valueFactory.coerce(reference.valueGetter());\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return true;\n    },\n\n    setValue: function (value) {\n        this.valueSetter(value.getNative());\n\n        return value;\n    }\n});\n\nmodule.exports = AccessorReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Scope} scope\n * @param {NamespaceScope} namespaceScope\n * @param {Value[]} args\n * @param {Class|null} newStaticClass\n * @constructor\n */\nfunction Call(scope, namespaceScope, args, newStaticClass) {\n    /**\n     * @type {Value[]}\n     */\n    this.args = args;\n    /**\n     * @type {function|null}\n     */\n    this.finder = null;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n    /**\n     * @type {Class|null}\n     */\n    this.newStaticClass = newStaticClass;\n    /**\n     * @type {Scope}\n     */\n    this.scope = scope;\n}\n\n_.extend(Call.prototype, {\n    /**\n     * Fetches the current class for the call, if any\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        return this.scope.getCurrentClass();\n    },\n\n    /**\n     * Fetches the path to the file this call was made from\n     *\n     * @returns {string|null}\n     */\n    getFilePath: function () {\n        return this.namespaceScope.getFilePath();\n    },\n\n    /**\n     * Fetches the Value objects passed as arguments to the called function\n     *\n     * @returns {Value[]}\n     */\n    getFunctionArgs: function () {\n        return this.args;\n    },\n\n    /**\n     * Fetches the name of the current function\n     *\n     * @returns {string}\n     */\n    getFunctionName: function () {\n        return this.scope.getTraceFrameName();\n    },\n\n    /**\n     * Fetches the number of the last line executed inside this call's scope\n     *\n     * @returns {number|null}\n     */\n    getLastLine: function () {\n        var call = this;\n\n        if (!call.finder) {\n            return null;\n        }\n\n        return call.finder();\n    },\n\n    /**\n     * Fetches the scope inside the called function\n     *\n     * @returns {Scope}\n     */\n    getScope: function () {\n        return this.scope;\n    },\n\n    /**\n     * Fetches the static class introduced by this call's scope. If null,\n     * the call was a forwarding call, and so the parent call's static class should be used\n     *\n     * @returns {Class|null}\n     */\n    getStaticClass: function () {\n        var call = this,\n            thisObject = call.scope.getThisObject();\n\n        if (thisObject && thisObject.getType() !== 'null') {\n            return thisObject.getClass();\n        }\n\n        return call.newStaticClass;\n    },\n\n    /**\n     * Fetches the ObjectValue that is the current `$this` object, if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        return this.scope.getThisObject();\n    },\n\n    /**\n     * Fetches the path to the file this call was made from, suitable for stack traces (so without any eval context)\n     *\n     * @returns {string|null}\n     */\n    getTraceFilePath: function () {\n        var call = this;\n\n        return call.scope.getFilePath(call.namespaceScope.getFilePath());\n    },\n\n    /**\n     * Registers a finder for looking up the current/last line number inside the called function\n     *\n     * @param {function} finder\n     */\n    instrument: function (finder) {\n        this.finder = finder;\n    },\n\n    /**\n     * Determines whether this call is to a userland function (defined inside PHP-land) or not\n     *\n     * @returns {boolean}\n     */\n    isUserland: function () {\n        // If the called function was defined inside the \"invisible\" global namespace scope,\n        // then it was defined in JS-land either as a built-in or was consumer-provided\n        return !this.namespaceScope.isGlobal();\n    },\n\n    /**\n     * Determines whether all errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesErrors: function () {\n        return this.scope.suppressesErrors();\n    },\n\n    /**\n     * Determines whether own errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesOwnErrors: function () {\n        return this.scope.suppressesOwnErrors();\n    }\n});\n\nmodule.exports = Call;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Call\n * @param {class} FFICall\n * @constructor\n */\nfunction CallFactory(Call, FFICall) {\n    /**\n     * @type {class}\n     */\n    this.Call = Call;\n    /**\n     * @type {class}\n     */\n    this.FFICall = FFICall;\n}\n\n_.extend(CallFactory.prototype, {\n    /**\n     * Creates a new Call\n     *\n     * @param {Scope} scope\n     * @param {NamespaceScope} namespaceScope\n     * @param {Reference[]|Value[]|Variable[]|=} args\n     * @param {Class|null} newStaticClass\n     * @returns {Call}\n     */\n    create: function (scope, namespaceScope, args, newStaticClass) {\n        var factory = this;\n\n        return new factory.Call(scope, namespaceScope, args || [], newStaticClass || null);\n    },\n\n    /**\n     * Creates a new FFI Call\n     *\n     * @param {Reference[]|Value[]|Variable[]|=} args\n     */\n    createFFICall: function (args) {\n        var factory = this;\n\n        return new factory.FFICall(args || []);\n    }\n});\n\nmodule.exports = CallFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    PHPFatalError = phpCommon.PHPFatalError;\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {Translator} translator\n * @param {ErrorReporting} errorReporting\n * @constructor\n */\nfunction CallStack(valueFactory, translator, errorReporting) {\n    /**\n     * @type {Call[]}\n     */\n    this.calls = [];\n    /**\n     * @type {ErrorReporting}\n     */\n    this.errorReporting = errorReporting;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(CallStack.prototype, {\n    /**\n     * Fetches the previous Call near the top of the stack, or null if none\n     *\n     * @returns {Call|null}\n     */\n    getCaller: function () {\n        var chain = this;\n\n        return chain.calls[chain.calls.length - 2] || null;\n    },\n\n    /**\n     * Fetches the path to the file containing the last line of code executed\n     *\n     * @returns {string|null}\n     */\n    getCallerFilePath: function () {\n        var caller = this.getUserlandCaller();\n\n        return caller ? caller.getFilePath() : null;\n    },\n\n    /**\n     * Fetches the number of the last line of code executed in the caller\n     *\n     * @returns {number|null}\n     */\n    getCallerLastLine: function () {\n        var caller = this.getUserlandCaller();\n\n        return caller ? caller.getLastLine() : null;\n    },\n\n    /**\n     * Fetches the scope of the previous Call near the top of the stack, or null if none\n     *\n     * @returns {Scope|null}\n     */\n    getCallerScope: function () {\n        var chain = this,\n            callerCall = chain.calls[chain.calls.length - 2] || null;\n\n        return callerCall ? callerCall.getScope() : null;\n    },\n\n    /**\n     * Fetches the current Call on the top of the stack, or null if none\n     *\n     * @returns {Call|null}\n     */\n    getCurrent: function () {\n        var chain = this;\n\n        return chain.calls[chain.calls.length - 1] || null;\n    },\n\n    /**\n     * Fetches the class that defines the current function being executed\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        var chain = this,\n            call = chain.getCurrent();\n\n        if (!call) {\n            return null;\n        }\n\n        return call.getCurrentClass();\n    },\n\n    /**\n     * Fetches the path to the file containing the last line of code executed\n     *\n     * @returns {string|null}\n     */\n    getLastFilePath: function () {\n        var caller = this.getUserlandCallee();\n\n        return caller ? caller.getFilePath() : null;\n    },\n\n    /**\n     * Fetches the number of the last line of code executed\n     *\n     * @returns {number|null}\n     */\n    getLastLine: function () {\n        var caller = this.getUserlandCallee();\n\n        return caller ? caller.getLastLine() : null;\n    },\n\n    /**\n     * Fetches the number of calls on the stack (stack depth)\n     *\n     * @returns {number}\n     */\n    getLength: function () {\n        return this.calls.length;\n    },\n\n    /**\n     * Fetches the class that is currently considered the static context,\n     * referenced with static:: in PHP-land\n     *\n     * @returns {Class|null}\n     */\n    getStaticClass: function () {\n        var call,\n            callStack = this,\n            index,\n            newStaticClass,\n            staticClass = null;\n\n        for (index = callStack.calls.length - 1; index >= 0; index--) {\n            call = callStack.calls[index];\n            newStaticClass = call.getStaticClass();\n\n            if (newStaticClass) {\n                staticClass = newStaticClass;\n\n                break;\n            }\n        }\n\n        return staticClass;\n    },\n\n    /**\n     * Fetches the ObjectValue that is the current `$this` object, if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        var currentCall = this.getCurrent();\n\n        if (!currentCall) {\n            return null;\n        }\n\n        return currentCall.getThisObject();\n    },\n\n    /**\n     * Fetches a call stack trace array, with one element for each stack frame (call)\n     *\n     * @returns {{index: number, file: string, line: number, func: function, args: *[]}[]}\n     */\n    getTrace: function () {\n        var call,\n            callStack = this,\n            index,\n            trace = [],\n            chronoIndex = callStack.calls.length - 2;\n\n        for (index = 1; index < callStack.calls.length; index++) {\n            call = callStack.calls[index];\n\n            trace.unshift({\n                // Most recent call should have index 0\n                index: chronoIndex--,\n                file: callStack.calls[index - 1].getTraceFilePath(),\n                // Fetch the line number the call _occurred on_, rather than the line\n                // last executed inside the called function\n                line: callStack.calls[index - 1].getLastLine(),\n                func: call.getFunctionName(),\n                args: call.getFunctionArgs()\n            });\n        }\n\n        return trace;\n    },\n\n    /**\n     * Fetches the PHP-land call for the current stack frame. If we are currently\n     * executing a built-in function called from a PHP method, the PHP method\n     * would be the PHP-land (userland) caller.\n     *\n     * @returns {Call|null}\n     */\n    getUserlandCallee: function () {\n        var call,\n            callStack = this,\n            index;\n\n        if (callStack.calls.length === 0) {\n            return null;\n        }\n\n        index = callStack.calls.length - 1;\n        call = callStack.calls[index];\n\n        do {\n            if (call.isUserland() || index === 0) {\n                return call;\n            }\n\n            call = callStack.calls[--index];\n        } while (call);\n\n        throw new Error('Could not find a valid userland callee');\n    },\n\n    /**\n     * Fetches the PHP-land call for the current stack frame. If we are currently\n     * executing a built-in function called from a PHP method, the PHP method\n     * would be the PHP-land (userland) caller.\n     *\n     * @returns {Call|null}\n     */\n    getUserlandCaller: function () {\n        var call,\n            callStack = this,\n            index;\n\n        if (callStack.calls.length < 2) {\n            return null;\n        }\n\n        index = callStack.calls.length - 2;\n        call = callStack.calls[index];\n\n        do {\n            if (call.isUserland() || index === 0) {\n                return call;\n            }\n\n            call = callStack.calls[--index];\n        } while (call);\n\n        throw new Error('Could not find a valid userland caller');\n    },\n\n    /**\n     * Instruments the current call\n     *\n     * @param {function} finder\n     */\n    instrumentCurrent: function (finder) {\n        this.getCurrent().instrument(finder);\n    },\n\n    /**\n     * Removes the current call from the stack\n     */\n    pop: function () {\n        this.calls.pop();\n    },\n\n    /**\n     * Pushes a new current call onto the top of the stack\n     *\n     * @param {Call} call\n     */\n    push: function (call) {\n        this.calls.push(call);\n    },\n\n    /**\n     * Raises an error/warning with the specified level and message\n     *\n     * @TODO: Most places where this function is called provide built-in strings,\n     *        which we should move to translations. An exception is trigger_error(...)'s user-provided messages\n     * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n     * @param {string} message String text message representing the error\n     * @param {string=} errorClass\n     * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n     */\n    raiseError: function (level, message, errorClass, reportsOwnContext) {\n        var call,\n            chain = this,\n            calls = chain.calls,\n            index;\n\n        if (level === PHPError.E_ERROR) {\n            // Throw an uncatchable fatal error (catchable errors must be thrown\n            // via .raiseTranslatedError(...))\n            throw new PHPFatalError(message, chain.getLastFilePath(), chain.getLastLine());\n        }\n\n        // Some constructs like isset(...) should only suppress errors\n        // for their own scope\n        call = chain.getCurrent();\n\n        if (call && call.suppressesOwnErrors()) {\n            return;\n        }\n\n        // Check whether any parent scope is set to suppress errors (eg. with the @-operator)\n        for (index = calls.length - 1; index >= 0; --index) {\n            call = calls[index];\n\n            if (call.suppressesErrors()) {\n                return;\n            }\n        }\n\n        chain.errorReporting.reportError(\n            level,\n            message,\n            chain.getLastFilePath(),\n            chain.getLastLine(),\n            chain.getTrace(),\n            !!reportsOwnContext\n        );\n    },\n\n    /**\n     * Raises a catchable Error or a notice/warning with the specified level, message translation key and variables\n     *\n     * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n     * @param {string} translationKey\n     * @param {Object.<string, string>=} placeholderVariables\n     * @param {string=} errorClass\n     * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n     * @param {string=} filePath\n     * @param {number=} lineNumber\n     * @throws {ObjectValue} Throws an ObjectValue-wrapped Throwable if not a notice or warning\n     */\n    raiseTranslatedError: function (\n        level,\n        translationKey,\n        placeholderVariables,\n        errorClass,\n        reportsOwnContext,\n        filePath,\n        lineNumber\n    ) {\n        var callStack = this,\n            message = callStack.translator.translate(translationKey, placeholderVariables);\n\n        if (level === PHPError.E_ERROR) {\n            // Non-warning/non-notice errors need to actually stop execution\n            // NB: The Error class' constructor will fetch file and line number info\n            throw callStack.valueFactory.createErrorObject(\n                errorClass || 'Error',\n                message,\n                null,\n                null,\n                filePath,\n                lineNumber,\n                reportsOwnContext\n            );\n        }\n\n        callStack.raiseError(level, message, errorClass, reportsOwnContext);\n    },\n\n    /**\n     * Raises an uncatchable PHP fatal error with the specified message translation key and variables\n     *\n     * @param {string} translationKey\n     * @param {Object.<string, string>=} placeholderVariables\n     * @throws {PHPFatalError} Throws an uncatchable PHPFatalError\n     */\n    raiseUncatchableFatalError: function (translationKey, placeholderVariables) {\n        var callStack = this,\n            message = callStack.translator.translate(translationKey, placeholderVariables);\n\n        callStack.raiseError(PHPError.E_ERROR, message);\n    }\n});\n\nmodule.exports = CallStack;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    var MAGIC_AUTOLOAD_FUNCTION = '__autoload';\n\n    function ClassAutoloader(valueFactory) {\n        this.globalNamespace = null;\n        this.splStack = null;\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(ClassAutoloader.prototype, {\n        appendAutoloadCallable: function (autoloadCallable) {\n            var autoloader = this,\n                splStack = autoloader.splStack;\n\n            if (!splStack) {\n                splStack = [];\n                autoloader.splStack = splStack;\n            }\n\n            splStack.push(autoloadCallable);\n        },\n\n        autoloadClass: function (name) {\n            var autoloader = this,\n                globalNamespace = autoloader.globalNamespace,\n                magicAutoloadFunction,\n                splStack = autoloader.splStack;\n\n            if (splStack) {\n                _.each(splStack, function (autoloadCallable) {\n                    autoloadCallable.call([autoloader.valueFactory.createString(name)], globalNamespace);\n\n                    if (globalNamespace.hasClass(name)) {\n                        // Autoloader has defined the class: no need to call any further autoloaders\n                        return false;\n                    }\n                });\n            } else {\n                magicAutoloadFunction = globalNamespace.getOwnFunction(MAGIC_AUTOLOAD_FUNCTION);\n\n                if (magicAutoloadFunction) {\n                    magicAutoloadFunction(autoloader.valueFactory.createString(name));\n                }\n            }\n        },\n\n        removeAutoloadCallable: function (autoloadCallable) {\n            var found = false,\n                splStack = this.splStack;\n\n            if (!splStack) {\n                // SPL stack has not been enabled: nothing to do\n                return false;\n            }\n\n            _.each(splStack, function (existingAutoloadCallable, index) {\n                // Callables may be different value types or different objects,\n                // so compare using the *Value API\n                if (existingAutoloadCallable.isEqualTo(autoloadCallable).getNative()) {\n                    found = true;\n                    splStack.splice(index, 1);\n                    return false;\n                }\n            });\n\n            return found;\n        },\n\n        setGlobalNamespace: function (globalNamespace) {\n            this.globalNamespace = globalNamespace;\n        }\n    });\n\n    return ClassAutoloader;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    FunctionContextInterface = require('./FunctionContextInterface');\n\n/**\n * Represents a PHP closure function\n *\n * @param {NamespaceScope} namespaceScope\n * @param {Class|null} classObject Used when the closure is defined inside a class\n * @constructor\n * @implements {FunctionContextInterface}\n */\nfunction ClosureContext(namespaceScope, classObject) {\n    /**\n     * @type {Class|null}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n}\n\nutil.inherits(ClosureContext, FunctionContextInterface);\n\n_.extend(ClosureContext.prototype, {\n    /**\n     * Fetches the fully-qualified name of the closure (eg. as used by __METHOD__)\n     *\n     * @returns {string}\n     */\n    getName: function () {\n        return this.namespaceScope.getNamespacePrefix() + '{closure}';\n    },\n\n    /**\n     * Fetches the name of the closure as required for stack traces\n     *\n     * @returns {string}\n     */\n    getTraceFrameName: function () {\n        var spec = this,\n            name = spec.namespaceScope.getNamespacePrefix() + '{closure}';\n\n        if (spec.classObject) {\n            name = spec.classObject.getName() + '::' + name;\n        }\n\n        return name;\n    },\n\n    /**\n     * Fetches the name of the closure, without any qualifying class prefix\n     * (eg. as used by __FUNCTION__).\n     * NB1: the namespace prefix is intentionally always included\n     * NB2: the class (if set) is intentionally never included\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: function () {\n        return this.namespaceScope.getNamespacePrefix() + '{closure}';\n    }\n});\n\nmodule.exports = ClosureContext;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {FunctionFactory} functionFactory\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {class} Closure\n     * @constructor\n     */\n    function ClosureFactory(\n        functionFactory,\n        valueFactory,\n        callStack,\n        Closure\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {class}\n         */\n        this.Closure = Closure;\n        /**\n         * @type {FunctionFactory}\n         */\n        this.functionFactory = functionFactory;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(ClosureFactory.prototype, {\n        /**\n         * Creates a new Closure\n         *\n         * @param {Scope} enclosingScope\n         * @param {Function} unwrappedFunction\n         * @param {NamespaceScope} namespaceScope\n         * @param {Class|undefined} scopeClass\n         * @param {ObjectValue|NullValue|null} thisObject Null for a static closure, the object to use otherwise\n         * @param {FunctionSpec} functionSpec\n         * @returns {Closure}\n         */\n        create: function (enclosingScope, unwrappedFunction, namespaceScope, scopeClass, thisObject, functionSpec) {\n            var factory = this,\n                wrappedFunction;\n\n            // If a bound object is specified but no class scope, use the class of the object\n            if (!scopeClass) {\n                scopeClass = thisObject && thisObject.getType() !== 'null' ?\n                    thisObject.getClass() :\n                    null;\n            }\n\n            wrappedFunction = factory.functionFactory.create(\n                namespaceScope,\n                scopeClass,\n                unwrappedFunction,\n                null,\n                null,\n                // Inside a closure, static:: will either refer to the current bound static class\n                // or, if none, then the current/owning class of the method that created it\n                factory.callStack.getStaticClass() || scopeClass || null,\n                functionSpec\n            );\n\n            return new factory.Closure(\n                factory,\n                factory.valueFactory,\n                namespaceScope,\n                enclosingScope,\n                unwrappedFunction,\n                wrappedFunction,\n                thisObject,\n                functionSpec\n            );\n        }\n    });\n\n    return ClosureFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    ElementHookCollection = require('./ElementHookCollection'),\n    ElementProvider = require('./ElementProvider'),\n    HookableElementProvider = require('./HookableElementProvider');\n\n/**\n * Creates element providers and objects related to them\n *\n * @constructor\n */\nfunction ElementProviderFactory() {\n\n}\n\n_.extend(ElementProviderFactory.prototype, {\n    /**\n     * Creates a new ElementHookCollection to be passed to a HookableElementProvider\n     *\n     * @returns {ElementHookCollection}\n     */\n    createElementHookCollection: function () {\n        return new ElementHookCollection();\n    },\n\n    /**\n     * Creates a new HookableElementProvider\n     *\n     * @param {ElementProvider} baseElementProvider\n     * @param {ElementHookCollection} elementHookCollection\n     * @returns {HookableElementProvider}\n     */\n    createHookableProvider: function (baseElementProvider, elementHookCollection) {\n        return new HookableElementProvider(baseElementProvider, elementHookCollection);\n    },\n\n    /**\n     * Creates a new ElementProvider\n     *\n     * @returns {ElementProvider}\n     */\n    createProvider: function () {\n        return new ElementProvider();\n    }\n});\n\nmodule.exports = ElementProviderFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Contains a set of hooks to be called when various operations are performed on a hookable array's elements\n *\n * @constructor\n */\nfunction ElementHookCollection() {\n    /**\n     * @type {Function[]}\n     */\n    this.onElementReferenceSetCallbacks = [];\n    /**\n     * @type {Function[]}\n     */\n    this.onElementValueSetCallbacks = [];\n    /**\n     * @type {Function[]}\n     */\n    this.onElementUnsetCallbacks = [];\n}\n\n_.extend(ElementHookCollection.prototype, {\n    /**\n     * Handles the setting of a hookable element's reference by invoking all relevant callbacks\n     *\n     * @param {HookableElement} element\n     * @param {Reference} referenceSet\n     */\n    handleElementReferenceSet: function (element, referenceSet) {\n        _.each(this.onElementReferenceSetCallbacks, function (callback) {\n            callback(element, referenceSet);\n        });\n    },\n\n    /**\n     * Handles the setting of a hookable element's value by invoking all relevant callbacks\n     *\n     * @param {HookableElement} element\n     * @param {Value} valueSet\n     */\n    handleElementValueSet: function (element, valueSet) {\n        _.each(this.onElementValueSetCallbacks, function (callback) {\n            callback(element, valueSet);\n        });\n    },\n\n    /**\n     * Handles the unsetting of a hookable element by invoking all relevant callbacks\n     *\n     * @param {HookableElement} element\n     */\n    handleElementUnset: function (element) {\n        _.each(this.onElementUnsetCallbacks, function (callback) {\n            callback(element);\n        });\n    },\n\n    /**\n     * Installs a new hook callback to be called when a hookable element's reference is set\n     *\n     * @param {Function} callback\n     */\n    onElementReferenceSet: function (callback) {\n        this.onElementReferenceSetCallbacks.push(callback);\n    },\n\n    /**\n     * Installs a new hook callback to be called when a hookable element's value is set\n     *\n     * @param {Function} callback\n     */\n    onElementValueSet: function (callback) {\n        this.onElementValueSetCallbacks.push(callback);\n    },\n\n    /**\n     * Installs a new hook callback to be called when a hookable element is unset\n     *\n     * @param {Function} callback\n     */\n    onElementUnset: function (callback) {\n        this.onElementUnsetCallbacks.push(callback);\n    }\n});\n\nmodule.exports = ElementHookCollection;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    HookableElement = require('./HookableElement');\n\n/**\n * Creates hookable array elements, which will invoke hooks in the given collection where applicable\n *\n * @param {ElementProvider} baseElementProvider\n * @param {ElementHookCollection} elementHookCollection\n * @constructor\n */\nfunction HookableElementProvider(baseElementProvider, elementHookCollection) {\n    /**\n     * @type {ElementProvider}\n     */\n    this.baseElementProvider = baseElementProvider;\n    /**\n     * @type {ElementHookCollection}\n     */\n    this.elementHookCollection = elementHookCollection;\n}\n\n_.extend(HookableElementProvider.prototype, {\n    /**\n     * Creates a new HookableElement\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {ArrayValue} arrayValue\n     * @param {Value} key\n     * @param {Value|null }value\n     * @param {Reference|null} reference\n     * @returns {HookableElementReference}\n     */\n    createElement: function (valueFactory, callStack, arrayValue, key, value, reference) {\n        var provider = this,\n            decoratedElement = provider.baseElementProvider.createElement(\n                valueFactory,\n                callStack,\n                arrayValue,\n                key,\n                value,\n                reference\n            );\n\n        return new HookableElement(decoratedElement, provider.elementHookCollection);\n    }\n});\n\nmodule.exports = HookableElementProvider;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('../Reference');\n\n/**\n * Decorates an ElementReference to allow it to be hooked into\n *\n * @param {ElementReference} decoratedElement\n * @param {ElementHookCollection} elementHookCollection\n * @constructor\n */\nfunction HookableElementReference(decoratedElement, elementHookCollection) {\n    /**\n     * @type {ElementReference}\n     */\n    this.decoratedElement = decoratedElement;\n    /**\n     * @type {ElementHookCollection}\n     */\n    this.elementHookCollection = elementHookCollection;\n}\n\nutil.inherits(HookableElementReference, Reference);\n\n_.extend(HookableElementReference.prototype, {\n    /**\n     * Fetches an instance property of this element (assuming it contains an object) by its name\n     *\n     * @param {string} name\n     * @returns {PropertyReference}\n     */\n    getInstancePropertyByName: function (name) {\n        return this.decoratedElement.getInstancePropertyByName(name);\n    },\n\n    /**\n     * Fetches this element's key value\n     *\n     * @returns {Value}\n     */\n    getKey: function () {\n        return this.decoratedElement.getKey();\n    },\n\n    /**\n     * Fetches the relevant type of Pair class to represent this array element.\n     * If the element is a reference (to a variable, another array element or object property)\n     * then a KeyReferencePair will be returned.\n     * Otherwise the element simply holds a value, in which case a KeyValuePair will be returned.\n     *\n     * @param {Value|undefined} overrideKey Optional key to use rather than this element's\n     * @returns {KeyReferencePair|KeyValuePair}\n     */\n    getPairForAssignment: function (overrideKey) {\n        return this.decoratedElement.getPairForAssignment(overrideKey);\n    },\n\n    /**\n     * Fetches a reference to this element\n     *\n     * @returns {HookableElementReference}\n     */\n    getReference: function () {\n        return this;\n    },\n\n    /**\n     * Fetches the value of this element (or the value of its reference, if set)\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        return this.decoratedElement.getValue();\n    },\n\n    /**\n     * Fetches either the value or the reference of this element, depending on which (if any) is set\n     *\n     * @returns {Reference|Value}\n     */\n    getValueReference: function () {\n        return this.decoratedElement.getValueReference();\n    },\n\n    /**\n     * Determines whether this element is \"defined\" (whether it has either a value or reference set)\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return this.decoratedElement.isDefined();\n    },\n\n    /**\n     * Determines whether the specified array element is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return this.decoratedElement.isEmpty();\n    },\n\n    /**\n     * Determines whether this element has a reference set rather than a value\n     *\n     * @returns {boolean}\n     */\n    isReference: function () {\n        return this.decoratedElement.isReference();\n    },\n\n    /**\n     * Determines whether this element is defined and if so, whether its value or reference is \"set\"\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        return this.decoratedElement.isSet();\n    },\n\n    /**\n     * Sets the key for this element\n     *\n     * @param {Value} keyValue\n     */\n    setKey: function (keyValue) {\n        this.decoratedElement.setKey(keyValue);\n    },\n\n    /**\n     * Sets a reference for this element to refer to, clearing any value it may currently have\n     *\n     * @param {Reference} reference\n     */\n    setReference: function (reference) {\n        var element = this;\n\n        element.decoratedElement.setReference(reference);\n        element.elementHookCollection.handleElementReferenceSet(element, reference);\n    },\n\n    /**\n     * Sets a value for this element to have, clearing any reference it may currently have\n     *\n     * @param {Value} value\n     */\n    setValue: function (value) {\n        var element = this;\n\n        element.decoratedElement.setValue(value);\n        element.elementHookCollection.handleElementValueSet(element, value);\n    },\n\n    /**\n     * Unsets this element, so that it no longer refers to a reference or holds a value\n     */\n    unset: function () {\n        var element = this;\n\n        element.decoratedElement.unset();\n        element.elementHookCollection.handleElementUnset(element);\n    }\n});\n\nmodule.exports = HookableElementReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Handles the configuration for error handling in PHP-land\n *\n * @param {INIState} iniState\n * @constructor\n */\nfunction ErrorConfiguration(iniState) {\n    /**\n     * @type {INIState}\n     */\n    this.iniState = iniState;\n}\n\n_.extend(ErrorConfiguration.prototype, {\n    /**\n     * Determines whether errors should be displayed\n     *\n     * @returns {boolean}\n     */\n    getDisplayErrors: function () {\n        var iniOption = this.iniState.get('display_errors');\n\n        return String(iniOption).toLowerCase() !== 'off' && !!iniOption;\n    },\n\n    /**\n     * Fetches a bitmask of which error levels to report\n     * (set by the error_reporting(...) builtin function and \"error_reporting\" INI option)\n     *\n     * @returns {number}\n     */\n    getErrorReportingLevel: function () {\n        return parseInt(this.iniState.get('error_reporting'), 10);\n    },\n\n    /**\n     * Sets the error reporting level (may be a non-integer even though only integer is valid)\n     *\n     * @param {number|*} level\n     */\n    setErrorReportingLevel: function (level) {\n        this.iniState.set('error_reporting', level);\n    }\n});\n\nmodule.exports = ErrorConfiguration;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    // Maps the error type PHP constant name to the internal PHPError type that should be raised\n    ERROR_CONSTANT_NAME_TO_LEVEL = {\n        'E_ERROR': PHPError.E_ERROR,\n        'E_WARNING': PHPError.E_WARNING,\n        'E_PARSE': PHPError.E_PARSE,\n        'E_NOTICE': PHPError.E_NOTICE,\n        'E_STRICT': PHPError.E_STRICT,\n        'E_RECOVERABLE_ERROR': PHPError.E_RECOVERABLE_ERROR,\n        'E_DEPRECATED': PHPError.E_DEPRECATED\n    };\n\n/**\n * Converts between Uniter error levels and the PHP constant error level values\n *\n * @param {Function} getConstant\n * @constructor\n */\nfunction ErrorConverter(getConstant) {\n    /**\n     * @type {Function}\n     */\n    this.getConstant = getConstant;\n}\n\n_.extend(ErrorConverter.prototype, {\n    /**\n     * Converts from a Uniter error level string to the PHP integer value (E_* constant)\n     *\n     * @param {string} level\n     * @returns {number}\n     */\n    errorLevelToBits: function (level) {\n        var bits = null,\n            converter = this;\n\n        _.forOwn(ERROR_CONSTANT_NAME_TO_LEVEL, function (candidateLevel, constantName) {\n            if (candidateLevel !== level) {\n                return;\n            }\n\n            bits = converter.getConstant(constantName);\n\n            return false;\n        });\n\n        if (bits === null) {\n            throw new Error('Unknown error level \"' + level + '\"');\n        }\n\n        return bits;\n    }\n});\n\nmodule.exports = ErrorConverter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * Handles taking an ObjectValue containing an Error instance, raises it via the ErrorReporting mechanism\n * and then returns a native error constructed from its contents\n *\n * @param {ErrorReporting} errorReporting\n * @constructor\n */\nfunction ErrorPromoter(errorReporting) {\n    /**\n     * @type {ErrorReporting}\n     */\n    this.errorReporting = errorReporting;\n}\n\n_.extend(ErrorPromoter.prototype, {\n    /**\n     * Reports the specified error message to stdout, stderr, both or neither\n     * depending on its level and the current error_reporting level/display_errors configured\n     *\n     * @param {ObjectValue} errorValue\n     * @returns {Error}\n     */\n    promote: function (errorValue) {\n        var nativeError = errorValue.coerceToNativeError(),\n            promoter = this,\n            trace = errorValue.getInternalProperty('trace');\n\n        if (errorValue.classIs('ParseError')) {\n            // ParseErrors are special - when they reach the top level scope,\n            // if nothing has caught them then they are displayed as\n            // \"PHP Parse error: ...\" rather than \"PHP Fatal error: Uncaught ParseError ...\"\n            promoter.errorReporting.reportError(\n                PHPError.E_PARSE,\n                errorValue.getProperty('message').getNative(),\n                errorValue.getProperty('file').getNative(),\n                errorValue.getProperty('line').getNative(),\n                trace,\n                false\n            );\n        } else {\n            promoter.errorReporting.reportError(\n                PHPError.E_ERROR,\n                nativeError.getMessage(),\n                errorValue.getProperty('file').getNative(),\n                errorValue.getProperty('line').getNative(),\n                trace,\n                errorValue.getInternalProperty('reportsOwnContext')\n            );\n        }\n\n        return nativeError;\n    }\n});\n\nmodule.exports = ErrorPromoter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n\n    ERROR_WITH_CONTEXT_AND_TRACE = 'core.error_with_context_and_trace',\n    ERROR_WITHOUT_CONTEXT_BUT_WITH_TRACE = 'core.error_without_context_but_with_trace',\n    ERROR_WITHOUT_TRACE = 'core.error_without_trace',\n    UNKNOWN = 'core.unknown';\n\n/**\n * Handles the final output of error messages to the standard streams,\n * based on the current configuration\n *\n * @param {ErrorConfiguration} errorConfiguration\n * @param {ErrorConverter} errorConverter\n * @param {TraceFormatter} traceFormatter\n * @param {Translator} translator\n * @param {Stream} stdout\n * @param {Stream} stderr\n * @constructor\n */\nfunction ErrorReporting(\n    errorConfiguration,\n    errorConverter,\n    traceFormatter,\n    translator,\n    stdout,\n    stderr\n) {\n    /**\n     * @type {ErrorConfiguration}\n     */\n    this.errorConfiguration = errorConfiguration;\n    /**\n     * @type {ErrorConverter}\n     */\n    this.errorConverter = errorConverter;\n    /**\n     * @type {Stream}\n     */\n    this.stderr = stderr;\n    /**\n     * @type {Stream}\n     */\n    this.stdout = stdout;\n    /**\n     * @type {TraceFormatter}\n     */\n    this.traceFormatter = traceFormatter;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n}\n\n_.extend(ErrorReporting.prototype, {\n    /**\n     * Reports the specified error message to stdout, stderr, both or neither\n     * depending on its level and the current error_reporting level/display_errors configured\n     *\n     * @param {string} level\n     * @param {string} message\n     * @param {string|null=} filePath\n     * @param {number|null=} lineNumber\n     * @param {{index: number, file: string, line: number, func: Function, args: *[]}[]=} trace\n     * @param {boolean} reportsOwnContext Whether the error handles reporting its own file/line context\n     */\n    reportError: function (level, message, filePath, lineNumber, trace, reportsOwnContext) {\n        var errorReporting = this,\n            displayErrors = errorReporting.errorConfiguration.getDisplayErrors(),\n            allowedErrorBitmask = errorReporting.errorConfiguration.getErrorReportingLevel(),\n            levelBits = errorReporting.errorConverter.errorLevelToBits(level),\n            formattedTrace,\n            normalisedLineNumber = lineNumber || errorReporting.translator.translate(UNKNOWN),\n            normalisedFilePath = filePath || errorReporting.translator.translate(UNKNOWN),\n            suffix;\n\n        /*jshint bitwise: false */\n        if ((allowedErrorBitmask & levelBits) === 0) {\n            // This error level is not enabled for reporting: do nothing\n            return;\n        }\n\n        // When written to one of the standard streams, the file/line combo is provided\n        // in a colon-separated format rather than the verbose \"in ... on line ...\"\n\n        if (level === PHPError.E_ERROR && trace) {\n            formattedTrace = trace ? errorReporting.traceFormatter.format(trace) : null;\n\n            if (reportsOwnContext) {\n                suffix = errorReporting.translator.translate(ERROR_WITHOUT_CONTEXT_BUT_WITH_TRACE, {\n                    filePath: normalisedFilePath,\n                    line: normalisedLineNumber,\n                    formattedTrace: formattedTrace\n                });\n            } else {\n                suffix = errorReporting.translator.translate(ERROR_WITH_CONTEXT_AND_TRACE, {\n                    filePath: normalisedFilePath,\n                    line: normalisedLineNumber,\n                    formattedTrace: formattedTrace\n                });\n            }\n        } else {\n            if (reportsOwnContext) {\n                suffix = '';\n            } else {\n                suffix = errorReporting.translator.translate(ERROR_WITHOUT_TRACE, {\n                    filePath: normalisedFilePath,\n                    line: normalisedLineNumber\n                });\n            }\n        }\n\n        // NB: The double-space after colon is intentional, to match the reference implementation\n        errorReporting.stderr.write('PHP ' + level + ':  ' + message + suffix + '\\n');\n\n        if (displayErrors) {\n            errorReporting.stdout.write('\\n' + level + ': ' + message + suffix + '\\n');\n        }\n    }\n});\n\nmodule.exports = ErrorReporting;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('util'),\n    require('../../Value')\n], function (\n    _,\n    util,\n    Value\n) {\n    /**\n     * @param {ValueFactory} factory\n     * @param {CallStack} callStack\n     * @param {ValueCaller} valueCaller\n     * @param {ObjectValue} wrappedObjectValue\n     * @constructor\n     */\n    function AsyncObjectValue(factory, callStack, valueCaller, wrappedObjectValue) {\n        var nativeValue = wrappedObjectValue.getObject();\n\n        Value.call(this, factory, callStack, 'object', nativeValue);\n\n        /**\n         * @type {ValueCaller}\n         */\n        this.valueCaller = valueCaller;\n        /**\n         * @type {ObjectValue}\n         */\n        this.wrappedObjectValue = wrappedObjectValue;\n    }\n\n    util.inherits(AsyncObjectValue, Value);\n\n    _.extend(AsyncObjectValue.prototype, {\n        /**\n         * Calls the specified method of this object\n         *\n         * @param {string} methodName\n         * @param {Value[]?} args\n         * @returns {Promise<Value>} Returns the result of the method\n         * @throws {PHPFatalError} Throws when the method does not exist\n         */\n        callMethod: function (methodName, args) {\n            var value = this;\n\n            return value.valueCaller.callMethod(value.wrappedObjectValue, methodName, args);\n        }\n    });\n\n    return AsyncObjectValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('../Call'),\n    require('lie'),\n    require('../../Value')\n], function (\n    _,\n    phpCommon,\n    FFICall,\n    Promise,\n    Value\n) {\n    var Exception = phpCommon.Exception;\n\n    /**\n     * Encapsulates calling a PHP-land method from JS-land using the FFI API\n     *\n     * @param {CallFactory} callFactory\n     * @param {CallStack} callStack\n     * @param {ErrorPromoter} errorPromoter\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @constructor\n     */\n    function Caller(\n        callFactory,\n        callStack,\n        errorPromoter,\n        pausable,\n        mode\n    ) {\n        /**\n         * @type {CallFactory}\n         */\n        this.callFactory = callFactory;\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {ErrorPromoter}\n         */\n        this.errorPromoter = errorPromoter;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n    }\n\n    _.extend(Caller.prototype, {\n        /**\n         * Calls a method in asynchronous mode\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @returns {Promise<Value>}\n         */\n        callMethodAsync: function (objectValue, methodName, args) {\n            var caller = this;\n\n            if (caller.mode !== 'async') {\n                throw new Exception('Caller.callMethodAsync() :: Must be in async mode');\n            }\n\n            // Call the method via Pausable to allow for blocking operation\n            return caller.pausable.call(\n                objectValue.callMethod,\n                [methodName, args],\n                objectValue\n            )\n                // Pop the call off the stack _before_ returning, to mirror sync mode's behaviour\n                .finally(caller.popFFICall.bind(caller))\n                .catch(function (error) {\n                    if (error instanceof Value && error.getType() === 'object') {\n                        // Method threw a PHP Exception, so throw a native JS error for it\n                        throw caller.errorPromoter.promote(error);\n                    }\n\n                    // Normal error: just pass it up to the caller\n                    throw error;\n                });\n        },\n\n        /**\n         * Calls a method in either Promise-synchronous (psync) or synchronous (sync) mode.\n         * If in psync mode, useSyncApiAlthoughPsync may be passed as true, in which case\n         * the API will be presented in a synchronous fashion without Promises.\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @param {boolean=} useSyncApiAlthoughPsync\n         * @returns {Promise<Value>|Value}\n         */\n        callMethodSyncLike: function (objectValue, methodName, args, useSyncApiAlthoughPsync) {\n            var caller = this;\n\n            if (caller.mode === 'async') {\n                throw new Exception('callMethodSyncLike() :: Cannot call in async mode');\n            }\n\n            function invoke() {\n                try {\n                    return objectValue.callMethod(methodName, args);\n                } catch (error) {\n                    if (error instanceof Value && error.getType() === 'object') {\n                        // Method threw a PHP Exception, so throw a native JS error for it\n                        throw caller.errorPromoter.promote(error);\n                    }\n\n                    throw error;\n                } finally {\n                    caller.popFFICall();\n                }\n            }\n\n            if (caller.mode === 'psync' && !useSyncApiAlthoughPsync) {\n                // For Promise-synchronous mode, we need to return a promise\n                // even though the actual invocation must return synchronously\n                return new Promise(function (resolve, reject) {\n                    try {\n                        resolve(invoke());\n                    } catch (error) {\n                        reject(error);\n                    }\n                });\n            }\n\n            // Otherwise we're in sync mode (or psync mode with sync API explicitly requested)\n            return invoke();\n        },\n\n        /**\n         * Pushes an FFI call onto the call stack\n         *\n         * @param {Value[]} args\n         */\n        pushFFICall: function (args) {\n            var caller = this;\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            caller.callStack.push(caller.callFactory.createFFICall(args));\n        },\n\n        /**\n         * Pops the FFI call off of the call stack\n         */\n        popFFICall: function () {\n            var caller = this;\n\n            if (!(caller.callStack.getCurrent() instanceof FFICall)) {\n                throw new Exception('Caller.popFFICall() :: Current call is not an FFI call');\n            }\n\n            caller.callStack.pop();\n        }\n    });\n\n    return Caller;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception;\n\n/**\n * @param {Internals} baseInternals\n * @param {UnwrapperRepository} unwrapperRepository\n * @param {ValueFactory} valueFactory\n * @param {Namespace} globalNamespace\n * @param {NamespaceScope} globalNamespaceScope\n * @constructor\n */\nfunction ClassInternalsClassFactory(\n    baseInternals,\n    unwrapperRepository,\n    valueFactory,\n    globalNamespace,\n    globalNamespaceScope\n) {\n    /**\n     * @type {Internals}\n     */\n    this.baseInternals = baseInternals;\n    /**\n     * @type {Namespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.globalNamespaceScope = globalNamespaceScope;\n    /**\n     * @type {UnwrapperRepository}\n     */\n    this.unwrapperRepository = unwrapperRepository;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(ClassInternalsClassFactory.prototype, {\n    /**\n     * Creates a ClassInternals class for use when defining a class using JS\n     *\n     * @return {class}\n     */\n    create: function () {\n        var factory = this;\n\n        /**\n         * @param {string} fqcn\n         * @constructor\n         */\n        function ClassInternals(fqcn) {\n            /**\n             * @type {string[]}\n             */\n            this.definedInterfaceNames = [];\n            /**\n             * @type {boolean}\n             */\n            this.enableAutoCoercion = true;\n            /**\n             * @type {string}\n             */\n            this.fqcn = fqcn;\n            /**\n             * @type {Class|null}\n             */\n            this.superClass = null;\n            /**\n             * @type {Function|null}\n             */\n            this.unwrapper = null;\n        }\n\n        // Extend the base Internals object so we inherit all the public service properties etc.\n        ClassInternals.prototype = Object.create(factory.baseInternals);\n\n        _.extend(ClassInternals.prototype, {\n            /**\n             * Calls the constructor for the superclass of this class, if this class extends another\n             *\n             * @param {ObjectValue|object} instance Object instance (see below)\n             * @param {Value[]|*[]} args Arguments (Value objects if non-coercing, native if coercing)\n             */\n            callSuperConstructor: function (instance, args) {\n                var argValues,\n                    instanceValue,\n                    internals = this;\n\n                if (!internals.superClass) {\n                    throw new Exception(\n                        'Cannot call superconstructor: no superclass is defined for class \"' + internals.fqcn + '\"'\n                    );\n                }\n\n                if (!args) {\n                    args = [];\n                }\n\n                /*\n                 * If the class is in auto-coercing mode, `instance` will be the native\n                 * object value. If the class is in non-coercing mode, `instance` will be\n                 * an ObjectValue wrapping the instance, so we need to coerce what we are passed\n                 * to make sure it is an ObjectValue as expected by Class.prototype.construct(...).\n                 * The same applies to the arguments list.\n                 */\n                if (internals.enableAutoCoercion) {\n                    instanceValue = factory.valueFactory.coerce(instance);\n\n                    argValues = _.map(args, function (nativeArg) {\n                        return factory.valueFactory.coerce(nativeArg);\n                    });\n                } else {\n                    instanceValue = instance;\n                    argValues = args;\n                }\n\n                internals.superClass.construct(instanceValue, argValues);\n            },\n\n            /**\n             * Defines the class\n             *\n             * @param {Function} definitionFactory\n             * @return {Class}\n             */\n            defineClass: function (definitionFactory) {\n                var internals = this,\n                    name,\n                    Class = definitionFactory(internals),\n                    classObject,\n                    namespace,\n                    // Split the FQCN into a Namespace from its prefix and its name within that namespace\n                    // (ie. a FQCN of \"My\\Stuff\\MyClass\" gives Namespace<My\\Stuff> and name \"MyClass\")\n                    parsed = factory.globalNamespace.parseName(internals.fqcn);\n\n                if (internals.superClass) {\n                    Class.superClass = internals.superClass;\n                }\n\n                // Add any new interfaces to implement to the class definition\n                if (!Class.interfaces) {\n                    Class.interfaces = [];\n                }\n                [].push.apply(Class.interfaces, internals.definedInterfaceNames);\n\n                namespace = parsed.namespace;\n                name = parsed.name;\n\n                // Now create the internal Uniter class (an instance of Class)\n                // from the PHP class definition information\n                classObject = namespace.defineClass(\n                    name,\n                    Class,\n                    factory.globalNamespaceScope,\n                    internals.enableAutoCoercion\n                );\n\n                if (internals.unwrapper) {\n                    // Custom unwrappers may be used to eg. unwrap a PHP \\DateTime object to a JS Date object\n                    factory.unwrapperRepository.defineUnwrapper(classObject, internals.unwrapper);\n                }\n\n                return classObject;\n            },\n\n            /**\n             * Defines a custom unwrapper for this class. When an instance of this class\n             * is exported to JS-land, the unwrapper will be used to produce the unwrapped value\n             *\n             * @param {Function} unwrapper\n             */\n            defineUnwrapper: function (unwrapper) {\n                this.unwrapper = unwrapper;\n            },\n\n            /**\n             * Disables auto-coercion for the class\n             */\n            disableAutoCoercion: function () {\n                this.enableAutoCoercion = false;\n            },\n\n            /**\n             * Extends another defined class\n             *\n             * @param {string} fqcn\n             */\n            extendClass: function (fqcn) {\n                this.superClass = factory.globalNamespace.getClass(fqcn);\n            },\n\n            /**\n             * Implements an interface\n             *\n             * @param {string} interfaceName\n             */\n            implement: function (interfaceName) {\n                this.definedInterfaceNames.push(interfaceName);\n            }\n        });\n\n        return ClassInternals;\n    }\n});\n\nmodule.exports = ClassInternalsClassFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Fetches the exported value for an FFIObjectValue, creating and caching it if needed\n *\n * @param {UnwrapperRepository} unwrapperRepository\n * @param {ProxyFactory} proxyFactory\n * @constructor\n */\nfunction ExportFactory(unwrapperRepository, proxyFactory) {\n    /**\n     * @type {ProxyFactory}\n     */\n    this.proxyFactory = proxyFactory;\n    /**\n     * @type {UnwrapperRepository}\n     */\n    this.unwrapperRepository = unwrapperRepository;\n}\n\n_.extend(ExportFactory.prototype, {\n    /**\n     * Creates an exported value for the object value that the wrapped reference points to.\n     * If a custom unwrapper has been defined for its class then that will be used instead.\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {Object|*}\n     */\n    create: function (objectValue) {\n        var classObject = objectValue.getClass(),\n            coercedObject,\n            factory = this,\n            unwrapper = factory.unwrapperRepository.getUnwrapperForClass(classObject);\n\n        if (unwrapper !== null) {\n            // A custom unwrapper has been defined for the class of this object\n\n            // In auto-coercing mode, provide the native object, otherwise the object value\n            coercedObject = objectValue.getThisObject();\n\n            // Provide the object as both the thisObj and the first argument for ease of use\n            return unwrapper.call(coercedObject, coercedObject);\n        }\n\n        // No custom unwrapper has been defined, use a generated ProxyClass\n        return factory.proxyFactory.create(objectValue);\n    }\n});\n\nmodule.exports = ExportFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Fetches the exported value for an ObjectValue, creating and caching it if needed\n *\n * @param {ExportFactory} exportFactory\n * @param {ValueStorage} valueStorage\n * @constructor\n */\nfunction ExportRepository(exportFactory, valueStorage) {\n    /**\n     * @type {ExportFactory}\n     */\n    this.exportFactory = exportFactory;\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ExportRepository.prototype, {\n    /**\n     * Fetches an exported native object for the given object value\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {Object|*}\n     */\n    export: function (objectValue) {\n        var exportedValue,\n            repository = this;\n\n        if (repository.valueStorage.hasExportForObjectValue(objectValue)) {\n            // Cache the exported value for each ObjectValue for identity and to save on memory\n            return repository.valueStorage.getExportForObjectValue(objectValue);\n        }\n\n        exportedValue = repository.exportFactory.create(objectValue);\n\n        // Allow us to always map the source object value to this same exported value\n        repository.valueStorage.setExportForObjectValue(objectValue, exportedValue);\n\n        /*\n         * If the exported value is an object that is ever passed back into PHP-land,\n         * allow us to map it back to the source object value.\n         * If a primitive value is exported instead then we can ignore, as it will just\n         * be coerced to and from its native value and a scalar value object\n         */\n        if (typeof exportedValue === 'object' && exportedValue !== null) {\n            repository.valueStorage.setObjectValueForExport(exportedValue, objectValue);\n        }\n\n        return exportedValue;\n    }\n});\n\nmodule.exports = ExportRepository;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} AsyncObjectValue\n * @param {class} PHPObject\n * @param {class} ValueCoercer\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {NativeCaller} nativeCaller\n * @param {ValueCaller} valueCaller\n * @constructor\n */\nfunction FFIFactory(\n    AsyncObjectValue,\n    PHPObject,\n    ValueCoercer,\n    valueFactory,\n    callStack,\n    nativeCaller,\n    valueCaller\n) {\n    /**\n     * @type {class}\n     */\n    this.AsyncObjectValue = AsyncObjectValue;\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {Object.<boolean, ValueCoercer}\n     */\n    this.modeToValueCoercerMap = {};\n    /**\n     * @type {NativeCaller}\n     */\n    this.nativeCaller = nativeCaller;\n    /**\n     * @type {class}\n     */\n    this.PHPObject = PHPObject;\n    /**\n     * @type {ValueCaller}\n     */\n    this.valueCaller = valueCaller;\n    /**\n     * @type {class}\n     */\n    this.ValueCoercer = ValueCoercer;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FFIFactory.prototype, {\n    /**\n     * Creates an AsyncObjectValue that wraps the given ObjectValue\n     *\n     * @param {ObjectValue} wrappedObjectValue\n     * @returns {AsyncObjectValue}\n     */\n    createAsyncObjectValue: function (wrappedObjectValue) {\n        var factory = this;\n\n        return new factory.AsyncObjectValue(\n            factory.valueFactory,\n            factory.callStack,\n            factory.valueCaller,\n            wrappedObjectValue\n        );\n    },\n\n    /**\n     * Creates a PHPObject, which wraps an ObjectValue and allows its methods\n     * to be called and passed native values for its parameter arguments\n     * and coerces its return value back to a native too.\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {PHPObject}\n     */\n    createPHPObject: function (objectValue) {\n        var factory = this;\n\n        return new factory.PHPObject(factory.valueFactory, factory.nativeCaller, objectValue);\n    },\n\n    /**\n     * Fetches a value coercer for the given configuration. Note that as there are only\n     * two possible modes, the instances are cached on first fetch to save memory usage.\n     *\n     * @param {boolean} autoCoercionEnabled\n     * @returns {ValueCoercer}\n     */\n    createValueCoercer: function (autoCoercionEnabled) {\n        var factory = this;\n\n        if (!factory.modeToValueCoercerMap[autoCoercionEnabled]) {\n            factory.modeToValueCoercerMap[autoCoercionEnabled] = new factory.ValueCoercer(autoCoercionEnabled);\n        }\n\n        return factory.modeToValueCoercerMap[autoCoercionEnabled];\n    }\n});\n\nmodule.exports = FFIFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Internals} baseInternals\n * @param {ValueFactory} valueFactory\n * @param {FFIFactory} ffiFactory\n * @param {Namespace} globalNamespace\n * @param {NamespaceScope} globalNamespaceScope\n * @constructor\n */\nfunction FunctionInternalsClassFactory(\n    baseInternals,\n    valueFactory,\n    ffiFactory,\n    globalNamespace,\n    globalNamespaceScope\n) {\n    /**\n     * @type {Internals}\n     */\n    this.baseInternals = baseInternals;\n    /**\n     * @type {FFIFactory}\n     */\n    this.ffiFactory = ffiFactory;\n    /**\n     * @type {Namespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.globalNamespaceScope = globalNamespaceScope;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FunctionInternalsClassFactory.prototype, {\n    /**\n     * Creates a FunctionInternals class for use when defining a function using JS\n     *\n     * @return {class}\n     */\n    create: function () {\n        var factory = this;\n\n        /**\n         * @param {string} fqfn\n         * @constructor\n         */\n        function FunctionInternals(fqfn) {\n            /**\n             * @type {boolean}\n             */\n            this.enableAutoCoercion = true;\n            /**\n             * @type {string}\n             */\n            this.fqfn = fqfn;\n        }\n\n        // Extend the base Internals object so we inherit all the public service properties etc.\n        FunctionInternals.prototype = Object.create(factory.baseInternals);\n\n        _.extend(FunctionInternals.prototype, {\n            /**\n             * Defines the function\n             *\n             * @param {Function} definitionFactory\n             */\n            defineFunction: function (definitionFactory) {\n                var internals = this,\n                    name,\n                    func = definitionFactory(internals),\n                    namespace,\n                    parsed = factory.globalNamespace.parseName(internals.fqfn),\n                    valueCoercer = factory.ffiFactory.createValueCoercer(internals.enableAutoCoercion);\n\n                namespace = parsed.namespace;\n                name = parsed.name;\n\n                namespace.defineFunction(\n                    name,\n                    function __uniterOutboundStackMarker__() {\n                        // Unwrap args from PHP-land to JS-land to native values if/as appropriate\n                        var effectiveArguments = valueCoercer.coerceArguments(arguments);\n\n                        return func.apply(internals, effectiveArguments);\n                    },\n                    factory.globalNamespaceScope\n                );\n            },\n\n            /**\n             * Disables auto-coercion for the class\n             */\n            disableAutoCoercion: function () {\n                this.enableAutoCoercion = false;\n            }\n        });\n\n        return FunctionInternals;\n    }\n});\n\nmodule.exports = FunctionInternalsClassFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {string} mode Synchronicity mode: \"async\", \"psync\" or \"sync\"\n * @param {Resumable|null} pausable\n * @param {ValueFactory} valueFactory\n * @param {CallFactory} callFactory\n * @param {CallStack} callStack\n * @param {ValueHelper} valueHelper\n * @param {ClassAutoloader} classAutoloader\n * @param {ErrorConfiguration} errorConfiguration\n * @param {ErrorPromoter} errorPromoter\n * @param {ErrorReporting} errorReporting\n * @param {Namespace} globalNamespace,\n * @param {Scope} globalScope,\n * @param {INIState} iniState,\n * @param {OptionSet} optionSet,\n * @param {Output} output,\n * @param {Runtime} runtime,\n * @param {Stream} stdout,\n * @param {TraceFormatter} traceFormatter,\n * @param {Translator} translator,\n * @param {PHPState} state\n * @constructor\n */\nfunction Internals(\n    mode,\n    pausable,\n    valueFactory,\n    callFactory,\n    callStack,\n    valueHelper,\n    classAutoloader,\n    errorConfiguration,\n    errorPromoter,\n    errorReporting,\n    globalNamespace,\n    globalScope,\n    iniState,\n    optionSet,\n    output,\n    runtime,\n    stdout,\n    traceFormatter,\n    translator,\n    state\n) {\n    /**\n     * @public\n     * @type {CallFactory}\n     */\n    this.callFactory = callFactory;\n    /**\n     * @public\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @public\n     * @type {ClassAutoloader}\n     */\n    this.classAutoloader = classAutoloader;\n    /**\n     * @public\n     * @type {ErrorConfiguration}\n     */\n    this.errorConfiguration = errorConfiguration;\n    /**\n     * @public\n     * @type {ErrorPromoter}\n     */\n    this.errorPromoter = errorPromoter;\n    /**\n     * @public\n     * @type {ErrorReporting}\n     */\n    this.errorReporting = errorReporting;\n    /**\n     * @public\n     * @type {Namespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @public\n     * @type {Scope}\n     */\n    this.globalScope = globalScope;\n    /**\n     * @public\n     * @type {INIState}\n     */\n    this.iniState = iniState;\n    /**\n     * @public\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @public\n     * @type {OptionSet}\n     */\n    this.optionSet = optionSet;\n    /**\n     * @public\n     * @type {Output}\n     */\n    this.output = output;\n    /**\n     * @public\n     * @type {Resumable|null}\n     */\n    this.pausable = pausable;\n    /**\n     * @public\n     * @type {Runtime}\n     */\n    this.runtime = runtime;\n    /**\n     * @public\n     * @type {PHPState}\n     */\n    this.state = state;\n    /**\n     * @public\n     * @type {Stream}\n     */\n    this.stdout = stdout;\n    /**\n     * @public\n     * @type {TraceFormatter}\n     */\n    this.traceFormatter = traceFormatter;\n    /**\n     * @public\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @public\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @public\n     * @type {ValueHelper}\n     */\n    this.valueHelper = valueHelper;\n\n    // Sanity check\n    if (mode === 'async' && !pausable) {\n        throw new Error('Pausable is required for async mode');\n    }\n}\n\n_.extend(Internals.prototype, {\n    /**\n     * Creates a new FFI Result, to provide the result of a call to a JS function\n     *\n     * @param {Function} syncCallback\n     * @param {Function|null} asyncCallback\n     * @returns {FFIResult}\n     */\n    createFFIResult: function (syncCallback, asyncCallback) {\n        return this.state.createFFIResult(syncCallback, asyncCallback);\n    },\n\n    /**\n     * Fetches a binding by its name\n     *\n     * @param {string} bindingName\n     * @returns {*}\n     */\n    getBinding: function (bindingName) {\n        return this.state.getBinding(bindingName);\n    },\n\n    /**\n     * Fetches the native value of a constant by its name\n     *\n     * @param {string} name\n     * @returns {*}\n     */\n    getConstant: function (name) {\n        return this.state.getConstant(name);\n    },\n\n    /**\n     * Fetches the value of a global variable, if defined.\n     * If the variable is not defined then a NULL value will be returned.\n     *\n     * @param {string} name\n     * @return {Value}\n     */\n    getGlobal: function (name) {\n        return this.state.getGlobal(name);\n    },\n\n    /**\n     * Determines whether we're in true asynchronous mode (not psync or sync mode)\n     *\n     * @return {boolean}\n     */\n    isAsync: function () {\n        return this.mode === 'async';\n    },\n\n    /**\n     * Determines whether we're in Promise-synchronous mode\n     *\n     * @return {boolean}\n     */\n    isPsync: function () {\n        return this.mode === 'psync';\n    },\n\n    /**\n     * Determines whether we're in synchronous mode\n     *\n     * @return {boolean}\n     */\n    isSync: function () {\n        return this.mode === 'sync';\n    },\n\n    /**\n     * Sets the value of an existing PHP global. If a native value is given\n     * then it will be coerced to a PHP one.\n     * If the global is not defined than an error will be thrown -\n     * use .defineGlobal(...) when defining a new variable\n     *\n     * @param {string} name\n     * @param {Value|*} value Value object or native value to be coerced\n     * @throws {Error} Throws if the variable is not defined in the global scope\n     */\n    setGlobal: function (name, value) {\n        this.state.setGlobal(name, value);\n    }\n});\n\nmodule.exports = Internals;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {Caller} caller\n     * @param {string} mode\n     * @constructor\n     */\n    function NativeCaller(caller, mode) {\n        /**\n         * @type {Caller}\n         */\n        this.caller = caller;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n    }\n\n    _.extend(NativeCaller.prototype, {\n        /**\n         * Encapsulates calling a PHP-land method from JS-land using the FFI API,\n         * unwrapping the result to a native value\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @param {boolean=} useSyncApiAlthoughPsync\n         * @returns {Promise<*>|*}\n         */\n        callMethod: function (objectValue, methodName, args, useSyncApiAlthoughPsync) {\n            var nativeCaller = this,\n                result;\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            nativeCaller.caller.pushFFICall(args);\n\n            if (nativeCaller.mode === 'async') {\n                return nativeCaller.caller.callMethodAsync(objectValue, methodName, args)\n                    .then(function (resultValue) {\n                        return resultValue.getNative();\n                    });\n            }\n\n            // Otherwise we're in sync or psync mode\n            result = nativeCaller.caller.callMethodSyncLike(objectValue, methodName, args, useSyncApiAlthoughPsync);\n\n            return nativeCaller.mode === 'psync' && !useSyncApiAlthoughPsync ?\n                result.then(function (resultValue) {\n                    return resultValue.getNative();\n                }) :\n                result.getNative();\n        }\n    });\n\n    return NativeCaller;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the ProxyClass for a given PHP class\n *\n * @param {ValueStorage} valueStorage\n * @param {ProxyMemberFactory} proxyMemberFactory\n * @constructor\n */\nfunction ProxyClassFactory(valueStorage, proxyMemberFactory) {\n    /**\n     * @type {ProxyMemberFactory}\n     */\n    this.proxyMemberFactory = proxyMemberFactory;\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ProxyClassFactory.prototype, {\n    /**\n     * Creates the ProxyClass for a given PHP class\n     *\n     * @param {Class} classObject\n     * @returns {class}\n     */\n    create: function (classObject) {\n        var currentClass,\n            currentPrototype,\n            factory = this,\n            methodNamesProxied = {};\n\n        /**\n         * @param {ObjectValue} objectValue Internal ObjectValue instance\n         * @param {boolean} useSyncApiAlthoughPsync\n         * @constructor\n         */\n        function ProxyClass(objectValue, useSyncApiAlthoughPsync) {\n            /*\n             * This data is stored in a WeakMap using this instance as the key, for multiple reasons:\n             * a) To ensure there are no collisions with methods of the proxied class\n             *    (ie. if we stored objectValue as a property of this object, but the proxied class\n             *    happened to have a method called \"objectValue\" there would be an issue)\n             * b) To more neatly allow the data to be extracted and funneled into a new instance\n             *    in the scenario where we want a proxy with a synchronous API (see ValueHelper)\n             */\n            factory.valueStorage.setPrivatesForNativeProxy(this, {\n                objectValue: objectValue,\n                useSyncApiAlthoughPsync: Boolean(useSyncApiAlthoughPsync)\n            });\n        }\n        ProxyClass.prototype = Object.create(classObject.getInternalClass().prototype);\n\n        function defineProxyMethod(methodName) {\n            ProxyClass.prototype[methodName] = factory.proxyMemberFactory.createProxyMethod(methodName);\n        }\n\n        currentClass = classObject;\n\n        /*\n         * Iterate up the class hierarchy, proxying methods as we go. Note that\n         * in most cases the first class' prototype chain is probably all we need\n         * to process, however some classes in the hierarchy may have non-standard\n         * native objects (eg. JSObject) and so we need to process each one's\n         * prototype chain just in case.\n         *\n         * TODO: Remove the need for this duplication by handling the special JSObject case\n         *       in that class alone.\n         */\n        while (currentClass) {\n            currentPrototype = currentClass.getInternalClass().prototype;\n\n            while (currentPrototype !== null && currentPrototype !== Object.prototype) {\n                /*jshint loopfunc: true */\n                _.forOwn(currentPrototype, function (property, propertyName) {\n                    if (\n                        // Only proxy methods\n                        typeof property !== 'function' ||\n                        // Only proxy each method once\n                        methodNamesProxied[propertyName] === true\n                    ) {\n                        return;\n                    }\n\n                    defineProxyMethod(propertyName);\n\n                    methodNamesProxied[propertyName] = true;\n                });\n\n                currentPrototype = Object.getPrototypeOf(currentPrototype);\n            }\n\n            currentClass = currentClass.getSuperClass();\n        }\n\n        return ProxyClass;\n    }\n});\n\nmodule.exports = ProxyClassFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * Fetches the generated JS proxy class for a PHP class, creating and caching it if needed\n *\n * @param {ProxyClassFactory} proxyClassFactory\n * @constructor\n */\nfunction ProxyClassRepository(proxyClassFactory) {\n    /**\n     * @type {WeakMap<object, Function>}\n     */\n    this.classToProxyClassMap = new WeakMap();\n    /**\n     * @type {ProxyClassFactory}\n     */\n    this.proxyClassFactory = proxyClassFactory;\n}\n\n_.extend(ProxyClassRepository.prototype, {\n    /**\n     * Fetches the proxy class for the given PHP class\n     *\n     * @param {Class} classObject\n     * @returns {class}\n     */\n    getProxyClass: function (classObject) {\n        var ProxyClass,\n            repository = this;\n\n        if (repository.classToProxyClassMap.has(classObject)) {\n            // Cache the ProxyClass for each PHP class for identity and to save on memory\n            return repository.classToProxyClassMap.get(classObject);\n        }\n\n        ProxyClass = repository.proxyClassFactory.create(classObject);\n\n        repository.classToProxyClassMap.set(classObject, ProxyClass);\n\n        return ProxyClass;\n    }\n});\n\nmodule.exports = ProxyClassRepository;\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar weakMap, obj;\n\n\tif (typeof WeakMap !== \"function\") return false;\n\ttry {\n\t\t// WebKit doesn't support arguments and crashes\n\t\tweakMap = new WeakMap([[obj = {}, \"one\"], [{}, \"two\"], [{}, \"three\"]]);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\tif (String(weakMap) !== \"[object WeakMap]\") return false;\n\tif (typeof weakMap.set !== \"function\") return false;\n\tif (weakMap.set({}, 1) !== weakMap) return false;\n\tif (typeof weakMap.delete !== \"function\") return false;\n\tif (typeof weakMap.has !== \"function\") return false;\n\tif (weakMap.get(obj) !== \"one\") return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nvar isValue           = require(\"es5-ext/object/is-value\")\n  , setPrototypeOf    = require(\"es5-ext/object/set-prototype-of\")\n  , object            = require(\"es5-ext/object/valid-object\")\n  , ensureValue       = require(\"es5-ext/object/valid-value\")\n  , randomUniq        = require(\"es5-ext/string/random-uniq\")\n  , d                 = require(\"d\")\n  , getIterator       = require(\"es6-iterator/get\")\n  , forOf             = require(\"es6-iterator/for-of\")\n  , toStringTagSymbol = require(\"es6-symbol\").toStringTag\n  , isNative          = require(\"./is-native-implemented\")\n\n  , isArray = Array.isArray, defineProperty = Object.defineProperty\n  , objHasOwnProperty = Object.prototype.hasOwnProperty, getPrototypeOf = Object.getPrototypeOf\n  , WeakMapPoly;\n\nmodule.exports = WeakMapPoly = function (/* Iterable*/) {\n\tvar iterable = arguments[0], self;\n\n\tif (!(this instanceof WeakMapPoly)) throw new TypeError(\"Constructor requires 'new'\");\n\tself = isNative && setPrototypeOf && (WeakMap !== WeakMapPoly)\n\t\t? setPrototypeOf(new WeakMap(), getPrototypeOf(this)) : this;\n\n\tif (isValue(iterable)) {\n\t\tif (!isArray(iterable)) iterable = getIterator(iterable);\n\t}\n\tdefineProperty(self, \"__weakMapData__\", d(\"c\", \"$weakMap$\" + randomUniq()));\n\tif (!iterable) return self;\n\tforOf(iterable, function (val) {\n\t\tensureValue(val);\n\t\tself.set(val[0], val[1]);\n\t});\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(WeakMapPoly, WeakMap);\n\tWeakMapPoly.prototype = Object.create(WeakMap.prototype, { constructor: d(WeakMapPoly) });\n}\n\nObject.defineProperties(WeakMapPoly.prototype, {\n\tdelete: d(function (key) {\n\t\tif (objHasOwnProperty.call(object(key), this.__weakMapData__)) {\n\t\t\tdelete key[this.__weakMapData__];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}),\n\tget: d(function (key) {\n\t\tif (!objHasOwnProperty.call(object(key), this.__weakMapData__)) return undefined;\n\t\treturn key[this.__weakMapData__];\n\t}),\n\thas: d(function (key) {\n\t\treturn objHasOwnProperty.call(object(key), this.__weakMapData__);\n\t}),\n\tset: d(function (key, value) {\n\t\tdefineProperty(object(key), this.__weakMapData__, d(\"c\", value));\n\t\treturn this;\n\t}),\n\ttoString: d(function () {\n\t\treturn \"[object WeakMap]\";\n\t})\n});\ndefineProperty(WeakMapPoly.prototype, toStringTagSymbol, d(\"c\", \"WeakMap\"));\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = { configurable: false, enumerable: false, writable: true, value: undefined };\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n})();\n","\"use strict\";\n\nvar isObject = require(\"./is-object\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) throw new TypeError(value + \" is not an Object\");\n\treturn value;\n};\n","\"use strict\";\n\nvar generated = Object.create(null), random = Math.random;\n\nmodule.exports = function () {\n\tvar str;\n\tdo {\n\t\tstr = random().toString(36).slice(2);\n\t} while (generated[str]);\n\treturn str;\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nvar isValue             = require(\"type/value/is\")\n  , ensureValue         = require(\"type/value/ensure\")\n  , ensurePlainFunction = require(\"type/plain-function/ensure\")\n  , copy                = require(\"es5-ext/object/copy\")\n  , normalizeOptions    = require(\"es5-ext/object/normalize-options\")\n  , map                 = require(\"es5-ext/object/map\");\n\nvar bind = Function.prototype.bind\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"Cannot use %v\", arguments[1]);\n};\n","\"use strict\";\n\nvar isValue  = require(\"../value/is\")\n  , isObject = require(\"../object/is\");\n\nvar objectToString = Object.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return null;\n\tif (isObject(value)) {\n\t\t// Reject Object.prototype.toString coercion\n\t\tvar valueToString = value.toString;\n\t\tif (typeof valueToString !== \"function\") return null;\n\t\tif (valueToString === objectToString) return null;\n\t\t// Note: It can be object coming from other realm, still as there's no ES3 and CSP compliant\n\t\t// way to resolve its realm's Object.prototype.toString it's left as not addressed edge case\n\t}\n\ttry {\n\t\treturn \"\" + value; // Ensure implicit coercion\n\t} catch (error) {\n\t\treturn null;\n\t}\n};\n","\"use strict\";\n\nvar safeToString = require(\"./safe-to-string\");\n\nvar reNewLine = /[\\n\\r\\u2028\\u2029]/g;\n\nmodule.exports = function (value) {\n\tvar string = safeToString(value);\n\tif (string === null) return \"<Non-coercible to string value>\";\n\t// Trim if too long\n\tif (string.length > 100) string = string.slice(0, 99) + \"…\";\n\t// Replace eventual new lines\n\tstring = string.replace(reNewLine, function (char) {\n\t\tswitch (char) {\n\t\t\tcase \"\\n\":\n\t\t\t\treturn \"\\\\n\";\n\t\t\tcase \"\\r\":\n\t\t\t\treturn \"\\\\r\";\n\t\t\tcase \"\\u2028\":\n\t\t\t\treturn \"\\\\u2028\";\n\t\t\tcase \"\\u2029\":\n\t\t\t\treturn \"\\\\u2029\";\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected character\");\n\t\t}\n\t});\n\treturn string;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\ttry {\n\t\treturn value.toString();\n\t} catch (error) {\n\t\ttry { return String(value); }\n\t\tcatch (error2) { return null; }\n\t}\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"%v is not a plain function\", arguments[1]);\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Array.from : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && result !== arr && result[1] === \"dwa\");\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity, max-lines-per-function\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array((length = arrayLike.length));\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && isFunctionStringTag(objToString.call(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n  , max       = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n","\"use strict\";\n\nvar sign  = require(\"../math/sign\")\n  , abs   = Math.abs\n  , floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif (value === 0 || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Math.sign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn sign(10) === 1 && sign(-20) === -1;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || value === 0) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb/*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","// Exports true if environment provides native `WeakMap` implementation, whatever that is.\n\n\"use strict\";\n\nmodule.exports = (function () {\n\tif (typeof WeakMap !== \"function\") return false;\n\treturn Object.prototype.toString.call(new WeakMap()) === \"[object WeakMap]\";\n}());\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates an exported proxying object value for an FFIObjectValue based on its class' interface\n *\n * @param {ProxyClassRepository} proxyClassRepository\n * @param {string} mode Synchronicity mode\n * @constructor\n */\nfunction ProxyFactory(proxyClassRepository, mode) {\n    /**\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @type {ProxyClassRepository}\n     */\n    this.proxyClassRepository = proxyClassRepository;\n}\n\n_.extend(ProxyFactory.prototype, {\n    /**\n     * Creates an exported proxy object value for the object value that the wrapped reference points to\n     *\n     * @param {ObjectValue} objectValue\n     * @param {boolean=} useSyncApiAlthoughPsync\n     * @returns {Object|*}\n     */\n    create: function (objectValue, useSyncApiAlthoughPsync) {\n        var factory = this,\n            ProxyClass = factory.proxyClassRepository.getProxyClass(objectValue.getClass());\n\n        if (useSyncApiAlthoughPsync && factory.mode !== 'psync') {\n            throw new Error('Cannot explicitly request sync API when not in psync mode');\n        }\n\n        return new ProxyClass(objectValue, useSyncApiAlthoughPsync);\n    }\n});\n\nmodule.exports = ProxyFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates proxying versions of PHP class members (methods and properties)\n *\n * @param {ValueFactory} valueFactory\n * @param {ValueStorage} valueStorage\n * @param {NativeCaller} nativeCaller\n * @constructor\n */\nfunction ProxyMemberFactory(\n    valueFactory,\n    valueStorage,\n    nativeCaller\n) {\n    /**\n     * @type {NativeCaller}\n     */\n    this.nativeCaller = nativeCaller;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ProxyMemberFactory.prototype, {\n    /**\n     * Creates a proxying method for the ProxyClass for a method of a PHP class\n     *\n     * @param {string} methodName\n     * @returns {Function}\n     */\n    createProxyMethod: function (methodName) {\n        var factory = this;\n\n        return function __uniterInboundStackMarker__() {\n            // Arguments will be from JS-land, so coerce any to internal PHP value objects\n            var args = _.map(arguments, function (arg) {\n                    return factory.valueFactory.coerce(arg);\n                }),\n                privates = factory.valueStorage.getPrivatesForNativeProxy(this),\n                objectValue = privates.objectValue,\n                useSyncApiAlthoughPsync = privates.useSyncApiAlthoughPsync;\n\n            return factory.nativeCaller.callMethod(objectValue, methodName, args, useSyncApiAlthoughPsync);\n        };\n    }\n});\n\nmodule.exports = ProxyMemberFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {GlobalStackHooker} globalStackHooker\n * @param {OptionSet} optionSet\n * @constructor\n */\nfunction StackHooker(globalStackHooker, optionSet) {\n    /**\n     * @type {GlobalStackHooker}\n     */\n    this.globalStackHooker = globalStackHooker;\n    /**\n     * @type {OptionSet}\n     */\n    this.optionSet = optionSet;\n}\n\n_.extend(StackHooker.prototype, {\n    /**\n     * Detects whether native stack cleaning is enabled, installing the relevant hooks if so\n     */\n    hook: function () {\n        var hooker = this,\n            // TODO: Consider defaulting to on (opt-out) once stable\n            stackCleaningEnabled = hooker.optionSet.getOption('stackCleaning') === true;\n\n        if (stackCleaningEnabled) {\n            hooker.globalStackHooker.hook();\n        }\n    }\n});\n\nmodule.exports = StackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * Stores custom unwrappers for classes. When later fetched, if a class does not define\n * an unwrapper on itself, its ancestry will be checked to see if any ancestor does,\n * in which case that unwrapper will be used.\n *\n * @constructor\n */\nfunction UnwrapperRepository() {\n    /**\n     * @type {WeakMap<object, Function>}\n     */\n    this.classToUnwrapperMap = new WeakMap();\n}\n\n_.extend(UnwrapperRepository.prototype, {\n    /**\n     * Defines a custom unwrapper for a class\n     *\n     * @param {Class} classObject\n     * @param {Function} unwrapper\n     */\n    defineUnwrapper: function (classObject, unwrapper) {\n        this.classToUnwrapperMap.set(classObject, unwrapper);\n    },\n\n    /**\n     * Fetches the custom unwrapper for the class or an ancestor if defined\n     *\n     * @param {Class} classObject\n     * @returns {Function|null}\n     */\n    getUnwrapperForClass: function (classObject) {\n        var currentClass = classObject,\n            repository = this,\n            unwrapper = null;\n\n        while (currentClass !== null) {\n            if (repository.classToUnwrapperMap.has(currentClass)) {\n                // A custom unwrapper has been defined for the class\n                return repository.classToUnwrapperMap.get(currentClass);\n            }\n\n            // Now check whether any interfaces implemented directly by the class define an unwrapper\n            /*jshint loopfunc: true */\n            if (currentClass.getInterfaces().some(function (interfaceObject) {\n                unwrapper = repository.getUnwrapperForClass(interfaceObject);\n\n                if (unwrapper !== null) {\n                    // A custom unwrapper has been defined for the interface (or somewhere in its ancestry)\n\n                    return true; // No need to keep checking\n                }\n            })) {\n                return unwrapper;\n            }\n\n            currentClass = currentClass.getSuperClass();\n        }\n\n        // No custom unwrapper has been defined\n        return null;\n    }\n});\n\nmodule.exports = UnwrapperRepository;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {Caller} caller\n     * @param {string} mode\n     * @constructor\n     */\n    function ValueCaller(caller, mode) {\n        /**\n         * @type {Caller}\n         */\n        this.caller = caller;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n    }\n\n    _.extend(ValueCaller.prototype, {\n        /**\n         * Encapsulates calling a PHP-land method from JS-land using the FFI API,\n         * returning the result as a Value object\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @param {boolean=} useSyncApiAlthoughPsync\n         * @returns {Promise<Value>|Value}\n         */\n        callMethod: function (objectValue, methodName, args, useSyncApiAlthoughPsync) {\n            var valueCaller = this;\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            valueCaller.caller.pushFFICall(args);\n\n            if (valueCaller.mode === 'async') {\n                // Unlike NativeCaller, do not coerce to native here\n                return valueCaller.caller.callMethodAsync(objectValue, methodName, args);\n            }\n\n            // Otherwise we're in sync or psync mode\n            return valueCaller.caller.callMethodSyncLike(objectValue, methodName, args, useSyncApiAlthoughPsync);\n        }\n    });\n\n    return ValueCaller;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {boolean} autoCoercionEnabled\n * @constructor\n */\nfunction ValueCoercer(autoCoercionEnabled) {\n    /**\n     * @type {boolean}\n     */\n    this.autoCoercionEnabled = autoCoercionEnabled;\n}\n\n_.extend(ValueCoercer.prototype, {\n    /**\n     * Unwraps arguments for a method based on the coercion mode for the class\n     *\n     * @param {Value[]} argumentValues\n     * @returns {Value[]|*[]}\n     */\n    coerceArguments: function (argumentValues) {\n        var coercer = this;\n\n        if (coercer.autoCoercionEnabled) {\n            argumentValues = _.map(argumentValues, function (argumentValue) {\n                return argumentValue.getNative();\n            });\n        }\n\n        return argumentValues;\n    },\n\n    /**\n     * Determines whether auto-coercion is enabled\n     *\n     * @returns {boolean}\n     */\n    isAutoCoercionEnabled: function () {\n        return this.autoCoercionEnabled;\n    }\n});\n\nmodule.exports = ValueCoercer;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * @param {ProxyFactory} proxyFactory\n * @param {FFIFactory} ffiFactory\n * @param {ValueStorage} valueStorage\n * @param {string} mode\n * @constructor\n */\nfunction ValueHelper(proxyFactory, ffiFactory, valueStorage, mode) {\n    /**\n     * @type {FFIFactory}\n     */\n    this.ffiFactory = ffiFactory;\n    /**\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @type {ProxyFactory}\n     */\n    this.proxyFactory = proxyFactory;\n    /**\n     * Used for mapping native objects that have previously been re-proxied\n     * with a synchronous API to the re-proxied object\n     *\n     * @type {WeakMap}\n     */\n    this.proxyToSyncApiProxy = new WeakMap();\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ValueHelper.prototype, {\n    /**\n     * Takes the given proxy and returns a new one with a synchronous API,\n     * even in Promise-synchronous mode. Note that an error will be thrown\n     * if in async mode as synchronous operation is then impossible.\n     *\n     * @param {ProxyClass} proxy\n     * @return {ProxyClass}\n     */\n    toNativeWithSyncApi: function (proxy) {\n        var helper = this,\n            objectValue,\n            privates,\n            reproxy;\n\n        if (helper.mode === 'sync') {\n            // In sync mode, the original proxy will use a synchronous API,\n            // so there is nothing to do, just return it unchanged\n            return proxy;\n        }\n\n        if (helper.mode === 'async') {\n            // Sanity check\n            throw new Error(\n                'ValueHelper.toNativeWithSyncApi() :: Unable to provide a synchronous API in async mode'\n            );\n        }\n\n        if (helper.proxyToSyncApiProxy.has(proxy)) {\n            // We already have a re-proxied object with a sync API, so reuse it\n            // both for speed and identity\n            return helper.proxyToSyncApiProxy.get(proxy);\n        }\n\n        if (!helper.valueStorage.hasPrivatesForNativeProxy(proxy)) {\n            throw new Error('ValueHelper.toNativeWithSyncApi() :: Invalid proxy instance given');\n        }\n\n        privates = helper.valueStorage.getPrivatesForNativeProxy(proxy);\n        objectValue = privates.objectValue;\n\n        reproxy = helper.proxyFactory.create(objectValue, true);\n\n        // Store this conversion so we can reuse the reproxied object as mentioned above\n        helper.proxyToSyncApiProxy.set(proxy, reproxy);\n        // Also map the reproxied object to itself\n        helper.proxyToSyncApiProxy.set(reproxy, reproxy);\n\n        // Ensure the reproxied object may also be mapped back to the original object value\n        // (eg. in the scenario where an object is exported to JS-land, reproxied for a sync API\n        // and then the reproxied object is passed back into PHP-land)\n        helper.valueStorage.setObjectValueForExport(reproxy, objectValue);\n\n        return reproxy;\n    },\n\n    /**\n     * Takes the given ObjectValue and returns a special AsyncObjectValue that wraps it,\n     * providing the same API but with Promises returned when relevant methods are called,\n     * to avoid the caller having to be Pausable-aware\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {AsyncObjectValue}\n     */\n    toValueWithAsyncApi: function (objectValue) {\n        var helper = this;\n\n        return helper.ffiFactory.createAsyncObjectValue(objectValue);\n    }\n});\n\nmodule.exports = ValueHelper;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    FunctionContextInterface = require('./FunctionContextInterface');\n\n/**\n * Represents a PHP function\n *\n * @param {NamespaceScope} namespaceScope\n * @param {string} name\n * @constructor\n * @implements {FunctionContextInterface}\n */\nfunction FunctionContext(namespaceScope, name) {\n    /**\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n}\n\nutil.inherits(FunctionContext, FunctionContextInterface);\n\n_.extend(FunctionContext.prototype, {\n    /**\n     * Fetches the fully-qualified name of the function (eg. as used by __METHOD__)\n     *\n     * @returns {string}\n     */\n    getName: function () {\n        var spec = this;\n\n        return spec.namespaceScope.getNamespacePrefix() + spec.name;\n    },\n\n    /**\n     * Fetches the name of the function as required for stack traces\n     *\n     * @returns {string}\n     */\n    getTraceFrameName: function () {\n        return this.getName();\n    },\n\n    /**\n     * Fetches the name of the function\n     * (eg. as used by __FUNCTION__)\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: function () {\n        return this.getName(); // Functions must always be prefixed\n    }\n});\n\nmodule.exports = FunctionContext;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    var slice = [].slice;\n\n    /**\n     * @param {class} MethodSpec\n     * @param {ScopeFactory} scopeFactory\n     * @param {CallFactory} callFactory\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @constructor\n     */\n    function FunctionFactory(\n        MethodSpec,\n        scopeFactory,\n        callFactory,\n        valueFactory,\n        callStack\n    ) {\n        /**\n         * @type {CallFactory}\n         */\n        this.callFactory = callFactory;\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {class}\n         */\n        this.MethodSpec = MethodSpec;\n        /**\n         * @type {Class|null}\n         */\n        this.newStaticClassForNextCall = null;\n        /**\n         * @type {ScopeFactory}\n         */\n        this.scopeFactory = scopeFactory;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(FunctionFactory.prototype, {\n        /**\n         * Wraps the specified function in another that handles the PHP call stack and scoping\n         *\n         * @param {NamespaceScope} namespaceScope\n         * @param {Class|null} currentClass Used by eg. self::\n         * @param {Function} func\n         * @param {string|null} name\n         * @param {ObjectValue|null} currentObject\n         * @param {Class|null} staticClass Used by eg. static::\n         * @param {FunctionSpec} functionSpec\n         * @returns {Function}\n         */\n        create: function (namespaceScope, currentClass, func, name, currentObject, staticClass, functionSpec) {\n            var factory = this,\n                wrapperFunc = function () {\n                    var args = slice.call(arguments),\n                        thisObject = currentObject || this,\n                        scope,\n                        call,\n                        newStaticClass = null,\n                        result;\n\n                    if (factory.newStaticClassForNextCall !== null) {\n                        newStaticClass = factory.newStaticClassForNextCall;\n                        factory.newStaticClassForNextCall = null;\n                    } else if (staticClass) {\n                        // Allow an explicit static class to be specified, eg. by a Closure\n                        newStaticClass = staticClass;\n                    }\n\n                    if (!factory.valueFactory.isValue(thisObject)) {\n                        thisObject = null;\n                    }\n\n                    // Coerce parameter arguments as required\n                    args = functionSpec.coerceArguments(args);\n\n                    scope = factory.scopeFactory.create(currentClass, wrapperFunc, thisObject);\n                    call = factory.callFactory.create(scope, namespaceScope, args, newStaticClass);\n\n                    // Push the call onto the stack\n                    factory.callStack.push(call);\n\n                    try {\n                        // Now validate the arguments at this point (coercion was done earlier)\n                        // - if any error is raised then the call will still be popped off\n                        //   by the finally clause below\n                        functionSpec.validateArguments(args);\n\n                        // Now populate any optional arguments that were omitted with their default values\n                        args = functionSpec.populateDefaultArguments(args);\n\n                        result = func.apply(scope, args);\n\n                        // Coerce the result to a Value object, handling any FFIResult as needed\n                        // (in async mode this could result in a pause if required)\n                        result = factory.valueFactory.coerce(result);\n\n                        // TODO: Coerce the result as needed (if the PHP function has a return type defined\n                        //       and we are in loose-types mode)\n                    } finally {\n                        // Pop the call off the stack when done\n                        factory.callStack.pop();\n                    }\n\n                    return result;\n                };\n\n            wrapperFunc.functionSpec = functionSpec;\n            wrapperFunc.isPHPCoreWrapped = true;\n            wrapperFunc.originalFunc = func;\n\n            return wrapperFunc;\n        },\n\n        /**\n         * Creates a new MethodSpec, that describes the specified method of a class\n         *\n         * @TODO: Replace with FunctionSpec instead?\n         *\n         * @param {Class} originalClass The original class checked against (eg. a derived class for an inherited method)\n         * @param {Class} classObject The class the method is actually defined on (may be an ancestor)\n         * @param {string} methodName\n         * @param {Function} method\n         */\n        createMethodSpec: function (originalClass, classObject, methodName, method) {\n            return new this.MethodSpec(originalClass, classObject, methodName, method);\n        },\n\n        /**\n         * Specifies the class to use as the static:: class for the next call\n         * to the specified wrapped function\n         *\n         * @param {Function} func\n         * @param {Class} newStaticClass\n         */\n        setNewStaticClassIfWrapped: function (func, newStaticClass) {\n            if (!func.isPHPCoreWrapped) {\n                return;\n            }\n\n            this.newStaticClassForNextCall = newStaticClass;\n        }\n    });\n\n    return FunctionFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    TOO_FEW_ARGS_FOR_EXACT_COUNT = 'core.too_few_args_for_exact_count';\n\n/**\n * Represents the parameters for a PHP function\n *\n * @param {CallStack} callStack\n * @param {ValueFactory} valueFactory\n * @param {FunctionContextInterface} context\n * @param {NamespaceScope} namespaceScope\n * @param {Parameter[]} parameterList\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction FunctionSpec(\n    callStack,\n    valueFactory,\n    context,\n    namespaceScope,\n    parameterList,\n    filePath,\n    lineNumber\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {FunctionContextInterface}\n     */\n    this.context = context;\n    /**\n     * @type {string|null}\n     */\n    this.filePath = filePath;\n    /**\n     * @type {number|null}\n     */\n    this.lineNumber = lineNumber;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n    /**\n     * @type {Parameter[]|null[]}\n     */\n    this.parameterList = parameterList;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FunctionSpec.prototype, {\n    /**\n     * Coerces the given set of arguments for this function as needed\n     *\n     * @param {Reference[]|Value[]|Variable[]} argumentReferenceList\n     * @returns {Reference[]|Value[]|Variable[]}\n     */\n    coerceArguments: function (argumentReferenceList) {\n        var coercedArguments = argumentReferenceList.slice(),\n            spec = this;\n\n        _.each(spec.parameterList, function (parameter, index) {\n            if (!parameter) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n                return;\n            }\n\n            if (argumentReferenceList.length <= index) {\n                // Argument is not provided: do not attempt to fetch it\n                return;\n            }\n\n            // Coerce the argument as the parameter requires\n            coercedArguments[index] = parameter.coerceArgument(argumentReferenceList[index]);\n        });\n\n        // TODO: PHP7 scalar types should be coerced at this point, assuming caller\n        //       was in weak-types mode\n        return coercedArguments;\n    },\n\n    /**\n     * Creates a new function (and its FunctionSpec) for an alias of the current FunctionSpec\n     *\n     * @param {string} aliasName\n     * @param {Function} func\n     * @param {FunctionSpecFactory} functionSpecFactory\n     * @param {FunctionFactory} functionFactory\n     * @return {Function}\n     */\n    createAliasFunction: function (aliasName, func, functionSpecFactory, functionFactory) {\n        var spec = this,\n            aliasFunctionSpec = functionSpecFactory.createAliasFunctionSpec(\n                spec.namespaceScope,\n                aliasName,\n                spec.parameterList,\n                spec.filePath,\n                spec.lineNumber\n            );\n\n        return functionFactory.create(\n            spec.namespaceScope,\n            // Class will always be null for 'normal' functions\n            // as defining a function inside a class will define it\n            // inside the current namespace instead.\n            null,\n            func,\n            aliasName,\n            null,\n            null,\n            aliasFunctionSpec\n        );\n    },\n\n    /**\n     * Fetches the fully-qualified name of the function\n     *\n     * @param {boolean} isStaticCall\n     * @returns {string}\n     */\n    getFunctionName: function (isStaticCall) {\n        return this.context.getName(isStaticCall);\n    },\n\n    /**\n     * Fetches the fully-qualified name of the function\n     *\n     * @param {boolean} isStaticCall\n     * @returns {string}\n     */\n    getFunctionTraceFrameName: function (isStaticCall) {\n        return this.context.getTraceFrameName(isStaticCall);\n    },\n\n    /**\n     * Fetches the parameter of this function at the specified 0-based position\n     * in the parameter list.\n     * Note that some of its parameters and return type may not be given\n     * at runtime due to bundle-size optimisations, for example\n     *\n     * @param {number} position\n     * @returns {Parameter}\n     */\n    getParameterByPosition: function (position) {\n        var spec = this;\n\n        if (position >= spec.parameterList.length || !spec.parameterList[position]) {\n            throw new Error('Unable to fetch parameter #' + position + ' of function \"' + spec.context.getName() + '\"');\n        }\n\n        return spec.parameterList[position];\n    },\n\n    /**\n     * Fetches the name of this function, without any qualifying namespace and/or class prefix\n     *\n     * @returns {string}\n     */\n    getUnprefixedFunctionName: function () {\n        return this.context.getUnprefixedName();\n    },\n\n    /**\n     * Populates any unspecified arguments with their default values from parameters\n     *\n     * @param {Reference[]|Value[]|Variable[]} argumentReferenceList\n     * @returns {Reference[]|Value[]|Variable[]}\n     */\n    populateDefaultArguments: function (argumentReferenceList) {\n        var coercedArguments = argumentReferenceList.slice(),\n            currentParameter,\n            spec = this;\n\n        // Provide special line number instrumentation while loading default arguments\n        spec.callStack.instrumentCurrent(function () {\n            if (!currentParameter) {\n                return null;\n            }\n\n            return currentParameter.getLineNumber();\n        });\n\n        _.each(spec.parameterList, function (parameter, index) {\n            if (!parameter) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n\n                return;\n            }\n\n            if (parameter.isRequired() && argumentReferenceList.length <= index) {\n                // No argument is given for this required parameter - should fail validation later\n\n                return;\n            }\n\n            currentParameter = parameter;\n\n            // Coerce the argument as the parameter requires\n            coercedArguments[index] = parameter.populateDefaultArgument(argumentReferenceList[index]);\n        });\n\n        return coercedArguments;\n    },\n\n    /**\n     * Validates that the given set of arguments are valid for this function\n     *\n     * @param {Reference[]|Value[]|Variable[]} argumentReferenceList\n     */\n    validateArguments: function (argumentReferenceList) {\n        var spec = this;\n\n        _.each(spec.parameterList, function (parameter, index) {\n            var filePath = null,\n                lineNumber = null;\n\n            if (!parameter) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n                return;\n            }\n\n            if (parameter.isRequired() && argumentReferenceList.length <= index) {\n                if (spec.callStack.getCurrent()) {\n                    filePath = spec.callStack.getCallerFilePath();\n                    lineNumber = spec.callStack.getCallerLastLine();\n                }\n\n                // No argument is given for this required parameter - error\n                throw spec.valueFactory.createTranslatedErrorObject(\n                    'ArgumentCountError',\n                    TOO_FEW_ARGS_FOR_EXACT_COUNT,\n                    {\n                        func: spec.context.getName(),\n                        expectedCount: spec.parameterList.length,\n                        actualCount: argumentReferenceList.length,\n                        callerFile: filePath !== null ? filePath : '(unknown)',\n                        callerLine: lineNumber !== null ? lineNumber : '(unknown)'\n                    },\n                    null,\n                    null,\n                    spec.filePath,\n                    spec.lineNumber\n                );\n            }\n\n            // Validate the argument as the parameter requires\n            parameter.validateArgument(argumentReferenceList[index]);\n        });\n    }\n});\n\nmodule.exports = FunctionSpec;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates FunctionSpec-related objects\n *\n * @param {class} FunctionSpec\n * @param {class} FunctionContext\n * @param {class} MethodContext\n * @param {class} ClosureContext\n * @param {CallStack} callStack\n * @param {ParameterListFactory} parameterListFactory\n * @param {ValueFactory} valueFactory\n * @constructor\n */\nfunction FunctionSpecFactory(\n    FunctionSpec,\n    FunctionContext,\n    MethodContext,\n    ClosureContext,\n    callStack,\n    parameterListFactory,\n    valueFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {class}\n     */\n    this.ClosureContext = ClosureContext;\n    /**\n     * @type {class}\n     */\n    this.FunctionContext = FunctionContext;\n    /**\n     * @type {class}\n     */\n    this.FunctionSpec = FunctionSpec;\n    /**\n     * @type {class}\n     */\n    this.MethodContext = MethodContext;\n    /**\n     * @type {ParameterListFactory}\n     */\n    this.parameterListFactory = parameterListFactory;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FunctionSpecFactory.prototype, {\n    /**\n     * Creates a FunctionSpec for a function alias\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {string} functionName\n     * @param {Parameter[]} parameters\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createAliasFunctionSpec: function (namespaceScope, functionName, parameters, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.FunctionContext(namespaceScope, functionName);\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Creates a FunctionSpec from the given spec data for a closure\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {Class|null} classObject\n     * @param {Array} parametersSpecData\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createClosureSpec: function (namespaceScope, classObject, parametersSpecData, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.ClosureContext(namespaceScope, classObject),\n            parameters = factory.parameterListFactory.createParameterList(\n                context,\n                parametersSpecData,\n                namespaceScope,\n                filePath,\n                lineNumber\n            );\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Creates a FunctionSpec from the given spec data\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {string} functionName\n     * @param {Array} parametersSpecData\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createFunctionSpec: function (namespaceScope, functionName, parametersSpecData, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.FunctionContext(namespaceScope, functionName),\n            parameters = factory.parameterListFactory.createParameterList(\n                context,\n                parametersSpecData,\n                namespaceScope,\n                filePath,\n                lineNumber\n            );\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Creates a FunctionSpec from the given spec data for a method\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {Class} classObject\n     * @param {string} methodName\n     * @param {Array} parametersSpecData\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createMethodSpec: function (namespaceScope, classObject, methodName, parametersSpecData, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.MethodContext(classObject, methodName),\n            parameters = factory.parameterListFactory.createParameterList(\n                context,\n                parametersSpecData,\n                namespaceScope,\n                filePath,\n                lineNumber\n            );\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    }\n});\n\nmodule.exports = FunctionSpecFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('../Exception/LoadFailedException')\n], function (\n    _,\n    phpCommon,\n    LoadFailedException\n) {\n    var hasOwn = {}.hasOwnProperty,\n        Exception = phpCommon.Exception,\n        INCLUDE_OPTION = 'include',\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * Handles include(...), require(...) and the _once(...) variants\n     *\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @param {ScopeFactory} scopeFactory\n     * @param {Loader} loader\n     * @param {OptionSet} optionSet\n     * @constructor\n     */\n    function Includer(\n        callStack,\n        valueFactory,\n        scopeFactory,\n        loader,\n        optionSet\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Object.<string, boolean>}\n         */\n        this.includedPaths = {};\n        /**\n         * @type {Loader}\n         */\n        this.loader = loader;\n        /**\n         * @type {OptionSet}\n         */\n        this.optionSet = optionSet;\n        /**\n         * @type {ScopeFactory}\n         */\n        this.scopeFactory = scopeFactory;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Includer.prototype, {\n        /**\n         * Determines whether the given module has already been included\n         *\n         * @param {string} path\n         * @returns {boolean}\n         */\n        hasModuleBeenIncluded: function (path) {\n            return hasOwn.call(this.includedPaths, path);\n        },\n\n        /**\n         * Creates an includer for include(...), require(...) and the _once(...) variants\n         *\n         * @param {string} type \"include\", \"require\" or a \"_once\" variant\n         * @param {string} errorLevel One of the PHPError.E_* constant\n         * @param {Environment} environment\n         * @param {Module} module PHP Module that the include occurred inside\n         * @param {NamespaceScope} topLevelNamespaceScope\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @param {Object} options\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        include: function (\n            type,\n            errorLevel,\n            environment,\n            module,\n            topLevelNamespaceScope,\n            includedPath,\n            enclosingScope,\n            options\n        ) {\n            var includer = this,\n                includeFunction = includer.optionSet.getOption(INCLUDE_OPTION),\n                includeScope,\n                previousError;\n\n            if (!includeFunction) {\n                throw new Exception(\n                    type + '(' + includedPath + ') :: No \"' +\n                    INCLUDE_OPTION +\n                    '\" transport option is available for loading the module.'\n                );\n            }\n\n            includeScope = includer.scopeFactory.createLoadScope(\n                enclosingScope,\n                topLevelNamespaceScope.getFilePath(),\n                type\n            );\n\n            // Mark the module as included so we may avoid including it a second time\n            includer.includedPaths[includedPath] = true;\n\n            try {\n                return includer.loader.load(\n                    type,\n                    includedPath,\n                    options,\n                    environment,\n                    module,\n                    includeScope,\n                    function (path, promise, parentPath, valueFactory) {\n                        return includeFunction(path, promise, parentPath, valueFactory);\n                    }\n                );\n            } catch (error) {\n                if (!(error instanceof LoadFailedException)) {\n                    // Rethrow for anything other than the expected possible exception(s) trying to load the module\n                    throw error;\n                }\n\n                previousError = error.getPreviousError();\n\n                includer.callStack.raiseError(\n                    PHPError.E_WARNING,\n                    type + '(' + includedPath + '): failed to open stream: ' +\n                        (previousError ? previousError.message : 'Unknown error')\n                );\n                includer.callStack.raiseError(\n                    errorLevel,\n                    type + '(): Failed opening \\'' + includedPath + '\\' for inclusion'\n                );\n\n                return includer.valueFactory.createBoolean(false);\n            }\n        }\n    });\n\n    return Includer;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty;\n\n/**\n * Contains all INI options at runtime\n *\n * @constructor\n */\nfunction INIState() {\n    /**\n     * @type {Object.<string, *>}\n     */\n    this.settings = {\n        'include_path': '.'\n    };\n}\n\n_.extend(INIState.prototype, {\n    /**\n     * Fetches an INI option, returning null if it is not defined\n     *\n     * @param {string} name\n     * @returns {*}\n     */\n    get: function (name) {\n        return hasOwn.call(this.settings, name) ?\n            this.settings[name] :\n            null;\n    },\n\n    /**\n     * Sets the value of an INI option\n     *\n     * @param {string} name\n     * @param {*} value\n     */\n    set: function (name, value) {\n        this.settings[name] = value;\n    }\n});\n\nmodule.exports = INIState;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('path'),\n    require('phpcommon'),\n    require('../Value/Exit'),\n    require('../Exception/LoadFailedException'),\n    require('../Value')\n], function (\n    _,\n    path,\n    phpCommon,\n    ExitValue,\n    LoadFailedException,\n    Value\n) {\n    var Exception = phpCommon.Exception,\n        PHPFatalError = phpCommon.PHPFatalError,\n        PHPParseError = phpCommon.PHPParseError;\n\n    /**\n     * @param {ValueFactory} valueFactory\n     * @param {Resumable|null} pausable\n     * @constructor\n     */\n    function Loader(valueFactory, pausable) {\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Loader.prototype, {\n        /**\n         * Loads a resource by calling the provided loader. Used for:\n         *\n         * - `include(...)`\n         * - `require(...)`\n         * - `eval(...)`\n         *\n         * When the relevant transport options are installed.\n         *\n         * @param {string} type The type of load to be done, eg. `eval` or `include`\n         * @param {string} filePath The path to the resource being loaded\n         * @param {object} options\n         * @param {Environment} environment\n         * @param {Module} module\n         * @param {Scope} enclosingScope\n         * @param {Function} load\n         * @returns {*}\n         */\n        load: function (type, filePath, options, environment, module, enclosingScope, load) {\n            var done = false,\n                errorResult = null,\n                loader = this,\n                pause = null,\n                result,\n                subOptions;\n\n            function completeWith(moduleResult) {\n                done = true;\n\n                if (pause) {\n                    if (moduleResult instanceof ExitValue) {\n                        pause.throw(moduleResult);\n                        return;\n                    }\n\n                    pause.resume(moduleResult);\n                } else {\n                    if (moduleResult instanceof ExitValue) {\n                        throw moduleResult;\n                    }\n\n                    result = moduleResult;\n                }\n            }\n\n            function resolve(valueOrModule) {\n                var executeResult;\n\n                // Handle wrapper function being returned from loader for module\n                if (_.isFunction(valueOrModule)) {\n                    executeResult = valueOrModule(subOptions, environment, enclosingScope).execute();\n\n                    if (!loader.pausable) {\n                        completeWith(executeResult);\n                        return;\n                    }\n\n                    executeResult.then(\n                        completeWith,\n                        function (error) {\n                            pause.throw(error);\n                        }\n                    );\n\n                    return;\n                }\n\n                // Handle PHP code string being returned from loader for module\n                if (_.isString(valueOrModule)) {\n                    throw new Exception(type + '(' + filePath + ') :: Returning a PHP string is not supported');\n                }\n\n                // Handle a value object being returned as the module's return value\n                if (loader.valueFactory.isValue(valueOrModule)) {\n                    completeWith(valueOrModule);\n                    return;\n                }\n\n                throw new Exception(type + '(' + filePath + ') :: Module is in a weird format');\n            }\n\n            function reject(error) {\n                var filePath,\n                    lineNumber,\n                    subError;\n\n                if (error instanceof PHPParseError) {\n                    filePath = error.getFilePath();\n                    lineNumber = error.getLineNumber();\n\n                    // Parse errors should be thrown as a ParseError in PHP 7+\n                    // NB: The Error class' constructor will fetch file and line number info\n                    subError = loader.valueFactory.createErrorObject(\n                        'ParseError',\n                        error.getMessage(),\n                        null,\n                        null,\n                        filePath !== null ? filePath : '(unknown)',\n                        lineNumber !== null ? lineNumber : 0\n                    );\n                } else if (error instanceof PHPFatalError) {\n                    // Uncatchable fatal error (?)\n\n                    subError = error;\n                } else if (error instanceof Value) {\n                    // Throwable Error, Exception or an exit occurred (ExitValue)\n\n                    subError = error;\n                } else {\n                    subError = new LoadFailedException(error);\n                }\n\n                if (pause) {\n                    pause.throw(subError);\n                } else {\n                    errorResult = subError;\n                }\n            }\n\n            // Resolve \"./\" and \"../\" components in the file path\n            filePath = path.normalize(filePath);\n\n            subOptions = _.extend({}, options, {\n                // TODO: Can we improve this? Can we include a module's path in its compiled output,\n                //       rather than having the runtime provide its path like this?\n                'path': filePath\n            });\n\n            // NB: The loader may throw an error, which will be caught and passed to reject()\n            //     for consistent behaviour\n            try {\n                load(filePath, {\n                    reject: reject,\n                    resolve: resolve\n                }, module.getFilePath(), loader.valueFactory);\n            } catch (error) {\n                reject(error);\n            }\n\n            if (errorResult) {\n                throw errorResult;\n            }\n\n            if (done) {\n                return result;\n            }\n\n            if (!loader.pausable) {\n                // Pausable is not available, so we cannot yield while the module is loaded\n                throw new Exception(type + '(' + filePath + ') :: Async support not enabled');\n            }\n\n            pause = loader.pausable.createPause();\n            return pause.now();\n        }\n    });\n\n    return Loader;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Wraps a Scope having a load (eval, include etc.) performed from inside it\n *\n * @param {ValueFactory} valueFactory\n * @param {Scope} effectiveScope\n * @param {string} callerFilePath\n * @param {string} type The type of load, eg. `eval` or `include`\n * @constructor\n */\nfunction LoadScope(valueFactory, effectiveScope, callerFilePath, type) {\n    /**\n     * @type {string}\n     */\n    this.callerFilePath = callerFilePath;\n    /**\n     * @type {Scope}\n     */\n    this.effectiveScope = effectiveScope;\n    /**\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(LoadScope.prototype, {\n    /**\n     * Creates a closure, either static (with no `$this` object bound) or non-static\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {Function} func\n     * @param {Array=} parametersSpecData\n     * @param {boolean=} isStatic\n     * @param {number|null=} lineNumber\n     * @returns {Closure}\n     */\n    createClosure: function (namespaceScope, func, parametersSpecData, isStatic, lineNumber) {\n        return this.effectiveScope.createClosure(\n            namespaceScope,\n            func,\n            parametersSpecData,\n            isStatic,\n            lineNumber\n        );\n    },\n\n    /**\n     * Defines a variable with the given name in this scope\n     *\n     * @param {string} name\n     * @returns {Variable}\n     */\n    defineVariable: function (name) {\n        return this.effectiveScope.defineVariable(name);\n    },\n\n    /**\n     * Defines one or more variables with the given names in this scope\n     *\n     * @param {string[]} names\n     */\n    defineVariables: function (names) {\n        this.effectiveScope.defineVariables(names);\n    },\n\n    /**\n     * Returns a hash with the values of all variables defined\n     * for this scope, including all superglobals\n     *\n     * @returns {Object.<string, Value>}\n     */\n    exportVariables: function () {\n        return this.effectiveScope.exportVariables();\n    },\n\n    /**\n     * Defines a variable in the current scope with the given native value\n     *\n     * @param {Value} value\n     * @param {string} name\n     */\n    expose: function (value, name) {\n        this.effectiveScope.expose(value, name);\n    },\n\n    /**\n     * Fetches the name of the current class, or an empty string if there is none\n     *\n     * @returns {StringValue}\n     */\n    getClassName: function () {\n        return this.effectiveScope.getClassName();\n    },\n\n    /**\n     * Fetches the name of the class in which this scope's function is defined\n     *\n     * @returns {StringValue}\n     * @throws {PHPFatalError} When there is no current class scope\n     */\n    getClassNameOrThrow: function () {\n        return this.effectiveScope.getClassNameOrThrow();\n    },\n\n    /**\n     * Fetches the current class, if any\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        return this.effectiveScope.getCurrentClass();\n    },\n\n    /**\n     * Fetches the current file path, taking eval or include into account\n     *\n     * @param {string|null} filePath\n     * @returns {string|null}\n     */\n    getFilePath: function (filePath) {\n        return filePath !== null ? filePath : this.callerFilePath;\n    },\n\n    /**\n     * Fetches the current function name (used by eg. the magic __FUNCTION__ constant)\n     *\n     * @returns {StringValue}\n     */\n    getFunctionName: function () {\n        // Eval/include contexts do not report the calling function, if any\n        return this.valueFactory.createString('');\n    },\n\n    /**\n     * Fetches the current method name (used by eg. the magic __METHOD__ constant)\n     *\n     * Note that this differs from .getFunctionName() when the current function is a method\n     *\n     * @returns {StringValue}\n     */\n    getMethodName: function () {\n        // Eval/include contexts do not report the calling method, if any\n        return this.valueFactory.createString('');\n    },\n\n    /**\n     * Fetches the name of the parent of the current class in scope\n     *\n     * @returns {StringValue}\n     * @throws {PHPFatalError} When there is no current class scope or current class has no parent\n     */\n    getParentClassNameOrThrow: function () {\n        return this.effectiveScope.getParentClassNameOrThrow();\n    },\n\n    /**\n     * Fetches the name of the current static class scope, which may be different\n     * from the class in which its function is defined (eg. after a forward_static_call(...))\n     *\n     * @returns {StringValue}\n     * @throws {PHPFatalError} When there is no static class scope\n     */\n    getStaticClassNameOrThrow: function () {\n        return this.effectiveScope.getStaticClassNameOrThrow();\n    },\n\n    /**\n     * Fetches the current object (the value of $this) if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        return this.effectiveScope.getThisObject();\n    },\n\n    /**\n     * Fetches the current function or method name as used in stack traces\n     *\n     * Note that this differs from .getFunctionName() and .getMethodName()\n     *\n     * @returns {string}\n     */\n    getTraceFrameName: function () {\n        return this.type;\n    },\n\n    /**\n     * Fetches a variable for the current or super global scope,\n     * implicitly defining it if needed\n     *\n     * @param {string} name\n     * @returns {Variable}\n     */\n    getVariable: function (name) {\n        return this.effectiveScope.getVariable(name);\n    },\n\n    /**\n     * Imports a global variable into this scope by defining the variable\n     * in this scope and setting its reference to point to the global one.\n     *\n     * @param {string} variableName\n     */\n    importGlobal: function (variableName) {\n        this.effectiveScope.importGlobal(variableName);\n    },\n\n    /**\n     * Imports a static variable into this scope by defining the variable\n     * in this scope and setting its reference to point to the \"static\" one,\n     * stored against the current function/method. The first time the variable\n     * is declared, it will be assigned the initial value (if any).\n     *\n     * @param {string} variableName\n     * @param {Value|null} initialValue\n     */\n    importStatic: function (variableName, initialValue) {\n        this.effectiveScope.importStatic(variableName, initialValue);\n    },\n\n    /**\n     * Whether this call scope is in a static context or not\n     *\n     * @returns {boolean}\n     */\n    isStatic: function () {\n        return this.effectiveScope.isStatic();\n    },\n\n    /**\n     * Raises a catchable Error or a notice/warning with the specified level, message translation key and variables,\n     * scoped to the current function scope\n     *\n     * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n     * @param {string} translationKey\n     * @param {Object.<string, string>=} placeholderVariables\n     * @param {string=} errorClass\n     * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n     * @param {string=} filePath\n     * @param {number=} lineNumber\n     * @throws {ObjectValue} Throws an ObjectValue-wrapped Throwable if not a notice or warning\n     */\n    raiseScopedTranslatedError: function (\n        level,\n        translationKey,\n        placeholderVariables,\n        errorClass,\n        reportsOwnContext,\n        filePath,\n        lineNumber\n    ) {\n        this.effectiveScope.raiseScopedTranslatedError(\n            level,\n            translationKey,\n            placeholderVariables,\n            errorClass,\n            reportsOwnContext,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Suppresses errors for this and any descendant scopes\n     */\n    suppressErrors: function () {\n        this.effectiveScope.suppressErrors();\n    },\n\n    /**\n     * Suppresses errors for only this and not any descendant scopes\n     */\n    suppressOwnErrors: function () {\n        this.effectiveScope.suppressOwnErrors();\n    },\n\n    /**\n     * Determines whether errors have been suppressed for this and any descendant scopes\n     *\n     * @returns {boolean}\n     */\n    suppressesErrors: function () {\n        return this.effectiveScope.suppressesErrors();\n    },\n\n    /**\n     * Determines whether errors have been suppressed for this but not any descendant scopes\n     *\n     * @returns {boolean}\n     */\n    suppressesOwnErrors: function () {\n        return this.effectiveScope.suppressesOwnErrors();\n    },\n\n    /**\n     * Unsuppresses errors for this and any descendant scopes\n     */\n    unsuppressErrors: function () {\n        this.effectiveScope.unsuppressErrors();\n    },\n\n    /**\n     * Unsuppresses errors for this but not any descendant scopes\n     */\n    unsuppressOwnErrors: function () {\n        this.effectiveScope.unsuppressOwnErrors();\n    }\n});\n\nmodule.exports = LoadScope;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    FunctionContextInterface = require('./FunctionContextInterface');\n\n/**\n * Represents a PHP method function\n *\n * @param {Class} classObject\n * @param {string|null} name\n * @constructor\n * @implements {FunctionContextInterface}\n */\nfunction MethodContext(classObject, name) {\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {string|null}\n     */\n    this.name = name;\n}\n\nutil.inherits(MethodContext, FunctionContextInterface);\n\n_.extend(MethodContext.prototype, {\n    /**\n     * Fetches the fully-qualified name of the method\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getName: function (isStaticCall) {\n        var spec = this;\n\n        return spec.classObject.getName() + (isStaticCall !== false ? '::' : '->') + spec.name;\n    },\n\n    /**\n     * Fetches the name of the method as required for stack traces\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getTraceFrameName: function (isStaticCall) {\n        return this.getName(isStaticCall);\n    },\n\n    /**\n     * Fetches the name of the method, without any qualifying namespace and/or class prefix\n     * (eg. as used by __FUNCTION__)\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: function () {\n        return this.name;\n    }\n});\n\nmodule.exports = MethodContext;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    IS_STATIC = 'isStatic';\n\n/**\n * @param {Class} originalClass The original class checked against (eg. a derived class for an inherited method)\n * @param {Class} classObject The class the method is actually defined on (may be an ancestor)\n * @param {string} methodName\n * @param {Function} method\n * @constructor\n */\nfunction MethodSpec(originalClass, classObject, methodName, method) {\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {Function}\n     */\n    this.method = method;\n    /**\n     * @type {string}\n     */\n    this.methodName = methodName;\n    /**\n     * @type {Class}\n     */\n    this.originalClass = originalClass;\n}\n\n_.extend(MethodSpec.prototype, {\n    /**\n     * Fetches the name of the method this spec is for\n     * \n     * @returns {string}\n     */\n    getMethodName: function () {\n        return this.methodName;\n    },\n\n    /**\n     * Determines whether this method is static (or an instance method)\n     *\n     * @returns {boolean}\n     */\n    isStatic: function () {\n        return !!this.method[IS_STATIC];\n    }\n});\n\nmodule.exports = MethodSpec;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {string|null} filePath\n * @constructor\n */\nfunction Module(filePath) {\n    /**\n     * @type {string|null}\n     */\n    this.filePath = filePath || null;\n}\n\n_.extend(Module.prototype, {\n    /**\n     * Fetches the path to the file this module is defined in, or null if none\n     *\n     * @returns {string|null}\n     */\n    getFilePath: function () {\n        return this.filePath;\n    }\n});\n\nmodule.exports = Module;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Module\n * @constructor\n */\nfunction ModuleFactory(Module) {\n    /**\n     * @type {class}\n     */\n    this.Module = Module;\n}\n\n_.extend(ModuleFactory.prototype, {\n    /**\n     * Creates a new Module\n     *\n     * @param {string|null} filePath Path to the PHP file this module is defined in, or null if none\n     * @returns {Module}\n     */\n    create: function (filePath) {\n        return new this.Module(filePath);\n    }\n});\n\nmodule.exports = ModuleFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Class')\n], function (\n    _,\n    phpCommon,\n    Class\n) {\n    var CALL_TO_UNDEFINED_FUNCTION = 'core.call_to_undefined_function',\n        CANNOT_DECLARE_CLASS_AS_NAME_ALREADY_IN_USE = 'core.cannot_declare_class_as_name_already_in_use',\n        CANNOT_IMPLEMENT_THROWABLE = 'core.cannot_implement_throwable',\n        CANNOT_REDECLARE_CLASS_AS_NAME_ALREADY_IN_USE = 'core.cannot_redeclare_class_as_name_already_in_use',\n        CLASS_NOT_FOUND = 'core.class_not_found',\n        CONSTANT_ALREADY_DEFINED = 'core.constant_already_defined',\n        UNDEFINED_CONSTANT = 'core.undefined_constant',\n\n        IS_METHOD = 'isMethod',\n        IS_STATIC = 'isStatic',\n        MAGIC_CONSTRUCT = '__construct',\n        hasOwn = {}.hasOwnProperty,\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * Represents a single namespace within the namespace hierarchy.\n     * For example, the class path `My\\Lib\\SubNs\\MyClass` defines the namespace `My`\n     * under the global namespace, with a single Namespace instance for `My`.\n     * `SubNs` is another instance, with `My\\Lib` as its parent and `My` as its grandparent.\n     *\n     * The special global namespace has the empty string as its unique name,\n     * along with null as its parent namespace.\n     *\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @param {NamespaceFactory} namespaceFactory\n     * @param {FunctionFactory} functionFactory\n     * @param {FunctionSpecFactory} functionSpecFactory\n     * @param {ClassAutoloader} classAutoloader\n     * @param {ExportRepository} exportRepository\n     * @param {FFIFactory} ffiFactory\n     * @param {Namespace|null} parent\n     * @param {string} name\n     * @constructor\n     */\n    function Namespace(\n        callStack,\n        valueFactory,\n        namespaceFactory,\n        functionFactory,\n        functionSpecFactory,\n        classAutoloader,\n        exportRepository,\n        ffiFactory,\n        parent,\n        name\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Object.<string, Namespace>}\n         */\n        this.children = {};\n        /**\n         * @type {ClassAutoloader}\n         */\n        this.classAutoloader = classAutoloader;\n        /**\n         * @type {Object.<string, Class>}\n         */\n        this.classes = {};\n        /**\n         * @type {Object.<string, {caseInsensitive: boolean, name: string, value: Value}>}\n         */\n        this.constants = {};\n        /**\n         * @type {ExportRepository}\n         */\n        this.exportRepository = exportRepository;\n        /**\n         * @type {FFIFactory}\n         */\n        this.ffiFactory = ffiFactory;\n        /**\n         * @type {FunctionFactory}\n         */\n        this.functionFactory = functionFactory;\n        /**\n         * @type {FunctionSpecFactory}\n         */\n        this.functionSpecFactory = functionSpecFactory;\n        /**\n         * @type {Object.<string, Function>}\n         */\n        this.functions = {};\n        /**\n         * @type {string}\n         */\n        this.name = name;\n        /**\n         * @type {NamespaceFactory}\n         */\n        this.namespaceFactory = namespaceFactory;\n        /**\n         * @type {Namespace|null}\n         */\n        this.parent = parent;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Namespace.prototype, {\n        /**\n         * Defines the given alias for the given function\n         *\n         * @param {string} originalName\n         * @param {string} aliasName\n         * @throws {Error} Throws when the specified original function does not exist\n         */\n        aliasFunction: function (originalName, aliasName) {\n            var existingFunction,\n                namespace = this;\n\n            if (!namespace.hasFunction(originalName)) {\n                throw new Error('Cannot alias undefined function \"' + originalName + '\"');\n            }\n\n            existingFunction = namespace.getFunction(originalName);\n\n            namespace.functions[aliasName.toLowerCase()] = existingFunction.functionSpec.createAliasFunction(\n                aliasName,\n                existingFunction.originalFunc,\n                namespace.functionSpecFactory,\n                namespace.functionFactory\n            );\n        },\n\n        /**\n         * Defines a class in the current namespace, either from a JS class/function or from a transpiled PHP class,\n         * where PHPToJS has generated an object containing all the information related to the class\n         *\n         * @TODO: Consider moving this to NamespaceScope.defineClass(...) rather than having that injected\n         *        as a required argument to this method?\n         *\n         * @param {string} name\n         * @param {Function|object} definition Either a Function for a native JS class or a transpiled definition object\n         * @param {NamespaceScope} namespaceScope\n         * @param {boolean=} autoCoercionEnabled Whether the class should be auto-coercing\n         * @returns {Class} Returns the internal Class instance created\n         */\n        defineClass: function (\n            name,\n            definition,\n            namespaceScope,\n            autoCoercionEnabled\n        ) {\n            var classObject,\n                constants,\n                constructorName = null,\n                methodData = {},\n                methods = {},\n                namespace = this,\n                proxyConstructor,\n                rootInternalPrototype,\n                staticProperties,\n                InternalClass;\n\n            autoCoercionEnabled = Boolean(autoCoercionEnabled);\n\n            if (namespaceScope.hasClass(name)) {\n                namespace.callStack.raiseUncatchableFatalError(\n                    namespace.hasClass(name) ?\n                        CANNOT_REDECLARE_CLASS_AS_NAME_ALREADY_IN_USE :\n                        CANNOT_DECLARE_CLASS_AS_NAME_ALREADY_IN_USE,\n                    {\n                        className: namespace.getPrefix() + name\n                    }\n                );\n            }\n\n            if (_.isFunction(definition)) {\n                // Class is defined using native JavaScript, not PHP\n\n                // Create a new, empty native constructor so that we can avoid calling\n                // the original if the derived class does not call parent::__construct(...)\n                // - Unless the class defines the special `shadowConstructor` property, which\n                //   is always called regardless of whether the parent constructor is called explicitly\n                InternalClass = function () {\n                    var objectValue = this;\n\n                    if (definition.shadowConstructor) {\n                        definition.shadowConstructor.call(\n                            // Use the native object as the `this` object inside the shadow constructor\n                            // if auto-coercion is enabled, otherwise use the ObjectValue\n                            classObject.isAutoCoercionEnabled() ? objectValue.getObject() : objectValue\n                        );\n                    }\n\n                    if (definition.superClass) {\n                        // Class has a parent, call the parent's internal constructor\n                        definition.superClass.getInternalClass().call(objectValue);\n                    }\n                };\n                InternalClass.prototype = Object.create(definition.prototype);\n                proxyConstructor = function () {\n                    var\n                        objectValue = this,\n                        // Will be the native object as the `this` object inside the (shadow) constructor\n                        // if auto-coercion is enabled, otherwise use the ObjectValue\n                        unwrappedThisObject = classObject.isAutoCoercionEnabled() ?\n                            objectValue.getObject() :\n                            objectValue,\n                        unwrappedArgs = classObject.unwrapArguments(arguments);\n\n                    // Call the original native constructor\n                    definition.apply(unwrappedThisObject, unwrappedArgs);\n\n                    // Call magic __construct method if defined for the original native class\n                    if (definition.prototype[MAGIC_CONSTRUCT]) {\n                        definition.prototype[MAGIC_CONSTRUCT].apply(unwrappedThisObject, unwrappedArgs);\n                    }\n                };\n                proxyConstructor.neverCoerce = true;\n                proxyConstructor.data = methodData;\n                InternalClass.prototype[MAGIC_CONSTRUCT] = proxyConstructor;\n                constructorName = MAGIC_CONSTRUCT;\n\n                // Record the prototype object that we should stop at when walking up the chain\n                rootInternalPrototype = definition.prototype;\n            } else {\n                // Class has a definition, so it was defined using PHP\n\n                // Ensure the class does not attempt to implement Throwable directly\n                _.each(definition.interfaces, function (interfaceName) {\n                    var resolvedClass = namespaceScope.resolveClass(interfaceName);\n\n                    if (resolvedClass.namespace.getName() === '' && resolvedClass.name.toLowerCase() === 'throwable') {\n                        namespace.callStack.raiseUncatchableFatalError(\n                            CANNOT_IMPLEMENT_THROWABLE,\n                            {\n                                className: namespace.getPrefix() + name\n                            }\n                        );\n                    }\n                });\n\n                InternalClass = function () {\n                    var objectValue = this,\n                        properties = {};\n\n                    // Go through and declare the properties and their default values\n                    // on the object from the class definition\n                    _.forOwn(definition.properties, function (propertyData, name) {\n                        properties[name] = objectValue.declareProperty(name, classObject, propertyData.visibility);\n                    });\n\n                    if (definition.superClass) {\n                        // Class has a parent, call the parent's internal constructor\n                        definition.superClass.getInternalClass().call(objectValue);\n                    }\n\n                    // Go through and define the properties and their default values\n                    // on the object from the class definition by initialising them\n                    _.forOwn(definition.properties, function (propertyData, name) {\n                        var instanceProperty = properties[name],\n                            initialValue = propertyData.value();\n\n                        if (initialValue === null) {\n                            // If a property has no initialiser then its initial value is NULL\n                            initialValue = namespace.valueFactory.createNull();\n                        }\n\n                        instanceProperty.initialise(initialValue);\n                    });\n                };\n\n                // Prevent native 'constructor' property from erroneously being detected as PHP class method\n                delete InternalClass.prototype.constructor;\n\n                if (definition.superClass) {\n                    InternalClass.prototype = Object.create(definition.superClass.getInternalClass().prototype);\n                }\n\n                _.each(definition.methods, function (data, methodName) {\n                    // PHP5-style __construct magic method takes precedence\n                    if (methodName === '__construct') {\n                        if (constructorName) {\n                            // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                            namespace.callStack.raiseError(PHPError.E_STRICT, 'Redefining already defined constructor for class ' + name);\n                        }\n\n                        constructorName = methodName;\n                    }\n\n                    if (!constructorName && methodName === name) {\n                        constructorName = methodName;\n                    }\n\n                    methods[methodName] = data;\n                });\n\n                staticProperties = definition.staticProperties;\n                constants = definition.constants;\n\n                // Record the prototype object that we should stop at when walking up the chain\n                rootInternalPrototype = InternalClass.prototype;\n            }\n\n            classObject = new Class(\n                namespace.valueFactory,\n                namespace.functionFactory,\n                namespace.callStack,\n                namespace.getPrefix() + name,\n                constructorName,\n                InternalClass,\n                rootInternalPrototype,\n                staticProperties,\n                constants,\n                definition.superClass,\n                definition.interfaces,\n                namespaceScope,\n                namespace.exportRepository,\n                namespace.ffiFactory.createValueCoercer(autoCoercionEnabled),\n                namespace.ffiFactory\n            );\n\n            _.forOwn(methods, function (data, methodName) {\n                // TODO: For JS-defined functions, `methods` is always empty - see above.\n                //       Consider building it up with processed methods/specs etc., indexed by lowercased name,\n                //       to also solve the performance issue with the current method lookup logic.\n                var functionSpec,\n                    lineNumber = data.line,\n                    method,\n                    methodIsStatic = data[IS_STATIC],\n                    // Parameter spec data may only be provided for PHP-transpiled functions\n                    parametersSpecData = data.args;\n\n                functionSpec = namespace.functionSpecFactory.createMethodSpec(\n                    namespaceScope,\n                    classObject,\n                    methodName,\n                    parametersSpecData || [],\n                    namespace.callStack.getLastFilePath(),\n                    lineNumber || null\n                );\n\n                method = namespace.functionFactory.create(\n                    namespaceScope,\n                    classObject,\n                    data.method,\n                    methodName,\n                    null,\n                    null, // NB: No need to override the class for a method\n                    functionSpec\n                );\n\n                method[IS_METHOD] = true;\n                method[IS_STATIC] = methodIsStatic;\n                method.data = methodData;\n\n                InternalClass.prototype[methodName] = method;\n            });\n\n            methodData.classObject = classObject;\n\n            namespace.classes[name.toLowerCase()] = classObject;\n\n            return classObject;\n        },\n\n        /**\n         * Defines a constant for the current namespace, optionally making it case-insensitive\n         *\n         * @param {string} name\n         * @param {Value} value\n         * @param {object=} options\n         */\n        defineConstant: function (name, value, options) {\n            var caseInsensitive,\n                effectiveName,\n                existingDefinition,\n                namespace = this;\n\n            options = options || {};\n            caseInsensitive = !!options.caseInsensitive;\n            existingDefinition = namespace.getConstantDefinition(name);\n\n            if (existingDefinition !== null) {\n                namespace.callStack.raiseTranslatedError(PHPError.E_NOTICE, CONSTANT_ALREADY_DEFINED, {\n                    // Use original name in the error message rather than the effective one\n                    name: namespace.getPrefix().toLowerCase() + existingDefinition.name\n                });\n\n                return; // Do not redefine the existing constant\n            }\n\n            effectiveName = caseInsensitive ? name.toLowerCase() : name;\n\n            namespace.constants[effectiveName] = {\n                caseInsensitive: caseInsensitive,\n                // Store the original name for reference (as the effective one may be lower-cased)\n                name: name,\n                value: value\n            };\n        },\n\n        /**\n         * Defines a new function within this namespace\n         *\n         * @param {string} name\n         * @param {Function} func\n         * @param {NamespaceScope} namespaceScope\n         * @param {Array=} parametersSpecData\n         * @param {number=} lineNumber\n         */\n        defineFunction: function (name, func, namespaceScope, parametersSpecData, lineNumber) {\n            var functionSpec,\n                namespace = this;\n\n            // Parameter spec data may only be provided for PHP-transpiled functions\n            functionSpec = namespace.functionSpecFactory.createFunctionSpec(\n                namespaceScope,\n                name,\n                parametersSpecData || [],\n                namespace.callStack.getLastFilePath(),\n                lineNumber || null\n            );\n\n            namespace.functions[name.toLowerCase()] = namespace.functionFactory.create(\n                namespaceScope,\n                // Class will always be null for 'normal' functions\n                // as defining a function inside a class will define it\n                // inside the current namespace instead.\n                null,\n                func,\n                name,\n                null,\n                null,\n                functionSpec\n            );\n        },\n\n        /**\n         * Fetches a class definition from within this namespace or a descendant.\n         * If applicable, the class autoloader will be invoked.\n         *\n         * @param {string} name\n         * @returns {Class}\n         */\n        getClass: function (name) {\n            var namespace = this,\n                parsed = namespace.parseName(name),\n                lowerName = parsed.name.toLowerCase();\n\n            if (!hasOwn.call(parsed.namespace.classes, lowerName)) {\n                // Try to autoload the class\n                namespace.classAutoloader.autoloadClass(parsed.namespace.getPrefix() + parsed.name);\n\n                // Raise an error if it is still not defined\n                if (!hasOwn.call(parsed.namespace.classes, lowerName)) {\n                    namespace.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NOT_FOUND, {\n                        name: parsed.namespace.getPrefix() + parsed.name\n                    });\n                }\n            }\n\n            return parsed.namespace.classes[lowerName];\n        },\n\n        /**\n         * Fetches the value of a constant if it is defined. If it is not defined,\n         * then it will either raise a notice and return the name of the constant as a string,\n         * or throw an exception, depending on whether it is a namespaced constant\n         *\n         * @param {string} name\n         * @param {boolean} usesNamespace\n         * @returns {Value}\n         */\n        getConstant: function (name, usesNamespace) {\n            var namespace = this,\n                constant = namespace.getConstantDefinition(name);\n\n            if (constant) {\n                return constant.value;\n            }\n\n            if (usesNamespace) {\n                namespace.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_CONSTANT, {\n                    name: namespace.getPrefix() + name\n                });\n            }\n\n            namespace.callStack.raiseError(\n                PHPError.E_WARNING,\n                'Use of undefined constant ' + name + ' - assumed \\'' + name + '\\' ' +\n                '(this will throw an Error in a future version of PHP)'\n            );\n\n            return this.valueFactory.createString(name);\n        },\n\n        /**\n         * Fetches a sub-namespace within this one, by its name. Any namespaces in the hierarchy\n         * that do not exist will be created and then cached on-demand\n         *\n         * @param {string} name\n         * @returns {Namespace}\n         */\n        getDescendant: function (name) {\n            var namespace = this,\n                subNamespace = namespace;\n\n            if (name === '') {\n                throw new Error('Namespace.getDescendant() :: Name cannot be empty');\n            }\n\n            _.each(name.split('\\\\'), function (part) {\n                if (!hasOwn.call(subNamespace.children, part.toLowerCase())) {\n                    subNamespace.children[part.toLowerCase()] = namespace.namespaceFactory.create(\n                        subNamespace,\n                        part\n                    );\n                }\n\n                subNamespace = subNamespace.children[part.toLowerCase()];\n            });\n\n            return subNamespace;\n        },\n\n        /**\n         * Fetches a function from the current namespace if defined, otherwise falls back\n         * to the global namespace. Raises an error if the function is not defined at all\n         *\n         * @param {string|Function} name\n         * @returns {Function}\n         */\n        getFunction: function (name) {\n            var globalNamespace,\n                match,\n                namespace = this,\n                path,\n                subNamespace;\n\n            if (_.isFunction(name)) {\n                return name;\n            }\n\n            match = name.match(/^(.*?)\\\\([^\\\\]+)$/);\n\n            if (match) {\n                path = match[1];\n                name = match[2];\n\n                subNamespace = namespace.getDescendant(path);\n\n                return subNamespace.getFunction(name);\n            }\n\n            if (hasOwn.call(namespace.functions, name.toLowerCase())) {\n                return namespace.functions[name.toLowerCase()];\n            }\n\n            globalNamespace = namespace.getGlobal();\n\n            if (hasOwn.call(globalNamespace.functions, name.toLowerCase())) {\n                return globalNamespace.functions[name.toLowerCase()];\n            }\n\n            namespace.callStack.raiseTranslatedError(PHPError.E_ERROR, CALL_TO_UNDEFINED_FUNCTION, {\n                name: namespace.getPrefix() + name\n            });\n        },\n\n        getGlobal: function () {\n            var namespace = this;\n\n            return namespace.name === '' ? namespace : namespace.getParent().getGlobal();\n        },\n\n        getGlobalNamespace: function () {\n            return this.getGlobal();\n        },\n\n        getName: function () {\n            var namespace = this;\n\n            if (namespace.name === '') {\n                return '';\n            }\n\n            return (namespace.parent ? namespace.parent.getPrefix() : '') + namespace.name;\n        },\n\n        getOwnFunction: function (name) {\n            var namespace = this;\n\n            if (hasOwn.call(namespace.functions, name.toLowerCase())) {\n                return namespace.functions[name.toLowerCase()];\n            }\n\n            return null;\n        },\n\n        getParent: function () {\n            return this.parent;\n        },\n\n        getPrefix: function () {\n            var name = this.getName();\n\n            if (name !== '') {\n                name += '\\\\';\n            }\n\n            return name;\n        },\n\n        /**\n         * Fetches the definition object for a constant, or null if it is not defined\n         *\n         * @param {string} name\n         * @returns {object|null}\n         */\n        getConstantDefinition: function (name) {\n            var globalNamespace,\n                lowercaseName,\n                namespace = this;\n\n            if (hasOwn.call(namespace.constants, name)) {\n                return namespace.constants[name];\n            }\n\n            lowercaseName = name.toLowerCase();\n\n            if (\n                hasOwn.call(namespace.constants, lowercaseName) &&\n                namespace.constants[lowercaseName].caseInsensitive\n            ) {\n                return namespace.constants[lowercaseName];\n            }\n\n            globalNamespace = namespace.getGlobal();\n\n            if (hasOwn.call(globalNamespace.constants, name)) {\n                return globalNamespace.constants[name];\n            }\n\n            if (\n                hasOwn.call(globalNamespace.constants, lowercaseName) &&\n                globalNamespace.constants[lowercaseName].caseInsensitive\n            ) {\n                return globalNamespace.constants[lowercaseName];\n            }\n\n            return null;\n        },\n\n        /**\n         * Determines whether or not the given class exists in this namespace (or a descendant of it)\n         * without invoking the autoloader if it does not\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasClass: function (name) {\n            var namespace = this,\n                parsed = namespace.parseName(name),\n                lowerName = parsed.name.toLowerCase();\n\n            return hasOwn.call(parsed.namespace.classes, lowerName);\n        },\n\n        /**\n         * Returns true if this namespace defines the specified constant, and false otherwise.\n         * If the constant is case-insensitive, then it will be returned for any case\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasConstant: function (name) {\n            return this.getConstantDefinition(name) !== null;\n        },\n\n        /**\n         * Returns true if this namespace defines the specified function, and false otherwise.\n         * Note that function names are case-insensitive\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasFunction: function (name) {\n            var namespace = this,\n                parsed = namespace.parseName(name),\n                lowerName = parsed.name.toLowerCase();\n\n            return hasOwn.call(parsed.namespace.functions, lowerName);\n        },\n\n        /**\n         * Parses a class, function or constant name to its namespace and name\n         *\n         * @param {string} name\n         * @returns {{namespace: (Namespace), name: string}}\n         */\n        parseName: function (name) {\n            var match = name.match(/^(\\\\?)(.*?)\\\\?([^\\\\]+)$/),\n                namespace = this,\n                path,\n                relativeToGlobalNamespace,\n                subNamespace;\n\n            if (match) {\n                // Name was fully-qualified: return the resolved namespace it was inside\n\n                relativeToGlobalNamespace = (match[1] === '\\\\');\n\n                path = match[2];\n                name = match[3];\n\n                subNamespace = relativeToGlobalNamespace ? namespace.getGlobalNamespace() : namespace;\n\n                if (path !== '') {\n                    subNamespace = subNamespace.getDescendant(path);\n                }\n\n                return {\n                    namespace: subNamespace,\n                    name: name\n                };\n            }\n\n            return {\n                namespace: namespace,\n                name: name\n            };\n        },\n\n        resolveClass: function (name) {\n            return name;\n        }\n    });\n\n    return Namespace;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Reference/StaticProperty'),\n    require('./Reference/UndeclaredStaticProperty')\n], function (\n    _,\n    phpCommon,\n    StaticPropertyReference,\n    UndeclaredStaticPropertyReference\n) {\n    var IS_STATIC = 'isStatic',\n        MAGIC_CALL = '__call',\n        MAGIC_CALL_STATIC = '__callStatic',\n\n        CANNOT_ACCESS_PROPERTY = 'core.cannot_access_property',\n        UNDEFINED_CLASS_CONSTANT = 'core.undefined_class_constant',\n        UNDEFINED_METHOD = 'core.undefined_method',\n\n        VALUE = 'value',\n        VISIBILITY = 'visibility',\n        hasOwn = {}.hasOwnProperty,\n        PHPError = phpCommon.PHPError,\n        getMethod = function (object, methodName) {\n            var result = null;\n\n            _.forOwn(object, function (value, propertyName) {\n                if (\n                    propertyName.toLowerCase() === methodName.toLowerCase() &&\n                    _.isFunction(value)\n                ) {\n                    result = value;\n                    return false;\n                }\n            });\n\n            return result;\n        };\n\n    /**\n     * Represents a class exposed to PHP-land\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {FunctionFactory} functionFactory\n     * @param {CallStack} callStack\n     * @param {string} name Fully-qualified class name (FQCN)\n     * @param {string} constructorName\n     * @param {Function} InternalClass\n     * @param {Object} rootInternalPrototype\n     * @param {Object} staticPropertiesData\n     * @param {Object.<string, Function>} constants Map of constant names to value factory functions\n     * @param {Class|null} superClass Parent class, if any\n     * @param {string[]} interfaceNames FQCNs (FQINs) of interfaces implemented by this class\n     * @param {NamespaceScope} namespaceScope\n     * @param {ExportRepository} exportRepository\n     * @param {ValueCoercer} valueCoercer Value coercer configured specifically for this class\n     * @param {FFIFactory} ffiFactory\n     * @constructor\n     */\n    function Class(\n        valueFactory,\n        functionFactory,\n        callStack,\n        name,\n        constructorName,\n        InternalClass,\n        rootInternalPrototype,\n        staticPropertiesData,\n        constants,\n        superClass,\n        interfaceNames,\n        namespaceScope,\n        exportRepository,\n        valueCoercer,\n        ffiFactory\n    ) {\n        var classObject = this,\n            staticProperties = {};\n\n        this.callStack = callStack;\n        this.constants = constants;\n        this.constructorName = constructorName;\n        this.exportRepository = exportRepository;\n        /**\n         * @type {FFIFactory}\n         */\n        this.ffiFactory = ffiFactory;\n        this.functionFactory = functionFactory;\n        this.interfaceNames = interfaceNames || [];\n        this.InternalClass = InternalClass;\n        this.name = name;\n        this.namespaceScope = namespaceScope;\n        // The prototype object that we should stop at when walking up the chain\n        this.rootInternalPrototype = rootInternalPrototype;\n        this.staticProperties = staticProperties;\n        this.superClass = superClass || null;\n        /**\n         * @type {ValueCoercer}\n         */\n        this.valueCoercer = valueCoercer;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n\n        _.each(staticPropertiesData, function (data, name) {\n            // Pass the class object to the property initialiser (if any),\n            // so that it may refer to other properties/constants of this class with self::*\n            staticProperties[name] = new StaticPropertyReference(\n                valueFactory,\n                callStack,\n                classObject,\n                name,\n                data[VISIBILITY],\n                data[VALUE](classObject)\n            );\n        });\n    }\n\n    _.extend(Class.prototype, {\n        /**\n         * Calls an instance or static method. If `objectValue` is passed, the call\n         * will be in an object context, otherwise it will be in a static context.\n         *\n         * Omit both `objectValue` and `currentNativeObject` for a static call.\n         *\n         * @param {string} methodName The name of the method to call\n         * @param {Value[]} args The wrapped value objects to pass as arguments to the method\n         * @param {ObjectValue|null} objectValue The wrapped ObjectValue for this instance\n         * @param {object|null} currentNativeObject The current native JS object on the prototype chain to search for the method\n         * @param {Class|null} currentClass The original called class (this function is called recursively for inherited methods)\n         * @param {bool} isForwardingStaticCall eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value} Returns the result of the method if it is defined\n         * @throws {PHPFatalError} Throws when the method is not defined\n         */\n        callMethod: function (methodName, args, objectValue, currentNativeObject, currentClass, isForwardingStaticCall) {\n            var classObject = this,\n                nativeObject = objectValue ? objectValue.getObject() : null,\n                result,\n                thisObject = classObject.callStack.getThisObject();\n\n            function callMethod(currentObject, methodName, args) {\n                var method = getMethod(currentObject, methodName);\n\n                if (method !== null) {\n                    if (!objectValue && !method[IS_STATIC]) {\n                        objectValue = thisObject;\n\n                        if (!objectValue) {\n                            // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                            classObject.callStack.raiseError(\n                                PHPError.E_STRICT,\n                                'Non-static method ' + method.data.classObject.name +\n                                '::' + methodName + '() should not be called statically'\n                            );\n                        } else if (!objectValue.classIs(classObject.getName())) {\n                            // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                            classObject.callStack.raiseError(\n                                PHPError.E_STRICT,\n                                'Non-static method ' + method.data.classObject.name +\n                                '::' + methodName + '() should not be called statically, ' +\n                                'assuming $this from incompatible context'\n                            );\n                        }\n                    }\n\n                    // For a non-forwarding static call, pass the new static class through.\n                    // (For a forwarding static call, we will pass `null` through as the \"new static class\"\n                    // inside FunctionFactory, because we just want to use the one the caller has.)\n                    if (!isForwardingStaticCall) {\n                        classObject.functionFactory.setNewStaticClassIfWrapped(method, currentClass);\n                    }\n\n                    return classObject.valueFactory.coerce(\n                        method.apply(\n                            // Some methods should never have their `this` object and args auto-coerced,\n                            // eg the magic `__construct` method as it is proxied in Namespace.js\n                            classObject.valueCoercer.isAutoCoercionEnabled() && !method.neverCoerce ?\n                                objectValue.getObject() :\n                                objectValue,\n                            method.neverCoerce ? args : classObject.valueCoercer.coerceArguments(args)\n                        )\n                    );\n                }\n\n                if (\n                    currentObject === classObject.rootInternalPrototype &&\n                    classObject.superClass\n                ) {\n                    return classObject.superClass.callMethod(\n                        methodName,\n                        args,\n                        objectValue,\n                        Object.getPrototypeOf(currentObject),\n                        currentClass,\n                        isForwardingStaticCall\n                    );\n                }\n\n                currentObject = Object.getPrototypeOf(currentObject);\n\n                if (!currentObject) {\n                    return null;\n                }\n\n                return callMethod(currentObject, methodName, args);\n            }\n\n            isForwardingStaticCall = !!isForwardingStaticCall;\n\n            if (!currentNativeObject) {\n                // Walk up the prototype chain from the native object\n                currentNativeObject = nativeObject;\n            }\n\n            if (!currentClass) {\n                currentClass = classObject;\n            }\n\n            if (nativeObject instanceof classObject.InternalClass) {\n                // Ignore own properties of the native object when searching for methods\n                if (currentNativeObject === nativeObject) {\n                    currentNativeObject = Object.getPrototypeOf(currentNativeObject);\n                }\n            } else {\n                // For some special classes (eg. JSObject, Closure) the native object may not actually\n                // be an instance of the InternalClass, so fake inheritance of the native class\n                currentNativeObject = classObject.InternalClass.prototype;\n            }\n\n            result = callMethod(currentNativeObject, methodName, args);\n\n            if (result !== null) {\n                return result;\n            }\n\n            // Method was not found on object or its prototype chain: try the magic method(s)\n\n            if (!objectValue && thisObject) {\n                // Magic __call(...) should override __callStatic(...)\n                // when both present for static call in object context\n                result = callMethod(thisObject.getObject(), MAGIC_CALL, [\n                    classObject.valueFactory.createString(methodName),\n                    classObject.valueFactory.createArray(args)\n                ]);\n\n                if (result !== null) {\n                    return result;\n                }\n            }\n\n            result = callMethod(\n                currentNativeObject,\n                objectValue ? MAGIC_CALL : MAGIC_CALL_STATIC,\n                [\n                    classObject.valueFactory.createString(methodName),\n                    classObject.valueFactory.createArray(args)\n                ]\n            );\n\n            if (result !== null) {\n                return result;\n            }\n\n            // Method was not found and no magic __call method is defined\n            classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_METHOD, {\n                className: classObject.name,\n                methodName: methodName\n            });\n        },\n\n        /**\n         * Calls the userland constructor for the provided object\n         *\n         * @param {ObjectValue} objectValue\n         * @param {Value[]} args\n         */\n        construct: function (objectValue, args) {\n            var classObject = this;\n\n            if (!classObject.constructorName) {\n                // Class does not define a constructor: call the superclass' constructor\n                // if it has one, otherwise do nothing\n                if (classObject.superClass) {\n                    classObject.superClass.construct(objectValue, args);\n                }\n\n                return;\n            }\n\n            // Call the constructor for the current class and not via the object value,\n            // as the method may have been overridden by descendant classes\n            classObject.callMethod(classObject.constructorName, args, objectValue);\n        },\n\n        /**\n         * Exports instances of this class with a defined unwrapper if one has been set,\n         * otherwise wraps them in a native JS class that extends the PHP class' internal class\n         *\n         * @param {ObjectValue} objectValue\n         * @returns {Object}\n         */\n        exportInstanceForJS: function (objectValue) {\n            return this.exportRepository.export(objectValue);\n        },\n\n        /**\n         * Determines whether this class extends the given other class\n         *\n         * @param {Class} superClass\n         * @returns {boolean}\n         */\n        extends: function (superClass) {\n            var classObject = this;\n\n            return classObject.superClass && (classObject.superClass.name === superClass.name || classObject.superClass.extends(superClass));\n        },\n\n        /**\n         * Fetches the value of a constant of this class. Constants may be defined by the current class,\n         * an ancestor or by an interface implemented by this class or an ancestor\n         *\n         * @param {string} name\n         * @returns {Value}\n         */\n        getConstantByName: function (name) {\n            var classObject = this,\n                i,\n                interfaceObject;\n\n            if (name.toLowerCase() === 'class') {\n                // The special MyClass::class constant that fetches the FQCN of the class as a string\n                return classObject.valueFactory.createString(classObject.getName());\n            }\n\n            if (hasOwn.call(classObject.constants, name)) {\n                return classObject.constants[name]();\n            }\n\n            for (i = 0; i < classObject.interfaceNames.length; i++) {\n                interfaceObject = classObject.namespaceScope.getClass(classObject.interfaceNames[i]);\n\n                try {\n                    return interfaceObject.getConstantByName(name);\n                } catch (e) {\n                    // Not found, try the next interface\n                }\n            }\n\n            if (classObject.superClass) {\n                return classObject.superClass.getConstantByName(name);\n            }\n\n            classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_CLASS_CONSTANT, {\n                name: name\n            });\n        },\n\n        getInternalClass: function () {\n            return this.InternalClass;\n        },\n\n        /**\n         * Fetches the spec for an instance or static method\n         *\n         * @param {string} methodName The name of the method to fetch the spec for\n         * @param {ObjectValue=null} objectValue The wrapped ObjectValue for this instance\n         * @param {object=null} currentNativeObject The current native JS object on the prototype chain to search for the method\n         * @param {Class=null} originalClass The original class (this function is called recursively for inherited methods)\n         * @returns {MethodSpec|null} Returns the spec of the method if it exists, or null if it does not\n         */\n        getMethodSpec: function (methodName, objectValue, currentNativeObject, originalClass) {\n            var classObject = this,\n                nativeObject = objectValue ? objectValue.getObject() : null;\n\n            function getMethodSpec(currentObject, methodName) {\n                var method = getMethod(currentObject, methodName);\n\n                if (method !== null) {\n                    return classObject.functionFactory.createMethodSpec(originalClass, classObject, methodName, method);\n                }\n\n                if (\n                    currentObject === classObject.rootInternalPrototype &&\n                    classObject.superClass\n                ) {\n                    return classObject.superClass.getMethodSpec(\n                        methodName,\n                        objectValue,\n                        Object.getPrototypeOf(currentObject),\n                        originalClass\n                    );\n                }\n\n                currentObject = Object.getPrototypeOf(currentObject);\n\n                if (!currentObject) {\n                    return null;\n                }\n\n                return getMethodSpec(currentObject, methodName);\n            }\n\n            if (!currentNativeObject) {\n                // Walk up the prototype chain from the native object\n                currentNativeObject = nativeObject;\n            }\n\n            if (!originalClass) {\n                originalClass = classObject;\n            }\n\n            if (nativeObject instanceof classObject.InternalClass) {\n                // Ignore own properties of the native object when searching for methods\n                if (currentNativeObject === nativeObject) {\n                    currentNativeObject = Object.getPrototypeOf(currentNativeObject);\n                }\n            } else {\n                // For some special classes (eg. JSObject, Closure) the native object may not actually\n                // be an instance of the InternalClass, so fake inheritance of the native class\n                currentNativeObject = classObject.InternalClass.prototype;\n            }\n\n            return getMethodSpec(currentNativeObject, methodName);\n        },\n\n        /**\n         * Fetches the FQCN (Fully-Qualified Class Name) of this class.\n         * If the namespace prefix is not wanted, see .getUnprefixedName()\n         *\n         * @returns {string}\n         */\n        getName: function () {\n            return this.name;\n        },\n\n        /**\n         * Fetches the name of this class with any namespace prefix removed,\n         * eg.:\n         *     class with FQCN: My\\Stuff\\AwesomeClass\n         *     unprefixed name: AwesomeClass\n         *\n         * @returns {string}\n         */\n        getUnprefixedName: function () {\n            return this.name.replace(/^.*\\\\/, '');\n        },\n\n        /**\n         * Fetches a reference to a static property of this class by its name\n         *\n         * @param {string} name\n         * @param {Class=} calledClass\n         * @returns {StaticPropertyReference|UndeclaredStaticPropertyReference}\n         */\n        getStaticPropertyByName: function (name, calledClass) {\n            var callingClass,\n                classObject = this,\n                staticProperty;\n\n            // The class that the static property was originally dereferenced for:\n            // if we've walked up the class hierarchy to find its definition,\n            // this will refer to the class that was actually specified to the left of the `::`\n            calledClass = calledClass || classObject;\n\n            if (!hasOwn.call(classObject.staticProperties, name)) {\n                if (classObject.superClass) {\n                    // Inherit static properties from the parent class, if we extend one\n                    return classObject.superClass.getStaticPropertyByName(name, calledClass);\n                }\n\n                // Undeclared static properties cannot be accessed _except_ by isset(...) or empty(...),\n                // which return the relevant boolean result (`false` and `true` respectively)\n                return new UndeclaredStaticPropertyReference(\n                    classObject.valueFactory,\n                    classObject.callStack,\n                    classObject,\n                    name\n                );\n            }\n\n            staticProperty = classObject.staticProperties[name];\n\n            // Property is private; may only be read from methods of this class and not derivatives\n            if (staticProperty.getVisibility() === 'private') {\n                callingClass = classObject.callStack.getCurrentClass();\n\n                if (!callingClass || callingClass.name !== classObject.name) {\n                    classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                        className: calledClass.getName(),\n                        propertyName: name,\n                        visibility: 'private'\n                    });\n                }\n            // Property is protected; may be read from methods of this class and methods of derivatives\n            } else if (staticProperty.getVisibility() === 'protected') {\n                callingClass = classObject.callStack.getCurrentClass();\n\n                if (\n                    !callingClass ||\n                    (\n                        classObject.getName() !== callingClass.getName() &&\n                        !callingClass.isInFamilyOf(classObject)\n                    )\n                ) {\n                    classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                        className: classObject.name,\n                        propertyName: name,\n                        visibility: 'protected'\n                    });\n                }\n            }\n\n            return staticProperty;\n        },\n\n        /**\n         * Fetches the parent class of this one, or null if it has no parent\n         *\n         * @returns {Class|null}\n         */\n        getSuperClass: function () {\n            return this.superClass;\n        },\n\n        hasStaticPropertyByName: function (name) {\n            return hasOwn.call(this.staticProperties, name);\n        },\n\n        /**\n         * Fetches all interfaces directly implemented by this class\n         *\n         * @returns {Class[]}\n         */\n        getInterfaces: function () {\n            var classObject = this;\n\n            return classObject.interfaceNames.map(function (interfaceName) {\n                return classObject.namespaceScope.getClass(interfaceName);\n            });\n        },\n\n        /**\n         * Returns either the given ObjectValue or its inner native object, based on the class' auto-coercion mode\n         *\n         * @param {ObjectValue} instance\n         * @returns {ObjectValue|Object}\n         */\n        getThisObjectForInstance: function (instance) {\n            return this.valueCoercer.isAutoCoercionEnabled() ? instance.getObject() : instance;\n        },\n\n        /**\n         * Creates a new instance of this class\n         *\n         * @param {Value[]=} args\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args) {\n            var classObject = this,\n                objectValue;\n\n            if (!args) {\n                args = [];\n            }\n\n            objectValue = classObject.instantiateBare(args);\n\n            // Call the userland constructor\n            classObject.construct(objectValue, args);\n\n            return objectValue;\n        },\n\n        /**\n         * Creates a new instance of this class without calling any userland constructor\n         * (note that for JS classes the class-constructor-function will still be called)\n         *\n         * @param {Value[]=} args\n         * @returns {ObjectValue}\n         */\n        instantiateBare: function (args) {\n            var classObject = this,\n                nativeObject = Object.create(classObject.InternalClass.prototype),\n                objectValue = classObject.valueFactory.createObject(nativeObject, classObject);\n\n            if (!args) {\n                args = [];\n            }\n\n            classObject.InternalClass.apply(\n                // Always use the wrapped object value as `this` regardless of coercion status,\n                // so that non-native properties/methods may be accessed\n                objectValue,\n                classObject.valueCoercer.coerceArguments(args)\n            );\n\n            return objectValue;\n        },\n\n        /**\n         * Creates a new instance of this class and also sets the given internal properties (shorthand)\n         *\n         * @param {Value[]} args\n         * @param {Object.<string, *>} internals\n         * @return {ObjectValue}\n         */\n        instantiateWithInternals: function (args, internals) {\n            var classObject = this,\n                objectValue = classObject.instantiate(args);\n\n            _.forOwn(internals, function (value, name) {\n                objectValue.setInternalProperty(name, value);\n            });\n\n            return objectValue;\n        },\n\n        /**\n         * Determines whether:\n         * - This class' FQCN is the same as the one given, or\n         * - This class implements an interface with the name given, or\n         * - This class has an ancestor with the name given\n         *\n         * @param {Class} className\n         * @returns {boolean}\n         */\n        is: function (className) {\n            var classObject = this,\n                interfaceMatches = false;\n\n            // Case-insensitively compare the fully-qualified class paths\n            if (classObject.name.toLowerCase() === className.toLowerCase()) {\n                return true;\n            }\n\n            // Iterate over all the interfaces implemented by this class: if any of them\n            // are the requested class or extend from it, return true\n            _.each(classObject.interfaceNames, function (interfaceName) {\n                var interfaceObject = classObject.namespaceScope.getClass(interfaceName);\n\n                if (interfaceObject.is(className)) {\n                    interfaceMatches = true;\n                    return false;\n                }\n            });\n\n            if (interfaceMatches) {\n                return true;\n            }\n\n            if (classObject.superClass) {\n                return classObject.superClass.is(className);\n            }\n\n            return false;\n        },\n\n        /**\n         * Determines whether this class is identical to or is an ancestor or descendant\n         * of the specified other class\n         *\n         * @param {Class} otherClass\n         * @returns {boolean}\n         */\n        isInFamilyOf: function (otherClass) {\n            var classObject = this;\n\n            return classObject === otherClass ||\n                classObject.extends(otherClass) ||\n                otherClass.extends(classObject);\n        },\n\n        /**\n         * Returns true if auto-coercion is enabled, and false otherwise.\n         * Constructor and method arguments will be unwrapped to native JS values when enabled\n         *\n         * @returns {boolean}\n         */\n        isAutoCoercionEnabled: function () {\n            return this.valueCoercer.isAutoCoercionEnabled();\n        },\n\n        /**\n         * Wraps instances of this class in instances of the proxying PHPObject class\n         *\n         * @param {ObjectValue} instance\n         * @returns {PHPObject}\n         */\n        proxyInstanceForJS: function (instance) {\n            var classObject = this;\n\n            // Return a wrapper object that presents a promise-based API\n            // for calling methods of PHP objects in sync or async mode\n            return classObject.ffiFactory.createPHPObject(instance);\n        },\n\n        /**\n         * Unwraps arguments for a method based on the coercion & prefer-sync modes for the class\n         *\n         * @param {Value[]} argumentValues\n         * @returns {Value[]|*[]}\n         */\n        unwrapArguments: function (argumentValues) {\n            return this.valueCoercer.coerceArguments(argumentValues);\n        }\n    });\n\n    return Class;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n    ReferenceSlot = require('./ReferenceSlot'),\n\n    CANNOT_UNSET_STATIC_PROPERTY = 'core.cannot_unset_static_property';\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {Class} classObject\n * @param {string} name\n * @param {string} visibility \"private\", \"protected\" or \"public\"\n * @param {Value} value\n * @constructor\n */\nfunction StaticPropertyReference(\n    valueFactory,\n    callStack,\n    classObject,\n    name,\n    visibility,\n    value\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * @type {Reference|null}\n     */\n    this.reference = null;\n    /**\n     * @type {Value}\n     */\n    this.value = value;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {string}\n     */\n    this.visibility = visibility;\n}\n\nutil.inherits(StaticPropertyReference, Reference);\n\n_.extend(StaticPropertyReference.prototype, {\n    getName: function () {\n        return this.name;\n    },\n\n    /**\n     * Fetches a reference to this property's value\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        var property = this;\n\n        if (property.reference) {\n            // This property already refers to something else, so return its target\n            return property.reference;\n        }\n\n        // Implicitly define a \"slot\" to contain this property's value\n        property.reference = new ReferenceSlot(property.valueFactory);\n\n        if (property.value) {\n            property.reference.setValue(property.value);\n            property.value = null; // This property now has a reference (to the slot) and not a value\n        }\n\n        return property.reference;\n    },\n\n    getValue: function () {\n        var property = this;\n\n        return property.value ? property.value : property.reference.getValue();\n    },\n\n    getVisibility: function () {\n        return this.visibility;\n    },\n\n    /**\n     * Determines whether this property is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return true;\n    },\n\n    /**\n     * Determines whether this class property is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return this.getValue().isEmpty();\n    },\n\n    isReference: function () {\n        return !!this.reference;\n    },\n\n    /**\n     * Determines whether this class property is \"set\" (assigned a non-NULL value) or not\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        return this.getValue().isSet();\n    },\n\n    setReference: function (reference) {\n        var property = this;\n\n        property.reference = reference;\n        property.value = null;\n    },\n\n    setValue: function (value) {\n        var property = this;\n\n        if (property.reference) {\n            property.reference.setValue(value);\n        } else {\n            property.value = value.getForAssignment();\n        }\n    },\n\n    /**\n     * Static properties cannot be unset, so this always raises an error\n     *\n     * @throws {PHPFatalError}\n     */\n    unset: function () {\n        var property = this;\n\n        property.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_UNSET_STATIC_PROPERTY, {\n            className: property.classObject.getName(),\n            propertyName: property.name\n        });\n    }\n});\n\nmodule.exports = StaticPropertyReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n\n    UNDECLARED_STATIC_PROPERTY = 'core.undeclared_static_property',\n\n    throwUndeclaredStaticPropertyAccessFatalError = function (reference) {\n        reference.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDECLARED_STATIC_PROPERTY, {\n            className: reference.classObject.name,\n            propertyName: reference.name\n        });\n    };\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {Class} classObject\n * @param {string} name Name of the static property\n * @constructor\n */\nfunction UndeclaredStaticPropertyReference(valueFactory, callStack, classObject, name) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(UndeclaredStaticPropertyReference, Reference);\n\n_.extend(UndeclaredStaticPropertyReference.prototype, {\n    /**\n     * Undeclared properties cannot be accessed, only checked for empty or set state\n     *\n     * @throws (PHPFatalError}\n     */\n    getReference: function () {\n        throwUndeclaredStaticPropertyAccessFatalError(this);\n    },\n\n    /**\n     * Undeclared properties cannot be accessed, only checked for empty or set state\n     *\n     * @throws (PHPFatalError}\n     */\n    getValue: function () {\n        throwUndeclaredStaticPropertyAccessFatalError(this);\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return false;\n    },\n\n    /**\n     * Undeclared properties are classed as empty\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return true;\n    },\n\n    /**\n     * Undeclared properties are classed as unset\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        return false;\n    },\n\n    /**\n     * Undeclared properties cannot be accessed, only checked for empty or set state\n     *\n     * @throws (PHPFatalError}\n     */\n    setValue: function () {\n        throwUndeclaredStaticPropertyAccessFatalError(this);\n    }\n});\n\nmodule.exports = UndeclaredStaticPropertyReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates objects related to Namespaces\n *\n * @param {class} Namespace\n * @param {CallStack} callStack\n * @param {FunctionFactory} functionFactory\n * @param {FunctionSpecFactory} functionSpecFactory\n * @param {ValueFactory} valueFactory\n * @param {ClassAutoloader} classAutoloader\n * @param {ExportRepository} exportRepository\n * @param {FFIFactory} ffiFactory\n * @constructor\n */\nfunction NamespaceFactory(\n    Namespace,\n    callStack,\n    functionFactory,\n    functionSpecFactory,\n    valueFactory,\n    classAutoloader,\n    exportRepository,\n    ffiFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {ClassAutoloader}\n     */\n    this.classAutoloader = classAutoloader;\n    /**\n     * @type {ExportRepository}\n     */\n    this.exportRepository = exportRepository;\n    /**\n     * @type {FFIFactory}\n     */\n    this.ffiFactory = ffiFactory;\n    /**\n     * @type {FunctionFactory}\n     */\n    this.functionFactory = functionFactory;\n    /**\n     * @type {FunctionSpecFactory}\n     */\n    this.functionSpecFactory = functionSpecFactory;\n    /**\n     * @type {class}\n     */\n    this.Namespace = Namespace;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(NamespaceFactory.prototype, {\n    create: function (parentNamespace, name) {\n        var factory = this;\n\n        return new factory.Namespace(\n            factory.callStack,\n            factory.valueFactory,\n            factory,\n            factory.functionFactory,\n            factory.functionSpecFactory,\n            factory.classAutoloader,\n            factory.exportRepository,\n            factory.ffiFactory,\n            parentNamespace || null,\n            name || ''\n        );\n    }\n});\n\nmodule.exports = NamespaceFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    var hasOwn = {}.hasOwnProperty,\n        NAMESPACE = 'namespace',\n\n        CANNOT_USE_AS_NAME_ALREADY_IN_USE = 'core.cannot_use_as_name_already_in_use';\n\n    /**\n     * Represents a block within a PHP module that is inside a namespace statement,\n     * containing classes imported with `use` statements etc.\n     *\n     * @param {Namespace} globalNamespace\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {Module} module\n     * @param {Namespace} namespace\n     * @param {boolean} global Whether this namespace scope is the special \"invisible\" global one\n     * @constructor\n     */\n    function NamespaceScope(globalNamespace, valueFactory, callStack, module, namespace, global) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Namespace}\n         */\n        this.globalNamespace = globalNamespace;\n        /**\n         * Imports from `use` statements\n         *\n         * @type {object}\n         */\n        this.imports = {};\n        /**\n         * @type {boolean}\n         */\n        this.global = global;\n        /**\n         * @type {Module}\n         */\n        this.module = module;\n        /**\n         * @type {Namespace}\n         */\n        this.namespace = namespace;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(NamespaceScope.prototype, {\n        getClass: function (name) {\n            var resolvedClass = this.resolveClass(name);\n\n            return resolvedClass.namespace.getClass(resolvedClass.name);\n        },\n\n        getConstant: function (name) {\n            var match,\n                scope = this,\n                namespace = scope.namespace,\n                path,\n                prefix,\n                usesNamespace = false;\n\n            // Check whether the constant path is absolute, so no 'use's apply\n            if (name.charAt(0) === '\\\\') {\n                usesNamespace = true;\n                match = name.match(/^\\\\(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    path = match[1];\n                    name = match[2];\n                    namespace = scope.globalNamespace.getDescendant(path);\n                } else {\n                    name = name.substr(1);\n                }\n                // Check whether the namespace prefix is an alias\n            } else {\n                match = name.match(/^([^\\\\]+)(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    usesNamespace = true;\n                    prefix = match[1];\n                    path = match[2];\n                    name = match[3];\n\n                    if (hasOwn.call(scope.imports, prefix.toLowerCase())) {\n                        namespace = scope.globalNamespace.getDescendant(scope.imports[prefix.toLowerCase()].substr(1) + path);\n                    } else {\n                        // Not an alias: look up the namespace path relative to this namespace\n                        // (ie. 'namespace Test { echo Our\\CONSTANT; }' -> 'echo \\Test\\Our\\CONSTANT;')\n                        namespace = scope.globalNamespace.getDescendant(namespace.getPrefix() + prefix + path);\n                    }\n                }\n            }\n\n            return namespace.getConstant(name, usesNamespace);\n        },\n\n        /**\n         * Fetches the path to the file this scope's parent module originates from\n         *\n         * @returns {string|null}\n         */\n        getFilePath: function () {\n            return this.module.getFilePath();\n        },\n\n        getFunction: function (name) {\n            var match,\n                scope = this,\n                namespace = scope.namespace,\n                path,\n                prefix;\n\n            // Check whether the function path is absolute, so no 'use's apply\n            if (name.charAt(0) === '\\\\') {\n                match = name.match(/^\\\\(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    path = match[1];\n                    name = match[2];\n                    namespace = scope.globalNamespace.getDescendant(path);\n                } else {\n                    name = name.substr(1);\n                    namespace = scope.globalNamespace;\n                }\n                // Check whether the namespace prefix is an alias\n            } else {\n                match = name.match(/^([^\\\\]+)(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    prefix = match[1];\n                    path = match[2];\n                    name = match[3];\n\n                    if (hasOwn.call(scope.imports, prefix.toLowerCase())) {\n                        namespace = scope.globalNamespace.getDescendant(scope.imports[prefix.toLowerCase()].substr(1) + path);\n                    } else {\n                        // Not an alias: look up the namespace path relative to this namespace\n                        // (ie. 'namespace Test { Our\\Func(); }' -> '\\Test\\Our\\Func();')\n                        namespace = scope.globalNamespace.getDescendant(namespace.getPrefix() + prefix + path);\n                    }\n                }\n            }\n\n            return namespace.getFunction(name);\n        },\n\n        getGlobalNamespace: function () {\n            return this.globalNamespace;\n        },\n\n        getNamespaceName: function () {\n            var scope = this;\n\n            return scope.valueFactory.createString(scope.namespace.getName());\n        },\n\n        /**\n         * Fetches the backslash-delimited prefix string for this scope's namespace\n         *\n         * @returns {string}\n         */\n        getNamespacePrefix: function () {\n            return this.namespace.getPrefix();\n        },\n\n        /**\n         * Determines whether the specified class is defined for this namespace scope,\n         * taking any imports/aliases via `use` into account\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasClass: function (name) {\n            var scope = this,\n                resolvedClass = scope.resolveClass(name);\n\n            // Check whether the entire class name is aliased\n            if (hasOwn.call(scope.imports, name.toLowerCase())) {\n                return true;\n            }\n\n            return resolvedClass.namespace.hasClass(resolvedClass.name);\n        },\n\n        /**\n         * Determines whether this namespace scope is the special \"invisible\" global one\n         *\n         * @returns {boolean}\n         */\n        isGlobal: function () {\n            return this.global;\n        },\n\n        /**\n         * Resolves a potentially relatively- or fully-qualified class path\n         * to the Namespace instance it should be defined by and its name\n         *\n         * @param {string} name\n         * @returns {{namespace: Namespace, name: string}}\n         */\n        resolveClass: function (name) {\n            var loweredPrefix,\n                match,\n                scope = this,\n                namespace = scope.namespace,\n                path,\n                prefix;\n\n            // Check whether the entire class name is aliased\n            if (hasOwn.call(scope.imports, name.toLowerCase())) {\n                name = scope.imports[name.toLowerCase()];\n                namespace = scope.globalNamespace;\n            }\n\n            // Check whether the class path is absolute, so no 'use's apply\n            if (name.charAt(0) === '\\\\') {\n                match = name.match(/^\\\\(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    path = match[1];\n                    name = match[2];\n                    namespace = scope.globalNamespace.getDescendant(path);\n                } else {\n                    // A class in the global namespace with explicit absolute path, eg. `\\MyClass`\n                    name = name.substr(1);\n                    namespace = scope.globalNamespace;\n                }\n            // Check whether the namespace prefix is an alias\n            } else {\n                match = name.match(/^([^\\\\]+)(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    prefix = match[1];\n                    path = match[2];\n                    name = match[3];\n                    loweredPrefix = prefix.toLowerCase();\n\n                    if (loweredPrefix === NAMESPACE) {\n                        // Reference uses the special \"namespace\" keyword as a prefix:\n                        // resolve relative to the current namespace\n                        namespace = namespace.getDescendant(path.replace(/^\\\\/, ''));\n                    } else if (hasOwn.call(scope.imports, loweredPrefix)) {\n                        namespace = scope.globalNamespace.getDescendant(scope.imports[loweredPrefix].substr(1) + path);\n                    } else {\n                        // Not an alias: look up the namespace path relative to this namespace\n                        // (ie. 'namespace Test { Our\\Func(); }' -> '\\Test\\Our\\Func();')\n                        namespace = namespace.getDescendant(prefix + path);\n                    }\n                }\n            }\n\n            return {namespace: namespace, name: name};\n        },\n\n        /**\n         * Imports a class into the current namespace scope, eg. from a PHP `use ...` statement\n         *\n         * @param {string} source\n         * @param {string} alias\n         */\n        use: function (source, alias) {\n            var scope = this,\n                normalizedSource = source;\n\n            if (!alias) {\n                alias = source.replace(/^.*?([^\\\\]+)$/, '$1');\n            }\n\n            if (normalizedSource.charAt(0) !== '\\\\') {\n                normalizedSource = '\\\\' + normalizedSource;\n            }\n\n            if (scope.hasClass(alias.toLowerCase())) {\n                scope.callStack.raiseUncatchableFatalError(CANNOT_USE_AS_NAME_ALREADY_IN_USE, {\n                    alias: alias,\n                    source: source\n                });\n            }\n\n            scope.imports[alias.toLowerCase()] = normalizedSource;\n        }\n    });\n\n    return NamespaceScope;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * Handles include_once(...) and require_once(...)\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {Includer} includer\n     * @constructor\n     */\n    function OnceIncluder(valueFactory, includer)\n    {\n        /**\n         * @type {Includer}\n         */\n        this.includer = includer;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(OnceIncluder.prototype, {\n        /**\n         * Includes the specified module, returning its return value.\n         * Throws if no include transport has been configured.\n         * Returns boolean true if the module has already been included.\n         *\n         * @param {string} type \"include_once\" or \"require_once\"\n         * @param {string} errorLevel One of the PHPError.E_* constants\n         * @param {Environment} environment\n         * @param {Module} module PHP Module that the include occurred inside\n         * @param {NamespaceScope} topLevelNamespaceScope\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @param {Object} options\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        includeOnce: function (\n            type,\n            errorLevel,\n            environment,\n            module,\n            topLevelNamespaceScope,\n            includedPath,\n            enclosingScope,\n            options\n        ) {\n            var includer = this;\n\n            // Note that this lookup is updated in .include(...)\n            if (includer.includer.hasModuleBeenIncluded(includedPath)) {\n                // Module has already been included, so just return bool(true) to PHP-land\n                return includer.valueFactory.createBoolean(true);\n            }\n\n            return includer.includer.include(\n                type,\n                errorLevel,\n                environment,\n                module,\n                topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                options\n            );\n        }\n    });\n\n    return OnceIncluder;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty;\n\n/**\n * Represents a set of options for a running PHP application\n *\n * @param {object} options\n * @constructor\n */\nfunction OptionSet(options) {\n    /**\n     * @type {Object}\n     */\n    this.options = options;\n}\n\n_.extend(OptionSet.prototype, {\n    /**\n     * Fetches the value of a single option by its name\n     *\n     * @param {string} name\n     * @returns {*}\n     */\n    getOption: function (name) {\n        var optionSet = this;\n\n        return hasOwn.call(optionSet.options, name) ? optionSet.options[name] : null;\n    },\n\n    /**\n     * Fetches all defined options\n     *\n     * @returns {Object}\n     */\n    getOptions: function () {\n        return this.options;\n    }\n});\n\nmodule.exports = OptionSet;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    NoActiveOutputBufferException = require('../Exception/NoActiveOutputBufferException');\n\n/**\n * @param {OutputFactory} factory\n * @param {StdoutBuffer} stdoutBuffer\n * @constructor\n */\nfunction Output(factory, stdoutBuffer) {\n    /**\n     * @type {OutputBufferInterface}\n     */\n    this.currentOutputBuffer = stdoutBuffer;\n    /**\n     * @type {OutputFactory}\n     */\n    this.factory = factory;\n    /**\n     * @type {OutputBufferInterface[]}\n     */\n    this.outputBufferStack = [];\n}\n\n_.extend(Output.prototype, {\n    /**\n     * Discards the contents of the current buffer without flushing it through\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    cleanCurrentBuffer: function () {\n        return this.currentOutputBuffer.clean();\n    },\n\n    /**\n     * Writes the contents of the current buffer through to the next buffer\n     * and then discards them from this buffer\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    flushCurrentBuffer: function () {\n        return this.currentOutputBuffer.flush();\n    },\n\n    /**\n     * Fetches the current contents of the current buffer if it is actually a buffering one\n     *\n     * @returns {string|null}\n     */\n    getCurrentBufferContents: function () {\n        return this.currentOutputBuffer.getContents();\n    },\n\n    /**\n     * Fetches the number of nested buffers that are currently active\n     *\n     * @returns {number}\n     */\n    getDepth: function () {\n        return this.currentOutputBuffer.getDepth();\n    },\n\n    /**\n     * Pops the current buffer off of the stack, returning to using the previous one\n     */\n    popBuffer: function () {\n        var output = this;\n\n        if (output.outputBufferStack.length === 0) {\n            throw new NoActiveOutputBufferException();\n        }\n\n        output.currentOutputBuffer = output.outputBufferStack.pop();\n    },\n\n    /**\n     * Pushes a new output buffer onto the stack\n     *\n     * @returns {OutputBuffer}\n     */\n    pushBuffer: function () {\n        var output = this,\n            newOutputBuffer = output.factory.createOutputBuffer(output.currentOutputBuffer);\n\n        output.outputBufferStack.push(output.currentOutputBuffer);\n        output.currentOutputBuffer = newOutputBuffer;\n\n        return newOutputBuffer;\n    },\n\n    /**\n     * Writes data to the current output buffer\n     *\n     * @param {string} data\n     */\n    write: function (data) {\n        this.currentOutputBuffer.write(data);\n    }\n});\n\nmodule.exports = Output;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    OutputBufferInterface = require('./OutputBufferInterface');\n\n/**\n * @param {OutputBufferInterface} previousBuffer\n * @constructor\n */\nfunction OutputBuffer(previousBuffer) {\n    /**\n     * @type {string}\n     */\n    this.bufferedData = '';\n    /**\n     * @type {OutputBufferInterface}\n     */\n    this.previousBuffer = previousBuffer;\n}\n\nutil.inherits(OutputBuffer, OutputBufferInterface);\n\n_.extend(OutputBuffer.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    clean: function () {\n        this.bufferedData = '';\n\n        return true; // Success\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    flush: function () {\n        var buffer = this;\n\n        buffer.previousBuffer.write(buffer.bufferedData);\n        buffer.bufferedData = '';\n\n        return true; // Success\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getContents: function () {\n        return this.bufferedData;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDepth: function () {\n        return this.previousBuffer.getDepth() + 1;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    write: function (data) {\n        this.bufferedData += data;\n    }\n});\n\nmodule.exports = OutputBuffer;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} OutputBuffer\n * @constructor\n */\nfunction OutputFactory(OutputBuffer) {\n    /**\n     * @type {class}\n     */\n    this.OutputBuffer = OutputBuffer;\n}\n\n_.extend(OutputFactory.prototype, {\n    /**\n     * Creates a new OutputBuffer\n     *\n     * @param {OutputBufferInterface} previousBuffer\n     * @returns {OutputBuffer}\n     */\n    createOutputBuffer: function (previousBuffer) {\n        return new this.OutputBuffer(previousBuffer);\n    }\n});\n\nmodule.exports = OutputFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    Value = require('../Value').sync(),\n\n    INSTANCE_OF_TYPE_ACTUAL = 'core.instance_of_type_actual',\n    INVALID_VALUE_FOR_TYPE = 'core.invalid_value_for_type',\n    ONLY_VARIABLES_BY_REFERENCE = 'core.only_variables_by_reference',\n    UNKNOWN = 'core.unknown';\n\n/**\n * Represents a parameter to a PHP function\n *\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @param {string|null} name\n * @param {number} index\n * @param {TypeInterface} typeObject\n * @param {FunctionContextInterface} context\n * @param {boolean} passedByReference\n * @param {Function|null} defaultValueProvider\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction Parameter(\n    callStack,\n    translator,\n    name,\n    index,\n    typeObject,\n    context,\n    passedByReference,\n    defaultValueProvider,\n    filePath,\n    lineNumber\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {FunctionContextInterface}\n     */\n    this.context = context;\n    /**\n     * @type {Function|null}\n     */\n    this.defaultValueProvider = defaultValueProvider;\n    /**\n     * @type {string|null}\n     */\n    this.filePath = filePath;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    /**\n     * @type {number|null}\n     */\n    this.lineNumber = lineNumber;\n    /**\n     * @type {string|null}\n     */\n    this.name = name;\n    /**\n     * @type {boolean}\n     */\n    this.passedByReference = passedByReference;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {TypeInterface}\n     */\n    this.typeObject = typeObject;\n}\n\n_.extend(Parameter.prototype, {\n    /**\n     * Coerces the given argument for this parameter to a suitable value or reference,\n     * causing the correct notice to be raised if an undefined variable or reference\n     * is given where a value was expected\n     *\n     * @param {Reference|Value|Variable} argumentReference\n     * @returns {Reference|Value|Variable}\n     */\n    coerceArgument: function (argumentReference) {\n        var parameter = this;\n\n        if (parameter.passedByReference) {\n            // It is valid to pass an undefined variable/reference to a by-ref parameter\n            return argumentReference;\n        }\n\n        return argumentReference.getValue();\n    },\n\n    /**\n     * Fetches the line number this parameter was defined on, if known\n     *\n     * @returns {number|null}\n     */\n    getLineNumber: function () {\n        return this.lineNumber;\n    },\n\n    /**\n     * Determines whether this parameter must have an argument provided.\n     * Arguments are required for PHP function parameters unless that parameter defines a default value\n     *\n     * @returns {boolean}\n     */\n    isRequired: function () {\n        return this.defaultValueProvider === null;\n    },\n\n    /**\n     * Fetches the default value for this parameter if its argument is missing\n     *\n     * @param {Reference|Value|Variable|null=} argumentReference\n     * @returns {Reference|Value|Variable}\n     */\n    populateDefaultArgument: function (argumentReference) {\n        var parameter = this;\n\n        if (!argumentReference) {\n            if (parameter.isRequired()) {\n                // This should never happen - the scenario is captured within FunctionSpec\n                throw new Error('Missing argument for required parameter \"' + parameter.name + '\"');\n            }\n\n            argumentReference = parameter.defaultValueProvider();\n        }\n\n        // TODO: For PHP 7, if the caller is in weak mode then we need to coerce if the type is scalar\n\n        // Make sure we preserve any reference rather than always casting to value\n        return argumentReference;\n    },\n\n    /**\n     * Validates whether the given argument is valid for this parameter\n     *\n     * @param {Reference|Value|Variable|null=} argumentReference\n     */\n    validateArgument: function (argumentReference) {\n        var actualType,\n            argumentIsValid,\n            argumentValue,\n            callerFilePath = null,\n            callerLineNumber = null,\n            definitionFilePath,\n            definitionLineNumber,\n            expectedType,\n            parameter = this;\n\n        if (parameter.passedByReference && argumentReference instanceof Value) {\n            // Parameter expects a reference but was given a value - error\n            parameter.callStack.raiseTranslatedError(\n                PHPError.E_ERROR,\n                ONLY_VARIABLES_BY_REFERENCE,\n                {},\n                null,\n                false,\n                parameter.callStack.getCallerFilePath(),\n                parameter.callStack.getCallerLastLine()\n            );\n        }\n\n        if (!argumentReference) {\n            if (parameter.isRequired()) {\n                // This should never happen - the scenario is captured within FunctionSpec\n                throw new Error('Missing argument for required parameter \"' + parameter.name + '\"');\n            }\n\n            // Argument was omitted but its parameter is optional: allow it through, we'll use its default value\n            return;\n        }\n\n        argumentValue = argumentReference.getValueOrNull();\n\n        argumentIsValid =\n            // Check whether the type allows the given argument (including null,\n            // if it is a nullable type) or ...\n            parameter.typeObject.allowsValue(argumentValue) ||\n            (\n                // ... otherwise if null is given but not allowed by the type,\n                // null will need to have been given as the default value in order to be allowed\n                argumentValue.getType() === 'null' &&\n                parameter.defaultValueProvider &&\n                parameter.defaultValueProvider().getType() === 'null'\n            );\n\n        if (!argumentIsValid) {\n            // TODO: For PHP 7, if the caller is in weak mode then we need to coerce if the type is scalar\n\n            definitionFilePath = parameter.filePath || parameter.translator.translate(UNKNOWN);\n            definitionLineNumber = parameter.lineNumber || parameter.translator.translate(UNKNOWN);\n\n            if (parameter.callStack.getCurrent()) {\n                callerFilePath = parameter.callStack.getCallerFilePath();\n                callerLineNumber = parameter.callStack.getCallerLastLine();\n            }\n\n            actualType = argumentValue.getDisplayType();\n            expectedType = parameter.typeObject.getExpectedMessage(parameter.translator);\n\n            if (argumentValue.getType() === 'object') {\n                actualType = parameter.translator.translate(INSTANCE_OF_TYPE_ACTUAL, {\n                    actualType: actualType\n                });\n            }\n\n            // Parameter is typehinted as expecting instances of a class or interface,\n            // but the given argument does not match\n            parameter.callStack.raiseTranslatedError(\n                PHPError.E_ERROR,\n                INVALID_VALUE_FOR_TYPE,\n                {\n                    index: parameter.index + 1,\n                    func: parameter.context.getName(),\n                    expectedType: expectedType,\n                    actualType: actualType,\n                    callerFile: callerFilePath !== null ? callerFilePath : parameter.translator.translate(UNKNOWN),\n                    callerLine: callerLineNumber !== null ? callerLineNumber : parameter.translator.translate(UNKNOWN),\n                    definitionFile: definitionFilePath,\n                    definitionLine: definitionLineNumber\n                },\n                'TypeError',\n                true,\n                definitionFilePath,\n                definitionLineNumber\n            );\n        }\n    }\n});\n\nmodule.exports = Parameter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Parameter\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @constructor\n */\nfunction ParameterFactory(Parameter, callStack, translator) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {class}\n     */\n    this.Parameter = Parameter;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n}\n\n_.extend(ParameterFactory.prototype, {\n    /**\n     * Creates a Parameter from the given spec data\n     *\n     * @param {string|null} name\n     * @param {number} index\n     * @param {Type} typeObject\n     * @param {FunctionContextInterface} context\n     * @param {boolean} passedByReference\n     * @param {Function|null} defaultValueProvider\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {Parameter}\n     */\n    createParameter: function (\n        name,\n        index,\n        typeObject,\n        context,\n        passedByReference,\n        defaultValueProvider,\n        filePath,\n        lineNumber\n    ) {\n        var factory = this;\n\n        return new factory.Parameter(\n            factory.callStack,\n            factory.translator,\n            name,\n            index,\n            typeObject,\n            context,\n            passedByReference,\n            defaultValueProvider,\n            filePath,\n            lineNumber\n        );\n    }\n});\n\nmodule.exports = ParameterFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the correct Parameters from a function, closure or method parameter list spec\n *\n * @param {ParameterFactory} parameterFactory\n * @param {ParameterTypeFactory} parameterTypeFactory\n * @constructor\n */\nfunction ParameterListFactory(parameterFactory, parameterTypeFactory) {\n    /**\n     * @type {ParameterFactory}\n     */\n    this.parameterFactory = parameterFactory;\n    /**\n     * @type {ParameterTypeFactory}\n     */\n    this.parameterTypeFactory = parameterTypeFactory;\n}\n\n_.extend(ParameterListFactory.prototype, {\n    /**\n     * Creates the correct Parameters from a function, closure or method parameter list spec\n     *\n     * @param {FunctionContextInterface} context\n     * @param {Array} parametersSpecData\n     * @param {NamespaceScope} namespaceScope\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {Parameter[]|null[]}\n     */\n    createParameterList: function (\n        context,\n        parametersSpecData,\n        namespaceScope,\n        filePath,\n        lineNumber\n    ) {\n        var factory = this,\n            parameters = [];\n\n        _.each(parametersSpecData, function (parameterSpecData, parameterIndex) {\n            var parameterType;\n\n            if (!parameterSpecData) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n                parameters.push(null);\n\n                return;\n            }\n\n            parameterType = factory.parameterTypeFactory.createParameterType(parameterSpecData, namespaceScope);\n\n            parameters.push(factory.parameterFactory.createParameter(\n                parameterSpecData.name,\n                parameterIndex,\n                parameterType,\n                context,\n                parameterSpecData.ref,\n                parameterSpecData.value || null,\n                filePath,\n                lineNumber\n            ));\n        });\n\n        return parameters;\n    }\n});\n\nmodule.exports = ParameterListFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the correct Type from a function, closure or method parameter spec\n *\n * @param {TypeFactory} typeFactory\n * @constructor\n */\nfunction ParameterTypeFactory(typeFactory) {\n    /**\n     * @type {TypeFactory}\n     */\n    this.typeFactory = typeFactory;\n}\n\n_.extend(ParameterTypeFactory.prototype, {\n    /**\n     * Creates the correct Type from a function, closure or method parameter spec\n     *\n     * @param {Object} parameterSpecData\n     * @param {NamespaceScope} namespaceScope\n     * @returns {TypeInterface}\n     */\n    createParameterType: function (parameterSpecData, namespaceScope) {\n        var factory = this,\n            resolvedClass;\n\n        switch (parameterSpecData.type) {\n            case 'array':\n                return factory.typeFactory.createArrayType();\n            case 'callable':\n                return factory.typeFactory.createCallableType(namespaceScope);\n            case 'class':\n                // We must now resolve the class name given relative to the current namespace scope,\n                // as it may be a relative class name that relies on the current namespace or a `use` import\n                resolvedClass = namespaceScope.resolveClass(parameterSpecData.className);\n\n                return factory.typeFactory.createClassType(resolvedClass.namespace.getPrefix() + resolvedClass.name);\n            case 'iterable':\n                return factory.typeFactory.createIterableType();\n            case undefined:\n                return factory.typeFactory.createMixedType();\n            default:\n                throw new Error('Unsupported parameter type \"' + parameterSpecData.type + '\"');\n        }\n    }\n});\n\nmodule.exports = ParameterTypeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {class} AccessorReference\n     * @param {class} NullReference\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function ReferenceFactory(\n        AccessorReference,\n        NullReference,\n        valueFactory\n    ) {\n        /**\n         * @type {class}\n         */\n        this.AccessorReference = AccessorReference;\n        /**\n         * @type {class}\n         */\n        this.NullReference = NullReference;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(ReferenceFactory.prototype, {\n        /**\n         * Creates an AccessorReference\n         *\n         * @param {function} valueGetter\n         * @param {function} valueSetter\n         * @returns {AccessorReference}\n         */\n        createAccessor: function (valueGetter, valueSetter) {\n            var factory = this;\n\n            return new factory.AccessorReference(factory.valueFactory, valueGetter, valueSetter);\n        },\n\n        /**\n         * Creates a NullReference\n         *\n         * @returns {NullReference}\n         */\n        createNull: function () {\n            var factory = this;\n\n            return new factory.NullReference(factory.valueFactory);\n        }\n    });\n\n    return ReferenceFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon')\n], function (\n    _,\n    phpCommon\n) {\n    var hasOwn = {}.hasOwnProperty,\n        IS_STATIC = 'isStatic',\n        PHPError = phpCommon.PHPError,\n\n        CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS = 'core.cannot_access_when_no_active_class',\n        NO_PARENT_CLASS = 'core.no_parent_class',\n        SCOPED_ERROR = 'core.scoped_error';\n\n    /**\n     * @param {CallStack} callStack\n     * @param {Translator} translator\n     * @param {Scope} globalScope\n     * @param {SuperGlobalScope} superGlobalScope\n     * @param {ClosureFactory} closureFactory\n     * @param {FunctionSpecFactory} functionSpecFactory\n     * @param {ValueFactory} valueFactory\n     * @param {VariableFactory} variableFactory\n     * @param {ReferenceFactory} referenceFactory\n     * @param {Class|null} currentClass\n     * @param {Function|null} currentFunction\n     * @param {ObjectValue|null} thisObject\n     * @constructor\n     */\n    function Scope(\n        callStack,\n        translator,\n        globalScope,\n        superGlobalScope,\n        closureFactory,\n        functionSpecFactory,\n        valueFactory,\n        variableFactory,\n        referenceFactory,\n        currentClass,\n        currentFunction,\n        thisObject\n    ) {\n        var thisObjectVariable = variableFactory.createVariable('this');\n\n        this.callStack = callStack;\n        this.closureFactory = closureFactory;\n        /**\n         * @type {Class|null}\n         */\n        this.currentClass = currentClass;\n        this.currentFunction = currentFunction;\n        this.errorsSuppressed = false;\n        this.functionSpecFactory = functionSpecFactory;\n        this.globalScope = globalScope || this;\n        this.referenceFactory = referenceFactory;\n        this.superGlobalScope = superGlobalScope;\n        this.thisObject = currentFunction && currentFunction[IS_STATIC] ? null : thisObject;\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n        this.valueFactory = valueFactory;\n        this.variableFactory = variableFactory;\n        this.variables = {\n            'this': thisObjectVariable\n        };\n\n        if (thisObject && (!currentFunction || !currentFunction[IS_STATIC])) {\n            thisObjectVariable.setValue(thisObject);\n        }\n    }\n\n    _.extend(Scope.prototype, {\n        /**\n         * Creates a closure, either static (with no `$this` object bound) or non-static\n         *\n         * @param {NamespaceScope} namespaceScope\n         * @param {Function} func\n         * @param {Array=} parametersSpecData\n         * @param {boolean=} isStatic\n         * @param {number|null=} lineNumber\n         * @returns {Closure}\n         */\n        createClosure: function (namespaceScope, func, parametersSpecData, isStatic, lineNumber) {\n            var functionSpec,\n                scope = this,\n                thisObject = null;\n\n            // Fetch the `$this` object to bind to the closure from the current scope,\n            // if the closure is a normal (non-static) one. Otherwise, if the closure is static\n            // then it will have no `$this` object bound to it\n            if (!isStatic) {\n                thisObject = scope.thisObject;\n            }\n\n            functionSpec = scope.functionSpecFactory.createClosureSpec(\n                namespaceScope,\n                scope.currentClass,\n                parametersSpecData || [],\n                namespaceScope.getFilePath(),\n                lineNumber\n            );\n\n            return scope.closureFactory.create(\n                scope,\n                func,\n                namespaceScope,\n                scope.currentClass,\n                thisObject,\n                functionSpec\n            );\n        },\n\n        /**\n         * Defines a variable with the given name in this scope. If it is already defined,\n         * in this scope (not including the superglobal scope) then an error will be thrown\n         *\n         * @param {string} name\n         * @returns {Variable}\n         * @throws {Error} Throws when the variable is already defined in this scope\n         */\n        defineVariable: function (name) {\n            var scope = this,\n                variable;\n\n            if (hasOwn.call(scope.variables, name)) {\n                // Variable is already defined, just return\n                throw new Error('Variable \"' + name + '\" is already defined in this scope');\n            }\n\n            variable = scope.variableFactory.createVariable(name);\n\n            scope.variables[name] = variable;\n\n            return variable;\n        },\n\n        /**\n         * Defines one or more variables with the given names in this scope\n         *\n         * @param {string[]} names\n         */\n        defineVariables: function (names) {\n            var scope = this;\n\n            _.each(names, function (name) {\n                scope.defineVariable(name);\n            });\n        },\n\n        /**\n         * Returns a hash with the values of all variables defined\n         * for this scope, including all superglobals\n         *\n         * @returns {Object.<string, Value>}\n         */\n        exportVariables: function () {\n            var scope = this,\n                values = scope.superGlobalScope.exportVariables();\n\n            _.forOwn(scope.variables, function (variable, variableName) {\n                if (variable.isDefined()) {\n                    values[variableName] = variable.getValue();\n                }\n            });\n\n            return values;\n        },\n\n        /**\n         * Defines a variable in the current scope with the given native value\n         *\n         * @param {Value|*} value\n         * @param {string} name\n         */\n        expose: function (value, name) {\n            var scope = this,\n                valueFactory = scope.valueFactory;\n\n            scope.defineVariable(name).setValue(valueFactory.coerce(value));\n        },\n\n        /**\n         * Fetches the name of the current class, or an empty string if there is none\n         *\n         * @returns {StringValue}\n         */\n        getClassName: function () {\n            var scope = this;\n\n            return scope.valueFactory.createString(\n                scope.currentClass ? scope.currentClass.getName() : ''\n            );\n        },\n\n        /**\n         * Fetches the name of the class in which this scope's function is defined\n         *\n         * @returns {StringValue}\n         * @throws {PHPFatalError} When there is no current class scope\n         */\n        getClassNameOrThrow: function () {\n            var scope = this;\n\n            if (!scope.currentClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access self:: when no class scope is active\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS, {\n                    className: 'self'\n                });\n            }\n\n            return scope.valueFactory.createString(scope.currentClass.getName());\n        },\n\n        /**\n         * Fetches the current class, if any\n         *\n         * @returns {Class|null}\n         */\n        getCurrentClass: function () {\n            return this.currentClass;\n        },\n\n        /**\n         * Fetches the current file path, taking eval into account\n         *\n         * @param {string|null} filePath\n         * @returns {string|null}\n         */\n        getFilePath: function (filePath) {\n            return filePath; // Passes through unaltered: see LoadScope for where a change is made\n        },\n\n        /**\n         * Fetches the current function name (used by eg. the magic __FUNCTION__ constant)\n         *\n         * @returns {StringValue}\n         */\n        getFunctionName: function () {\n            var scope = this,\n                functionName = '';\n\n            if (scope.currentFunction) {\n                // NB: Method functions have no special treatment here -\n                //     the owning namespace and/or class will be omitted\n                functionName = scope.currentFunction.functionSpec.getUnprefixedFunctionName();\n            }\n\n            return scope.valueFactory.createString(functionName);\n        },\n\n        /**\n         * Fetches the current method name (used by eg. the magic __METHOD__ constant)\n         *\n         * Note that this differs from .getFunctionName() when the current function is a method\n         *\n         * @param {boolean=} isStaticCall\n         * @returns {StringValue}\n         */\n        getMethodName: function (isStaticCall) {\n            var scope = this,\n                functionName = '';\n\n            if (scope.currentFunction) {\n                // NB: Methods are prefixed with namespace, class and `::`\n                functionName = scope.currentFunction.functionSpec.getFunctionName(isStaticCall !== false);\n            }\n\n            return scope.valueFactory.createString(functionName);\n        },\n\n        /**\n         * Fetches the name of the parent of the current class in scope\n         *\n         * @returns {StringValue}\n         * @throws {PHPFatalError} When there is no current class scope or current class has no parent\n         */\n        getParentClassNameOrThrow: function () {\n            var scope = this,\n                superClass;\n\n            if (!scope.currentClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access parent:: when no class scope is active\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS, {\n                    className: 'parent'\n                });\n            }\n\n            superClass = scope.currentClass.getSuperClass();\n\n            if (!superClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access parent:: when current class scope has no parent\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, NO_PARENT_CLASS);\n            }\n\n            return scope.valueFactory.createString(superClass.getName());\n        },\n\n        /**\n         * Fetches the name of the current static class scope, which may be different\n         * from the class in which its function is defined (eg. after a forward_static_call(...))\n         *\n         * @returns {StringValue}\n         * @throws {PHPFatalError} When there is no static class scope\n         */\n        getStaticClassNameOrThrow: function () {\n            var scope = this,\n                staticClass = scope.callStack.getStaticClass();\n\n            if (!staticClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access static:: when no class scope is active\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS, {\n                    className: 'static'\n                });\n            }\n\n            return scope.valueFactory.createString(staticClass.getName());\n        },\n\n        /**\n         * Fetches the current object (the value of $this) if any\n         *\n         * @returns {ObjectValue|null}\n         */\n        getThisObject: function () {\n            return this.thisObject;\n        },\n\n        /**\n         * Fetches the current function or method name as used in stack traces\n         *\n         * Note that this differs from .getFunctionName() and .getMethodName()\n         *\n         * @returns {string}\n         */\n        getTraceFrameName: function () {\n            var scope = this,\n                functionName = '';\n\n            if (scope.currentFunction) {\n                // NB: Methods are prefixed with namespace, class and `::`\n                functionName = scope.currentFunction.functionSpec.getFunctionTraceFrameName(scope.isStatic());\n            }\n\n            return functionName;\n        },\n\n        /**\n         * Fetches a variable for the current or super global scope,\n         * implicitly defining it if needed\n         *\n         * @param {string} name\n         * @returns {Variable}\n         */\n        getVariable: function (name) {\n            var scope = this,\n                variable;\n\n            // Look in the current scope for the variable first\n            if (hasOwn.call(scope.variables, name)) {\n                return scope.variables[name];\n            }\n\n            // If not found, look in the super global scope\n            variable = scope.superGlobalScope.getVariable(name);\n\n            if (!variable) {\n                // Variable is not local or a super-global: implicitly define it\n                variable = scope.variableFactory.createVariable(name);\n                scope.variables[name] = variable;\n\n                if (scope.errorsSuppressed) {\n                    variable.setValue(scope.valueFactory.createNull());\n                }\n            }\n\n            return variable;\n        },\n\n        /**\n         * Determines whether this scope defines the specified variable or not\n         * (not including the superglobal scope)\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasVariable: function (name) {\n            return hasOwn.call(this.variables, name);\n        },\n\n        /**\n         * Imports a global variable into this scope by defining the variable\n         * in this scope and setting its reference to point to the global one.\n         *\n         * @param {string} variableName\n         */\n        importGlobal: function (variableName) {\n            var scope = this;\n\n            if (scope.globalScope === scope) {\n                // Nothing to do; we're trying to import a global into the global scope\n                return;\n            }\n\n            scope.getVariable(variableName).setReference(\n                scope.globalScope.getVariable(variableName).getReference()\n            );\n        },\n\n        /**\n         * Imports a static variable into this scope by defining the variable\n         * in this scope and setting its reference to point to the \"static\" one,\n         * stored against the current function/method. The first time the variable\n         * is declared, it will be assigned the initial value (if any).\n         *\n         * @param {string} variableName\n         * @param {Value|null} initialValue\n         */\n        importStatic: function (variableName, initialValue) {\n            var scope = this,\n                staticVariables,\n                staticVariable;\n\n            if (scope.currentFunction) {\n                if (scope.currentFunction.staticVariables) {\n                    staticVariables = scope.currentFunction.staticVariables;\n                } else {\n                    staticVariables = {};\n                    scope.currentFunction.staticVariables = staticVariables;\n                }\n\n                if (!hasOwn.call(staticVariables, variableName)) {\n                    staticVariables[variableName] = scope.variableFactory.createVariable(variableName);\n\n                    if (initialValue) {\n                        // Initialiser is optional\n                        staticVariables[variableName].setValue(initialValue);\n                    }\n                }\n\n                staticVariable = staticVariables[variableName];\n\n                // Define a variable in the current scope that is a reference\n                // to the static variable stored against either the current function or the global scope if none\n                scope.getVariable(variableName).setReference(staticVariable.getReference());\n            } else {\n                scope.getVariable(variableName).setValue(initialValue);\n            }\n        },\n\n        /**\n         * Whether this call scope is in a static context or not\n         *\n         * @returns {boolean}\n         */\n        isStatic: function () {\n            return !this.thisObject;\n        },\n\n        /**\n         * Raises a catchable Error or a notice/warning with the specified level, message translation key and variables,\n         * scoped to the current function scope\n         *\n         * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n         * @param {string} translationKey\n         * @param {Object.<string, string>=} placeholderVariables\n         * @param {string=} errorClass\n         * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n         * @param {string=} filePath\n         * @param {number=} lineNumber\n         * @throws {ObjectValue} Throws an ObjectValue-wrapped Throwable if not a notice or warning\n         */\n        raiseScopedTranslatedError: function (\n            level,\n            translationKey,\n            placeholderVariables,\n            errorClass,\n            reportsOwnContext,\n            filePath,\n            lineNumber\n        ) {\n            var scope = this,\n                message = scope.translator.translate(SCOPED_ERROR, {\n                    function: scope.getFunctionName().getNative(),\n                    message: scope.translator.translate(translationKey, placeholderVariables)\n                });\n\n            if (level === PHPError.E_ERROR) {\n                // Non-warning/non-notice errors need to actually stop execution\n                // NB: The Error class' constructor will fetch file and line number info\n                throw scope.valueFactory.createErrorObject(\n                    errorClass || 'Error',\n                    message,\n                    null,\n                    null,\n                    filePath,\n                    lineNumber,\n                    reportsOwnContext\n                );\n            }\n\n            scope.callStack.raiseError(level, message, errorClass, reportsOwnContext);\n        },\n\n        /**\n         * Suppresses errors for this and any descendant scopes\n         */\n        suppressErrors: function () {\n            this.errorsSuppressed = true;\n        },\n\n        /**\n         * Suppresses errors for only this and not any descendant scopes\n         */\n        suppressOwnErrors: function () {\n            this.ownErrorsSuppressed = true;\n        },\n\n        /**\n         * Determines whether errors have been suppressed for this and any descendant scopes\n         *\n         * @returns {boolean}\n         */\n        suppressesErrors: function () {\n            return this.errorsSuppressed;\n        },\n\n        /**\n         * Determines whether errors have been suppressed for this but not any descendant scopes\n         *\n         * @returns {boolean}\n         */\n        suppressesOwnErrors: function () {\n            return this.ownErrorsSuppressed;\n        },\n\n        /**\n         * Unsuppresses errors for this and any descendant scopes\n         */\n        unsuppressErrors: function () {\n            this.errorsSuppressed = false;\n        },\n\n        /**\n         * Unsuppresses errors for this but not any descendant scopes\n         */\n        unsuppressOwnErrors: function () {\n            this.ownErrorsSuppressed = false;\n        }\n    });\n\n    return Scope;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} LoadScope\n * @param {class} Scope\n * @param {class} NamespaceScope\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @param {SuperGlobalScope} superGlobalScope\n * @param {FunctionSpecFactory} functionSpecFactory\n * @param {ValueFactory} valueFactory\n * @param {VariableFactory} variableFactory\n * @param {ReferenceFactory} referenceFactory\n * @constructor\n */\nfunction ScopeFactory(\n    LoadScope,\n    Scope,\n    NamespaceScope,\n    callStack,\n    translator,\n    superGlobalScope,\n    functionSpecFactory,\n    valueFactory,\n    variableFactory,\n    referenceFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {ClosureFactory}\n     */\n    this.closureFactory = null;\n    /**\n     * @type {class}\n     */\n    this.LoadScope = LoadScope;\n    /**\n     * @type {FunctionSpecFactory}\n     */\n    this.functionSpecFactory = functionSpecFactory;\n    /**\n     * @type {Scope}\n     */\n    this.globalScope = null;\n    /**\n     * @type {class}\n     */\n    this.NamespaceScope = NamespaceScope;\n    /**\n     * @type {ReferenceFactory}\n     */\n    this.referenceFactory = referenceFactory;\n    /**\n     * @type {class}\n     */\n    this.Scope = Scope;\n    /**\n     * @type {SuperGlobalScope}\n     */\n    this.superGlobalScope = superGlobalScope;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {VariableFactory}\n     */\n    this.variableFactory = variableFactory;\n}\n\n_.extend(ScopeFactory.prototype, {\n    /**\n     * Creates a new Scope\n     *\n     * @param {Class|null=} currentClass\n     * @param {Function|null=} currentFunction\n     * @param {ObjectValue|null=} thisObject\n     * @returns {Scope}\n     */\n    create: function (currentClass, currentFunction, thisObject) {\n        var factory = this;\n\n        return new factory.Scope(\n            factory.callStack,\n            factory.translator,\n            factory.globalScope,\n            factory.superGlobalScope,\n            factory.closureFactory,\n            factory.functionSpecFactory,\n            factory.valueFactory,\n            factory.variableFactory,\n            factory.referenceFactory,\n            currentClass || null,\n            currentFunction || null,\n            thisObject || null\n        );\n    },\n\n    /**\n     * Creates a new LoadScope\n     *\n     * @param {Scope} effectiveScope\n     * @param {string} callerFilePath\n     * @param {string} type The type of load, eg. `eval` or `include`\n     * @returns {LoadScope}\n     */\n    createLoadScope: function (effectiveScope, callerFilePath, type) {\n        var factory = this;\n\n        return new factory.LoadScope(factory.valueFactory, effectiveScope, callerFilePath, type);\n    },\n\n    /**\n     * Creates a new NamespaceScope\n     *\n     * @param {Namespace} namespace\n     * @param {Namespace} globalNamespace\n     * @param {Module} module\n     * @returns {NamespaceScope}\n     */\n    createNamespaceScope: function (namespace, globalNamespace, module) {\n        var factory = this;\n\n        return new factory.NamespaceScope(globalNamespace, factory.valueFactory, factory.callStack, module, namespace);\n    },\n\n    /**\n     * Sets the ClosureFactory service to pass to Scopes created by this factory\n     *\n     * @param {ClosureFactory} closureFactory\n     */\n    setClosureFactory: function (closureFactory) {\n        this.closureFactory = closureFactory;\n    },\n\n    /**\n     * Sets the global Scope to pass to Scopes created by this factory\n     *\n     * @param {Scope} globalScope\n     */\n    setGlobalScope: function (globalScope) {\n        this.globalScope = globalScope;\n    }\n});\n\nmodule.exports = ScopeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    OutputBufferInterface = require('./OutputBufferInterface');\n\n/**\n * @param {Stream} stdout\n * @constructor\n */\nfunction StdoutBuffer(stdout) {\n    /**\n     * @type {Stream}\n     */\n    this.stdout = stdout;\n}\n\nutil.inherits(StdoutBuffer, OutputBufferInterface);\n\n_.extend(StdoutBuffer.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    clean: function () {\n        return false; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    flush: function () {\n        return false; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getContents: function () {\n        return null; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDepth: function () {\n        return 0; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    write: function (data) {\n        this.stdout.write(data);\n    }\n});\n\nmodule.exports = StdoutBuffer;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('./Variable')\n], function (\n    _,\n    Variable\n) {\n    var hasOwn = {}.hasOwnProperty;\n\n    /**\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function SuperGlobalScope(callStack, valueFactory) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n        /**\n         * @type {Object.<string, Variable>}\n         */\n        this.variables = {};\n    }\n\n    _.extend(SuperGlobalScope.prototype, {\n        /**\n         * Defines a new variable in the super global scope and returns it\n         *\n         * @param {string} name\n         * @returns {Variable}\n         */\n        defineVariable: function (name) {\n            var scope = this,\n                variable = new Variable(scope.callStack, scope.valueFactory, name);\n\n            scope.variables[name] = variable;\n\n            return variable;\n        },\n\n        /**\n         * Returns a hash with the values of all variables defined\n         * for the super global scope. The $GLOBALS superglobal is excluded\n         *\n         * @returns {Object.<string, Value>}\n         */\n        exportVariables: function () {\n            var values = {};\n\n            _.forOwn(this.variables, function (variable, variableName) {\n                // Avoid infinite recursion by not attempting to export GLOBALS itself\n                if (variableName === 'GLOBALS') {\n                    return;\n                }\n\n                values[variableName] = variable.getValue();\n            });\n\n            return values;\n        },\n\n        /**\n         * Fetches an existing variable from the super global scope\n         *\n         * @param {string} name\n         * @returns {Variable|null}\n         */\n        getVariable: function (name) {\n            var scope = this;\n\n            return hasOwn.call(scope.variables, name) ? scope.variables[name] : null;\n        }\n    });\n\n    return SuperGlobalScope;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Debug/DebugVariable'),\n    require('./KeyReferencePair'),\n    require('./KeyValuePair'),\n    require('./List')\n], function (\n    _,\n    phpCommon,\n    DebugVariable,\n    KeyReferencePair,\n    KeyValuePair,\n    List\n) {\n    var Exception = phpCommon.Exception,\n\n        EVAL_PATH = 'core.eval_path',\n        NO_PARENT_CLASS = 'core.no_parent_class',\n        UNKNOWN = 'core.unknown',\n\n        EVAL_OPTION = 'eval',\n        TICK_OPTION = 'tick',\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * @param {CallStack} callStack\n     * @param {Environment} environment\n     * @param {Translator} translator\n     * @param {Namespace} globalNamespace\n     * @param {Loader} loader\n     * @param {Includer} includer\n     * @param {OnceIncluder} onceIncluder\n     * @param {Module} module\n     * @param {Object} options\n     * @param {ReferenceFactory} referenceFactory\n     * @param {ScopeFactory} scopeFactory\n     * @param {NamespaceScope} topLevelNamespaceScope\n     * @param {Scope} topLevelScope\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function Tools(\n        callStack,\n        environment,\n        translator,\n        globalNamespace,\n        loader,\n        includer,\n        onceIncluder,\n        module,\n        options,\n        referenceFactory,\n        scopeFactory,\n        topLevelNamespaceScope,\n        topLevelScope,\n        valueFactory\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Environment}\n         */\n        this.environment = environment;\n        /**\n         * @type {Namespace}\n         */\n        this.globalNamespace = globalNamespace;\n        /**\n         * @type {Includer}\n         */\n        this.includer = includer;\n        /**\n         * @type {Loader}\n         */\n        this.loader = loader;\n        /**\n         * @type {Module}\n         */\n        this.module = module;\n        /**\n         * @type {OnceIncluder}\n         */\n        this.onceIncluder = onceIncluder;\n        /**\n         * @type {Object}\n         */\n        this.options = options;\n        /**\n         * @type {ReferenceFactory}\n         * @public Referenced from transpiled code\n         */\n        this.referenceFactory = referenceFactory;\n        /**\n         * @type {ScopeFactory}\n         */\n        this.scopeFactory = scopeFactory;\n        /**\n         * @type {NamespaceScope}\n         * @public Referenced from transpiled code\n         */\n        this.topLevelNamespaceScope = topLevelNamespaceScope;\n        /**\n         * @type {Scope}\n         * @public Referenced from transpiled code\n         */\n        this.topLevelScope = topLevelScope;\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n        /**\n         * @type {ValueFactory}\n         * @public Referenced from transpiled code\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Tools.prototype, {\n        /**\n         * Creates an ObjectValue that wraps an instance of the builtin PHP Closure class\n         * whose behaviour is defined by the provided function\n         *\n         * @param {Function} func\n         * @param {Scope} scope\n         * @param {NamespaceScope} namespaceScope\n         * @param {Array=} parametersSpecData\n         * @param {boolean=} isStatic\n         * @param {number=} lineNumber\n         * @returns {ObjectValue}\n         */\n        createClosure: function (func, scope, namespaceScope, parametersSpecData, isStatic, lineNumber) {\n            var tools = this;\n\n            return tools.valueFactory.createClosureObject(\n                scope.createClosure(\n                    namespaceScope,\n                    func,\n                    parametersSpecData || [],\n                    !!isStatic,\n                    lineNumber || null\n                )\n            );\n        },\n\n        /**\n         * Creates a DebugVariable, for showing the value of a variable in the scope\n         * inside Google Chrome's developer tools\n         *\n         * @param {Scope} scope\n         * @param {string} variableName\n         * @returns {DebugVariable}\n         */\n        createDebugVar: function (scope, variableName) {\n            return new DebugVariable(scope, variableName);\n        },\n\n        /**\n         * Used by transpiled PHP `new MyClass(<args>)` expressions\n         *\n         * @param {NamespaceScope} namespaceScope\n         * @param {Value} classNameValue\n         * @param {Value[]} args Arguments to pass to the constructor\n         * @returns {ObjectValue}\n         */\n        createInstance: function (namespaceScope, classNameValue, args) {\n            return classNameValue.instantiate(args, namespaceScope);\n        },\n\n        /**\n         * Creates a new KeyReferencePair\n         *\n         * @param {Value} key\n         * @param {Reference|Variable} reference\n         * @returns {KeyReferencePair}\n         */\n        createKeyReferencePair: function (key, reference) {\n            return new KeyReferencePair(key, reference);\n        },\n\n        /**\n         * Creates a new KeyValuePair\n         *\n         * @param {Value} key\n         * @param {Value} value\n         * @returns {KeyValuePair}\n         */\n        createKeyValuePair: function (key, value) {\n            return new KeyValuePair(key, value);\n        },\n\n        /**\n         * Creates a new List, which is a list of references that may be assigned to\n         * by assigning them an array, where each list element gets the corresponding array element\n         *\n         * @param {Reference[]} elements\n         * @returns {List}\n         */\n        createList: function (elements) {\n            return new List(this.valueFactory, elements);\n        },\n\n        /**\n         * Creates a new NamespaceScope\n         *\n         * @param {Namespace} namespace\n         * @returns {NamespaceScope}\n         */\n        createNamespaceScope: function (namespace) {\n            var tools = this;\n\n            return tools.scopeFactory.createNamespaceScope(namespace, tools.globalNamespace, tools.module);\n        },\n\n        /**\n         * Evaluates the given PHP code using the configured `eval` option\n         *\n         * @param {string} code\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         */\n        eval: function (code, enclosingScope) {\n            var evalScope,\n                lineNumber,\n                path,\n                tools = this;\n\n            if (!tools.options[EVAL_OPTION]) {\n                throw new Exception(\n                    'eval(...) :: No \"eval\" interpreter option is available.'\n                );\n            }\n\n            path = tools.topLevelNamespaceScope.getFilePath();\n            evalScope = tools.scopeFactory.createLoadScope(enclosingScope, path, 'eval');\n            lineNumber = tools.callStack.getLastLine();\n\n            if (lineNumber === null) {\n                lineNumber = tools.translator.translate(UNKNOWN);\n            }\n\n            return tools.loader.load(\n                'eval',\n                // Use the path to the script that called eval() along with this suffix\n                // as the path to the current file inside the eval\n                tools.translator.translate(EVAL_PATH, {path: path, lineNumber: lineNumber}),\n                tools.options,\n                tools.environment,\n                tools.module,\n                evalScope,\n                function (path, promise, parentPath, valueFactory) {\n                    return tools.options[EVAL_OPTION]('<?php ' + code, path, promise, parentPath, valueFactory);\n                }\n            );\n        },\n\n        /**\n         * Immediately exits the currently executing PHP script. This is achieved\n         * by throwing a JS error that cannot be caught by any PHP-land try..catch statement.\n         * If the program was run from a command-line, any exit status provided will be used\n         * as the exit code for the process.\n         *\n         * @param {Value|null} statusValue\n         * @throws {ExitValue}\n         */\n        exit: function (statusValue) {\n            throw this.valueFactory.createExit(statusValue);\n        },\n\n        /**\n         * Fetches the name of the specified class, wrapped as a StringValue\n         *\n         * @param {Class} classObject\n         * @returns {StringValue}\n         */\n        getClassName: function (classObject) {\n            return this.valueFactory.createString(classObject.getName());\n        },\n\n        /**\n         * Fetches a human-readable string representing the path to the current script file\n         *\n         * @returns {string}\n         */\n        getNormalizedPath: function () {\n            var tools = this,\n                path = tools.topLevelNamespaceScope.getFilePath();\n\n            return path !== null ? path : '(program)';\n        },\n\n        /**\n         * Fetches the name of the parent of the specified class, wrapped as a StringValue\n         *\n         * @param {Class} classObject\n         * @returns {StringValue}\n         */\n        getParentClassName: function (classObject) {\n            var superClass = classObject.getSuperClass(),\n                tools = this;\n\n            if (!superClass) {\n                // Fatal error: Uncaught Error: Cannot access parent:: when current class scope has no parent\n                tools.callStack.raiseTranslatedError(PHPError.E_ERROR, NO_PARENT_CLASS);\n            }\n\n            return tools.valueFactory.createString(superClass.getName());\n        },\n\n        /**\n         * Fetches the path to the current script, wrapped as a StringValue\n         *\n         * @returns {StringValue}\n         */\n        getPath: function () {\n            var tools = this;\n\n            return tools.valueFactory.createString(tools.getNormalizedPath());\n        },\n\n        /**\n         * Fetches the path to the directory containing the current script, wrapped as a StringValue\n         *\n         * @returns {StringValue}\n         */\n        getPathDirectory: function () {\n            var tools = this,\n                path = tools.topLevelNamespaceScope.getFilePath(),\n                directory = (path || '').replace(/(^|\\/)[^\\/]+$/, '');\n\n            return tools.valueFactory.createString(directory || '');\n        },\n\n        /**\n         * Assigns the provided variable a new array value if it is not currently defined\n         * or defined with a value of NULL, then returns its current value\n         *\n         * @param {Reference|Variable} variable\n         * @returns {Value}\n         */\n        implyArray: function (variable) {\n            // Undefined variables and variables containing null may be implicitly converted to arrays\n            if (!variable.isDefined() || variable.getValue().getType() === 'null') {\n                variable.setValue(this.valueFactory.createArray([]));\n            }\n\n            return variable.getValue();\n        },\n\n        /**\n         * Assigns the provided variable a new stdClass instance value if it is not currently defined\n         * or defined with a value of NULL, then returns its current value\n         *\n         * @param {Reference|Variable} variable\n         * @returns {Reference|Variable}\n         */\n        implyObject: function (variable) {\n            // FIXME: If the given variable/reference does not have an object as its value:\n            //  `PHP Warning: Creating default object from empty value`\n            return variable.getValue();\n        },\n\n        /**\n         * Includes the specified module if it has not been included yet.\n         * If it has not already been included, the module's return value is returned,\n         * otherwise boolean true will be returned.\n         * Throws if no include transport has been configured.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        includeOnce: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.onceIncluder.includeOnce(\n                'include_once',\n                PHPError.E_WARNING, // For includes, only a warning is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Includes the specified module, returning its return value.\n         * Throws if no include transport has been configured.\n         * Raises a warning and returns false if the module cannot be found.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        include: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.includer.include(\n                'include',\n                PHPError.E_WARNING, // For includes, only a warning is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Used for providing a function for fetching the last line executed in the current scope\n         *\n         * @param {function} finder\n         */\n        instrument: function (finder) {\n            this.callStack.instrumentCurrent(finder);\n        },\n\n        /**\n         * Includes the specified module if it has not been included yet.\n         * If it has not already been included, the module's return value is returned,\n         * otherwise boolean true will be returned.\n         * Throws if no include transport has been configured.\n         * Raises a fatal error if the module cannot be found.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         * @returns {Value}\n         */\n        requireOnce: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.onceIncluder.includeOnce(\n                'require_once',\n                PHPError.E_ERROR, // For requires, a fatal error is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Includes the specified module, returning its return value.\n         * Throws if no include transport has been configured.\n         * Raises a fatal error if the module cannot be found.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        require: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.includer.include(\n                'require',\n                PHPError.E_ERROR, // For requires, a fatal error is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Calls the configured tick handler with the current statement's position data.\n         * PHPToJS inserts calls to this method when ticking is enabled.\n         *\n         * @param {number} startLine\n         * @param {number} startColumn\n         * @param {number} endLine\n         * @param {number} endColumn\n         * @throws {Exception} When no tick handler has been configured\n         */\n        tick: function (startLine, startColumn, endLine, endColumn) {\n            var tools = this;\n\n            if (!tools.options[TICK_OPTION]) {\n                throw new Exception('tick(...) :: No \"tick\" handler option is available.');\n            }\n\n            tools.options[TICK_OPTION].call(\n                null,\n                tools.getNormalizedPath(),\n                startLine,\n                startColumn,\n                endLine,\n                endColumn\n            );\n        }\n    });\n\n    return Tools;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction List(valueFactory, elements) {\n    this.elements = elements;\n    this.valueFactory = valueFactory;\n}\n\n_.extend(List.prototype, {\n    setValue: function (value) {\n        var list = this;\n\n        if (value.getType() === 'array') {\n            _.each(list.elements, function (reference, index) {\n                reference.setValue(value.getElementByIndex(index).getValue());\n            });\n        } else {\n            // Non-array value assigned to list, all references should just be nulled\n            _.each(list.elements, function (reference) {\n                reference.setValue(list.valueFactory.createNull());\n            });\n        }\n\n        return value;\n    }\n});\n\nmodule.exports = List;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Tools\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @param {GlobalNamespace} globalNamespace\n * @param {Loader} loader\n * @param {Includer} includer\n * @param {OnceIncluder} onceIncluder\n * @param {ReferenceFactory} referenceFactory\n * @param {ScopeFactory} scopeFactory\n * @param {ValueFactory} valueFactory\n * @constructor\n */\nfunction ToolsFactory(\n    Tools,\n    callStack,\n    translator,\n    globalNamespace,\n    loader,\n    includer,\n    onceIncluder,\n    referenceFactory,\n    scopeFactory,\n    valueFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {GlobalNamespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @type {Includer}\n     */\n    this.includer = includer;\n    /**\n     * @type {Loader}\n     */\n    this.loader = loader;\n    /**\n     * @type {OnceIncluder}\n     */\n    this.onceIncluder = onceIncluder;\n    /**\n     * @type {ReferenceFactory}\n     */\n    this.referenceFactory = referenceFactory;\n    /**\n     * @type {ScopeFactory}\n     */\n    this.scopeFactory = scopeFactory;\n    /**\n     * @type {class}\n     */\n    this.Tools = Tools;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(ToolsFactory.prototype, {\n    /**\n     * Creates a new Tools instance\n     *\n     * @param {Environment} environment\n     * @param {Module} module PHP module\n     * @param {NamespaceScope} topLevelNamespaceScope\n     * @param {Scope} topLevelScope\n     * @param {Object} options\n     * @returns {Tools}\n     */\n    create: function (\n        environment,\n        module,\n        topLevelNamespaceScope,\n        topLevelScope,\n        options\n    ) {\n        var factory = this;\n\n        return new factory.Tools(\n            factory.callStack,\n            environment,\n            factory.translator,\n            factory.globalNamespace,\n            factory.loader,\n            factory.includer,\n            factory.onceIncluder,\n            module,\n            options,\n            factory.referenceFactory,\n            factory.scopeFactory,\n            topLevelNamespaceScope,\n            topLevelScope,\n            factory.valueFactory\n        );\n    }\n});\n\nmodule.exports = ToolsFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    UNKNOWN = 'core.unknown';\n\n/**\n * Standard way to convert a call stack trace (returned by CallStack.getTrace())\n * to a printable formatted form. Used by Error::getTraceAsString(), Exception::getTraceAsString()\n * and when an uncaught fatal error is written to stdout/stderr.\n *\n * @param {Translator} translator\n * @constructor\n */\nfunction TraceFormatter(translator) {\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n}\n\n_.extend(TraceFormatter.prototype, {\n    /**\n     * Formats a call stack trace to a string\n     *\n     * @param {{index: number, file: string, line: number, func: Function, args: *[]}[]} trace\n     * @returns {string}\n     */\n    format: function (trace) {\n        var formatter = this,\n            traceStrings = [];\n\n        _.each(trace, function (callData) {\n            // Convert arguments to a string representation\n            var args = _.map(callData.args, function (argValue) {\n                return argValue.formatAsString();\n            }),\n                line = callData.line || formatter.translator.translate(UNKNOWN);\n\n            traceStrings.push(\n                '#' + callData.index + ' ' + callData.file + '(' + line + '): ' +\n                callData.func + '(' + args.join(', ') + ')'\n            );\n        });\n\n        traceStrings.push('#' + trace.length + ' {main}');\n\n        return traceStrings.join('\\n');\n    }\n});\n\nmodule.exports = TraceFormatter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    ArrayType = require('./ArrayType'),\n    CallableType = require('./CallableType'),\n    ClassType = require('./ClassType'),\n    IterableType = require('./IterableType'),\n    MixedType = require('./MixedType');\n\n/**\n * Creates objects related to Types\n *\n * @constructor\n */\nfunction TypeFactory() {\n\n}\n\n_.extend(TypeFactory.prototype, {\n    /**\n     * Creates a new ArrayType\n     *\n     * @param {boolean=} nullIsAllowed\n     * @returns {ArrayType}\n     */\n    createArrayType: function (nullIsAllowed) {\n        return new ArrayType(nullIsAllowed);\n    },\n\n    /**\n     * Creates a new CallableType\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {boolean=} nullIsAllowed\n     * @returns {CallableType}\n     */\n    createCallableType: function (namespaceScope, nullIsAllowed) {\n        return new CallableType(namespaceScope, nullIsAllowed);\n    },\n\n    /**\n     * Creates a new ClassType\n     *\n     * @param {string} className\n     * @param {boolean=} nullIsAllowed\n     * @returns {ClassType}\n     */\n    createClassType: function (className, nullIsAllowed) {\n        return new ClassType(className, nullIsAllowed);\n    },\n\n    /**\n     * Creates a new IterableType\n     *\n     * @param {boolean=} nullIsAllowed\n     * @returns {IterableType}\n     */\n    createIterableType: function (nullIsAllowed) {\n        return new IterableType(nullIsAllowed);\n    },\n\n    /**\n     * Creates a new MixedType\n     *\n     * @returns {MixedType}\n     */\n    createMixedType: function () {\n        return new MixedType();\n    }\n});\n\nmodule.exports = TypeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    OF_GENERIC_TYPE_EXPECTED = 'core.of_generic_type_expected',\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept an array value\n *\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction ArrayType(nullIsAllowed) {\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(ArrayType, TypeInterface);\n\n_.extend(ArrayType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        return value.getType() === 'array' ||\n            (this.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'array';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function (translator) {\n        return translator.translate(OF_GENERIC_TYPE_EXPECTED, {\n            expectedType: this.getDisplayName()\n        });\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = ArrayType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept a callable value:\n * - An array callable for calling an instance object method (eg. `[$myInstance, 'myMethod']`)\n * - An array callable for calling a static method (eg. `['My\\Lib\\MyClass', 'myStaticMethod']`)\n * - A function name as a string\n * - A static method as a string (eg. `'My\\Lib\\MyClass::myStaticMethod'`)\n * - A Closure instance\n *\n * @param {NamespaceScope} namespaceScope\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction CallableType(namespaceScope, nullIsAllowed) {\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(CallableType, TypeInterface);\n\n_.extend(CallableType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        return value.isCallable(this.namespaceScope.getGlobalNamespace()) ||\n            (this.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'callable';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function () {\n        return this.getDisplayName();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = CallableType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    INSTANCE_OF_TYPE_EXPECTED = 'core.instance_of_type_expected',\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept an instance of the specified class or interface or null (if allowed)\n *\n * @param {string} className\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction ClassType(className, nullIsAllowed) {\n    /**\n     * @type {string}\n     */\n    this.className = className;\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(ClassType, TypeInterface);\n\n_.extend(ClassType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        var typeObject = this;\n\n        return (value.getType() === 'object' && value.classIs(typeObject.className)) ||\n            (typeObject.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return this.className;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function (translator) {\n        return translator.translate(INSTANCE_OF_TYPE_EXPECTED, {\n            expectedType: this.getDisplayName()\n        });\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = ClassType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept an iterable value:\n * - An array\n * - An object implementing Traversable\n *\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction IterableType(nullIsAllowed) {\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(IterableType, TypeInterface);\n\n_.extend(IterableType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        return value.isIterable() ||\n            (this.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'iterable';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function () {\n        return this.getDisplayName();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = IterableType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents an unspecified type, where any value is allowed,\n * such as a function parameter with no type specified\n *\n * @constructor\n */\nfunction MixedType() {\n\n}\n\nutil.inherits(MixedType, TypeInterface);\n\n_.extend(MixedType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        return true; // When no type is specified, null is always allowed\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function () {\n        return true; // When no type is specified, any value is allowed\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'mixed';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function () {\n        return this.getDisplayName();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = MixedType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('is-promise'),\n    require('phpcommon'),\n    require('./Iterator/ArrayIterator'),\n    require('./Value/Array'),\n    require('./Value/BarewordString'),\n    require('./Value/Boolean'),\n    require('./Reference/Element/ElementProvider'),\n    require('./Value/Exit'),\n    require('./FFI/Result'),\n    require('./Value/Float'),\n    require('./Value/Integer'),\n    require('./KeyValuePair'),\n    require('./Value/Null'),\n    require('./Value/Object'),\n    require('./FFI/Value/PHPObject'),\n    require('./Value/String'),\n    require('./Value'),\n    require('./FFI/Value/ValueStorage')\n], function (\n    _,\n    isPromise,\n    phpCommon,\n    ArrayIterator,\n    ArrayValue,\n    BarewordStringValue,\n    BooleanValue,\n    ElementProvider,\n    ExitValue,\n    FFIResult,\n    FloatValue,\n    IntegerValue,\n    KeyValuePair,\n    NullValue,\n    ObjectValue,\n    PHPObject,\n    StringValue,\n    Value,\n    ValueStorage\n) {\n    var Exception = phpCommon.Exception;\n\n    /**\n     * Creates Value and related objects\n     *\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @param {ElementProvider} elementProvider\n     * @param {Translator} translator\n     * @param {CallFactory} callFactory\n     * @param {ErrorPromoter} errorPromoter\n     * @param {ValueStorage} valueStorage\n     * @constructor\n     */\n    function ValueFactory(\n        pausable,\n        mode,\n        elementProvider,\n        translator,\n        callFactory,\n        errorPromoter,\n        valueStorage\n    ) {\n        /**\n         * @type {CallFactory}\n         */\n        this.callFactory = callFactory;\n        /**\n         * @type {ElementProvider}\n         */\n        this.elementProvider = elementProvider || new ElementProvider();\n        /**\n         * Used for generating a unique ID for the next ObjectValue that is created\n         * (shown in the output of var_dump(...), for example)\n         *\n         * @type {number}\n         */\n        this.nextObjectID = 1;\n        /**\n         * @type {CallStack|null}\n         */\n        this.callStack = null;\n        /**\n         * @type {ErrorPromoter}\n         */\n        this.errorPromoter = errorPromoter;\n        /**\n         * @type {Namespace|null}\n         */\n        this.globalNamespace = null;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n        /**\n         * The single NullValue for efficiency, created lazily in .createNull(...).\n         * It must be created lazily there as it depends on CallStack, which due to a circular dependency\n         * is injected via setter: .setCallStack(...). That setter is not always called, eg. by various unit tests,\n         * for simplicity.\n         *\n         * @type {NullValue|null}\n         */\n        this.nullValue = null;\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n        /**\n         * @type {ValueStorage}\n         */\n        this.valueStorage = valueStorage || new ValueStorage();\n    }\n\n    _.extend(ValueFactory.prototype, {\n        /**\n         * Attempts to resolve the given value to a Value object instance.\n         * - If already a Value instance, simply returns it.\n         * - If an FFIResult, it is handled as appropriate (pausing PHP execution if in async mode)\n         * - If any other primitive or object, it is coerced to a Value instance\n         *\n         * @param {*} value\n         * @return {Value}\n         */\n        coerce: function (value) {\n            var factory = this;\n\n            if (value instanceof Value) {\n                return value;\n            }\n\n            if (value instanceof FFIResult) {\n                // An FFI Result was returned, so we need to handle it as appropriate\n                return value.resolve(factory);\n            }\n\n            // TODO: Consider removing this behaviour altogether now that we have FFIResult?\n            if (isPromise(value) && factory.pausable) {\n                // A promise was returned (note that returning an FFIResult is preferred)\n                return this.coercePromise(value);\n            }\n\n            return factory.createFromNative(value);\n        },\n\n        /**\n         * Coerces the given array-like of natives and/or values\n         * into an array where all have been coerced to values\n         *\n         * @param {*[]} arrayLike\n         * @returns {Value[]}\n         */\n        coerceList: function (arrayLike) {\n            var coercedValues = [],\n                factory = this;\n\n            _.each(arrayLike, function (element) {\n                coercedValues.push(factory.coerce(element));\n            });\n\n            return coercedValues;\n        },\n\n        /**\n         * Coerces a JavaScript object to a PHP object instance of the special JSObject class\n         *\n         * @param {Object|Value} value\n         * @return {ObjectValue|Value}\n         * @throws {Error} Throws when a value other than an ObjectValue instance, null or undefined is given\n         */\n        coerceObject: function (value) {\n            var factory = this;\n\n            if (value instanceof Value) {\n                if (value.getType() !== 'object') {\n                    throw new Exception('Tried to coerce a Value of type \"' + value.getType() + '\" to object');\n                }\n\n                return value;\n            }\n\n            if (value === null || typeof value === 'undefined') {\n                return factory.createNull();\n            }\n\n            if (typeof value !== 'object') {\n                throw new Error('Only objects, null or undefined may be coerced to an object');\n            }\n\n            return factory.createObject(value, factory.globalNamespace.getClass('JSObject'));\n        },\n\n        /**\n         * Awaits a promise (in async mode). Throws if in psync or sync mode\n         *\n         * @param {Promise} promise\n         * @returns {Value}\n         */\n        coercePromise: function (promise) {\n            var factory = this,\n                pause;\n\n            if (!factory.pausable) {\n                throw new Exception('Cannot await a promise in non-async mode');\n            }\n\n            pause = factory.pausable.createPause();\n\n            // Wait for the returned promise to resolve or reject before continuing\n            promise.then(function (resultValue) {\n                // Remember we still need to coerce the result\n                pause.resume(factory.coerce(resultValue));\n            }, function (error) {\n                pause.throw(error);\n            });\n\n            return pause.now();\n        },\n\n        /**\n         * Creates a PHP ArrayValue. A custom element provider may optionally be provided,\n         * if special elements are required (for example, HookableElements, which are used\n         * by the special $GLOBALS superglobal for two-way binding to global variables)\n         *\n         * @param {Array} value\n         * @param {ElementProvider|HookableElementProvider=} elementProvider\n         * @return {ArrayValue}\n         */\n        createArray: function (value, elementProvider) {\n            var factory = this;\n\n            return new ArrayValue(\n                factory,\n                factory.callStack,\n                value,\n                null,\n                elementProvider || factory.elementProvider\n            );\n        },\n\n        /**\n         * Creates an ArrayIterator\n         *\n         * @param {ArrayValue|ObjectValue} arrayLikeValue\n         * @returns {ArrayIterator}\n         */\n        createArrayIterator: function (arrayLikeValue) {\n            return new ArrayIterator(arrayLikeValue);\n        },\n\n        /**\n         * Creates a BarewordStringValue\n         *\n         * @param {string} value\n         * @return {BarewordStringValue}\n         */\n        createBarewordString: function (value) {\n            var factory = this;\n\n            return new BarewordStringValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Creates a BooleanValue\n         *\n         * TODO: Consider having only two instances of BooleanValue, one for true and one for false,\n         *       to save on memory usage\n         *\n         * @param {boolean} value\n         * @return {BooleanValue}\n         */\n        createBoolean: function (value) {\n            var factory = this;\n\n            return new BooleanValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Instantiates a PHP Closure instance with the given internal closure object\n         *\n         * @param {Closure} closure Internal closure object\n         * @return {ObjectValue}\n         */\n        createClosureObject: function (closure) {\n            var factory = this,\n                closureClass = factory.globalNamespace.getClass('Closure');\n\n            return closureClass.instantiateWithInternals([], {\n                'closure': closure\n            });\n        },\n\n        /**\n         * Creates an ObjectValue wrapping a PHP Error instance (eg. a call to an undefined method)\n         *\n         * @param {string} className eg. Error, ParseError, DivisionByZeroError\n         * @param {string|null=} message\n         * @param {number|null=} code\n         * @param {ObjectValue|null=} previousThrowable\n         * @param {string=} filePath To override the file path\n         * @param {number=} lineNumber To override the line number\n         * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n         * @returns {ObjectValue}\n         */\n        createErrorObject: function (\n            className,\n            message,\n            code,\n            previousThrowable,\n            filePath,\n            lineNumber,\n            reportsOwnContext\n        ) {\n            var factory = this,\n                errorObject = factory.globalNamespace.getClass(className).instantiate([\n                    factory.createString(message || ''),\n                    factory.createInteger(code || 0),\n                    previousThrowable || factory.createNull()\n                ]);\n\n            if (reportsOwnContext) {\n                errorObject.setInternalProperty('reportsOwnContext', true);\n            }\n\n            // File and line cannot be passed as constructor args,\n            // so we need to manually set them here if specified\n\n            if (filePath !== null && filePath !== undefined) {\n                errorObject.setProperty('file', factory.createString(filePath));\n            }\n\n            if (lineNumber !== null && lineNumber !== undefined) {\n                errorObject.setProperty('line', factory.createInteger(lineNumber));\n            }\n\n            return errorObject;\n        },\n\n        /**\n         * Creates an ExitValue. This is a special type of value only returned as the result\n         * of an `exit;` or `die;` statement being executed from PHP\n         *\n         * @param {Value} statusValue\n         * @return {ExitValue}\n         */\n        createExit: function (statusValue) {\n            var factory = this;\n\n            return new ExitValue(factory, factory.callStack, statusValue);\n        },\n\n        /**\n         * Creates a FloatValue\n         *\n         * @param {number} value\n         * @return {FloatValue}\n         */\n        createFloat: function (value) {\n            var factory = this;\n\n            return new FloatValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Coerces a native JavaScript value to a suitable *Value object,\n         * based on its type. For example, a string primitive value from JS\n         * will be coerced to a StringValue instance for PHP\n         *\n         * @param {*} nativeValue\n         * @returns {Value}\n         */\n        createFromNative: function (nativeValue) {\n            var factory = this;\n\n            if (nativeValue === null || typeof nativeValue === 'undefined') {\n                return factory.createNull();\n            }\n\n            if (_.isString(nativeValue)) {\n                return factory.createString(nativeValue);\n            }\n\n            if (_.isNumber(nativeValue)) {\n                return factory.createInteger(nativeValue);\n            }\n\n            if (_.isBoolean(nativeValue)) {\n                return factory.createBoolean(nativeValue);\n            }\n\n            if (_.isArray(nativeValue)) {\n                return factory.createFromNativeArray(nativeValue);\n            }\n\n            return factory.createFromNativeObject(nativeValue);\n        },\n\n        /**\n         * Coerces a native JavaScript object to either an ArrayValue or ObjectValue object,\n         * depending on its suitability to be cast as an associative array\n         *\n         * @param {object} nativeObject\n         * @returns {ArrayValue|ObjectValue}\n         */\n        createFromNativeObject: function (nativeObject) {\n            var factory = this,\n                hasAMethod = false,\n                orderedElements = [];\n\n            if (nativeObject instanceof PHPObject) {\n                // PHPObjects wrap instances of PHP classes when exported with .getProxy()\n                return nativeObject.getObjectValue();\n            }\n\n            if (factory.valueStorage.hasObjectValueForExport(nativeObject)) {\n                // Objects exported with .getNative() are mapped back to their original ObjectValue\n                return factory.valueStorage.getObjectValueForExport(nativeObject);\n            }\n\n            // Handle plain objects -> associative arrays\n            if (Object.getPrototypeOf(nativeObject) === Object.prototype) {\n                _.forOwn(nativeObject, function (value) {\n                    if (_.isFunction(value)) {\n                        hasAMethod = true;\n                        return false;\n                    }\n                });\n\n                if (!hasAMethod) {\n                    // Plain object has no methods: can be safely cast to an associative array\n                    _.forOwn(nativeObject, function (value, key) {\n                        orderedElements.push(new KeyValuePair(factory.coerce(key), factory.coerce(value)));\n                    });\n\n                    return factory.createArray(orderedElements);\n                }\n\n                // Plain object, but has methods: needs to be cast to a JSObject\n            }\n\n            return factory.createObject(nativeObject, factory.globalNamespace.getClass('JSObject'));\n        },\n\n        /**\n         * Takes a native Array object and converts it to a wrapped ArrayValue for PHP\n         *\n         * @param {Array} nativeArray\n         * @returns {ArrayValue}\n         */\n        createFromNativeArray: function (nativeArray) {\n            var factory = this,\n                orderedElements = [];\n\n            _.each(nativeArray, function (value, index) {\n                orderedElements[index] = value;\n            });\n\n            _.forOwn(nativeArray, function (value, key) {\n                if (!isFinite(key) || key >= nativeArray.length) {\n                    orderedElements.push(new KeyValuePair(factory.coerce(key), factory.coerce(value)));\n                }\n            });\n\n            return factory.createArray(orderedElements);\n        },\n\n        /**\n         * Creates an IntegerValue\n         *\n         * @param {number} value\n         * @return {IntegerValue}\n         */\n        createInteger: function (value) {\n            var factory = this;\n\n            return new IntegerValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Creates a NullValue\n         *\n         * Note that there is only ever a single instance of NullValue to save on memory usage.\n         *\n         * @return {NullValue}\n         */\n        createNull: function () {\n            var factory = this;\n\n            if (factory.nullValue === null) {\n                factory.nullValue = new NullValue(factory, factory.callStack);\n            }\n\n            return factory.nullValue;\n        },\n\n        /**\n         * Creates an ObjectValue for a given native value and class\n         *\n         * @param {object} nativeValue\n         * @param {Class} classObject\n         * @returns {ObjectValue}\n         */\n        createObject: function (nativeValue, classObject) {\n            var factory = this;\n\n            // Object ID tracking is incomplete: ID should be freed when all references are lost\n            return new ObjectValue(\n                factory,\n                factory.callStack,\n                factory.translator,\n                nativeValue,\n                classObject,\n                factory.nextObjectID++\n            );\n        },\n\n        /**\n         * Creates an instance of the builtin stdClass class\n         *\n         * @return {ObjectValue}\n         */\n        createStdClassObject: function () {\n            var factory = this;\n\n            return factory.globalNamespace.getClass('stdClass').instantiate();\n        },\n\n        /**\n         * Creates a StringValue\n         *\n         * @param {string} value\n         * @return {StringValue}\n         */\n        createString: function (value) {\n            var factory = this;\n\n            return new StringValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Creates an ObjectValue wrapping a PHP Error instance (eg. a call to an undefined method)\n         *\n         * @param {string} className eg. Error, ParseError, DivisionByZeroError\n         * @param {string} translationKey\n         * @param {Object.<string, string>=} placeholderVariables\n         * @param {number|null=} code\n         * @param {ObjectValue|null=} previousThrowable\n         * @param {string=} filePath To override the file path\n         * @param {number=} lineNumber To override the line number\n         * @returns {ObjectValue}\n         */\n        createTranslatedErrorObject: function (\n            className,\n            translationKey,\n            placeholderVariables,\n            code,\n            previousThrowable,\n            filePath,\n            lineNumber\n        ) {\n            var factory = this,\n                message = factory.translator.translate(translationKey, placeholderVariables);\n\n            return factory.createErrorObject(\n                className,\n                message,\n                code,\n                previousThrowable,\n                filePath,\n                lineNumber\n            );\n        },\n\n        /**\n         * Creates an ObjectValue wrapping a PHP Exception instance (eg. a RuntimeException)\n         *\n         * @param {string} className eg. Exception, LogicException, RuntimeException\n         * @param {string} translationKey\n         * @param {Object.<string, string>=} placeholderVariables\n         * @param {number|null=} code\n         * @param {ObjectValue|null=} previousThrowable\n         * @returns {ObjectValue}\n         */\n        createTranslatedExceptionObject: function (\n            className,\n            translationKey,\n            placeholderVariables,\n            code,\n            previousThrowable\n        ) {\n            var factory = this,\n                message = factory.translator.translate(translationKey, placeholderVariables);\n\n            return factory.instantiateObject(\n                className,\n                [\n                    message,\n                    code,\n                    previousThrowable\n                ]\n            );\n        },\n\n        /**\n         * Creates an ObjectValue instance of the specified class\n         *\n         * @param {string} className\n         * @param {Array} constructorArgNatives\n         * @returns {ObjectValue}\n         */\n        instantiateObject: function (className, constructorArgNatives) {\n            var factory = this,\n                constructorArgValues = _.map(constructorArgNatives, function (argNative) {\n                    return factory.coerce(argNative);\n                });\n\n            return factory.globalNamespace.getClass(className).instantiate(constructorArgValues);\n        },\n\n        /**\n         * Determines whether the given object is a PHP Value instance\n         *\n         * @param {Object} object\n         * @return {boolean}\n         */\n        isValue: function (object) {\n            return object instanceof Value;\n        },\n\n        /**\n         * Sets the CallStack to use for created value objects\n         *\n         * @param {CallStack} callStack\n         */\n        setCallStack: function (callStack) {\n            this.callStack = callStack;\n        },\n\n        /**\n         * Sets the root/global namespace\n         *\n         * @param {Namespace} globalNamespace\n         */\n        setGlobalNamespace: function (globalNamespace) {\n            this.globalNamespace = globalNamespace;\n        }\n    });\n\n    return ValueFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Used by transpiled foreach(...) statements to iterate over the elements in an array\n * or the properties of an object that does not implement Traversable\n *\n * @param {ArrayValue|ObjectValue} arrayLikeValue\n * @constructor\n */\nfunction ArrayIterator(arrayLikeValue) {\n    /**\n     * @type {ArrayValue|ObjectValue}\n     */\n    this.arrayLikeValue = arrayLikeValue;\n    /**\n     * @type {number}\n     */\n    this.pointer = 0;\n}\n\n_.extend(ArrayIterator.prototype, {\n    /**\n     * Advances this iterator to the next element\n     */\n    advance: function () {\n        this.pointer++;\n    },\n\n    /**\n     * Fetches a reference to the element this iterator is currently pointing at\n     *\n     * @returns {Reference}\n     */\n    getCurrentElementReference: function () {\n        var iterator = this;\n\n        return iterator.arrayLikeValue.getElementByIndex(iterator.pointer).getReference();\n    },\n\n    /**\n     * Fetches the value of the element this iterator is currently pointing at\n     *\n     * @returns {Value}\n     */\n    getCurrentElementValue: function () {\n        var iterator = this;\n\n        return iterator.arrayLikeValue.getElementByIndex(iterator.pointer).getValue();\n    },\n\n    /**\n     * Fetches the key of the element this iterator is currently pointing at.\n     * If the array is empty or the pointer is past the end of the array,\n     * null will be returned.\n     *\n     * @returns {Value|null}\n     */\n    getCurrentKey: function () {\n        var iterator = this;\n\n        return iterator.arrayLikeValue.getKeyByIndex(iterator.pointer);\n    },\n\n    /**\n     * Fetches the ArrayValue or ObjectValue that this iterator iterates over\n     *\n     * @returns {ArrayValue|ObjectValue}\n     */\n    getIteratedValue: function () {\n        return this.arrayLikeValue;\n    },\n\n    /**\n     * Determines whether this iterator is pointing past the end of the array being iterated over\n     *\n     * @returns {boolean}\n     */\n    isNotFinished: function () {\n        var iterator = this;\n\n        return iterator.pointer < iterator.arrayLikeValue.getLength();\n    }\n});\n\nmodule.exports = ArrayIterator;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Reference/Element'),\n    require('../KeyReferencePair'),\n    require('../KeyValuePair'),\n    require('../Reference/Null'),\n    require('../Reference/Reference'),\n    require('../Value'),\n    require('../Variable')\n], function (\n    _,\n    phpCommon,\n    util,\n    ElementReference,\n    KeyReferencePair,\n    KeyValuePair,\n    NullReference,\n    Reference,\n    Value,\n    Variable\n) {\n    var FUNCTION_NAME_MUST_BE_STRING = 'core.function_name_must_be_string',\n        UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types',\n        hasOwn = {}.hasOwnProperty,\n        PHPError = phpCommon.PHPError,\n        /**\n         * Prefixes any key called `length` with an underscore to avoid collisions\n         * with the native array `length` property (an array is used to maintain numeric indices).\n         * Any key that is already `_length` must also be prefixed again to avoid collisions there too.\n         *\n         * @param {*} keyNative\n         * @returns {*}\n         */\n        sanitiseKey = function (keyNative) {\n            if (typeof keyNative === 'number') {\n                return keyNative;\n            }\n\n            if (typeof keyNative === 'string') {\n                return keyNative.replace(/^_*length/, '_$&');\n            }\n\n            return keyNative;\n        };\n\n    function ArrayValue(factory, callStack, orderedElements, type, elementProvider) {\n        var elements = [],\n            keysToElements = [],\n            value = this;\n\n        _.each(orderedElements, function (orderedElement, key) {\n            var element,\n                elementReference = null,\n                elementValue = null;\n\n            if (orderedElement instanceof KeyValuePair) {\n                key = orderedElement.getKey();\n                elementValue = orderedElement.getValue();\n            } else if (orderedElement instanceof KeyReferencePair) {\n                key = orderedElement.getKey();\n                elementReference = orderedElement.getReference();\n            } else {\n                if (_.isNumber(key)) {\n                    key = factory.createInteger(keysToElements.length);\n                } else {\n                    key = factory.createFromNative(key);\n                }\n\n                if (orderedElement instanceof Reference) {\n                    elementReference = orderedElement;\n                } else if (orderedElement instanceof Variable) {\n                    // TODO: Prevent Variables ever being passed to the ArrayValue ctor, only References\n                    elementValue = orderedElement.getValue();\n                } else {\n                    elementValue = factory.coerce(orderedElement);\n                }\n            }\n\n            if (elementValue) {\n                element = elementProvider.createElement(factory, callStack, value, key, elementValue);\n            } else {\n                element = elementProvider.createElement(factory, callStack, value, key, null, elementReference);\n            }\n\n            elements.push(element);\n            keysToElements[sanitiseKey(key.getNative())] = element;\n        });\n\n        Value.call(this, factory, callStack, type || 'array', elements);\n\n        this.elementProvider = elementProvider;\n        this.keysToElements = keysToElements;\n        this.pointer = 0;\n    }\n\n    util.inherits(ArrayValue, Value);\n\n    _.extend(ArrayValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToArray(this);\n        },\n\n        addToArray: function (leftValue) {\n            var rightValue = this,\n                resultArray = leftValue.getForAssignment();\n\n            _.forOwn(rightValue.keysToElements, function (element, key) {\n                if (!hasOwn.call(resultArray.keysToElements, key)) {\n                    resultArray.getElementByKey(element.getKey()).setValue(element.getValue());\n                }\n            });\n\n            return resultArray;\n        },\n\n        /**\n         * Adds this value to a boolean\n         */\n        addToBoolean: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to a float\n         */\n        addToFloat: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to an integer\n         */\n        addToInteger: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to null\n         */\n        addToNull: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to an object\n         */\n        addToObject: function (objectValue) {\n            return objectValue.addToArray(this);\n        },\n\n        /**\n         * Adds this value to a string\n         */\n        addToString: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Calls a static or instance method, referenced by the first two elements of this array\n         *\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         * @throws {PHPFatalError} Throws when the given function name is not a string\n         */\n        call: function (args, namespaceOrNamespaceScope) {\n            var methodNameValue,\n                objectOrClassValue,\n                arrayValue = this,\n                value = arrayValue.value;\n\n            if (value.length < 2) {\n                arrayValue.callStack.raiseTranslatedError(PHPError.E_ERROR, FUNCTION_NAME_MUST_BE_STRING);\n            }\n\n            objectOrClassValue = value[0].getValue();\n            methodNameValue = value[1].getValue();\n\n            if (objectOrClassValue.getType() === 'string') {\n                return objectOrClassValue.callStaticMethod(\n                    methodNameValue,\n                    args,\n                    namespaceOrNamespaceScope\n                );\n            }\n\n            return objectOrClassValue.callMethod(\n                methodNameValue.getNative(),\n                args,\n                namespaceOrNamespaceScope\n            );\n        },\n\n        coerceToArray: function () {\n            return this;\n        },\n\n        coerceToBoolean: function () {\n            var value = this;\n\n            return value.factory.createBoolean(value.value.length > 0);\n        },\n\n        coerceToInteger: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value.length === 0 ? 0 : 1);\n        },\n\n        coerceToKey: function () {\n            this.callStack.raiseError(PHPError.E_WARNING, 'Illegal offset type');\n        },\n\n        coerceToNumber: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToObject: function () {\n            var value = this,\n                object = value.factory.createStdClassObject();\n\n            _.each(value.value, function (element) {\n                object.getInstancePropertyByName(element.getKey()).setValue(element.getValue());\n            });\n\n            return object;\n        },\n\n        coerceToString: function () {\n            return this.factory.createString('Array');\n        },\n\n        defineElement: function (elementReference) {\n            var value = this;\n\n            if (value.value.indexOf(elementReference) === -1) {\n                value.value.push(elementReference);\n            }\n        },\n\n        formatAsString: function () {\n            return 'Array';\n        },\n\n        /**\n         * Fetches a copy of this array, as in PHP arrays are always passed by value\n         * and not by reference\n         *\n         * @return {ArrayValue}\n         */\n        getForAssignment: function () {\n            var arrayValue = this,\n                orderedElements = [];\n\n            _.each(arrayValue.value, function (element) {\n                if (element.isDefined()) {\n                    orderedElements.push(element.getPairForAssignment());\n                }\n            });\n\n            return new ArrayValue(\n                arrayValue.factory,\n                arrayValue.callStack,\n                orderedElements,\n                arrayValue.type,\n                arrayValue.elementProvider\n            );\n        },\n\n        getKeys: function () {\n            var keys = [];\n\n            _.each(this.value, function (element) {\n                keys.push(element.getKey());\n            });\n\n            return keys;\n        },\n\n        /**\n         * Exports a wrapped PHP indexed array to a native array, or\n         * an associative array to a plain JS object\n         *\n         * @returns {Array|object}\n         */\n        getNative: function () {\n            var hasNonNumericKey = false,\n                result = [],\n                value = this;\n\n            _.each(value.value, function (element) {\n                // Treat string keys that have a numeric value as numeric\n                if (!isFinite(element.getKey().getNative())) {\n                    hasNonNumericKey = true;\n                }\n            });\n\n            result = hasNonNumericKey ? {} : [];\n\n            _.each(value.value, function (element) {\n                result[element.getKey().getNative()] = element.getValue().getNative();\n            });\n\n            return result;\n        },\n\n        getCurrentElement: function () {\n            var value = this;\n\n            return value.value[value.pointer] || value.factory.createNull();\n        },\n\n        getElementByKey: function (key) {\n            var element,\n                keyValue,\n                value = this;\n\n            key = key.coerceToKey(value.callStack);\n\n            if (!key) {\n                // Could not be coerced to a key: error will already have been handled, just return NULL\n                return new NullReference(value.factory);\n            }\n\n            keyValue = sanitiseKey(key.getNative());\n\n            if (!hasOwn.call(value.keysToElements, keyValue)) {\n                element = value.elementProvider.createElement(value.factory, value.callStack, value, key, null);\n\n                value.keysToElements[keyValue] = element;\n            }\n\n            return value.keysToElements[keyValue];\n        },\n\n        getElementByIndex: function (index) {\n            var value = this;\n\n            return value.value[index] || (function () {\n                    value.callStack.raiseError(PHPError.E_NOTICE, 'Undefined ' + value.referToElement(index));\n\n                    return new NullReference(value.factory);\n                }());\n        },\n\n        /**\n         * Fetches a KeyValuePair or KeyReferencePair for the specified array element,\n         * optionally allowing the key to be overridden\n         *\n         * @param {Value} key\n         * @param {Value|undefined} overrideKey\n         * @returns {KeyValuePair|KeyReferencePair}\n         */\n        getElementPairByKey: function (key, overrideKey) {\n            return this.getElementByKey(key).getPairForAssignment(overrideKey);\n        },\n\n        /**\n         * Creates an ArrayIterator for iterating over this array. Used by transpiled foreach loops.\n         *\n         * @returns {ArrayIterator}\n         */\n        getIterator: function () {\n            var value = this;\n\n            return value.factory.createArrayIterator(value);\n        },\n\n        getValueReferences: function () {\n            var references = [];\n\n            _.each(this.value, function (element) {\n                references.push(element.getValueReference());\n            });\n\n            return references;\n        },\n\n        getKeyByIndex: function (index) {\n            var value = this,\n                element = value.value[index];\n\n            return element ? element.key : null;\n        },\n\n        getLength: function () {\n            return this.value.length;\n        },\n\n        getPointer: function () {\n            return this.pointer;\n        },\n\n        getPushElement: function () {\n            var value = this;\n\n            return value.elementProvider.createElement(value.factory, value.callStack, value, null, null);\n        },\n\n        getValues: function () {\n            var values = [];\n\n            _.each(this.value, function (element) {\n                values.push(element.getValue());\n            });\n\n            return values;\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfArray(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function (globalNamespace) {\n            var classObject,\n                methodNameValue,\n                objectOrClassValue,\n                arrayValue = this,\n                value = arrayValue.value;\n\n            if (value.length < 2) {\n                return false;\n            }\n\n            objectOrClassValue = value[0].getValue();\n            methodNameValue = value[1].getValue();\n\n            if (objectOrClassValue.getType() === 'string') {\n                if (!globalNamespace.hasClass(objectOrClassValue.getNative())) {\n                    return false;\n                }\n\n                classObject = globalNamespace.getClass(objectOrClassValue.getNative());\n            } else if (objectOrClassValue.getType() === 'object') {\n                classObject = objectOrClassValue.getClass();\n            } else {\n                // First element must either be an object or a string\n                return false;\n            }\n\n            if (methodNameValue.getType() !== 'string') {\n                // Second, method name element must be a string containing the name of a method\n                return false;\n            }\n\n            return classObject.getMethodSpec(methodNameValue.getNative()) !== null;\n        },\n\n        /**\n         * Determines whether this array is classed as \"empty\" or not.\n         * Only empty arrays (with no elements) are classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value.length === 0;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToArray(this);\n        },\n\n        isEqualToNull: function () {\n            var value = this;\n\n            return value.factory.createBoolean(value.value.length === 0);\n        },\n\n        isEqualToArray: function (rightValue) {\n            var equal = true,\n                leftValue = this,\n                factory = leftValue.factory;\n\n            if (rightValue.value.length !== leftValue.value.length) {\n                return factory.createBoolean(false);\n            }\n\n            _.forOwn(rightValue.keysToElements, function (element, nativeKey) {\n                if (!hasOwn.call(leftValue.keysToElements, nativeKey) || element.getValue().isNotEqualTo(leftValue.keysToElements[nativeKey].getValue()).getNative()) {\n                    equal = false;\n                    return false;\n                }\n            });\n\n            return factory.createBoolean(equal);\n        },\n\n        isEqualToBoolean: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.getNative() === (leftValue.value.length > 0));\n        },\n\n        isEqualToFloat: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToInteger: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToObject: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isIdenticalTo: function (rightValue) {\n            return rightValue.isIdenticalToArray(this);\n        },\n\n        isIdenticalToArray: function (rightValue) {\n            var identical = true,\n                leftValue = this,\n                factory = leftValue.factory;\n\n            if (rightValue.value.length !== leftValue.value.length) {\n                return factory.createBoolean(false);\n            }\n\n            _.each(rightValue.value, function (element, index) {\n                if (\n                    leftValue.value[index].getKey().isNotIdenticalTo(element.getKey()).getNative() ||\n                    leftValue.value[index].getValue().isNotIdenticalTo(element.getValue()).getNative()\n                ) {\n                    identical = false;\n                    return false;\n                }\n            });\n\n            return factory.createBoolean(identical);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return true;\n        },\n\n        /**\n         * Arrays are never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        next: function () {\n            this.pointer++;\n        },\n\n        /**\n         * Calculates the ones' complement of this value\n         */\n        onesComplement: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        pointToElement: function (elementReference) {\n            var value = this;\n\n            _.each(value.value, function (element, index) {\n                if (element.getKey().isEqualTo(elementReference.getKey()).getNative()) {\n                    value.setPointer(index);\n                }\n            });\n        },\n\n        /**\n         * Removes the last element from the array and then returns it, if any.\n         * If the array is empty (so that there is no last element), NULL is returned\n         *\n         * @returns {Value}\n         */\n        pop: function () {\n            var value = this,\n                length = value.getLength();\n\n            if (length === 0) {\n                // Array is empty: nothing to pop off\n                return value.factory.createNull();\n            }\n\n            delete value.keysToElements[value.getKeyByIndex(length - 1).getNative()];\n\n            value.pointer = 0;\n\n            return value.value.pop().getValue();\n        },\n\n        /**\n         * Pushes an indexed element onto the array and then returns the array\n         *\n         * @param {Value} otherValue\n         * @returns {ArrayValue}\n         */\n        push: function (otherValue) {\n            var value = this,\n                index = value.factory.createInteger(value.keysToElements.length);\n\n            value.getElementByKey(index).setValue(otherValue);\n\n            return value;\n        },\n\n        /**\n         * Pushes an indexed element onto the array and then returns the key generated for it\n         *\n         * @param {ElementReference} elementReference\n         * @returns {IntegerValue}\n         */\n        pushElement: function (elementReference) {\n            var value = this,\n                key = value.keysToElements.length,\n                keyValue;\n\n            value.keysToElements[key] = elementReference;\n            value.value.push(elementReference);\n\n            keyValue = value.factory.createInteger(key);\n            elementReference.setKey(keyValue);\n\n            return keyValue;\n        },\n\n        referToElement: function (key) {\n            return 'offset: ' + key;\n        },\n\n        reset: function () {\n            var value = this;\n\n            value.pointer = 0;\n\n            return value;\n        },\n\n        setPointer: function (pointer) {\n            this.pointer = pointer;\n        },\n\n        /**\n         * Removes the first element from the array, returning it\n         * and renumbering any numeric keys\n         *\n         * @returns {Value}\n         */\n        shift: function () {\n            var value = this,\n                elements = value.value,\n                newElements = [],\n                newKeysToElements = {},\n                nextNumericKey = 0;\n\n            if (elements.length === 0) {\n                return value.factory.createNull();\n            }\n\n            _.each(elements.slice(1), function (element) {\n                var key = element.getKey(),\n                    nativeKey = key.getNative();\n\n                if (isFinite(nativeKey)) {\n                    // All numeric keys need to be renumbered to start from zero\n                    nativeKey = nextNumericKey++;\n                    key = value.factory.createInteger(nativeKey);\n                }\n\n                element = value.elementProvider.createElement(value.factory, value.callStack, value, key, element.getValue());\n\n                newKeysToElements[sanitiseKey(nativeKey)] = element;\n                newElements.push(element);\n            });\n\n            // Internal array pointer needs to be reset to the start of the array.\n            // As we are removing an element and renumbering any numerically indexed ones,\n            // the pointer could be left invalid if we didn't anyway\n            value.pointer = 0;\n            value.keysToElements = newKeysToElements;\n            value.value = newElements;\n\n            return elements[0].getValue();\n        },\n\n        shiftLeftBy: function (rightValue) {\n            return this.coerceToInteger().shiftLeftBy(rightValue);\n        },\n\n        shiftRightBy: function (rightValue) {\n            return this.coerceToInteger().shiftRightBy(rightValue);\n        },\n\n        sort: function (callback) {\n            this.value.sort(callback);\n        }\n    });\n\n    return ArrayValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('util'),\n    require('./String')\n], function (\n    _,\n    util,\n    StringValue\n) {\n    function BarewordStringValue(factory, callStack, value) {\n        StringValue.call(this, factory, callStack, value);\n    }\n\n    util.inherits(BarewordStringValue, StringValue);\n\n    _.extend(BarewordStringValue.prototype, {\n        call: function (args, namespaceOrNamespaceScope) {\n            return namespaceOrNamespaceScope.getFunction(this.value).apply(null, args);\n        },\n\n        /**\n         * Calls a static method of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @param {bool} isForwarding eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value}\n         */\n        callStaticMethod: function (nameValue, args, namespaceOrNamespaceScope, isForwarding) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getClass(value.value);\n\n            return classObject.callMethod(nameValue.getNative(), args, null, null, null, isForwarding);\n        },\n\n        /**\n         * Fetches the fully-qualified version of this name (function or class)\n         *\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {StringValue}\n         */\n        getCallableName: function (namespaceOrNamespaceScope) {\n            var rightValue = this,\n                resolvedClass = namespaceOrNamespaceScope.resolveClass(rightValue.value);\n\n            return resolvedClass.namespace.getPrefix() + resolvedClass.name;\n        },\n\n        /**\n         * Fetches the value of a constant from the class this string refers to\n         *\n         * @param {string} name\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getConstantByName: function (name, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getClass(value.value);\n\n            return classObject.getConstantByName(name);\n        },\n\n        /**\n         * Fetches the value of a static property of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getStaticPropertyByName: function (nameValue, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getClass(value.value);\n\n            return classObject.getStaticPropertyByName(nameValue.getNative());\n        },\n\n        /**\n         * Creates an instance of the class this string contains the name of,\n         * relative to the current namespace\n         *\n         * @param {Value[]} args\n         * @param {NamespaceScope} namespaceScope\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args, namespaceScope) {\n            var value = this,\n                classObject = namespaceScope.getClass(value.value);\n\n            return classObject.instantiate(args);\n        },\n\n        /**\n         * Determines whether the class this string references is the class of the specified object\n         *\n         * @param {ObjectValue} objectValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {BooleanValue}\n         */\n        isTheClassOfObject: function (objectValue, namespaceOrNamespaceScope) {\n            var rightValue = this,\n                fqcn = rightValue.getCallableName(namespaceOrNamespaceScope);\n\n            return rightValue.factory.createBoolean(\n                objectValue.classIs(fqcn)\n            );\n        }\n    });\n\n    return BarewordStringValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types',\n        PHPError = phpCommon.PHPError;\n\n    function BooleanValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'boolean', !!value);\n    }\n\n    util.inherits(BooleanValue, Value);\n\n    _.extend(BooleanValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToBoolean(this);\n        },\n\n        addToBoolean: function (rightValue) {\n            var value = this;\n\n            return value.factory.createInteger(value.value + rightValue.value);\n        },\n\n        addToInteger: function (integerValue) {\n            return integerValue.addToBoolean(this);\n        },\n\n        addToNull: function () {\n            return this.coerceToInteger();\n        },\n\n        addToObject: function (objectValue) {\n            return objectValue.addToBoolean(this);\n        },\n\n        coerceToBoolean: function () {\n            return this;\n        },\n\n        coerceToInteger: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value ? 1 : 0);\n        },\n\n        coerceToKey: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToNumber: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToString: function () {\n            var value = this;\n\n            return value.factory.createString(value.value ? '1' : '');\n        },\n\n        /**\n         * Divides this boolean by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByBoolean(this);\n        },\n\n        /**\n         * Divides a non-array value by this boolean\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative(),\n                quotient;\n\n            if (divisor === false) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n            quotient = coercedLeftValue.getNative() / divisor;\n\n            return coercedLeftValue.getType() === 'float' ?\n                rightValue.factory.createFloat(quotient) :\n                rightValue.factory.createInteger(quotient);\n        },\n\n        formatAsString: function () {\n            return this.value ? 'true' : 'false';\n        },\n\n        getElement: function () {\n            // Array access on booleans always returns null, no notice or warning is raised\n            return this.factory.createNull();\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfBoolean(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Determines whether this boolean is classed as \"empty\" or not.\n         * Only false is classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value === false;\n        },\n\n        isEqualTo: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(rightValue.coerceToBoolean().value === leftValue.value);\n        },\n\n        isEqualToObject: function () {\n            return this;\n        },\n\n        isEqualToString: function (stringValue) {\n            var booleanValue = this;\n\n            return stringValue.factory.createBoolean(\n                stringValue.coerceToBoolean().getNative() === booleanValue.getNative()\n            );\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Booleans are never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        /**\n         * Multiplies this boolean by the specified value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByBoolean(this);\n        },\n\n        /**\n         * Multiplies a non-array value by this boolean\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedLeftValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.getNative(),\n                product = coercedLeftValue.getNative() * multiplier;\n\n            return coercedLeftValue.getType() === 'float' ?\n                rightValue.factory.createFloat(product) :\n                rightValue.factory.createInteger(product);\n        },\n\n        /**\n         * Calculates the ones' complement of this value\n         */\n        onesComplement: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        shiftLeftBy: function (rightValue) {\n            return this.coerceToInteger().shiftLeftBy(rightValue);\n        },\n\n        shiftRightBy: function (rightValue) {\n            return this.coerceToInteger().shiftRightBy(rightValue);\n        }\n    });\n\n    return BooleanValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function FloatValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'float', value);\n    }\n\n    util.inherits(FloatValue, Value);\n\n    _.extend(FloatValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToFloat(this);\n        },\n\n        addToBoolean: function (booleanValue) {\n            var value = this;\n\n            return value.factory.createFloat(value.value + Number(booleanValue.value));\n        },\n\n        addToInteger: function (integerValue) {\n            var value = this;\n\n            return value.factory.createFloat(value.value + integerValue.value);\n        },\n\n        addToObject: function (objectValue) {\n            return objectValue.addToFloat(this);\n        },\n\n        addToNull: function () {\n            return this.coerceToNumber();\n        },\n\n        coerceToBoolean: function () {\n            var value = this;\n\n            return value.factory.createBoolean(!!value.value);\n        },\n\n        coerceToFloat: function () {\n            return this;\n        },\n\n        coerceToInteger: function () {\n            /*jshint bitwise: false */\n            var value = this;\n\n            return value.factory.createInteger(value.value >> 0);\n        },\n\n        coerceToKey: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToNumber: function () {\n            return this;\n        },\n\n        coerceToString: function () {\n            var value = this;\n\n            return value.factory.createString(value.value + '');\n        },\n\n        /**\n         * Divides this float by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByFloat(this);\n        },\n\n        /**\n         * Divides a non-array value by this float\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative();\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() / divisor);\n        },\n\n        formatAsString: function () {\n            return this.value + '';\n        },\n\n        getElement: function () {\n            // Array access on floats always returns null, no notice or warning is raised\n            return this.factory.createNull();\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfFloat(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Determines whether this float is classed as \"empty\" or not.\n         * Only zero is classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value === 0;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToFloat(this);\n        },\n\n        isEqualToFloat: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.value === leftValue.value);\n        },\n\n        isEqualToInteger: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.coerceToFloat().value === leftValue.value);\n        },\n\n        isEqualToNull: function () {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(leftValue.value === 0);\n        },\n\n        isEqualToObject: function (objectValue) {\n            return objectValue.isEqualToFloat(this);\n        },\n\n        isEqualToString: function (stringValue) {\n            var floatValue = this;\n\n            return floatValue.factory.createBoolean(floatValue.value === stringValue.coerceToFloat().value);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Floats are always numeric: always returns true\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return true;\n        },\n\n        /**\n         * Multiplies this float by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByFloat(this);\n        },\n\n        /**\n         * Multiplies a non-array value by this float\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedMultiplicand = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.value;\n\n            return rightValue.factory.createFloat(coercedMultiplicand.getNative() * multiplier);\n        },\n\n        onesComplement: function () {\n            /*jshint bitwise: false */\n            return this.factory.createInteger(~this.value);\n        },\n\n        shiftLeftBy: function (rightValue) {\n            return this.coerceToInteger().shiftLeftBy(rightValue);\n        },\n\n        shiftRightBy: function (rightValue) {\n            return this.coerceToInteger().shiftRightBy(rightValue);\n        },\n\n        subtract: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            rightValue = rightValue.coerceToNumber();\n\n            return factory.createFloat(leftValue.getNative() - rightValue.getNative());\n        },\n\n        toNegative: function () {\n            var value = this;\n\n            return value.factory.createFloat(-value.value);\n        },\n\n        toPositive: function () {\n            var value = this;\n\n            return value.factory.createInteger(+value.value);\n        }\n    });\n\n    return FloatValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function IntegerValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'int', value);\n    }\n\n    util.inherits(IntegerValue, Value);\n\n    _.extend(IntegerValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToInteger(this);\n        },\n\n        addToBoolean: function (booleanValue) {\n            var value = this;\n\n            return value.factory.createInteger(value.value + booleanValue.value);\n        },\n\n        addToInteger: function (rightValue) {\n            var value = this;\n\n            return value.factory.createInteger(value.value + rightValue.value);\n        },\n\n        coerceToBoolean: function () {\n            var value = this;\n\n            return value.factory.createBoolean(!!value.value);\n        },\n\n        coerceToFloat: function () {\n            var value = this;\n\n            return value.factory.createFloat(value.value);\n        },\n\n        coerceToInteger: function () {\n            return this;\n        },\n\n        coerceToKey: function () {\n            return this;\n        },\n\n        coerceToNumber: function () {\n            return this;\n        },\n\n        coerceToString: function () {\n            var value = this;\n\n            return value.factory.createString(value.value.toString());\n        },\n\n        decrement: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value - 1);\n        },\n\n        /**\n         * Divides this integer by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByInteger(this);\n        },\n\n        /**\n         * Divides a float value by this integer\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        divideByFloat: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative();\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() / divisor);\n        },\n\n        /**\n         * Divides a non-array value by this integer\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative(),\n                quotient;\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            quotient = coercedLeftValue.getNative() / divisor;\n\n            // Return result as a float if needed, otherwise keep as integer\n            return Math.round(quotient) === quotient ?\n                rightValue.factory.createInteger(quotient) :\n                rightValue.factory.createFloat(quotient);\n        },\n\n        formatAsString: function () {\n            return this.value + '';\n        },\n\n        getElement: function () {\n            // Array access on integers always returns null, no notice or warning is raised\n            return this.factory.createNull();\n        },\n\n        increment: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value + 1);\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfInteger(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Determines whether this integer is classed as \"empty\" or not.\n         * Only zero is classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value === 0;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToInteger(this);\n        },\n\n        isEqualToInteger: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.value === leftValue.value);\n        },\n\n        isEqualToNull: function () {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(leftValue.value === 0);\n        },\n\n        isEqualToObject: function (objectValue) {\n            return objectValue.isEqualToInteger(this);\n        },\n\n        isEqualToString: function (stringValue) {\n            var integerValue = this;\n\n            return integerValue.factory.createBoolean(integerValue.getNative() === parseFloat(stringValue.getNative()));\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Integers are always numeric: always returns true\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return true;\n        },\n\n        /**\n         * Multiplies another value by this integer\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByInteger(this);\n        },\n\n        /**\n         * Multiplies a float value by this integer\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        multiplyByFloat: function (leftValue) {\n            var coercedLeftValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.value;\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() * multiplier);\n        },\n\n        /**\n         * Multiplies a non-array value by this integer\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedMultiplicand = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.value,\n                product = coercedMultiplicand.getNative() * multiplier;\n\n            // Return result as a float if needed, otherwise keep as integer\n            return Math.round(product) === product ?\n                rightValue.factory.createInteger(product) :\n                rightValue.factory.createFloat(product);\n        },\n\n        onesComplement: function () {\n            /*jshint bitwise: false */\n            return this.factory.createInteger(~this.value);\n        },\n\n        shiftLeftBy: function (rightValue) {\n            /*jshint bitwise: false */\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createInteger(leftValue.getNative() << rightValue.coerceToInteger().getNative());\n        },\n\n        shiftRightBy: function (rightValue) {\n            /*jshint bitwise: false */\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createInteger(leftValue.getNative() >> rightValue.coerceToInteger().getNative());\n        },\n\n        subtract: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            rightValue = rightValue.coerceToNumber();\n\n            // Coerce to float and return a float if either operand is a float\n            if (rightValue.getType() === 'float') {\n                return factory.createFloat(leftValue.coerceToFloat().getNative() - rightValue.coerceToFloat().getNative());\n            }\n\n            return factory.createInteger(leftValue.getNative() - rightValue.getNative());\n        },\n\n        subtractFromNull: function () {\n            var value = this;\n\n            return value.factory.createInteger(-value.getNative());\n        },\n\n        toNegative: function () {\n            var value = this;\n\n            return value.factory.createInteger(-value.value);\n        },\n\n        toPositive: function () {\n            var value = this;\n\n            return value.factory.createInteger(+value.value);\n        }\n    });\n\n    return IntegerValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function NullValue(factory, callStack) {\n        Value.call(this, factory, callStack, 'null', null);\n    }\n\n    util.inherits(NullValue, Value);\n\n    _.extend(NullValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToNull();\n        },\n\n        addToBoolean: function (booleanValue) {\n            return booleanValue.coerceToInteger();\n        },\n\n        coerceToArray: function () {\n            // Null just casts to an empty array\n            return this.factory.createArray();\n        },\n\n        coerceToBoolean: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        coerceToKey: function () {\n            return this.factory.createString('');\n        },\n\n        coerceToString: function () {\n            return this.factory.createString('');\n        },\n\n        /**\n         * Divides this null by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByNull(this);\n        },\n\n        /**\n         * Divides a non-array value by this null\n         *\n         * @returns {Value}\n         */\n        divideByNonArray: function () {\n            var rightValue = this;\n\n            rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n            return rightValue.factory.createBoolean(false);\n        },\n\n        formatAsString: function () {\n            return 'NULL';\n        },\n\n        getInstancePropertyByName: function () {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Trying to get property of non-object'\n            );\n\n            return value.factory.createNull();\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfNull(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Null is always classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return true;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToNull(this);\n        },\n\n        isEqualToFloat: function (floatValue) {\n            return floatValue.isEqualToNull();\n        },\n\n        isEqualToNull: function () {\n            return this.factory.createBoolean(true);\n        },\n\n        isEqualToObject: function (objectValue) {\n            return objectValue.isEqualToNull();\n        },\n\n        isEqualToString: function (stringValue) {\n            return stringValue.isEqualToNull();\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Null is never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        isSet: function () {\n            return false;\n        },\n\n        /**\n         * Multiplies this null by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByNull(this);\n        },\n\n        /**\n         * Multiplies this value by a float\n         *\n         * @returns {FloatValue}\n         */\n        multiplyByFloat: function () {\n            return this.factory.createFloat(0);\n        },\n\n        /**\n         * Multiplies a non-array value by this null\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var value = this;\n\n            return leftValue.coerceToNumber().getType() === 'float' ?\n                value.factory.createFloat(0) :\n                value.factory.createInteger(0);\n        },\n\n        subtract: function (rightValue) {\n            return rightValue.subtractFromNull();\n        }\n    });\n\n    return NullValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Closure'),\n    require('../KeyValuePair'),\n    require('../Reference/Null'),\n    require('../Reference/ObjectElement'),\n    require('../Reference/Property'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Closure,\n    KeyValuePair,\n    NullReference,\n    ObjectElement,\n    PropertyReference,\n    Value\n) {\n    var hasOwn = {}.hasOwnProperty,\n        getPropertyCaseInsensitive = function (object, property) {\n            var found = false,\n                lowerCaseProperty = property.toLowerCase(),\n                otherObject,\n                value = null;\n\n            _.forOwn(object, function (propertyValue, propertyName) {\n                if (propertyName.toLowerCase() === lowerCaseProperty) {\n                    found = true;\n                    value = propertyValue;\n                    return false;\n                }\n            });\n\n            if (!found) {\n                otherObject = Object.getPrototypeOf(object);\n\n                if (!otherObject) {\n                    return null;\n                }\n\n                return getPropertyCaseInsensitive(otherObject, property);\n            }\n\n            return {\n                object: object,\n                value: value\n            };\n        },\n        Exception = phpCommon.Exception,\n        MAGIC_CLONE = '__clone',\n        PHPError = phpCommon.PHPError,\n\n        CANNOT_ACCESS_PROPERTY = 'core.cannot_access_property',\n        CANNOT_USE_WRONG_TYPE_AS = 'core.cannot_use_wrong_type_as',\n        OBJECT_FROM_GET_ITERATOR_MUST_BE_TRAVERSABLE = 'core.object_from_get_iterator_must_be_traversable',\n        UNDEFINED_PROPERTY = 'core.undefined_property',\n        UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types';\n\n    /**\n     * Represents an instance of a class. There is a JS<->PHP bridge\n     * that wraps objects passed in from JS-land in instances of a special JSObject builtin class.\n     *\n     * @param {ValueFactory} factory\n     * @param {CallStack} callStack\n     * @param {Translator} translator\n     * @param {object} object\n     * @param {Class} classObject\n     * @param {number} id\n     * @constructor\n     */\n    function ObjectValue(factory, callStack, translator, object, classObject, id) {\n        Value.call(this, factory, callStack, 'object', object);\n\n        /**\n         * @type {Class}\n         */\n        this.classObject = classObject;\n        /**\n         * @type {number}\n         */\n        this.id = id;\n        /**\n         * Internal properties allow JS-defined classes to store data against objects\n         * without exposing it to PHP-land, which avoids the risk of any internal data names\n         * conflicting with PHP class properties\n         *\n         * @type {Object.<string, *>}\n         */\n        this.internalProperties = {};\n        /**\n         * @type {number}\n         */\n        this.nextPropertyIndex = 0;\n        /**\n         * @type {Object.<string, PropertyReference>}\n         */\n        this.nonPrivateProperties = {};\n        /**\n         * @type {number}\n         */\n        this.pointer = 0;\n        /**\n         * Different classes in the hierarchy may declare their own private property\n         * with the same name as an ancestor. For this reason we need to store private properties\n         * indexed by the fully-qualified name of the class that defines them\n         * (Effectively: {Object.<string, {Object.<string, PropertyReference>}>})\n         *\n         * @type {Object.<string, object>}\n         */\n        this.privatePropertiesByFQCN = {};\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n    }\n\n    util.inherits(ObjectValue, Value);\n\n    _.extend(ObjectValue.prototype, {\n        /**\n         * Adds this value to another\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        add: function (rightValue) {\n            return rightValue.addToObject(this);\n        },\n\n        /**\n         * Adds this value to an array\n         */\n        addToArray: function () {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            value.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to a boolean\n         *\n         * @param {BooleanValue} booleanValue\n         */\n        addToBoolean: function (booleanValue) {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            return value.factory.createInteger((booleanValue.getNative() ? 1 : 0) + 1);\n        },\n\n        /**\n         * Adds this value to a float\n         *\n         * @param {FloatValue} floatValue\n         */\n        addToFloat: function (floatValue) {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            return value.factory.createFloat(floatValue.getNative() + 1);\n        },\n\n        /**\n         * Moves the iterator to its next position.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         */\n        advance: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('Object.advance() :: Object does not implement Iterator');\n            }\n\n            value.callMethod('next');\n        },\n\n        /**\n         * When this object is a Closure instance, returns a new Closure\n         * with the specified bound `$this` object and a new current class scope\n         *\n         * @param {ObjectValue|NullValue} thisValue\n         * @param {Class|undefined} scopeClass\n         * @returns {Closure}\n         */\n        bindClosure: function (thisValue, scopeClass) {\n            var closure,\n                value = this;\n\n            if (!value.classIs('Closure')) {\n                throw new Error('bindClosure() :: Value is not a Closure');\n            }\n\n            closure = value.getInternalProperty('closure');\n\n            return closure.bind(thisValue, scopeClass);\n        },\n\n        /**\n         * Calls the magic __invoke() method for this object\n         *\n         * @param {Reference[]|Value[]|Variable[]} args\n         * @returns {Reference|Value}\n         */\n        call: function (args) {\n            return this.callMethod('__invoke', args);\n        },\n\n        /**\n         * Calls the specified method of this object\n         *\n         * @param {string} name\n         * @param {Value[]?} args\n         * @returns {Value} Returns the result of the method if it exists\n         * @throws {PHPFatalError} Throws when the method does not exist\n         */\n        callMethod: function (name, args) {\n            var value = this;\n\n            return value.classObject.callMethod(name, args, value);\n        },\n\n        /**\n         * Calls a static method of the class this object is an instance of\n         *\n         * @param {StringValue} nameValue\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @param {bool} isForwarding eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value}\n         */\n        callStaticMethod: function (nameValue, args, namespaceOrNamespaceScope, isForwarding) {\n            // Could be a static call in object context, in which case we want to pass\n            // the object value through.\n            // This will be handled by a fetch of `callStack.getThisObject()` inside `.callMethod(...)`\n            return this.classObject.callMethod(nameValue.getNative(), args, null, null, null, isForwarding);\n        },\n\n        /**\n         * Determines whether this object is an instance of the given class\n         *\n         * @param {string} className\n         * @returns {boolean}\n         */\n        classIs: function (className) {\n            return this.classObject.is(className);\n        },\n\n        /**\n         * Returns a clone of this object value\n         *\n         * @returns {ObjectValue}\n         */\n        clone: function () {\n            var value = this,\n                // Avoid calling the __construct() class constructor when cloning,\n                // however note that the native constructor will still be called\n                // as that is used to initialise properties for PHP-defined classes etc.\n                cloneObjectValue = value.classObject.instantiateBare(\n                    // TODO: Consider storing the arguments passed to the constructor,\n                    //       so that they may be passed here - however this may then leak memory\n                    //       as we would be holding on to references to those arguments' values\n                    []\n                );\n\n            // Clones are shallow: each property's value is simply copied over to the clone.\n            // (Note that arrays will be copied as is done for assignments.)\n            // If a deep clone is required then the user must implement the magic __clone method\n            // and perform the recursion themselves.\n            _.each(value.getPropertyNames(), function (name) {\n                cloneObjectValue.setProperty(name, value.getProperty(name));\n            });\n\n            // Call the magic __clone method if defined\n            if (cloneObjectValue.isMethodDefined(MAGIC_CLONE)) {\n                cloneObjectValue.callMethod(MAGIC_CLONE);\n            }\n\n            return cloneObjectValue;\n        },\n\n        /**\n         * Coerces this ObjectValue to an ArrayValue\n         *\n         * @returns {ArrayValue}\n         */\n        coerceToArray: function () {\n            var elements = [],\n                value = this,\n                factory = value.factory;\n\n            _.forOwn(value.nonPrivateProperties, function (propertyReference) {\n                elements.push(\n                    new KeyValuePair(\n                        factory.coerce(propertyReference.getExternalName()),\n                        propertyReference.getValue()\n                    )\n                );\n            });\n            _.forOwn(value.privatePropertiesByFQCN, function (fqcnMap) {\n                _.forOwn(fqcnMap, function (propertyReference) {\n                    elements.push(\n                        new KeyValuePair(\n                            factory.coerce(propertyReference.getExternalName()),\n                            propertyReference.getValue()\n                        )\n                    );\n                });\n            });\n\n            return value.factory.createArray(elements);\n        },\n\n        coerceToBoolean: function () {\n            return this.factory.createBoolean(true);\n        },\n\n        coerceToInteger: function () {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            return value.factory.createInteger(1);\n        },\n\n        /**\n         * Unwraps this instance of Exception to a native JS error\n         *\n         * TODO: Move the Throwable check elsewhere and deprecate this method in favour of .getNative()?\n         *\n         * @returns {Error|*}\n         */\n        coerceToNativeError: function () {\n            var value = this;\n\n            // Uncaught PHP Throwables become E_FATAL errors\n\n            if (!value.classIs('Throwable')) {\n                // TODO: Change for PHP 7:\n                //       \"Fatal error: Uncaught Error: Can only throw objects in Command line code:1\"\n                //       \"Fatal error: Uncaught Error: Cannot throw objects that do not implement Throwable in Command line code:1\"\n                //       These will probably need to be handled with transpiler-level changes,\n                //       so that a throw statement becomes eg. `tools.throw(...)` as it is too late\n                //       to make these checks at this point, due to the original stack/context being lost\n                throw new Exception('Weird value class thrown: ' + value.getClassName());\n            }\n\n            return value.getNative();\n        },\n\n        coerceToNumber: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToKey: function () {\n            this.callStack.raiseError(PHPError.E_WARNING, 'Illegal offset type');\n        },\n\n        coerceToObject: function () {\n            // Already an object: no coercion needed\n            return this;\n        },\n\n        coerceToString: function () {\n            return this.callMethod('__toString');\n        },\n\n        /**\n         * Declares an instance property for this object, with the specified visibility\n         *\n         * @param {string} name\n         * @param {Class} classObject The class in the hierarchy that defines the property\n         * @param {string} visibility \"private\", \"protected\" or \"public\"\n         * @returns {PropertyReference}\n         */\n        declareProperty: function (name, classObject, visibility) {\n            var value = this,\n                propertyReference;\n\n            function createProperty() {\n                return new PropertyReference(\n                    value.factory,\n                    value.callStack,\n                    value,\n                    value.factory.coerce(name),\n                    classObject,\n                    visibility,\n                    value.nextPropertyIndex++\n                );\n            }\n\n            if (visibility === 'private') {\n                if (!value.privatePropertiesByFQCN[classObject.getName()]) {\n                    value.privatePropertiesByFQCN[classObject.getName()] = {};\n                }\n\n                propertyReference = value.privatePropertiesByFQCN[classObject.getName()][name];\n\n                if (!propertyReference) {\n                    propertyReference = createProperty();\n\n                    value.privatePropertiesByFQCN[classObject.getName()][name] = propertyReference;\n                }\n            } else {\n                propertyReference = value.nonPrivateProperties[name];\n\n                if (!propertyReference) {\n                    propertyReference = createProperty();\n\n                    value.nonPrivateProperties[name] = propertyReference;\n                }\n            }\n\n            return propertyReference;\n        },\n\n        /**\n         * Divides (the numeric coercion of) this object by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByObject(this);\n        },\n\n        /**\n         * Divides a non-array value by this object\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            // Trigger notice due to coercion\n            this.coerceToInteger();\n\n            // Objects are always cast to int(1), so divisor will always be 1\n            return leftValue.coerceToNumber();\n        },\n\n        /**\n         * Builds a string representation of this value\n         *\n         * @returns {string}\n         */\n        formatAsString: function () {\n            return 'Object(' + this.getClassName() + ')';\n        },\n\n        /**\n         * Fetches the callable name of the value this reference resolves to\n         *\n         * @returns {string}\n         */\n        getCallableName: function () {\n            var value = this;\n\n            if (value.classObject.is('Closure')) {\n                return value.value.functionSpec.getFunctionName(true);\n            }\n\n            return value.getClassName() + '::__invoke()';\n        },\n\n        /**\n         * Fetches the Class of this object\n         *\n         * @returns {Class}\n         */\n        getClass: function () {\n            return this.classObject;\n        },\n\n        /**\n         * Fetches the name of the class of this object\n         *\n         * @returns {string}\n         */\n        getClassName: function () {\n            return this.classObject.getName();\n        },\n\n        /**\n         * Fetches a constant for the class of this object\n         *\n         * @param {string} name\n         * @returns {Value}\n         */\n        getConstantByName: function (name) {\n            return this.classObject.getConstantByName(name);\n        },\n\n        /**\n         * Fetches a reference to the value at the current position of the iterator.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {Reference}\n         */\n        getCurrentElementReference: function () {\n            // FIXME: Should this raise a warning or something?\n            //        What if the current() method is marked as return-by-reference?\n            return this.getCurrentElementValue();\n        },\n\n        /**\n         * Fetches the value at the current position of the iterator.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {Value}\n         */\n        getCurrentElementValue: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('Object.getCurrentElementValue() :: Object does not implement Iterator');\n            }\n\n            return value.callMethod('current');\n        },\n\n        /**\n         * Fetches the key for the current position of the iterator.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {Value}\n         */\n        getCurrentKey: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('Object.getCurrentKey() :: Object does not implement Iterator');\n            }\n\n            return value.callMethod('key').coerceToKey();\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        getDisplayType: function () {\n            // For objects, we want to display the class FQCN and not just \"object\"\n            return this.getClassName();\n        },\n\n        /**\n         * Fetches an element of the value this reference resolves to\n         *\n         * @param {number} index\n         * @returns {Reference}\n         */\n        getElementByIndex: function (index) {\n            var value = this,\n                names = value.getInstancePropertyNames();\n\n            if (!hasOwn.call(names, index)) {\n                value.callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'Undefined ' + value.referToElement(index)\n                );\n\n                return new NullReference(value.factory);\n            }\n\n            return value.getInstancePropertyByName(names[index]);\n        },\n\n        /**\n         * Fetches a property of this object using the array dereference notation if its class implements ArrayAccess\n         *\n         * @param {*} keyValue\n         * @returns {Reference}\n         */\n        getElementByKey: function (keyValue) {\n            var value = this;\n\n            keyValue = keyValue.coerceToKey(value.callStack);\n\n            if (!keyValue) {\n                // Could not be coerced to a key: error will already have been handled, just return NULL\n                return new NullReference(value.factory);\n            }\n\n            if (value.classObject.is('ArrayAccess')) {\n                return new ObjectElement(value.factory, value, keyValue);\n            }\n\n            value.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_USE_WRONG_TYPE_AS, {\n                actual: value.classObject.getName(),\n                expected: 'array'\n            });\n        },\n\n        /**\n         * Returns either the current value or one based on it as part of an assignment.\n         * Objects are passed around by reference so this should just return this\n         *\n         * @returns {Value}\n         */\n        getForAssignment: function () {\n            return this;\n        },\n\n        /**\n         * Fetches the unique internal ID of this object. Used by eg. var_dump(...)\n         *\n         * @returns {number}\n         */\n        getID: function () {\n            return this.id;\n        },\n\n        /**\n         * Fetches the value of an instance property of this object\n         *\n         * @param {string} name\n         * @returns {Value}\n         */\n        getProperty: function (name) {\n            var value = this,\n                nameValue = value.factory.createString(name);\n\n            return value.getInstancePropertyByName(nameValue).getValue();\n        },\n\n        /**\n         * Fetches an instance property of this object\n         *\n         * @param {Value} nameValue\n         * @returns {PropertyReference}\n         */\n        getInstancePropertyByName: function (nameValue) {\n            var callingClass,\n                nameKey = nameValue.coerceToKey(),\n                name = nameKey.getNative(),\n                propertyReference,\n                value = this,\n                classInHierarchy,\n                classOfObject = value.classObject;\n\n            if (value.classObject.hasStaticPropertyByName(name)) {\n                // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                value.callStack.raiseError(\n                    PHPError.E_STRICT,\n                    'Accessing static property ' + value.classObject.getName() + '::$' + name + ' as non static'\n                );\n\n                // Allow to continue, so that a further notice will be emitted when the property is accessed\n            }\n\n            // Fetch the class that the current line of PHP code is executing inside (if any)\n            callingClass = value.callStack.getCurrentClass();\n\n            // First check whether the property is defined as private for the calling class -\n            // it could also exist at different levels in the hierarchy, but the same property\n            // can have different values at different levels if it is private there\n            propertyReference = callingClass && value.privatePropertiesByFQCN[callingClass.getName()] ?\n                value.privatePropertiesByFQCN[callingClass.getName()][name] :\n                null;\n\n            if (propertyReference) {\n                // Property is private, and we're inside the class that defines it so we're good to go.\n                // Private properties should be the most common, so this is the first case for speed\n                return propertyReference;\n            }\n\n            propertyReference = value.nonPrivateProperties[name];\n\n            if (propertyReference) {\n                /*\n                 * Property is protected; may be read from methods of this class and methods of derivatives.\n                 * This case is checked before the privates-check hierarchy walk below for speed,\n                 * as invalid accesses to private properties should be rare\n                 */\n                if (propertyReference.getVisibility() === 'protected') {\n                    if (\n                        !callingClass ||\n                        (\n                            classOfObject.getName() !== callingClass.getName() &&\n                            !callingClass.isInFamilyOf(classOfObject)\n                        )\n                    ) {\n                        value.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                            className: classOfObject.getName(),\n                            propertyName: name,\n                            visibility: 'protected'\n                        });\n                    }\n                }\n            } else {\n                classInHierarchy = classOfObject;\n\n                // Check whether the property is in fact defined, but is defined as private\n                // for a class that is not the calling class - if so then we are not allowed to access it\n                do {\n                    propertyReference = value.privatePropertiesByFQCN[classInHierarchy.getName()] ?\n                        value.privatePropertiesByFQCN[classInHierarchy.getName()][name] :\n                        null;\n\n                    if (propertyReference) {\n                        if (callingClass && callingClass.extends(classInHierarchy)) {\n                            // We're in a class that is a descendant of the one that defines the private property\n                            value.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_PROPERTY, {\n                                className: callingClass.getName(),\n                                propertyName: name\n                            });\n                        } else if (callingClass && classInHierarchy !== classOfObject) {\n                            // The current object is a descendant of the one that defines the private property,\n                            // but we're in a class that is an ancestor of the definer -\n                            // just treat the property as not defined\n                            break;\n                        } else {\n                            // Property is private, but we're not trying to access it from inside the class\n                            value.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                                className: classOfObject.getName(),\n                                propertyName: name,\n                                visibility: 'private'\n                            });\n                        }\n                    }\n\n                    classInHierarchy = classInHierarchy.getSuperClass();\n                } while (classInHierarchy !== null);\n\n                /*\n                 * Property is not yet defined for this object by any of its class hierarchy or dynamically -\n                 * define it dynamically as a public property.\n                 * This is a relatively slow case as it is only done after the privates-check hierarchy walk above,\n                 * but this _should_ be a rare scenario so it makes sense not to optimise for it\n                 */\n                propertyReference = value.declareProperty(name, value.classObject, 'public');\n            }\n\n            return propertyReference;\n        },\n\n        /**\n         * Fetches the names of all visible instance properties of this object, wrapped as values\n         *\n         * @returns {Value[]}\n         */\n        getInstancePropertyNames: function () {\n            var callingClass,\n                nameHash = {},\n                sortedNames,\n                value = this;\n\n            // Include the names of all properties of the wrapped native object\n            // TODO: Move this custom logic to JSObject, called via a magic method?\n            _.forOwn(value.value, function (value, name) {\n                nameHash[name] = -1;\n            });\n\n            // Fetch the class that the current line of PHP code is executing inside (if any)\n            callingClass = value.callStack.getCurrentClass();\n\n            // Include the names of all private properties defined on the calling class\n            if (callingClass) {\n                _.forOwn(value.privatePropertiesByFQCN, function (propertyReferences, fqcn) {\n                    if (fqcn === callingClass.getName()) {\n                        _.forOwn(propertyReferences, function (propertyReference, propertyName) {\n                            if (propertyReference.isDefined()) {\n                                nameHash[propertyName] = propertyReference.getIndex();\n                            }\n                        });\n                    }\n                });\n            }\n\n            // Include all public properties and all protected properties that belong\n            // to ancestor or descendant classes of the calling class\n            _.forOwn(value.nonPrivateProperties, function (propertyReference, propertyName) {\n                if (propertyReference.isDefined() && propertyReference.isVisible()) {\n                    nameHash[propertyName] = propertyReference.getIndex();\n                }\n            });\n\n            sortedNames = Object.keys(nameHash);\n            sortedNames.sort(function (nameA, nameB) {\n                return nameHash[nameA] - nameHash[nameB];\n            });\n\n            // Wrap all the names in Value objects before returning\n            return sortedNames.map(function (name) {\n                return value.factory.coerce(name);\n            });\n        },\n\n        /**\n         * Sets the value of an internal property for this object. Internal properties\n         * have nothing to do with the native object they wrap, so this mechanism\n         * is useful for native classes to store data without PHP code having access to it\n         *\n         * @param {string} name\n         * @returns {*}\n         */\n        getInternalProperty: function (name) {\n            var value = this;\n\n            if (!hasOwn.call(value.internalProperties, name)) {\n                throw new Error(\n                    'Object of class \"' + value.getClassName() + '\" has no internal property \"' + name + '\"'\n                );\n            }\n\n            return value.internalProperties[name];\n        },\n\n        /**\n         * Fetches either an ArrayIterator (for a normal object)\n         * or the object itself if it implements Traversable via Iterator or IteratorAggregate.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {ArrayIterator|ObjectValue}\n         */\n        getIterator: function () {\n            var value = this,\n                iteratorValue = value;\n\n            value.pointer = 0;\n\n            if (iteratorValue.classIs('IteratorAggregate')) {\n                // IteratorAggregate requires its ->getIterator() method to return something iterable\n                iteratorValue = iteratorValue.callMethod('getIterator');\n\n                if (iteratorValue.getType() !== 'object' || !iteratorValue.classIs('Iterator')) {\n                    throw value.factory.createTranslatedExceptionObject(\n                        'Exception',\n                        OBJECT_FROM_GET_ITERATOR_MUST_BE_TRAVERSABLE,\n                        {\n                            className: value.getClassName()\n                        }\n                    );\n                }\n            }\n\n            if (!iteratorValue.classIs('Iterator')) {\n                // Objects not implementing Traversable are iterated like arrays\n                return value.factory.createArrayIterator(value);\n            }\n\n            iteratorValue.callMethod('rewind');\n\n            return iteratorValue;\n        },\n\n        /**\n         * Fetches a key (property name) of this object by its index\n         *\n         * @param {number} index\n         * @returns {Value|null}\n         */\n        getKeyByIndex: function (index) {\n            var value = this,\n                keys = value.getInstancePropertyNames();\n\n            return keys[index] || null;\n        },\n\n        /**\n         * Fetches the length (number of properties) for this object, regardless of their visibility\n         *\n         * @returns {number}\n         */\n        getLength: function () {\n            var value = this,\n                // Fetch the class that the current line of PHP code is executing inside (if any)\n                callingClass = value.callStack.getCurrentClass(),\n                count = 0;\n\n            // Include the names of all private properties defined on the calling class\n            if (callingClass) {\n                _.forOwn(value.privatePropertiesByFQCN, function (propertyReferences, fqcn) {\n                    if (fqcn === callingClass.getName()) {\n                        _.forOwn(propertyReferences, function (propertyReference) {\n                            if (propertyReference.isDefined()) {\n                                count++;\n                            }\n                        });\n                    }\n                });\n            }\n\n            // Include all public properties and all protected properties that belong\n            // to ancestor or descendant classes of the calling class\n            _.forOwn(value.nonPrivateProperties, function (propertyReference) {\n                if (propertyReference.isDefined() && propertyReference.isVisible()) {\n                    count++;\n                }\n            });\n\n            return count;\n        },\n\n        /**\n         * Unwraps this PHP object value to something that non-PHPCore JS code will understand.\n         * Special PHP classes like Closure and stdClass are unwrapped specially\n         *\n         * @returns {Object|*}\n         */\n        getNative: function () {\n            var value = this;\n\n            return value.classObject.exportInstanceForJS(value);\n        },\n\n        /**\n         * Fetches a map of all non-private property names to values\n         *\n         * @returns {Object.<string, Value>}\n         */\n        getNonPrivateProperties: function () {\n            var value = this,\n                propertyNamesToValues = {};\n\n            _.forOwn(value.nonPrivateProperties, function (propertyReference, propertyName) {\n                propertyNamesToValues[propertyName] = propertyReference.getValue();\n            });\n\n            return propertyNamesToValues;\n        },\n\n        /**\n         * Fetches the wrapped native JS object\n         *\n         * @returns {object}\n         */\n        getObject: function () {\n            return this.value;\n        },\n\n        getPointer: function () {\n            return this.pointer;\n        },\n\n        /**\n         * Fetches the names of all instance properties of this object\n         *\n         * @returns {string[]}\n         */\n        getPropertyNames: function () {\n            return this.getInstancePropertyNames().map(function (nameValue) {\n                return nameValue.getNative();\n            });\n        },\n\n        /**\n         * Exports a proxy object that allows JS code to call any method of this object\n         * (including magic ones implemented with __call)\n         *\n         * @returns {PHPObject}\n         */\n        getProxy: function () {\n            var value = this;\n\n            return value.classObject.proxyInstanceForJS(value);\n        },\n\n        /**\n         * Fetches a reference to a static property of this object's class by its name\n         *\n         * @param {Reference|Value} nameValue\n         * @returns {StaticPropertyReference|UndeclaredStaticPropertyReference}\n         */\n        getStaticPropertyByName: function (nameValue) {\n            return this.classObject.getStaticPropertyByName(nameValue.getNative());\n        },\n\n        /**\n         * Fetches either this ObjectValue or its inner native object, based on the class' auto-coercion mode\n         *\n         * @returns {ObjectValue|Object}\n         */\n        getThisObject: function () {\n            var value = this;\n\n            return value.classObject.getThisObjectForInstance(value);\n        },\n\n        /**\n         * Creates a new instance of the class of this object for a normal PHP object.\n         * For a JSObject, if the wrapped object is a function then it will create\n         * a new instance of the wrapped JS class instead,\n         * returning the resulting new JSObject instance\n         *\n         * @param {Value[]} args\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args) {\n            var value = this,\n                nativeObject,\n                objectValue,\n                unwrappedArgs;\n\n            if (value.getClassName() !== 'JSObject') {\n                // A normal PHP object is being instantiated as a class -\n                // we just need to create a new instance of this object's class\n                return value.classObject.instantiate(args);\n            }\n\n            // A JS function is being instantiated as a class from PHP (bridge integration)\n\n            if (!_.isFunction(value.value)) {\n                throw new Error('Cannot create a new instance of a non-function JSObject');\n            }\n\n            // Unwrap the arguments to native values (as the constructor will be native JS)\n            unwrappedArgs = _.map(args, function (argValue) {\n                return argValue.getNative();\n            });\n\n            /**\n             * Create a new instance of the native class, using bind.apply(...)\n             * to support passing varargs to the constructor (and ES6+ classes).\n             *\n             * JS constructor functions can override the normal constructor process\n             * and return a completely different object, which this will handle automatically too.\n             */\n            nativeObject = new (function () {}.bind.apply(value.value, [undefined].concat(unwrappedArgs)))();\n\n            objectValue = value.factory.coerceObject(nativeObject);\n\n            return objectValue;\n        },\n\n        /**\n         * Invokes the native function this object wraps when it is an instance of Closure\n         *\n         * @param {Value[]} args\n         * @returns {Value}\n         */\n        invokeClosure: function (args) {\n            var closure,\n                value = this;\n\n            if (!value.classIs('Closure')) {\n                throw new Error('invokeClosure() :: Value is not a Closure');\n            }\n\n            closure = value.getInternalProperty('closure');\n\n            return closure.invoke(args);\n        },\n\n        /**\n         * Determines whether the object this reference resolves to is an instance of the specified class\n         *\n         * @param {Reference|Value} classNameValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {BooleanValue}\n         */\n        isAnInstanceOf: function (classNameValue, namespaceOrNamespaceScope) {\n            return classNameValue.isTheClassOfObject(this, namespaceOrNamespaceScope);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            var value = this;\n\n            return value.classIs('Closure') ||\n                value.isMethodDefined('__invoke');\n        },\n\n        /**\n         * Objects are never classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return false;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToObject(this);\n        },\n\n        isEqualToArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToFloat: function (floatValue) {\n            return this.factory.createBoolean(floatValue.getNative() === 1);\n        },\n\n        isEqualToInteger: function (integerValue) {\n            return this.factory.createBoolean(integerValue.getNative() === 1);\n        },\n\n        isEqualToNull: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        /**\n         * Determines whether this object is equal (but not necessarily identical) to another\n         *\n         * @param {ObjectValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToObject: function (rightValue) {\n            var equal = true,\n                leftValue = this,\n                factory = leftValue.factory;\n\n            if (\n                rightValue.getLength() !== leftValue.getLength() ||\n                rightValue.getClassName() !== leftValue.getClassName()\n            ) {\n                return factory.createBoolean(false);\n            }\n\n            // Check public and protected properties\n            _.forOwn(rightValue.nonPrivateProperties, function (propertyReference, propertyName) {\n                if (\n                    !hasOwn.call(leftValue.nonPrivateProperties, propertyName) ||\n                    propertyReference.getValue().isNotEqualTo(\n                        leftValue.nonPrivateProperties[propertyName].getValue()\n                    ).getNative()\n                ) {\n                    equal = false;\n                    return false;\n                }\n            });\n            // Check private properties\n            _.forOwn(rightValue.privatePropertiesByFQCN, function (propertyReferences, fqcn) {\n                _.forOwn(propertyReferences, function (propertyReference, propertyName) {\n                    if (\n                        !hasOwn.call(leftValue.privatePropertiesByFQCN, fqcn) ||\n                        !hasOwn.call(leftValue.privatePropertiesByFQCN[fqcn], propertyName) ||\n                        propertyReference.getValue().isNotEqualTo(\n                            leftValue.privatePropertiesByFQCN[fqcn][propertyName].getValue()\n                        ).getNative()\n                    ) {\n                        equal = false;\n                        return false;\n                    }\n                });\n            });\n\n            return factory.createBoolean(equal);\n        },\n\n        isEqualToString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isIdenticalTo: function (rightValue) {\n            return rightValue.isIdenticalToObject(this);\n        },\n\n        isIdenticalToArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isIdenticalToObject: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(rightValue.value === leftValue.value);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return this.classIs('Traversable');\n        },\n\n        /**\n         * Determines whether the class of this object defines an instance or static method with the given name\n         *\n         * @param {string} methodName\n         * @returns {boolean}\n         */\n        isMethodDefined: function (methodName) {\n            return this.classObject.getMethodSpec(methodName) !== null;\n        },\n\n        /**\n         * Determines whether this iterator has finished iterating or not.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {boolean}\n         */\n        isNotFinished: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('ObjectValue.isNotFinished() :: Object does not implement Iterator');\n            }\n\n            return value.callMethod('valid').coerceToBoolean().getNative();\n        },\n\n        /**\n         * Objects are never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        isTheClassOfArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfBoolean: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfFloat: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfInteger: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfNull: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfObject: function (leftValue) {\n            var rightValue = this;\n\n            return rightValue.factory.createBoolean(\n                rightValue.classObject === leftValue.classObject ||\n                    leftValue.classObject.extends(rightValue.classObject)\n            );\n        },\n\n        isTheClassOfString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        /**\n         * Multiplies this object by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByObject(this);\n        },\n\n        /**\n         * Multiplies this object by a non-array value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            // Trigger notice due to coercion\n            this.coerceToInteger();\n\n            // Objects are always cast to int(1), so multiplier will always be 1\n            return leftValue.coerceToNumber();\n        },\n\n        /**\n         * Moves the internal array-like pointer to the specified property\n         *\n         * @param {PropertyReference} propertyReference\n         */\n        pointToProperty: function (propertyReference) {\n            var index = 0,\n                propertyName = propertyReference.getKey().getNative(),\n                value = this;\n\n            // Find the property in the set of properties visible to the current scope\n            _.each(value.getInstancePropertyNames(), function (name) {\n                if (name.getNative() === propertyName) {\n                    value.setPointer(index);\n                }\n\n                index++;\n            });\n        },\n\n        referToElement: function (key) {\n            return 'property: ' + this.getClassName() + '::$' + key;\n        },\n\n        reset: function () {\n            var value = this;\n\n            value.pointer = 0;\n\n            return value;\n        },\n\n        /**\n         * Sets the value of an internal property for this object. Internal properties\n         * have nothing to do with the native object they wrap, so this mechanism\n         * is useful for native classes to store data without PHP code having access to it\n         *\n         * @param {string} name\n         * @param {*} newValue\n         */\n        setInternalProperty: function (name, newValue) {\n            this.internalProperties[name] = newValue;\n        },\n\n        setPointer: function (pointer) {\n            this.pointer = pointer;\n        },\n\n        setProperty: function (name, newValue) {\n            var value = this,\n                nameValue = value.factory.createString(name);\n\n            value.getInstancePropertyByName(nameValue).setValue(newValue);\n        }\n    });\n\n    return ObjectValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\nfunction ObjectElement(valueFactory, objectValue, keyValue) {\n    this.keyValue = keyValue;\n    this.objectValue = objectValue;\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(ObjectElement, Reference);\n\n_.extend(ObjectElement.prototype, {\n    getReference: function () {\n        return this;\n    },\n\n    getValue: function () {\n        var element = this;\n\n        return element.objectValue.callMethod('offsetGet', [element.keyValue]);\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var element = this;\n\n        return element.objectValue.callMethod('offsetExists', [element.keyValue]).getNative();\n    },\n\n    /**\n     * Determines whether an element of an object is classed as empty.\n     * Objects may only have an element fetched if they can be treated as an array,\n     * by implementing ArrayAccess\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        var element = this;\n\n        // When using empty() ArrayAccess::offsetGet() will be called and checked\n        // if empty only if ArrayAccess::offsetExists() returns TRUE.\n        return !element.objectValue.callMethod('offsetExists', [element.keyValue]).getNative() ||\n            element.objectValue.callMethod('offsetGet', [element.keyValue]).isEmpty();\n    },\n\n    /**\n     * Determines whether an element of an object is classed as set.\n     * Objects may only have an element fetched if they can be treated as an array,\n     * by implementing ArrayAccess\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        var element = this;\n\n        return element.objectValue.callMethod('offsetExists', [element.keyValue]).getNative() &&\n            element.objectValue.callMethod('offsetGet', [element.keyValue]).isSet();\n    },\n\n    setValue: function (value) {\n        var element = this;\n\n        element.objectValue.callMethod('offsetSet', [element.keyValue, value]);\n    },\n\n    unset: function () {\n        var element = this;\n\n        element.objectValue.callMethod('offsetUnset', [element.keyValue]);\n    }\n});\n\nmodule.exports = ObjectElement;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    MAGIC_GET = '__get',\n    MAGIC_SET = '__set',\n    MAGIC_UNSET = '__unset',\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n    ReferenceSlot = require('./ReferenceSlot');\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {ObjectValue} objectValue\n * @param {Value} key\n * @param {Class} classObject Class in the hierarchy that defines the property - may be an ancestor\n * @param {string} visibility \"private\", \"protected\" or \"public\"\n * @param {number} index\n * @constructor\n */\nfunction PropertyReference(valueFactory, callStack, objectValue, key, classObject, visibility, index) {\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    /**\n     * @type {ObjectValue}\n     */\n    this.objectValue = objectValue;\n    /**\n     * @type {Value}\n     */\n    this.key = key;\n    /**\n     * @type {Reference|null}\n     */\n    this.reference = null;\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * Value of this property - a native null value indicates that the property is not defined\n     *\n     * @type {Value|null}\n     */\n    this.value = null;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {string}\n     */\n    this.visibility = visibility;\n}\n\nutil.inherits(PropertyReference, Reference);\n\n_.extend(PropertyReference.prototype, {\n    /**\n     * Fetches the unique name of this property as viewed from outside the class (eg. when casting to array)\n     *\n     * @returns {*}\n     */\n    getExternalName: function () {\n        var property = this;\n\n        switch (property.visibility) {\n            case 'private':\n                return '\\0' + property.classObject.getName() + '\\0' + property.key.getNative();\n            case 'protected':\n                return '\\0*\\0' + property.key.getNative();\n            default:\n                return property.key.getNative();\n        }\n    },\n\n    /**\n     * Fetches the index of this property within its object\n     *\n     * @returns {number}\n     */\n    getIndex: function () {\n        return this.index;\n    },\n\n    getKey: function () {\n        return this.key;\n    },\n\n    /**\n     * Fetches a reference to this property's value\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        var property = this;\n\n        if (property.reference) {\n            // This property already refers to something else, so return its target\n            return property.reference;\n        }\n\n        // Implicitly define a \"slot\" to contain this property's value\n        property.reference = new ReferenceSlot(property.valueFactory);\n\n        if (property.value) {\n            property.reference.setValue(property.value);\n            property.value = null; // This property now has a reference (to the slot) and not a value\n        }\n\n        return property.reference;\n    },\n\n    /**\n     * Fetches the value of this property on its object. If it is not defined,\n     * and a magic __get getter method is defined, it will be called,\n     * otherwise a notice will be raised and NULL returned\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        var property = this;\n\n        // Special value of native null (vs. NullValue) represents undefined\n        if (!property.isDefined()) {\n            if (property.objectValue.isMethodDefined(MAGIC_GET)) {\n                // Magic getter method is defined, so use it\n                return property.objectValue.callMethod(MAGIC_GET, [property.key]);\n            }\n\n            property.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Undefined ' + property.objectValue.referToElement(\n                    property.key.getNative()\n                )\n            );\n\n            return property.valueFactory.createNull();\n        }\n\n        if (property.value) {\n            return property.value;\n        }\n\n        if (property.reference) {\n            return property.reference.getValue();\n        }\n\n        throw new Error('Defined properties should have a value or reference assigned');\n    },\n\n    /**\n     * Fetches the visibility of this property\n     *\n     * @returns {string}\n     */\n    getVisibility: function () {\n        return this.visibility;\n    },\n\n    /**\n     * Sets the initial value for this property, ignoring any magic setter\n     *\n     * @param {Value} value\n     */\n    initialise: function (value) {\n        this.value = value.getForAssignment();\n    },\n\n    /**\n     * Determines whether this property is defined. If assigned a value of NULL,\n     * the property will still be considered defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var property = this;\n\n        if (property.reference) {\n            return true;\n        }\n\n        // This property is defined if it has a non-native null value -\n        // if it is defined but with a value of PHP NULL, `.value` will be an instance of NullValue\n        return property.value !== null;\n    },\n\n    /**\n     * Determines whether this object property is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        var property = this;\n\n        if (property.isDefined()) {\n            return property.getValue().isEmpty();\n        }\n\n        if (property.objectValue.isMethodDefined(MAGIC_GET)) {\n            // Magic getter method is defined, so use it to determine the property's value\n            // and then check _that_ for being \"empty\"\n            return property.objectValue.callMethod(MAGIC_GET, [property.key]).isEmpty();\n        }\n\n        // Property is not defined and there is no magic getter,\n        // so the property must be empty as it is unset and undefined\n        return true;\n    },\n\n    isReference: function () {\n        return !!this.reference;\n    },\n\n    /**\n     * Determines whether this property is \"set\".\n     * A set property must be both defined and have a non-NULL value\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        var property = this,\n            defined = property.isDefined();\n\n        if (!defined) {\n            return false;\n        }\n\n        // Check that the property resolves to something other than null,\n        // otherwise it is not set\n        // (no need to check for a value of native null - meaning an undefined property -\n        //  as the check for that is done just above)\n        return property.value.getType() !== 'null';\n    },\n\n    /**\n     * Determines whether this property is visible from the calling scope\n     * - for a private property, the calling scope must be inside that class\n     * - for a protected property, the calling scope must be inside that class or an ancestor or descendant of it\n     * - public properties are visible from everywhere\n     *\n     * @returns {boolean}\n     */\n    isVisible: function () {\n        var property = this,\n            // Fetch the class that the current line of PHP code is executing inside (if any)\n            callingClass = property.callStack.getCurrentClass();\n\n        if (property.getVisibility() === 'private') {\n            // Private properties are only accessible by the class that defines them\n            return callingClass &&\n                property.classObject.getName() === callingClass.getName();\n        }\n\n        if (property.getVisibility() === 'protected') {\n            // Protected properties may be accessed by the class that defines them\n            // or an ancestor or descendant of it\n            return callingClass &&\n                callingClass.isInFamilyOf(property.classObject);\n        }\n\n        // Public visibility - public properties are always visible\n        return true;\n    },\n\n    setReference: function (reference) {\n        var property = this;\n\n        property.reference = reference;\n\n        return reference;\n    },\n\n    /**\n     * Sets the value of this property on its object. If it is not defined,\n     * and a magic __set setter method is defined, it will be called,\n     * otherwise the property will be dynamically defined on the object\n     *\n     * @param {Value} value\n     * @returns {Value}\n     */\n    setValue: function (value) {\n        var property = this,\n            isFirstProperty = (property.objectValue.getLength() === 0),\n            valueForAssignment;\n\n        function pointIfFirstProperty() {\n            if (isFirstProperty) {\n                property.objectValue.pointToProperty(property);\n            }\n        }\n\n        if (property.reference) {\n            property.reference.setValue(value);\n\n            pointIfFirstProperty();\n\n            return value;\n        }\n\n        valueForAssignment = value.getForAssignment();\n\n        if (!property.isDefined()) {\n            // Property is not defined - attempt to call magic setter method first,\n            // otherwise just dynamically define the new property by setting its value below\n            if (property.objectValue.isMethodDefined(MAGIC_SET)) {\n                property.objectValue.callMethod(MAGIC_SET, [property.key, valueForAssignment]);\n\n                return value;\n            }\n        }\n\n        // No magic setter is defined - store the value of this property directly on itself\n        property.value = valueForAssignment;\n\n        pointIfFirstProperty();\n\n        return value;\n    },\n\n    /**\n     * Marks this property as unset and undefined\n     */\n    unset: function () {\n        var property = this;\n\n        if (!property.isDefined()) {\n            // Property is not defined - call magic unsetter method if defined\n            if (property.objectValue.isMethodDefined(MAGIC_UNSET)) {\n                property.objectValue.callMethod(MAGIC_UNSET, [property.key]);\n            }\n        }\n\n        // Clear value and/or reference to mark as unset\n        property.value = property.reference = null;\n    }\n});\n\nmodule.exports = PropertyReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {class} Variable\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function VariableFactory(\n        Variable,\n        callStack,\n        valueFactory\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n        /**\n         * @type {class}\n         */\n        this.Variable = Variable;\n    }\n\n    _.extend(VariableFactory.prototype, {\n        /**\n         * Creates a new Variable\n         *\n         * @param {string} variableName\n         * @returns {Variable}\n         */\n        createVariable: function (variableName) {\n            var factory = this;\n\n            return new factory.Variable(factory.callStack, factory.valueFactory, variableName);\n        }\n    });\n\n    return VariableFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    /**\n     * Fetches either the sync-mode class (for sync & psync modes) or async-mode class\n     *\n     * @param {Wrapper} wrapper\n     * @param {Resumable=} pausable\n     * @returns {Function}\n     */\n    unwrap = function (wrapper, pausable) {\n        return pausable ? wrapper.async(pausable) : wrapper.sync();\n    };\n\n/**\n * Instantiates the shared Runtime\n *\n * @param {class} Environment\n * @param {class} Engine\n * @param {Wrapper} PHPStateWrapper\n * @param {Wrapper} RuntimeWrapper\n * @param {PHPCommon} phpCommon\n * @param {GlobalStackHooker} globalStackHooker\n * @constructor\n */\nfunction RuntimeFactory(\n    Environment,\n    Engine,\n    PHPStateWrapper,\n    RuntimeWrapper,\n    phpCommon,\n    globalStackHooker\n) {\n    /**\n     * @type {class}\n     */\n    this.Engine = Engine;\n    /**\n     * @type {class}\n     */\n    this.Environment = Environment;\n    /**\n     * @type {GlobalStackHooker}\n     */\n    this.globalStackHooker = globalStackHooker;\n    /**\n     * @type {PHPCommon}\n     */\n    this.phpCommon = phpCommon;\n    /**\n     * @type {Wrapper}\n     */\n    this.PHPStateWrapper = PHPStateWrapper;\n    /**\n     * @type {Wrapper}\n     */\n    this.RuntimeWrapper = RuntimeWrapper;\n}\n\n_.extend(RuntimeFactory.prototype, {\n    /**\n     * Creates a new Runtime instance\n     *\n     * @param {string} mode\n     * @param {Resumable=} pausable\n     * @returns {Runtime}\n     */\n    create: function (mode, pausable) {\n        var factory = this,\n            PHPState = unwrap(factory.PHPStateWrapper, pausable),\n            Runtime = unwrap(factory.RuntimeWrapper, pausable);\n\n        return new Runtime(\n            factory.Environment,\n            factory.Engine,\n            PHPState,\n            factory.phpCommon,\n            factory.globalStackHooker,\n            pausable || null,\n            mode\n        );\n    }\n});\n\nmodule.exports = RuntimeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('./PHPState'),\n    require('./Stream')\n], function (\n    _,\n    PHPState,\n    Stream\n) {\n    var hasOwn = {}.hasOwnProperty;\n\n    /**\n     * PHPCore API encapsulator.\n     *\n     * @param {class} Environment\n     * @param {class} Engine\n     * @param {class} PHPState\n     * @param {object} phpCommon\n     * @param {GlobalStackHooker} globalStackHooker\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @constructor\n     */\n    function Runtime(\n        Environment,\n        Engine,\n        PHPState,\n        phpCommon,\n        globalStackHooker,\n        pausable,\n        mode\n    ) {\n        // Check the mode given is valid\n        if (mode !== 'async' && mode !== 'psync' && mode !== 'sync') {\n            throw new Error('Invalid mode \"' + mode + '\" given - must be one of \"async\", \"psync\" or \"sync\"');\n        }\n\n        // For async mode we require the Pausable library to be available\n        if (mode === 'async' && !pausable) {\n            throw new Error('Pausable library must be provided for async mode');\n        }\n\n        /**\n         * @type {{classes: {}, constantGroups: Array, functionGroups: Array}}\n         */\n        this.builtins = {\n            bindingGroups: [],\n            classGroups: [],\n            classes: {},\n            constantGroups: [],\n            defaultINIGroups: [],\n            functionGroups: [],\n            translationCatalogues: []\n        };\n        /**\n         * @type {class}\n         */\n        this.Engine = Engine;\n        /**\n         * @type {class}\n         */\n        this.Environment = Environment;\n        /**\n         * @type {GlobalStackHooker}\n         */\n        this.globalStackHooker = globalStackHooker;\n        /**\n         * @type {string} One of: \"async\", \"psync\" or \"sync\"\n         */\n        this.mode = mode;\n        /**\n         * @type {Function[]}\n         */\n        this.optionGroups = [];\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n        /**\n         * @type {Object}\n         */\n        this.phpCommon = phpCommon;\n        /**\n         * @type {class}\n         */\n        this.PHPState = PHPState;\n    }\n\n    _.extend(Runtime.prototype, {\n        /**\n         * Creates a factory function that can be called to create\n         * a new Engine instance using this runtime's context.\n         *\n         * @param {Function} wrapper\n         * @returns {Function}\n         */\n        compile: function (wrapper) {\n            var runtime = this,\n                mode = runtime.mode,\n                pausable = runtime.pausable,\n                phpCommon = runtime.phpCommon;\n\n            /**\n             * Extends an existing option set with a new set of options,\n             * with special handling for the \"path\" option as once that option\n             * has been set, its value cannot be overridden. This is because\n             * the include transport configured may set a path on the returned\n             * module factory (via .using(...)) but that would otherwise\n             * be overridden by the default path provided by Loader (where the\n             * default path is just a normalised version of the requested path,\n             * rather than a resolved real path)\n             *\n             * @param {Object|null} existingOptions\n             * @param {Object|null} newOptions\n             * @return {Object}\n             */\n            function extendOptions(existingOptions, newOptions) {\n                if (\n                    existingOptions &&\n                    newOptions &&\n                    hasOwn.call(existingOptions, 'path') &&\n                    hasOwn.call(newOptions, 'path')\n                ) {\n                    newOptions = _.extend({}, newOptions);\n                    delete newOptions.path;\n                }\n\n                return _.extend({}, existingOptions, newOptions);\n            }\n\n            /**\n             * Creates a new Engine instance using this runtime's context.\n             *\n             * @param {object} options\n             * @param {Environment|null} environment\n             * @param {Scope|null} topLevelScope\n             * @returns {Engine}\n             */\n            function factory(options, environment, topLevelScope) {\n                if (environment) {\n                    options = _.extend({}, environment.getOptions(), options);\n                } else {\n                    environment = runtime.createEnvironment(options);\n                    options = environment.getOptions();\n                }\n\n                return new runtime.Engine(\n                    environment,\n                    topLevelScope || null,\n                    phpCommon,\n                    options,\n                    wrapper,\n                    pausable,\n                    mode\n                );\n            }\n\n            /**\n             * Creates a function to be exposed as .using(...) on the module factory,\n             * allowing the new module factory returned when .using(...) is called\n             * to itself expose a .using(...) method recursively\n             *\n             * @param {Function} factory\n             * @return {Function}\n             */\n            function createSubFactory(factory) {\n                /**\n                 * Creates a new factory function with some optional default options,\n                 * environment and top-level Scope\n                 *\n                 * @param {object=} defaultOptions\n                 * @param {Environment=} defaultEnvironment\n                 * @param {Scope=} defaultTopLevelScope\n                 * @returns {Function}\n                 */\n                return function subFactory(defaultOptions, defaultEnvironment, defaultTopLevelScope) {\n                    /**\n                     * A proxying factory function that applies these defaults\n                     * and then forwards onto the original factory function\n                     *\n                     * @param {object=} options\n                     * @param {Environment=} environment\n                     * @param {Scope=} topLevelScope\n                     * @returns {Engine}\n                     */\n                    function proxy(options, environment, topLevelScope) {\n                        options = extendOptions(defaultOptions, options);\n                        environment = environment || defaultEnvironment;\n                        topLevelScope = topLevelScope || defaultTopLevelScope;\n\n                        return factory(options, environment, topLevelScope);\n                    }\n\n                    /**\n                     * Creates a new factory function with some optional default options,\n                     * environment and top-level Scope\n                     */\n                    proxy.using = createSubFactory(proxy);\n\n                    return proxy;\n                };\n            }\n\n            /**\n             * Creates a new factory function with some optional default options,\n             * environment and top-level Scope\n             */\n            factory.using = createSubFactory(factory);\n\n            return factory;\n        },\n\n        /**\n         * Sets one or more configuration options\n         *\n         * @param {object} options\n         */\n        configure: function (options) {\n            // Configuration options are likely to be used by other option groups/bindings etc.,\n            // so set those first\n            this.optionGroups.unshift(function () {\n                return options;\n            });\n        },\n\n        /**\n         * Creates a new Environment instance, useful for sharing a runtime\n         * context between modules.\n         * A factory function returned from `.compile(...)` may be called\n         * passing an Environment instance in order to reuse it, eg.\n         * to make classes, functions and global variables from one module\n         * available in another outside the use of includes.\n         *\n         * @param {object} options\n         * @param {Array=} addons\n         * @returns {Environment}\n         */\n        createEnvironment: function (options, addons) {\n            var runtime = this,\n                allBuiltins = _.extend({}, runtime.builtins),\n                allOptionGroups = runtime.optionGroups,\n                stdin = new Stream(),\n                stdout = new Stream(),\n                stderr = new Stream(),\n                state;\n\n            _.each(addons, function (addon) {\n                if (typeof addon === 'function') {\n                    // Allow an addon to be defined as a function, to allow testing\n                    addon = addon();\n                }\n\n                allBuiltins.translationCatalogues = allBuiltins.translationCatalogues.concat(addon.translationCatalogues || []);\n                allBuiltins.functionGroups = allBuiltins.functionGroups.concat(addon.functionGroups || []);\n                allBuiltins.classGroups = allBuiltins.classGroups.concat(addon.classGroups || []);\n                allBuiltins.classes = _.extend({}, allBuiltins.classes, addon.classes);\n                allBuiltins.constantGroups = allBuiltins.constantGroups.concat(addon.constantGroups || []);\n                allBuiltins.defaultINIGroups = allBuiltins.defaultINIGroups.concat(addon.defaultINIGroups || []);\n                allOptionGroups = allOptionGroups.concat(addon.optionGroups || []);\n                allBuiltins.bindingGroups = allBuiltins.bindingGroups.concat(addon.bindingGroups || []);\n            });\n\n            state = new runtime.PHPState(\n                runtime,\n                runtime.globalStackHooker,\n                allBuiltins,\n                stdin,\n                stdout,\n                stderr,\n                runtime.pausable,\n                runtime.mode,\n                allOptionGroups,\n                options\n            );\n\n            return new runtime.Environment(state);\n        },\n\n        /**\n         * Installs a new set of builtins, to be available to all modules\n         * compiled and executed by this runtime.\n         * All fields are optional - for example, this method can be used\n         * to only define a new class without also defining any constants or functions.\n         *\n         * @param {Function|{classes: {}, constantGroups: Array, functionGroups: Array}} newBuiltins\n         */\n        install: function (newBuiltins) {\n            var builtins = this.builtins;\n\n            if (typeof newBuiltins === 'function') {\n                // Allow an addon to be defined as a function, to allow testing\n                newBuiltins = newBuiltins();\n            }\n\n            [].push.apply(builtins.translationCatalogues, newBuiltins.translationCatalogues);\n            [].push.apply(builtins.functionGroups, newBuiltins.functionGroups);\n            [].push.apply(builtins.classGroups, newBuiltins.classGroups);\n            _.extend(builtins.classes, newBuiltins.classes);\n            [].push.apply(builtins.constantGroups, newBuiltins.constantGroups);\n            [].push.apply(builtins.defaultINIGroups, newBuiltins.defaultINIGroups);\n            [].push.apply(this.optionGroups, newBuiltins.optionGroups);\n            [].push.apply(builtins.bindingGroups, newBuiltins.bindingGroups);\n        }\n    });\n\n    return Runtime;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter;\n\nfunction Stream() {\n    EventEmitter.call(this);\n\n    this.data = '';\n}\n\nutil.inherits(Stream, EventEmitter);\n\n_.extend(Stream.prototype, {\n    read: function (length) {\n        var data,\n            stream = this;\n\n        if (!length && length !== 0) {\n            data = stream.data;\n            stream.data = '';\n        } else {\n            data = stream.data.substr(0, length);\n            stream.data = stream.data.substr(length);\n        }\n\n        return data;\n    },\n\n    readAll: function () {\n        var stream = this;\n\n        return stream.read(stream.data.length);\n    },\n\n    write: function (data) {\n        var stream = this;\n\n        stream.data += data;\n        stream.emit('data', data);\n    }\n});\n\nmodule.exports = Stream;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","<?php\n\n/**\n * Example of how to use Uniter's experimental inline PHP Markdown plugin\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin-example\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin-example/raw/master/MIT-LICENSE.txt\n */\n\nnamespace MyUniterProjects\\MarkdownPluginExample;\n\nclass Markdown\n{\n    public function getHtml()\n    {\n        $name = 'Archie';\n        $where = 'just where exactly';\n\n        // Use our custom inline Markdown syntax to embed a document\n        $myMarkdownTree = markdown {\n### My intro\n- Firstly, hello *$name*, how are _you_?\n- Secondly, $where did you go?\n        };\n\n        return $myMarkdownTree->toHtml();\n    }\n}\n","<?php\n\n// autoload.php @generated by Composer\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190::getLoader();\n","<?php\n\n/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Composer\\Autoload;\n\n/**\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n *\n *     $loader = new \\Composer\\Autoload\\ClassLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     // to enable searching the include path (eg. for PEAR packages)\n *     $loader->setUseIncludePath(true);\n *\n * In this example, if you try to use a class in the Symfony\\Component\n * namespace or one of its children (Symfony\\Component\\Console for instance),\n * the autoloader will first look for the class under the component/\n * directory, and it will then fallback to the framework/ directory if not\n * found before giving up.\n *\n * This class is loosely based on the Symfony UniversalClassLoader.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Jordi Boggiano <j.boggiano@seld.be>\n * @see    https://www.php-fig.org/psr/psr-0/\n * @see    https://www.php-fig.org/psr/psr-4/\n */\nclass ClassLoader\n{\n    private $vendorDir;\n\n    // PSR-4\n    private $prefixLengthsPsr4 = array();\n    private $prefixDirsPsr4 = array();\n    private $fallbackDirsPsr4 = array();\n\n    // PSR-0\n    private $prefixesPsr0 = array();\n    private $fallbackDirsPsr0 = array();\n\n    private $useIncludePath = false;\n    private $classMap = array();\n    private $classMapAuthoritative = false;\n    private $missingClasses = array();\n    private $apcuPrefix;\n\n    private static $registeredLoaders = array();\n\n    public function __construct($vendorDir = null)\n    {\n        $this->vendorDir = $vendorDir;\n    }\n\n    public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return array();\n    }\n\n    public function getPrefixesPsr4()\n    {\n        return $this->prefixDirsPsr4;\n    }\n\n    public function getFallbackDirs()\n    {\n        return $this->fallbackDirsPsr0;\n    }\n\n    public function getFallbackDirsPsr4()\n    {\n        return $this->fallbackDirsPsr4;\n    }\n\n    public function getClassMap()\n    {\n        return $this->classMap;\n    }\n\n    /**\n     * @param array $classMap Class to filename map\n     */\n    public function addClassMap(array $classMap)\n    {\n        if ($this->classMap) {\n            $this->classMap = array_merge($this->classMap, $classMap);\n        } else {\n            $this->classMap = $classMap;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix, either\n     * appending or prepending to the ones previously set for this prefix.\n     *\n     * @param string       $prefix  The prefix\n     * @param array|string $paths   The PSR-0 root directories\n     * @param bool         $prepend Whether to prepend the directories\n     */\n    public function add($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            if ($prepend) {\n                $this->fallbackDirsPsr0 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr0\n                );\n            } else {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $this->fallbackDirsPsr0,\n                    (array) $paths\n                );\n            }\n\n            return;\n        }\n\n        $first = $prefix[0];\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n            $this->prefixesPsr0[$first][$prefix] = (array) $paths;\n\n            return;\n        }\n        if ($prepend) {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixesPsr0[$first][$prefix]\n            );\n        } else {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $this->prefixesPsr0[$first][$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace, either\n     * appending or prepending to the ones previously set for this namespace.\n     *\n     * @param string       $prefix  The prefix/namespace, with trailing '\\\\'\n     * @param array|string $paths   The PSR-4 base directories\n     * @param bool         $prepend Whether to prepend the directories\n     *\n     * @throws \\InvalidArgumentException\n     */\n    public function addPsr4($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            // Register directories for the root namespace.\n            if ($prepend) {\n                $this->fallbackDirsPsr4 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr4\n                );\n            } else {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $this->fallbackDirsPsr4,\n                    (array) $paths\n                );\n            }\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n            // Register directories for a new namespace.\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        } elseif ($prepend) {\n            // Prepend directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixDirsPsr4[$prefix]\n            );\n        } else {\n            // Append directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $this->prefixDirsPsr4[$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix,\n     * replacing any others previously set for this prefix.\n     *\n     * @param string       $prefix The prefix\n     * @param array|string $paths  The PSR-0 base directories\n     */\n    public function set($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr0 = (array) $paths;\n        } else {\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace,\n     * replacing any others previously set for this namespace.\n     *\n     * @param string       $prefix The prefix/namespace, with trailing '\\\\'\n     * @param array|string $paths  The PSR-4 base directories\n     *\n     * @throws \\InvalidArgumentException\n     */\n    public function setPsr4($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr4 = (array) $paths;\n        } else {\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Turns on searching the include path for class files.\n     *\n     * @param bool $useIncludePath\n     */\n    public function setUseIncludePath($useIncludePath)\n    {\n        $this->useIncludePath = $useIncludePath;\n    }\n\n    /**\n     * Can be used to check if the autoloader uses the include path to check\n     * for classes.\n     *\n     * @return bool\n     */\n    public function getUseIncludePath()\n    {\n        return $this->useIncludePath;\n    }\n\n    /**\n     * Turns off searching the prefix and fallback directories for classes\n     * that have not been registered with the class map.\n     *\n     * @param bool $classMapAuthoritative\n     */\n    public function setClassMapAuthoritative($classMapAuthoritative)\n    {\n        $this->classMapAuthoritative = $classMapAuthoritative;\n    }\n\n    /**\n     * Should class lookup fail if not found in the current class map?\n     *\n     * @return bool\n     */\n    public function isClassMapAuthoritative()\n    {\n        return $this->classMapAuthoritative;\n    }\n\n    /**\n     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.\n     *\n     * @param string|null $apcuPrefix\n     */\n    public function setApcuPrefix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n    }\n\n    /**\n     * The APCu prefix in use, or null if APCu caching is not enabled.\n     *\n     * @return string|null\n     */\n    public function getApcuPrefix()\n    {\n        return $this->apcuPrefix;\n    }\n\n    /**\n     * Registers this instance as an autoloader.\n     *\n     * @param bool $prepend Whether to prepend the autoloader or not\n     */\n    public function register($prepend = false)\n    {\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n\n        if (null === $this->vendorDir) {\n            //no-op\n        } elseif ($prepend) {\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n        } else {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n            self::$registeredLoaders[$this->vendorDir] = $this;\n        }\n    }\n\n    /**\n     * Unregisters this instance as an autoloader.\n     */\n    public function unregister()\n    {\n        spl_autoload_unregister(array($this, 'loadClass'));\n\n        if (null !== $this->vendorDir) {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n        }\n    }\n\n    /**\n     * Loads the given class or interface.\n     *\n     * @param  string    $class The name of the class\n     * @return bool|null True if loaded, null otherwise\n     */\n    public function loadClass($class)\n    {\n        if ($file = $this->findFile($class)) {\n            includeFile($file);\n\n            return true;\n        }\n    }\n\n    /**\n     * Finds the path to the file where the class is defined.\n     *\n     * @param string $class The name of the class\n     *\n     * @return string|false The path if found, false otherwise\n     */\n    public function findFile($class)\n    {\n        // class map lookup\n        if (isset($this->classMap[$class])) {\n            return $this->classMap[$class];\n        }\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n            return false;\n        }\n        if (null !== $this->apcuPrefix) {\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n            if ($hit) {\n                return $file;\n            }\n        }\n\n        $file = $this->findFileWithExtension($class, '.php');\n\n        // Search for Hack files if we are running on HHVM\n        if (false === $file && defined('HHVM_VERSION')) {\n            $file = $this->findFileWithExtension($class, '.hh');\n        }\n\n        if (null !== $this->apcuPrefix) {\n            apcu_add($this->apcuPrefix.$class, $file);\n        }\n\n        if (false === $file) {\n            // Remember that this class does not exist.\n            $this->missingClasses[$class] = true;\n        }\n\n        return $file;\n    }\n\n    /**\n     * Returns the currently registered loaders indexed by their corresponding vendor directories.\n     *\n     * @return self[]\n     */\n    public static function getRegisteredLoaders()\n    {\n        return self::$registeredLoaders;\n    }\n\n    private function findFileWithExtension($class, $ext)\n    {\n        // PSR-4 lookup\n        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n\n        $first = $class[0];\n        if (isset($this->prefixLengthsPsr4[$first])) {\n            $subPath = $class;\n            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n                $subPath = substr($subPath, 0, $lastPos);\n                $search = $subPath . '\\\\';\n                if (isset($this->prefixDirsPsr4[$search])) {\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n                        if (file_exists($file = $dir . $pathEnd)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-4 fallback dirs\n        foreach ($this->fallbackDirsPsr4 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 lookup\n        if (false !== $pos = strrpos($class, '\\\\')) {\n            // namespaced class name\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n        } else {\n            // PEAR-like class name\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n        }\n\n        if (isset($this->prefixesPsr0[$first])) {\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n                if (0 === strpos($class, $prefix)) {\n                    foreach ($dirs as $dir) {\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-0 fallback dirs\n        foreach ($this->fallbackDirsPsr0 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 include paths.\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n            return $file;\n        }\n\n        return false;\n    }\n}\n\n/**\n * Scope isolated include.\n *\n * Prevents access to $this/self from included files.\n */\nfunction includeFile($file)\n{\n    include $file;\n}\n","<?php\n\n\n\n\n\n\n\n\n\n\n\nnamespace Composer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Composer\\Semver\\VersionParser;\n\n\n\n\n\n\nclass InstalledVersions\n{\nprivate static $installed = array (\n  'root' => \n  array (\n    'pretty_version' => '1.0.0+no-version-set',\n    'version' => '1.0.0.0',\n    'aliases' => \n    array (\n    ),\n    'reference' => NULL,\n    'name' => 'uniter/markdown-plugin-example',\n  ),\n  'versions' => \n  array (\n    'uniter/markdown-plugin-example' => \n    array (\n      'pretty_version' => '1.0.0+no-version-set',\n      'version' => '1.0.0.0',\n      'aliases' => \n      array (\n      ),\n      'reference' => NULL,\n    ),\n  ),\n);\nprivate static $canGetVendors;\nprivate static $installedByVendor = array();\n\n\n\n\n\n\n\npublic static function getInstalledPackages()\n{\n$packages = array();\nforeach (self::getInstalled() as $installed) {\n$packages[] = array_keys($installed['versions']);\n}\n\n\nif (1 === \\count($packages)) {\nreturn $packages[0];\n}\n\nreturn array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n}\n\n\n\n\n\n\n\n\n\npublic static function isInstalled($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (isset($installed['versions'][$packageName])) {\nreturn true;\n}\n}\n\nreturn false;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npublic static function satisfies(VersionParser $parser, $packageName, $constraint)\n{\n$constraint = $parser->parseConstraints($constraint);\n$provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n\nreturn $provided->matches($constraint);\n}\n\n\n\n\n\n\n\n\n\n\npublic static function getVersionRanges($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\n$ranges = array();\nif (isset($installed['versions'][$packageName]['pretty_version'])) {\n$ranges[] = $installed['versions'][$packageName]['pretty_version'];\n}\nif (array_key_exists('aliases', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n}\nif (array_key_exists('replaced', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n}\nif (array_key_exists('provided', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n}\n\nreturn implode(' || ', $ranges);\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getVersion($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['version'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['version'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getPrettyVersion($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['pretty_version'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['pretty_version'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getReference($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['reference'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['reference'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getRootPackage()\n{\n$installed = self::getInstalled();\n\nreturn $installed[0]['root'];\n}\n\n\n\n\n\n\n\npublic static function getRawData()\n{\nreturn self::$installed;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npublic static function reload($data)\n{\nself::$installed = $data;\nself::$installedByVendor = array();\n}\n\n\n\n\nprivate static function getInstalled()\n{\nif (null === self::$canGetVendors) {\nself::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n}\n\n$installed = array();\n\nif (self::$canGetVendors) {\n\nforeach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\nif (isset(self::$installedByVendor[$vendorDir])) {\n$installed[] = self::$installedByVendor[$vendorDir];\n} elseif (is_file($vendorDir.'/composer/installed.php')) {\n$installed[] = self::$installedByVendor[$vendorDir] = require $vendorDir.'/composer/installed.php';\n}\n}\n}\n\n$installed[] = self::$installed;\n\nreturn $installed;\n}\n}\n","<?php\n\n// autoload_classmap.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Composer\\\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',\n);\n","<?php\n\n// autoload_namespaces.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n);\n","<?php\n\n// autoload_psr4.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'MyUniterProjects\\\\MarkdownPluginExample\\\\' => array($baseDir . '/src'),\n);\n","<?php\n\n// autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190\n{\n    private static $loader;\n\n    public static function loadClassLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader\n     */\n    public static function getLoader()\n    {\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        spl_autoload_register(array('ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190', 'loadClassLoader'), true, true);\n        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(\\dirname(__FILE__)));\n        spl_autoload_unregister(array('ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190', 'loadClassLoader'));\n\n        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());\n        if ($useStaticLoader) {\n            require __DIR__ . '/autoload_static.php';\n\n            call_user_func(\\Composer\\Autoload\\ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::getInitializer($loader));\n        } else {\n            $map = require __DIR__ . '/autoload_namespaces.php';\n            foreach ($map as $namespace => $path) {\n                $loader->set($namespace, $path);\n            }\n\n            $map = require __DIR__ . '/autoload_psr4.php';\n            foreach ($map as $namespace => $path) {\n                $loader->setPsr4($namespace, $path);\n            }\n\n            $classMap = require __DIR__ . '/autoload_classmap.php';\n            if ($classMap) {\n                $loader->addClassMap($classMap);\n            }\n        }\n\n        $loader->register(true);\n\n        return $loader;\n    }\n}\n","<?php\n\n// autoload_static.php @generated by Composer\n\nnamespace Composer\\Autoload;\n\nclass ComposerStaticInita938c0f9513fc8fb70dd34967ae81190\n{\n    public static $prefixLengthsPsr4 = array (\n        'M' => \n        array (\n            'MyUniterProjects\\\\MarkdownPluginExample\\\\' => 39,\n        ),\n    );\n\n    public static $prefixDirsPsr4 = array (\n        'MyUniterProjects\\\\MarkdownPluginExample\\\\' => \n        array (\n            0 => __DIR__ . '/../..' . '/src',\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n    );\n\n    public static function getInitializer(ClassLoader $loader)\n    {\n        return \\Closure::bind(function () use ($loader) {\n            $loader->prefixLengthsPsr4 = ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::$prefixLengthsPsr4;\n            $loader->prefixDirsPsr4 = ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::$prefixDirsPsr4;\n            $loader->classMap = ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::$classMap;\n\n        }, null, ClassLoader::class);\n    }\n}\n","<?php return array (\n  'root' => \n  array (\n    'pretty_version' => '1.0.0+no-version-set',\n    'version' => '1.0.0.0',\n    'aliases' => \n    array (\n    ),\n    'reference' => NULL,\n    'name' => 'uniter/markdown-plugin-example',\n  ),\n  'versions' => \n  array (\n    'uniter/markdown-plugin-example' => \n    array (\n      'pretty_version' => '1.0.0+no-version-set',\n      'version' => '1.0.0.0',\n      'aliases' => \n      array (\n      ),\n      'reference' => NULL,\n    ),\n  ),\n);\n","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar BoldNode_1 = require(\"./Runtime/Node/BoldNode\");\nvar DocumentNode_1 = require(\"./Runtime/Node/DocumentNode\");\nvar ExpressionNode_1 = require(\"./Runtime/Node/ExpressionNode\");\nvar HeadingNode_1 = require(\"./Runtime/Node/HeadingNode\");\nvar InlineCodeNode_1 = require(\"./Runtime/Node/InlineCodeNode\");\nvar ItalicNode_1 = require(\"./Runtime/Node/ItalicNode\");\nvar ListItemNode_1 = require(\"./Runtime/Node/ListItemNode\");\nvar PlainTextNode_1 = require(\"./Runtime/Node/PlainTextNode\");\nvar UnorderedListNode_1 = require(\"./Runtime/Node/UnorderedListNode\");\nmodule.exports = {\n    addons: [\n        {\n            // Expose all the classes that will be instantiated to represent the nodes\n            // of the Markdown document to PHP-land:\n            classGroups: function () {\n                return {\n                    'Uniter\\\\Markdown\\\\Node\\\\BoldNode': BoldNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\DocumentNode': DocumentNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\ExpressionNode': ExpressionNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\HeadingNode': HeadingNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\InlineCodeNode': InlineCodeNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\ItalicNode': ItalicNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\ListItemNode': ListItemNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\PlainTextNode': PlainTextNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\UnorderedListNode': UnorderedListNode_1.factory,\n                };\n            },\n        },\n    ],\n};\n//# sourceMappingURL=config.phpcore.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar BoldNode = /** @class */ (function () {\n    function BoldNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    BoldNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<strong>' +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</strong>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<strong>' + htmls.join('') + '</strong>';\n            });\n        });\n    };\n    return BoldNode;\n}());\nexports.default = BoldNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificBoldNode, _super);\n        function ModeSpecificBoldNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificBoldNode;\n    }(BoldNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=BoldNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\n/**\n * Represents an entire Markdown document\n */\nvar DocumentNode = /** @class */ (function () {\n    function DocumentNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    DocumentNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return _this.elements\n                .map(function (element) { return valueHelper.toNativeWithSyncApi(element); }) // checks a ProxyClass instance was passed in\n                .map(function (element) { return element.toHtml(); })\n                .join('');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return htmls.join('');\n            });\n        });\n    };\n    return DocumentNode;\n}());\nexports.default = DocumentNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificDocumentNode, _super);\n        function ModeSpecificDocumentNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificDocumentNode;\n    }(DocumentNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=DocumentNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar ExpressionNode = /** @class */ (function () {\n    function ExpressionNode(expression) {\n        this.expression = expression;\n    }\n    ExpressionNode.prototype.toHtml = function () {\n        if (this.expression === null) {\n            // Use this placeholder for obviousness rather than an empty string as per PHP\n            return '[NULL]';\n        }\n        if (typeof this.expression !== 'string' &&\n            typeof this.expression !== 'number') {\n            throw new Error(\"Expression is of unknown type: \" + typeof this.expression);\n        }\n        return String(this.expression);\n    };\n    return ExpressionNode;\n}());\nexports.default = ExpressionNode;\nvar factory = function () {\n    return ExpressionNode;\n};\nexports.factory = factory;\n//# sourceMappingURL=ExpressionNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar HeadingNode = /** @class */ (function () {\n    function HeadingNode(internals, level, elements) {\n        this.internals = internals;\n        this.level = level;\n        this.elements = elements;\n    }\n    HeadingNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        var tagName = 'h' + this.level;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return (\"<\" + tagName + \">\" +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                (\"</\" + tagName + \">\"));\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return \"<\" + tagName + \">\" + htmls.join('') + (\"</\" + tagName + \">\");\n            });\n        });\n    };\n    return HeadingNode;\n}());\nexports.default = HeadingNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificHeadingNode, _super);\n        function ModeSpecificHeadingNode(level, elements) {\n            return _super.call(this, internals, level, elements) || this;\n        }\n        return ModeSpecificHeadingNode;\n    }(HeadingNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=HeadingNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar InlineCodeNode = /** @class */ (function () {\n    function InlineCodeNode(code) {\n        this.code = code;\n    }\n    InlineCodeNode.prototype.toHtml = function () {\n        return '<code>' + this.code + '</code>';\n    };\n    return InlineCodeNode;\n}());\nexports.default = InlineCodeNode;\nvar factory = function () {\n    return InlineCodeNode;\n};\nexports.factory = factory;\n//# sourceMappingURL=InlineCodeNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar ItalicNode = /** @class */ (function () {\n    function ItalicNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    ItalicNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<em>' +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</em>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<em>' + htmls.join('') + '</em>';\n            });\n        });\n    };\n    return ItalicNode;\n}());\nexports.default = ItalicNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificItalicNode, _super);\n        function ModeSpecificItalicNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificItalicNode;\n    }(ItalicNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=ItalicNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar ListItemNode = /** @class */ (function () {\n    function ListItemNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    ListItemNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<li>' +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</li>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<li>' + htmls.join('') + '</li>';\n            });\n        });\n    };\n    return ListItemNode;\n}());\nexports.default = ListItemNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificListItemNode, _super);\n        function ModeSpecificListItemNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificListItemNode;\n    }(ListItemNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=ListItemNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar PlainTextNode = /** @class */ (function () {\n    function PlainTextNode(text) {\n        this.text = text;\n    }\n    PlainTextNode.prototype.toHtml = function () {\n        return this.text;\n    };\n    return PlainTextNode;\n}());\nexports.default = PlainTextNode;\nvar factory = function () {\n    return PlainTextNode;\n};\nexports.factory = factory;\n//# sourceMappingURL=PlainTextNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar UnorderedListNode = /** @class */ (function () {\n    function UnorderedListNode(internals, listItemNodes) {\n        this.internals = internals;\n        this.listItemNodes = listItemNodes;\n    }\n    UnorderedListNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<ul>' +\n                _this.listItemNodes\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</ul>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.listItemNodes.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<ul>' + htmls.join('') + '</ul>';\n            });\n        });\n    };\n    return UnorderedListNode;\n}());\nexports.default = UnorderedListNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificUnorderedListNode, _super);\n        function ModeSpecificUnorderedListNode(listItemNodes) {\n            return _super.call(this, internals, listItemNodes) || this;\n        }\n        return ModeSpecificUnorderedListNode;\n    }(UnorderedListNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=UnorderedListNode.js.map","/**\n * Example of how to use Uniter's experimental inline PHP Markdown plugin\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin-example\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin-example/raw/master/MIT-LICENSE.txt\n */\n\nmodule.exports = function (engine) {\n    engine.defineGlobal('domDocument', document);\n};\n"],"sourceRoot":""}