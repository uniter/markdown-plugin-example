{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./browser/bootstrap.js","webpack:///browser/entry.php","webpack:///./node_modules/d/auto-bind.js","webpack:///./node_modules/d/index.js","webpack:///./node_modules/es5-ext/array/#/clear.js","webpack:///./node_modules/es5-ext/array/from/index.js","webpack:///./node_modules/es5-ext/array/from/is-implemented.js","webpack:///./node_modules/es5-ext/array/from/shim.js","webpack:///./node_modules/es5-ext/function/is-arguments.js","webpack:///./node_modules/es5-ext/function/is-function.js","webpack:///./node_modules/es5-ext/function/noop.js","webpack:///./node_modules/es5-ext/math/sign/index.js","webpack:///./node_modules/es5-ext/math/sign/is-implemented.js","webpack:///./node_modules/es5-ext/math/sign/shim.js","webpack:///./node_modules/es5-ext/number/to-integer.js","webpack:///./node_modules/es5-ext/number/to-pos-integer.js","webpack:///./node_modules/es5-ext/object/_iterate.js","webpack:///./node_modules/es5-ext/object/assign/index.js","webpack:///./node_modules/es5-ext/object/assign/is-implemented.js","webpack:///./node_modules/es5-ext/object/assign/shim.js","webpack:///./node_modules/es5-ext/object/copy.js","webpack:///./node_modules/es5-ext/object/create.js","webpack:///./node_modules/es5-ext/object/for-each.js","webpack:///./node_modules/es5-ext/object/is-object.js","webpack:///./node_modules/es5-ext/object/is-value.js","webpack:///./node_modules/es5-ext/object/keys/index.js","webpack:///./node_modules/es5-ext/object/keys/is-implemented.js","webpack:///./node_modules/es5-ext/object/keys/shim.js","webpack:///./node_modules/es5-ext/object/map.js","webpack:///./node_modules/es5-ext/object/normalize-options.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/index.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/is-implemented.js","webpack:///./node_modules/es5-ext/object/set-prototype-of/shim.js","webpack:///./node_modules/es5-ext/object/valid-callable.js","webpack:///./node_modules/es5-ext/object/valid-object.js","webpack:///./node_modules/es5-ext/object/valid-value.js","webpack:///./node_modules/es5-ext/string/#/contains/index.js","webpack:///./node_modules/es5-ext/string/#/contains/is-implemented.js","webpack:///./node_modules/es5-ext/string/#/contains/shim.js","webpack:///./node_modules/es5-ext/string/is-string.js","webpack:///./node_modules/es5-ext/string/random-uniq.js","webpack:///./node_modules/es6-iterator/array.js","webpack:///./node_modules/es6-iterator/for-of.js","webpack:///./node_modules/es6-iterator/get.js","webpack:///./node_modules/es6-iterator/index.js","webpack:///./node_modules/es6-iterator/is-iterable.js","webpack:///./node_modules/es6-iterator/string.js","webpack:///./node_modules/es6-iterator/valid-iterable.js","webpack:///./node_modules/es6-symbol/index.js","webpack:///./node_modules/es6-symbol/is-implemented.js","webpack:///./node_modules/es6-symbol/is-symbol.js","webpack:///./node_modules/es6-symbol/lib/private/generate-name.js","webpack:///./node_modules/es6-symbol/lib/private/setup/standard-symbols.js","webpack:///./node_modules/es6-symbol/lib/private/setup/symbol-registry.js","webpack:///./node_modules/es6-symbol/polyfill.js","webpack:///./node_modules/es6-symbol/validate-symbol.js","webpack:///./node_modules/es6-weak-map/index.js","webpack:///./node_modules/es6-weak-map/is-implemented.js","webpack:///./node_modules/es6-weak-map/is-native-implemented.js","webpack:///./node_modules/es6-weak-map/polyfill.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/ext/global-this/implementation.js","webpack:///./node_modules/ext/global-this/index.js","webpack:///./node_modules/ext/global-this/is-implemented.js","webpack:///./node_modules/immediate/lib/browser.js","webpack:///./node_modules/is-promise/index.js","webpack:///./node_modules/lie/lib/browser.js","webpack:///./node_modules/microdash/index.js","webpack:///./node_modules/microdash/src/each.js","webpack:///./node_modules/microdash/src/escapeRegExp.js","webpack:///./node_modules/microdash/src/extend.js","webpack:///./node_modules/microdash/src/filter.js","webpack:///./node_modules/microdash/src/forOwn.js","webpack:///./node_modules/microdash/src/getType.js","webpack:///./node_modules/microdash/src/isArray.js","webpack:///./node_modules/microdash/src/isBoolean.js","webpack:///./node_modules/microdash/src/isFunction.js","webpack:///./node_modules/microdash/src/isNumber.js","webpack:///./node_modules/microdash/src/isPlainObject.js","webpack:///./node_modules/microdash/src/isString.js","webpack:///./node_modules/microdash/src/map.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/pauser/index.js","webpack:///./node_modules/pauser/src/Wrapper.js","webpack:///./node_modules/phpcommon/index.js","webpack:///./node_modules/phpcommon/src/Error/Exception.js","webpack:///./node_modules/phpcommon/src/Error/PHPError.js","webpack:///./node_modules/phpcommon/src/Error/PHPFatalError.js","webpack:///./node_modules/phpcommon/src/Error/PHPParseError.js","webpack:///./node_modules/phpcommon/src/Translator.js","webpack:///./node_modules/phpconfig/dist sync","webpack:///./node_modules/phpconfig/dist/Config.js","webpack:///./node_modules/phpconfig/dist/ConfigExporter.js","webpack:///./node_modules/phpconfig/dist/ConfigImporter.js","webpack:///./node_modules/phpconfig/dist/ConfigLoader.js","webpack:///./node_modules/phpconfig/dist/ConfigSet.js","webpack:///./node_modules/phpconfig/dist/Loader.js","webpack:///./node_modules/phpconfig/dist/Requirer.js","webpack:///./node_modules/phpconfig/dist/SerialisationChecker.js","webpack:///./node_modules/phpconfig/dist/index.js","webpack:///./node_modules/phpcore/psync.js","webpack:///./node_modules/phpcore/src/Call.js","webpack:///./node_modules/phpcore/src/CallFactory.js","webpack:///./node_modules/phpcore/src/CallStack.js","webpack:///./node_modules/phpcore/src/Class.js","webpack:///./node_modules/phpcore/src/ClassAutoloader.js","webpack:///./node_modules/phpcore/src/Closure.js","webpack:///./node_modules/phpcore/src/ClosureFactory.js","webpack:///./node_modules/phpcore/src/Debug/DebugFactory.js","webpack:///./node_modules/phpcore/src/Debug/DebugFormatter.js","webpack:///./node_modules/phpcore/src/Debug/DebugFormatterInstaller.js","webpack:///./node_modules/phpcore/src/Debug/DebugValue.js","webpack:///./node_modules/phpcore/src/Debug/DebugVariable.js","webpack:///./node_modules/phpcore/src/Debug/ValueFormatter.js","webpack:///./node_modules/phpcore/src/Engine.js","webpack:///./node_modules/phpcore/src/Environment.js","webpack:///./node_modules/phpcore/src/Error/ErrorConfiguration.js","webpack:///./node_modules/phpcore/src/Error/ErrorConverter.js","webpack:///./node_modules/phpcore/src/Error/ErrorPromoter.js","webpack:///./node_modules/phpcore/src/Error/ErrorReporting.js","webpack:///./node_modules/phpcore/src/Error/TraceFormatter.js","webpack:///./node_modules/phpcore/src/Exception/LoadFailedException.js","webpack:///./node_modules/phpcore/src/Exception/NoActiveOutputBufferException.js","webpack:///./node_modules/phpcore/src/FFI/Call.js","webpack:///./node_modules/phpcore/src/FFI/Call/Caller.js","webpack:///./node_modules/phpcore/src/FFI/Call/NativeCaller.js","webpack:///./node_modules/phpcore/src/FFI/Call/ValueCaller.js","webpack:///./node_modules/phpcore/src/FFI/Export/ExportFactory.js","webpack:///./node_modules/phpcore/src/FFI/Export/ExportRepository.js","webpack:///./node_modules/phpcore/src/FFI/Export/UnwrapperRepository.js","webpack:///./node_modules/phpcore/src/FFI/FFIFactory.js","webpack:///./node_modules/phpcore/src/FFI/Internals/ClassInternalsClassFactory.js","webpack:///./node_modules/phpcore/src/FFI/Internals/FunctionInternalsClassFactory.js","webpack:///./node_modules/phpcore/src/FFI/Internals/Internals.js","webpack:///./node_modules/phpcore/src/FFI/Result.js","webpack:///./node_modules/phpcore/src/FFI/Stack/GlobalStackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Stack/NonV8FrameStackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Stack/StackCleaner.js","webpack:///./node_modules/phpcore/src/FFI/Stack/StackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Stack/V8FrameStackHooker.js","webpack:///./node_modules/phpcore/src/FFI/Value/AsyncObjectValue.js","webpack:///./node_modules/phpcore/src/FFI/Value/PHPObject.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyClassFactory.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyClassRepository.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyFactory.js","webpack:///./node_modules/phpcore/src/FFI/Value/Proxy/ProxyMemberFactory.js","webpack:///./node_modules/phpcore/src/FFI/Value/ValueCoercer.js","webpack:///./node_modules/phpcore/src/FFI/Value/ValueHelper.js","webpack:///./node_modules/phpcore/src/FFI/Value/ValueStorage.js","webpack:///./node_modules/phpcore/src/Function/ClosureContext.js","webpack:///./node_modules/phpcore/src/Function/FunctionContext.js","webpack:///./node_modules/phpcore/src/Function/FunctionContextInterface.js","webpack:///./node_modules/phpcore/src/Function/FunctionSpec.js","webpack:///./node_modules/phpcore/src/Function/FunctionSpecFactory.js","webpack:///./node_modules/phpcore/src/Function/MethodContext.js","webpack:///./node_modules/phpcore/src/Function/Parameter.js","webpack:///./node_modules/phpcore/src/Function/ParameterFactory.js","webpack:///./node_modules/phpcore/src/Function/ParameterListFactory.js","webpack:///./node_modules/phpcore/src/Function/ParameterTypeFactory.js","webpack:///./node_modules/phpcore/src/FunctionFactory.js","webpack:///./node_modules/phpcore/src/INIState.js","webpack:///./node_modules/phpcore/src/Iterator/ArrayIterator.js","webpack:///./node_modules/phpcore/src/KeyReferencePair.js","webpack:///./node_modules/phpcore/src/KeyValuePair.js","webpack:///./node_modules/phpcore/src/List.js","webpack:///./node_modules/phpcore/src/Load/Includer.js","webpack:///./node_modules/phpcore/src/Load/LoadScope.js","webpack:///./node_modules/phpcore/src/Load/Loader.js","webpack:///./node_modules/phpcore/src/Load/OnceIncluder.js","webpack:///./node_modules/phpcore/src/MethodSpec.js","webpack:///./node_modules/phpcore/src/Module.js","webpack:///./node_modules/phpcore/src/ModuleFactory.js","webpack:///./node_modules/phpcore/src/Namespace.js","webpack:///./node_modules/phpcore/src/NamespaceFactory.js","webpack:///./node_modules/phpcore/src/NamespaceScope.js","webpack:///./node_modules/phpcore/src/OptionSet.js","webpack:///./node_modules/phpcore/src/Output/Output.js","webpack:///./node_modules/phpcore/src/Output/OutputBuffer.js","webpack:///./node_modules/phpcore/src/Output/OutputBufferInterface.js","webpack:///./node_modules/phpcore/src/Output/OutputFactory.js","webpack:///./node_modules/phpcore/src/Output/StdoutBuffer.js","webpack:///./node_modules/phpcore/src/PHPState.js","webpack:///./node_modules/phpcore/src/Reference/AccessorReference.js","webpack:///./node_modules/phpcore/src/Reference/Element.js","webpack:///./node_modules/phpcore/src/Reference/Element/ElementHookCollection.js","webpack:///./node_modules/phpcore/src/Reference/Element/ElementProvider.js","webpack:///./node_modules/phpcore/src/Reference/Element/ElementProviderFactory.js","webpack:///./node_modules/phpcore/src/Reference/Element/HookableElement.js","webpack:///./node_modules/phpcore/src/Reference/Element/HookableElementProvider.js","webpack:///./node_modules/phpcore/src/Reference/Null.js","webpack:///./node_modules/phpcore/src/Reference/ObjectElement.js","webpack:///./node_modules/phpcore/src/Reference/Property.js","webpack:///./node_modules/phpcore/src/Reference/Reference.js","webpack:///./node_modules/phpcore/src/Reference/ReferenceSlot.js","webpack:///./node_modules/phpcore/src/Reference/StaticProperty.js","webpack:///./node_modules/phpcore/src/Reference/UndeclaredStaticProperty.js","webpack:///./node_modules/phpcore/src/ReferenceFactory.js","webpack:///./node_modules/phpcore/src/Runtime.js","webpack:///./node_modules/phpcore/src/RuntimeFactory.js","webpack:///./node_modules/phpcore/src/Scope.js","webpack:///./node_modules/phpcore/src/ScopeFactory.js","webpack:///./node_modules/phpcore/src/Stream.js","webpack:///./node_modules/phpcore/src/SuperGlobalScope.js","webpack:///./node_modules/phpcore/src/Tools.js","webpack:///./node_modules/phpcore/src/ToolsFactory.js","webpack:///./node_modules/phpcore/src/Type/ArrayType.js","webpack:///./node_modules/phpcore/src/Type/CallableType.js","webpack:///./node_modules/phpcore/src/Type/ClassType.js","webpack:///./node_modules/phpcore/src/Type/IterableType.js","webpack:///./node_modules/phpcore/src/Type/MixedType.js","webpack:///./node_modules/phpcore/src/Type/TypeFactory.js","webpack:///./node_modules/phpcore/src/Type/TypeInterface.js","webpack:///./node_modules/phpcore/src/Value.js","webpack:///./node_modules/phpcore/src/Value/Array.js","webpack:///./node_modules/phpcore/src/Value/BarewordString.js","webpack:///./node_modules/phpcore/src/Value/Boolean.js","webpack:///./node_modules/phpcore/src/Value/Exit.js","webpack:///./node_modules/phpcore/src/Value/Float.js","webpack:///./node_modules/phpcore/src/Value/Integer.js","webpack:///./node_modules/phpcore/src/Value/Null.js","webpack:///./node_modules/phpcore/src/Value/Object.js","webpack:///./node_modules/phpcore/src/Value/String.js","webpack:///./node_modules/phpcore/src/ValueFactory.js","webpack:///./node_modules/phpcore/src/Variable.js","webpack:///./node_modules/phpcore/src/VariableFactory.js","webpack:///./node_modules/phpcore/src/builtin/builtins.js","webpack:///./node_modules/phpcore/src/builtin/classes/Closure.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/ArgumentCountError.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/CompileError.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/ParseError.js","webpack:///./node_modules/phpcore/src/builtin/classes/Error/TypeError.js","webpack:///./node_modules/phpcore/src/builtin/classes/Exception.js","webpack:///./node_modules/phpcore/src/builtin/classes/JSObject.js","webpack:///./node_modules/phpcore/src/builtin/classes/stdClass.js","webpack:///./node_modules/phpcore/src/builtin/constants/errorHandling.js","webpack:///./node_modules/phpcore/src/builtin/constants/reserved.js","webpack:///./node_modules/phpcore/src/builtin/functions/optionsAndInfo/config.js","webpack:///./node_modules/phpcore/src/builtin/functions/spl.js","webpack:///./node_modules/phpcore/src/builtin/ini/errorHandling.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/ArrayAccess.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/Iterator.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/IteratorAggregate.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/Throwable.js","webpack:///./node_modules/phpcore/src/builtin/interfaces/Traversable.js","webpack:///./node_modules/phpcore/src/builtin/messages/error.en_GB.js","webpack:///./node_modules/phpcore/src/builtin/messages/misc.en_GB.js","webpack:///./node_modules/phpcore/src/builtin/messages/notice.en_GB.js","webpack:///./node_modules/phpcore/src/shared/debugFormatterInstaller.js","webpack:///./node_modules/phpcore/src/shared/globalStackHooker.js","webpack:///./node_modules/phpcore/src/shared/runtimeFactory.js","webpack:///./node_modules/phpify/api/psync.js","webpack:///./node_modules/phpify/src/API.js","webpack:///./node_modules/phpify/src/EnvironmentProvider.js","webpack:///./node_modules/phpify/src/FileSystem.js","webpack:///./node_modules/phpify/src/IO.js","webpack:///./node_modules/phpify/src/Loader.js","webpack:///./node_modules/phpify/src/ModuleRepository.js","webpack:///./node_modules/phpify/src/Performance.js","webpack:///./node_modules/phpify/src/php/initialiser_stub.php","webpack:///./node_modules/phpruntime/constants.js","webpack:///./node_modules/phpruntime/psync.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/Exception/MissingFormatArgumentException.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/FormatConverter.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/FormatParser.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/Formatter.js","webpack:///./node_modules/phpruntime/src/builtin/bindings/string/NativeFormatter.js","webpack:///./node_modules/phpruntime/src/builtin/builtins.js","webpack:///./node_modules/phpruntime/src/builtin/classes/Exception/InvalidArgumentException.js","webpack:///./node_modules/phpruntime/src/builtin/classes/Exception/LogicException.js","webpack:///./node_modules/phpruntime/src/builtin/constants/array.js","webpack:///./node_modules/phpruntime/src/builtin/constants/filesystem.js","webpack:///./node_modules/phpruntime/src/builtin/constants/pcre.js","webpack:///./node_modules/phpruntime/src/builtin/constants/php.js","webpack:///./node_modules/phpruntime/src/builtin/constants/string.js","webpack:///./node_modules/phpruntime/src/builtin/functions/array.js","webpack:///./node_modules/phpruntime/src/builtin/functions/class.js","webpack:///./node_modules/phpruntime/src/builtin/functions/dateAndTime/time.js","webpack:///./node_modules/phpruntime/src/builtin/functions/errorHandling.js","webpack:///./node_modules/phpruntime/src/builtin/functions/filesystem.js","webpack:///./node_modules/phpruntime/src/builtin/functions/functionHandling.js","webpack:///./node_modules/phpruntime/src/builtin/functions/functionHandling/CallbackValue.js","webpack:///./node_modules/phpruntime/src/builtin/functions/math/baseConversion.js","webpack:///./node_modules/phpruntime/src/builtin/functions/misc/constant.js","webpack:///./node_modules/phpruntime/src/builtin/functions/misc/time.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/config.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/environment.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/extension.js","webpack:///./node_modules/phpruntime/src/builtin/functions/optionsAndInfo/php.js","webpack:///./node_modules/phpruntime/src/builtin/functions/outputControl.js","webpack:///./node_modules/phpruntime/src/builtin/functions/pcre/common.js","webpack:///./node_modules/phpruntime/src/builtin/functions/spl.js","webpack:///./node_modules/phpruntime/src/builtin/functions/string.js","webpack:///./node_modules/phpruntime/src/builtin/functions/string/html.js","webpack:///./node_modules/phpruntime/src/builtin/functions/variableHandling.js","webpack:///./node_modules/phpruntime/src/builtin/interfaces/SPL/Countable.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/template-string/index.js","webpack:///./node_modules/type/function/is.js","webpack:///./node_modules/type/lib/resolve-exception.js","webpack:///./node_modules/type/lib/safe-to-string.js","webpack:///./node_modules/type/lib/to-short-string.js","webpack:///./node_modules/type/object/is.js","webpack:///./node_modules/type/plain-function/ensure.js","webpack:///./node_modules/type/plain-function/is.js","webpack:///./node_modules/type/prototype/is.js","webpack:///./node_modules/type/string/coerce.js","webpack:///./node_modules/type/value/ensure.js","webpack:///./node_modules/type/value/is.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/BoldNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/DocumentNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/ExpressionNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/HeadingNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/InlineCodeNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/ItalicNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/ListItemNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/PlainTextNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/Runtime/Node/UnorderedListNode.js","webpack:///./node_modules/uniter-markdown-plugin/dist/config.phpcore.js","webpack:///./node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/util/util.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///src/Markdown.php","webpack:///vendor/autoload.php","webpack:///vendor/composer/ClassLoader.php","webpack:///vendor/composer/InstalledVersions.php","webpack:///vendor/composer/autoload_classmap.php","webpack:///vendor/composer/autoload_namespaces.php","webpack:///vendor/composer/autoload_psr4.php","webpack:///vendor/composer/autoload_real.php","webpack:///vendor/composer/autoload_static.php","webpack:///vendor/composer/installed.php"],"names":["$markdown","$domDocument","N_STRING","$name","$where","$myMarkdownTree","$this","$vendorDir","$classMap","$prefix","$prepend","$paths","$first","$length","$useIncludePath","$classMapAuthoritative","$apcuPrefix","$file","$class","$hit","$logicalPathPsr4","$ext","$subPath","$lastPos","$search","$pathEnd","$dir","$pos","$logicalPathPsr0","$dirs","$packages","$installed","$packageName","$constraint","$parser","$provided","$ranges","$data","$loader","$baseDir","$useStaticLoader","$map","$path","$namespace"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ikBCTA,iFAEA,sCAAa,uDAAU,sEAAV,EAAb,sBAEA,oBAAAA,yCAAA,UAAY,gDAAI,+DAAJ,MAAZ,GAEA,iDAAY,WAAZC,uDAAY,YAAE,qEAAF,eAAiB,mDAAjB,GAAZ,4BAAsC,gEAAtC,YAAkD,WAAAD,oDAAA,YAAW,8DAAX,kBAAlD,G;;;;;;;;;;;;;ACRa;;AAEb,0BAA0B,mBAAO,CAAC,sDAAe;AACjD,0BAA0B,mBAAO,CAAC,8DAAmB;AACrD,0BAA0B,mBAAO,CAAC,gFAA4B;AAC9D,0BAA0B,mBAAO,CAAC,kEAAqB;AACvD,0BAA0B,mBAAO,CAAC,4FAAkC;AACpE,0BAA0B,mBAAO,CAAC,gEAAoB;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,oCAAoC,EAAE;AAChF;;;;;;;;;;;;;AChCa;;AAEb,sBAAsB,mBAAO,CAAC,sDAAe;AAC7C,sBAAsB,mBAAO,CAAC,wEAAwB;AACtD,sBAAsB,mBAAO,CAAC,4EAAuB;AACrD,sBAAsB,mBAAO,CAAC,4FAAkC;AAChE,sBAAsB,mBAAO,CAAC,oFAA2B;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,SAAS;AACT;AACA;;;;;;;;;;;;;AC7DA;AACA;AACA;;AAEa;;AAEb,YAAY,mBAAO,CAAC,8EAA0B;;AAE9C;AACA;AACA;AACA;;;;;;;;;;;;;ACXa;;AAEb,iBAAiB,mBAAO,CAAC,6EAAkB,mBAAmB,mBAAO,CAAC,yDAAQ;;;;;;;;;;;;;ACFjE;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;;AAEb,qBAAqB,mBAAO,CAAC,sDAAY;AACzC,qBAAqB,mBAAO,CAAC,oFAA6B;AAC1D,qBAAqB,mBAAO,CAAC,kFAA4B;AACzD,qBAAqB,mBAAO,CAAC,oFAA6B;AAC1D,qBAAqB,mBAAO,CAAC,oFAA6B;AAC1D,qBAAqB,mBAAO,CAAC,8EAA0B;AACvD,qBAAqB,mBAAO,CAAC,wEAAuB;AACpD,qBAAqB,mBAAO,CAAC,0EAAwB;AACrD;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtHa;;AAEb;AACA,wCAAwC,kBAAkB,EAAE;;AAE5D,mCAAmC,uCAAuC;;;;;;;;;;;;;ACL7D;;AAEb;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACPa;;AAEb;AACA;;;;;;;;;;;;;ACHa;;AAEb,iBAAiB,mBAAO,CAAC,4EAAkB,kBAAkB,mBAAO,CAAC,wDAAQ;;;;;;;;;;;;;ACFhE;;AAEb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNa;;AAEb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNa;;AAEb,YAAY,mBAAO,CAAC,+DAAc;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXa;;AAEb,gBAAgB,mBAAO,CAAC,iEAAc;AACtC;;AAEA,mCAAmC,iCAAiC;;;;;;;;;;;;;ACLpE;AACA;AACA;;AAEa;;AAEb,8BAA8B,mBAAO,CAAC,yEAAkB;AACxD,8BAA8B,mBAAO,CAAC,mEAAe;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;AC7Ba;;AAEb,iBAAiB,mBAAO,CAAC,gFAAkB,sBAAsB,mBAAO,CAAC,4DAAQ;;;;;;;;;;;;;ACFpE;;AAEb;AACA;AACA;AACA,QAAQ;AACR,cAAc,aAAa,GAAG,eAAe;AAC7C;AACA;;;;;;;;;;;;;ACRa;;AAEb,YAAY,mBAAO,CAAC,4DAAS;AAC7B,YAAY,mBAAO,CAAC,oEAAgB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBa;;AAEb,aAAa,mBAAO,CAAC,iEAAe;AACpC,aAAa,mBAAO,CAAC,+DAAU;AAC/B,aAAa,mBAAO,CAAC,mEAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;;AAEa;;AAEb;;AAEA,KAAK,mBAAO,CAAC,2GAAmC;AAChD,QAAQ,mBAAO,CAAC,uFAAyB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1CY;;AAEb,iBAAiB,mBAAO,CAAC,6DAAY;;;;;;;;;;;;;ACFxB;;AAEb,cAAc,mBAAO,CAAC,6DAAY;;AAElC,WAAW;;AAEX,mCAAmC,uDAAuD;;;;;;;;;;;;;ACN7E;;AAEb,iBAAiB,mBAAO,CAAC,iEAAkB,IAAI;;AAE/C,iCAAiC,2CAA2C;;;;;;;;;;;;;ACJ/D;;AAEb,iBAAiB,mBAAO,CAAC,8EAAkB,oBAAoB,mBAAO,CAAC,0DAAQ;;;;;;;;;;;;;ACFlE;;AAEb;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;ACTa;;AAEb,cAAc,mBAAO,CAAC,8DAAa;;AAEnC;;AAEA,oCAAoC,wDAAwD;;;;;;;;;;;;;ACN/E;;AAEb,eAAe,mBAAO,CAAC,yEAAkB;AACzC,eAAe,mBAAO,CAAC,6DAAY;AACnC;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;ACba;;AAEb,cAAc,mBAAO,CAAC,6DAAY;;AAElC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;ACnBa;;AAEb,iBAAiB,mBAAO,CAAC,0FAAkB,8BAA8B,mBAAO,CAAC,sEAAQ;;;;;;;;;;;;;ACF5E;;AAEb;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;;AAEA;AACA;;AAEa;;AAEb,uBAAuB,mBAAO,CAAC,gEAAc;AAC7C,uBAAuB,mBAAO,CAAC,oEAAgB;AAC/C;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA,IAAI;AACJ,2DAA2D;AAC3D;;AAEA;AACA,0DAA0D;;AAE1D;AACA;AACA,0DAA0D;;AAE1D;AACA,EAAE;AACF;;AAEA,mBAAO,CAAC,0DAAW;;;;;;;;;;;;;AChFN;;AAEb;AACA;AACA;AACA;;;;;;;;;;;;;ACLa;;AAEb,eAAe,mBAAO,CAAC,+DAAa;;AAEpC;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;;AAEb,cAAc,mBAAO,CAAC,6DAAY;;AAElC;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;;AAEb,iBAAiB,mBAAO,CAAC,oFAAkB,kCAAkC,mBAAO,CAAC,gEAAQ;;;;;;;;;;;;;ACFhF;;AAEb;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;;AAEb;;AAEA;AACA;AACA;;;;;;;;;;;;;ACNa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZa;;AAEb;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;ACVa;;AAEb,qBAAqB,mBAAO,CAAC,gGAAiC;AAC9D,qBAAqB,mBAAO,CAAC,oFAA2B;AACxD,qBAAqB,mBAAO,CAAC,oCAAG;AAChC,qBAAqB,mBAAO,CAAC,sDAAY;AACzC,qBAAqB,mBAAO,CAAC,gDAAI;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;;;;;;;;;;;;;AC/Ba;;AAEb,kBAAkB,mBAAO,CAAC,sFAA+B;AACzD,kBAAkB,mBAAO,CAAC,sFAA+B;AACzD,kBAAkB,mBAAO,CAAC,4EAA0B;AACpD,kBAAkB,mBAAO,CAAC,iDAAO;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ca;;AAEb,qBAAqB,mBAAO,CAAC,sFAA+B;AAC5D,qBAAqB,mBAAO,CAAC,4EAA0B;AACvD,qBAAqB,mBAAO,CAAC,qDAAS;AACtC,qBAAqB,mBAAO,CAAC,uDAAU;AACvC,qBAAqB,mBAAO,CAAC,uEAAkB;AAC/C,qBAAqB,mBAAO,CAAC,sDAAY;;AAEzC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACda;;AAEb,eAAe,mBAAO,CAAC,sEAAuB;AAC9C,eAAe,mBAAO,CAAC,4EAAuB;AAC9C,eAAe,mBAAO,CAAC,sFAA+B;AACtD,eAAe,mBAAO,CAAC,gFAA4B;AACnD,eAAe,mBAAO,CAAC,oCAAG;AAC1B,eAAe,mBAAO,CAAC,kDAAa;AACpC,eAAe,mBAAO,CAAC,sDAAY;;AAEnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA,iCAAiC;AACjC,YAAY;AACZ,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;ACzGa;;AAEb,kBAAkB,mBAAO,CAAC,sFAA+B;AACzD,kBAAkB,mBAAO,CAAC,0EAAyB;AACnD,kBAAkB,mBAAO,CAAC,4EAA0B;;AAEpD,qBAAqB,mBAAO,CAAC,sDAAY;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AACA;;AAEa;;AAEb,qBAAqB,mBAAO,CAAC,gGAAiC;AAC9D,qBAAqB,mBAAO,CAAC,oCAAG;AAChC,qBAAqB,mBAAO,CAAC,sDAAY;AACzC,qBAAqB,mBAAO,CAAC,gDAAI;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;;;;;;;;;;;;;ACtCa;;AAEb,iBAAiB,mBAAO,CAAC,iEAAe;;AAExC;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;;AAEb,iBAAiB,mBAAO,CAAC,qEAAkB;AAC3C,GAAG,mBAAO,CAAC,gEAAiB;AAC5B,GAAG,mBAAO,CAAC,yDAAY;;;;;;;;;;;;;ACJV;;AAEb,iBAAiB,mBAAO,CAAC,gEAAiB;AAC1C,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB;AACtB,YAAY,cAAc;;AAE1B;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnBa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;;AAEb,QAAQ,mBAAO,CAAC,oCAAG;;AAEnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,mBAAmB,mBAAO,CAAC,oCAAG;AAC9B,mBAAmB,mBAAO,CAAC,gEAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;;;;;;;;;;ACjCa;;AAEb,qBAAqB,mBAAO,CAAC,oCAAG;AAChC,qBAAqB,mBAAO,CAAC,8EAA0B;;AAEvD;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;;;;;;;;;;;;ACtBA;;AAEa;;AAEb,2BAA2B,mBAAO,CAAC,oCAAG;AACtC,2BAA2B,mBAAO,CAAC,uEAAmB;AACtD,2BAA2B,mBAAO,CAAC,gEAAiB;AACpD,2BAA2B,mBAAO,CAAC,2FAA6B;AAChE,2BAA2B,mBAAO,CAAC,6GAAsC;AACzE,2BAA2B,mBAAO,CAAC,2GAAqC;;AAExE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,sBAAsB,EAAE;AACtD,CAAC;;AAED;AACA;AACA;AACA,0BAA0B,gEAAgE,EAAE;AAC5F,yBAAyB,6BAA6B,EAAE;AACxD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtFa;;AAEb,eAAe,mBAAO,CAAC,2DAAa;;AAEpC;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;;AAEb,iBAAiB,mBAAO,CAAC,uEAAkB,gBAAgB,mBAAO,CAAC,2DAAY;;;;;;;;;;;;;ACFlE;;AAEb;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,aAAa,aAAa;AAC5D,EAAE;AACF;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACpBA;;AAEa;;AAEb;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACPY;;AAEb,wBAAwB,mBAAO,CAAC,0EAAyB;AACzD,wBAAwB,mBAAO,CAAC,gGAAiC;AACjE,wBAAwB,mBAAO,CAAC,kFAA6B;AAC7D,wBAAwB,mBAAO,CAAC,gFAA4B;AAC5D,wBAAwB,mBAAO,CAAC,gFAA4B;AAC5D,wBAAwB,mBAAO,CAAC,oCAAG;AACnC,wBAAwB,mBAAO,CAAC,4DAAkB;AAClD,wBAAwB,mBAAO,CAAC,kEAAqB;AACrD,wBAAwB,mBAAO,CAAC,sDAAY;AAC5C,wBAAwB,mBAAO,CAAC,qFAAyB;;AAEzD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,2DAA2D,8BAA8B;AACzF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF,CAAC;AACD;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AChfA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAa,EAAE;AACpC;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC;;;;;;;;;;;;;AC9BY;;AAEb,iBAAiB,mBAAO,CAAC,0EAAkB,mBAAmB,mBAAO,CAAC,0EAAkB;;;;;;;;;;;;;ACF3E;;AAEb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA,8CAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACLa;AACb,gBAAgB,mBAAO,CAAC,0DAAW;;AAEnC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AChRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,WAAW,mBAAO,CAAC,wDAAY;AAC/B,mBAAmB,mBAAO,CAAC,wEAAoB;AAC/C,aAAa,mBAAO,CAAC,4DAAc;AACnC,aAAa,mBAAO,CAAC,4DAAc;AACnC,aAAa,mBAAO,CAAC,4DAAc;AACnC,cAAc,mBAAO,CAAC,8DAAe;AACrC,gBAAgB,mBAAO,CAAC,kEAAiB;AACzC,iBAAiB,mBAAO,CAAC,oEAAkB;AAC3C,eAAe,mBAAO,CAAC,gEAAgB;AACvC,oBAAoB,mBAAO,CAAC,0EAAqB;AACjD,eAAe,mBAAO,CAAC,gEAAgB;AACvC,UAAU,mBAAO,CAAC,sDAAW;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe;AACf,cAAc,mBAAO,CAAC,0DAAW;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCa;;AAEb,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,WAAW,mBAAO,CAAC,oDAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAU;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,WAAW,mBAAO,CAAC,oDAAQ;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA;AACA,aAAa;AACb;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,0DAAW;;AAEjC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,0DAAW;;AAEjC;AACA;AACA;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,WAAW,mBAAO,CAAC,oDAAQ;AAC3B;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AChDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,2DAAe;;AAErC;AACA;AACA;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,8EAAuB;AAC/C,eAAe,mBAAO,CAAC,4EAAsB;AAC7C,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD,oBAAoB,mBAAO,CAAC,sFAA2B;AACvD,iBAAiB,mBAAO,CAAC,oEAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;;AAEzB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,oEAAa;;AAErC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,WAAW,mBAAO,CAAC,yCAAM;AACzB,eAAe,mBAAO,CAAC,kEAAY;;AAEnC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,WAAW,mBAAO,CAAC,yCAAM;AACzB,eAAe,mBAAO,CAAC,kEAAY;;AAEnC;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA,eAAe;AACf,qBAAqB,mBAAO,CAAC,gEAAiB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,yBAAyB;AACxC,iBAAiB;AACjB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,wE;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;;;;;ACrDa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,eAAe;AACf;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA,qDAAqD,6BAA6B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;AC5Ka;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;;;;;AC9Ca;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mIAAmI;AACnI;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;AC1Ja;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,qDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iCAAiC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;;;;;ACpCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gD;;;;;;;;;;;;AC/Da;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,eAAe,mBAAO,CAAC,yDAAU;AACjC,uBAAuB,mBAAO,CAAC,yEAAkB;AACjD,uBAAuB,mBAAO,CAAC,yEAAkB;AACjD,qBAAqB,mBAAO,CAAC,qEAAgB;AAC7C,kBAAkB,mBAAO,CAAC,+DAAa;AACvC,eAAe,mBAAO,CAAC,yDAAU;AACjC,iBAAiB,mBAAO,CAAC,6DAAY;AACrC,6BAA6B,mBAAO,CAAC,qFAAwB;AAC7D;AACA,sCAAsC,mEAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,8BAA8B,mBAAO,CAAC,0GAAsC;AAC5E,qBAAqB,mBAAO,CAAC,wFAA6B;;AAE1D;;AAEA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,eAAe;AAC9B,eAAe,iCAAiC;AAChD,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,iCAAiC;AAChD;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,WAAW;AACtB,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,YAAY;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kBAAkB,qEAAqE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,gCAAgC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,YAAY;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,yBAAyB;AACxC,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,yBAAyB;AACxC,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACvZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,0FAA4B;AACxC,IAAI,mBAAO,CAAC,8GAAsC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,gBAAgB;AAC/B,eAAe,UAAU;AACzB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,0BAA0B;AACzC,eAAe,WAAW;AAC1B,eAAe,SAAS;AACxB,eAAe,eAAe;AAC9B,eAAe,iBAAiB;AAChC,eAAe,aAAa;AAC5B,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,mBAAmB,iBAAiB;AACpC,mBAAmB,YAAY;AAC/B,mBAAmB,WAAW;AAC9B,mBAAmB,KAAK;AACxB,qBAAqB,MAAM;AAC3B,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,uCAAuC;AAC9D;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,iBAAiB;AACpC,mBAAmB,YAAY;AAC/B,mBAAmB,WAAW;AAC9B,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qCAAqC;AACrC,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,mBAAmB;AACtC,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AChtBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACzFjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,aAAa;AAC5B,eAAe,eAAe;AAC9B,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,MAAM;AACrB,eAAe,iBAAiB;AAChC,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,sBAAsB;AACzC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC/GjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,aAAa;AAC5B,eAAe,UAAU;AACzB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,SAAS;AAC5B,mBAAmB,eAAe;AAClC,mBAAmB,gBAAgB;AACnC,mBAAmB,2BAA2B;AAC9C,mBAAmB,aAAa;AAChC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AChGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,iBAAiB,mBAAO,CAAC,oEAAc;AACvC,oBAAoB,mBAAO,CAAC,0EAAiB;;AAE7C;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,wDAAwD;AACxD,yBAAyB;AACzB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oDAAoD;AACpD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,6BAA6B,aAAa,EAAE;AACzE;;AAEA;;AAEA;;AAEA,yBAAyB,qCAAqC;AAC9D;AACA,CAAC;;AAED;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,aAAa;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oDAAoD;AACpD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,gCAAgC,qDAAqD;AACrF;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,SAAS;AACT;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA,cAAc,mBAAO,CAAC,8CAAK;AAC3B,mBAAmB,mBAAO,CAAC,oDAAS;;AAEpC;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,cAAc;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,cAAc;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACjPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,aAAa;AAC5B,eAAe,aAAa;AAC5B,gBAAgB,qEAAqE,IAAI;AACzF,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,qEAAqE,GAAG;AACxF,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET,kDAAkD,KAAK;;AAEvD;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,WAAW,mBAAO,CAAC,yCAAM;AACzB;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,WAAW,mBAAO,CAAC,yCAAM;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,uDAAS;AACrB,IAAI,mBAAO,CAAC,8CAAK;AACjB,IAAI,mBAAO,CAAC,wDAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,UAAU;AACzB,eAAe,cAAc;AAC7B,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AChLjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACrEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC5DjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,cAAc,mBAAO,CAAC,0DAAc;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC;AAChC;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB,WAAW,aAAa;AACxB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA,WAAW,UAAU;AACrB,WAAW,oBAAoB;AAC/B,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,UAAU;AACrB,WAAW,aAAa;AACxB,WAAW,WAAW;AACtB,WAAW,UAAU;AACrB,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,aAAa;AACxB,WAAW,YAAY;AACvB,WAAW,UAAU;AACrB,WAAW,YAAY;AACvB,WAAW,gBAAgB;AAC3B,WAAW,mBAAmB;AAC9B,WAAW,cAAc;AACzB,WAAW,eAAe;AAC1B,WAAW,UAAU;AACrB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,cAAc;AAC7B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,sDAAY;AACpC,cAAc,mBAAO,CAAC,8CAAK;;AAE3B;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,yCAAyC;AACpD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,iBAAiB;AACjE;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,kBAAkB;AAC7B,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,wDAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,UAAU;AACzB,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,qBAAqB,eAAe;AACpC,oBAAoB,cAAc;AAClC;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC7DjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,aAAa;AAC5B,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC7EjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,cAAc,mBAAO,CAAC,0DAAc;;AAEpC;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,cAAc,mBAAO,CAAC,0DAAc;;AAEpC;AACA,WAAW,aAAa;AACxB,WAAW,WAAW;AACtB,WAAW,aAAa;AACxB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,cAAc,mBAAO,CAAC,0DAAc;;AAEpC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc,iBAAiB,2DAA2D;AAC1F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,YAAY;AAC3B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,gBAAgB,4DAA4D;AAC5E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,+BAA+B,mBAAO,CAAC,mGAA4B;;AAEnE;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,WAAW;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4DAA4D,QAAQ;AACpE,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gEAAgE,QAAQ;;AAExE;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,4DAA4D,QAAQ;AACpE;AACA,CAAC;;AAED;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,+BAA+B,mBAAO,CAAC,mGAA4B;;AAEnE;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,8BAA8B;AAC9B;AACA,CAAC;;AAED;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,aAAa;AACxB,WAAW,yBAAyB;AACpC,WAAW,eAAe;AAC1B,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,oBAAoB;AACnC,eAAe,gBAAgB;AAC/B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;;;;;;;;;;;;;AC1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,UAAU;AACrB,WAAW,qBAAqB;AAChC,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,WAAW;AAC1B,eAAe,MAAM;AACrB,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,+BAA+B,mBAAO,CAAC,mGAA4B;;AAEnE;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,YAAY;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA,YAAY,mBAAO,CAAC,qDAAU;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,cAAc;AACzB,WAAW,yBAAyB;AACpC,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC1PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB,eAAe,KAAK;AACpB,eAAe,yBAAyB;AACxC,eAAe,QAAQ;AACvB,eAAe,cAAc;AAC7B,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC,eAAe,MAAM;AACrB,eAAe,eAAe;AAC9B,eAAe,YAAY;AAC3B,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,eAAe;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;;AAEA;AACA,eAAe,MAAM;AACrB,eAAe,aAAa;AAC5B,eAAe,YAAY;AAC3B,eAAe,aAAa;AAC5B,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,mBAAmB,WAAW;AAC9B,mBAAmB,SAAS;AAC5B,mBAAmB,YAAY;AAC/B,mBAAmB,iBAAiB;AACpC,mBAAmB,WAAW;AAC9B,mBAAmB,aAAa;AAChC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACtKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,qGAAkC;AAC9C;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,aAAa;AAC5B,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,mBAAmB,eAAe;AAClC,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB,oBAAoB,UAAU;AAC9B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AClKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,aAAa;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,WAAW;AAC1B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,yBAAyB;AACxC,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,qDAAM;AAClB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,+DAAe;AAC3B,IAAI,mBAAO,CAAC,qGAAkC;AAC9C,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC7MjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,YAAY;AAC/B,mBAAmB,OAAO;AAC1B,mBAAmB,eAAe;AAClC,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB,oBAAoB,UAAU;AAC9B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACrFjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;;AAEA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,aAAa;AAC5B,eAAe,iBAAiB;AAChC,eAAe,gBAAgB;AAC/B,eAAe,oBAAoB;AACnC,eAAe,gBAAgB;AAC/B,eAAe,iBAAiB;AAChC,eAAe,WAAW;AAC1B,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB,iBAAiB,qDAAqD;AACxF;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,gBAAgB;AACnC,mBAAmB,eAAe;AAClC,mBAAmB,SAAS;AAC5B,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB,uBAAuB;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,eAAe;AAClC,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACtvBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,UAAU;AACrB,WAAW,gBAAgB;AAC3B,WAAW,oBAAoB;AAC/B,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,iBAAiB;AAC5B,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,aAAa;AAC5B,eAAe,UAAU;AACzB,eAAe,OAAO;AACtB,eAAe,UAAU;AACzB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA,iDAAiD,mBAAmB,EAAE,8BAA8B;AACpG;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA,iDAAiD,YAAY,EAAE,uBAAuB;AACtF;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,iDAAiD,YAAY,EAAE,uBAAuB;AACtF;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AChTjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,eAAe;;AAEf;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,oCAAoC,mBAAO,CAAC,yHAA4C;;AAExF;AACA,WAAW,cAAc;AACzB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,4BAA4B,mBAAO,CAAC,2FAAyB;;AAE7D;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,oBAAoB;AACpB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,4BAA4B,mBAAO,CAAC,2FAAyB;;AAE7D;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,oBAAoB;AACpB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,iBAAiB;AACjB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,0EAAoB;AAChC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,gGAA+B;AAC3C,IAAI,mBAAO,CAAC,kDAAQ;AACpB,IAAI,mBAAO,CAAC,gEAAe;AAC3B,IAAI,mBAAO,CAAC,4DAAa;AACzB,IAAI,mBAAO,CAAC,wEAAmB;AAC/B,IAAI,mBAAO,CAAC,wDAAW;AACvB,IAAI,mBAAO,CAAC,wFAA2B;AACvC,IAAI,mBAAO,CAAC,sEAAkB;AAC9B,IAAI,mBAAO,CAAC,0HAA4C;AACxD,IAAI,mBAAO,CAAC,0FAA4B;AACxC,IAAI,mBAAO,CAAC,kFAAwB;AACpC,IAAI,mBAAO,CAAC,gFAAuB;AACnC,IAAI,mBAAO,CAAC,kFAAwB;AACpC,IAAI,mBAAO,CAAC,8FAA8B;AAC1C,IAAI,mBAAO,CAAC,0DAAY;AACxB,IAAI,mBAAO,CAAC,wEAAmB;AAC/B,IAAI,mBAAO,CAAC,0HAA4C;AACxD,IAAI,mBAAO,CAAC,0FAA4B;AACxC,IAAI,mBAAO,CAAC,gGAA+B;AAC3C,IAAI,mBAAO,CAAC,sEAAkB;AAC9B,IAAI,mBAAO,CAAC,gIAA+C;AAC3D,IAAI,mBAAO,CAAC,wFAA2B;AACvC,IAAI,mBAAO,CAAC,oFAAyB;AACrC,IAAI,mBAAO,CAAC,gFAAuB;AACnC,IAAI,mBAAO,CAAC,4GAAqC;AACjD,IAAI,mBAAO,CAAC,kHAAwC;AACpD,IAAI,mBAAO,CAAC,kGAAgC;AAC5C,IAAI,mBAAO,CAAC,8GAAsC;AAClD,IAAI,mBAAO,CAAC,8DAAc;AAC1B,IAAI,mBAAO,CAAC,oFAAyB;AACrC,IAAI,mBAAO,CAAC,sGAAkC;AAC9C,IAAI,mBAAO,CAAC,kFAAwB;AACpC,IAAI,mBAAO,CAAC,sFAA0B;AACtC,IAAI,mBAAO,CAAC,oFAAyB;AACrC,IAAI,mBAAO,CAAC,sFAA0B;AACtC,IAAI,mBAAO,CAAC,0FAA4B;AACxC,IAAI,mBAAO,CAAC,wEAAmB;AAC/B,IAAI,mBAAO,CAAC,oFAAyB;AACrC,IAAI,mBAAO,CAAC,kGAAgC;AAC5C,IAAI,mBAAO,CAAC,oEAAiB;AAC7B,IAAI,mBAAO,CAAC,0DAAY;AACxB,IAAI,mBAAO,CAAC,gEAAe;AAC3B,IAAI,mBAAO,CAAC,sEAAkB;AAC9B,IAAI,mBAAO,CAAC,sFAA0B;AACtC,IAAI,mBAAO,CAAC,8DAAc;AAC1B,IAAI,mBAAO,CAAC,sDAAU;AACtB,IAAI,mBAAO,CAAC,oEAAiB;AAC7B,IAAI,mBAAO,CAAC,4DAAa;AACzB,IAAI,mBAAO,CAAC,0EAAoB;AAChC,IAAI,mBAAO,CAAC,sEAAkB;AAC9B,IAAI,mBAAO,CAAC,sEAAkB;AAC9B,IAAI,mBAAO,CAAC,4EAAqB;AACjC,IAAI,mBAAO,CAAC,4DAAa;AACzB,IAAI,mBAAO,CAAC,oEAAiB;AAC7B,IAAI,mBAAO,CAAC,gFAAuB;AACnC,IAAI,mBAAO,CAAC,kFAAwB;AACpC,IAAI,mBAAO,CAAC,8EAAsB;AAClC,IAAI,mBAAO,CAAC,4FAA6B;AACzC,IAAI,mBAAO,CAAC,oGAAiC;AAC7C,IAAI,mBAAO,CAAC,oGAAiC;AAC7C,IAAI,mBAAO,CAAC,0EAAoB;AAChC,IAAI,mBAAO,CAAC,oDAAS;AACrB,IAAI,mBAAO,CAAC,kEAAgB;AAC5B,IAAI,mBAAO,CAAC,gFAAuB;AACnC,IAAI,mBAAO,CAAC,0EAAoB;AAChC,IAAI,mBAAO,CAAC,oDAAS;AACrB,IAAI,mBAAO,CAAC,kEAAgB;AAC5B,IAAI,mBAAO,CAAC,kFAAwB;AACpC,IAAI,mBAAO,CAAC,0EAAoB;AAChC,IAAI,mBAAO,CAAC,oDAAS;AACrB,IAAI,mBAAO,CAAC,kEAAgB;AAC5B,IAAI,mBAAO,CAAC,0DAAY;AACxB,IAAI,mBAAO,CAAC,wEAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,kBAAkB;AACjC,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB,eAAe,WAAW;AAC1B,eAAe,OAAO;AACteAAe;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,cAAc;AACjC,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,EAAE;AACrB,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,QAAQ;AAC3B,oBAAoB,MAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC7/BjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,sEAAa;;AAErC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,WAAW,mBAAO,CAAC,yCAAM;AACzB,uBAAuB,mBAAO,CAAC,2EAAqB;AACpD,mBAAmB,mBAAO,CAAC,mEAAiB;AAC5C;AACA,gBAAgB,mBAAO,CAAC,sEAAa;AACrC,oBAAoB,mBAAO,CAAC,8EAAiB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,uBAAuB,mBAAO,CAAC,mEAAY;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,UAAU;AACzB,eAAe,WAAW;AAC1B,eAAe,MAAM;AACrB,eAAe,WAAW;AAC1B,eAAe,eAAe;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,4BAA4B,mBAAO,CAAC,sGAAyB;AAC7D,sBAAsB,mBAAO,CAAC,0FAAmB;AACjD,8BAA8B,mBAAO,CAAC,0GAA2B;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,sBAAsB;AACrC,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,uEAAc;;AAEtC;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,sBAAsB,mBAAO,CAAC,0FAAmB;;AAEjD;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,UAAU;AACzB,eAAe,WAAW;AAC1B,eAAe,MAAM;AACrB,eAAe,YAAY;AAC3B,eAAe,eAAe;AAC9B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,sEAAa;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,oBAAoB;AACpB,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,sEAAa;;AAErC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,WAAW,mBAAO,CAAC,yCAAM;AACzB;AACA;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,sEAAa;AACrC,oBAAoB,mBAAO,CAAC,8EAAiB;;AAE7C;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB,MAAM;AACvB;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACjQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,sEAAa;;AAErC;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,WAAW,mBAAO,CAAC,yCAAM;AACzB;AACA,gBAAgB,mBAAO,CAAC,sEAAa;AACrC,oBAAoB,mBAAO,CAAC,8EAAiB;;AAE7C;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;;;;;;;;;;;;;AC3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,WAAW,mBAAO,CAAC,yCAAM;AACzB;AACA,gBAAgB,mBAAO,CAAC,sEAAa;;AAErC;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,UAAU;AACrB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACpEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,0DAAY;AACxB,IAAI,mBAAO,CAAC,sDAAU;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,kBAAkB;AACjC,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC,uBAAuB,YAAY;AACnC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,uBAAuB,iBAAiB;AACxC,uBAAuB,WAAW;AAClC,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC;AACzC,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,2BAA2B,aAAa;AACxC,2BAA2B,OAAO;AAClC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC,+BAA+B,aAAa;AAC5C,+BAA+B,OAAO;AACtC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU,WAAW,gDAAgD;AACxF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC7TjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,UAAU;AACzB,eAAe,WAAW;AAC1B,eAAe,MAAM;AACrB,eAAe,iBAAiB;AAChC,eAAe,eAAe;AAC9B,eAAe,oBAAoB;AACnC,eAAe,aAAa;AAC5B,eAAe,gBAAgB;AAC/B,eAAe,iBAAiB;AAChC,eAAe,WAAW;AAC1B,eAAe,cAAc;AAC7B,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,mBAAmB,SAAS;AAC5B,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,aAAa;AAChC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,cAAc;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA,4BAA4B;AAC5B,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,yBAAyB;AAC5C,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACrjBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB,WAAW,iBAAiB;AAC5B,WAAW,oBAAoB;AAC/B,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,eAAe;AAC9B,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,mBAAmB,mBAAO,CAAC,+CAAQ;;AAEnC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,0DAAY;AACxB;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,eAAe,UAAU;AACzB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC3FjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,gFAAuB;AACnC,IAAI,mBAAO,CAAC,0EAAoB;AAChC,IAAI,mBAAO,CAAC,kEAAgB;AAC5B,IAAI,mBAAO,CAAC,kDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,UAAU;AACzB,eAAe,YAAY;AAC3B,eAAe,WAAW;AAC1B,eAAe,UAAU;AACzB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,iBAAiB;AAChC,eAAe,aAAa;AAC5B,eAAe,eAAe;AAC9B,eAAe,MAAM;AACrB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,MAAM;AACzB,mBAAmB,eAAe;AAClC,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,eAAe;AAClC,mBAAmB,MAAM;AACzB,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,mBAAmB;AACtC,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD,mCAAmC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,qBAAqB;AACrB,oBAAoB,UAAU;AAC9B,oBAAoB,MAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,qBAAqB;AACrB,oBAAoB,UAAU;AAC9B,oBAAoB,MAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,oBAAoB,UAAU;AAC9B,oBAAoB,MAAM;AAC1B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,qBAAqB;AACrB,oBAAoB,UAAU;AAC9B,oBAAoB,MAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,oBAAoB,UAAU;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACxgBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA,WAAW,MAAM;AACjB,WAAW,UAAU;AACrB,WAAW,WAAW;AACtB,WAAW,gBAAgB;AAC3B,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,aAAa;AACxB,WAAW,iBAAiB;AAC5B,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB,eAAe,eAAe;AAC9B,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB;AACA,oBAAoB,mBAAO,CAAC,yEAAiB;;AAE7C;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA,CAAC;;AAED;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,oBAAoB,mBAAO,CAAC,yEAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA,CAAC;;AAED;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB;AACA,oBAAoB,mBAAO,CAAC,yEAAiB;;AAE7C;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA,CAAC;;AAED;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,oBAAoB,mBAAO,CAAC,yEAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,oBAAoB,mBAAO,CAAC,yEAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,oBAAoB;AACpB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,oBAAoB;AACpB,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA,qBAAqB;AACrB;AACA,CAAC;;AAED;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,iEAAa;AACrC,mBAAmB,mBAAO,CAAC,uEAAgB;AAC3C,gBAAgB,mBAAO,CAAC,iEAAa;AACrC,mBAAmB,mBAAO,CAAC,uEAAgB;AAC3C,gBAAgB,mBAAO,CAAC,iEAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,sEAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,aAAa;AAChC,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,aAAa;AAChC,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACv2BjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,6EAAsB;AAClC,IAAI,mBAAO,CAAC,2EAAqB;AACjC,IAAI,mBAAO,CAAC,mEAAiB;AAC7B,IAAI,mBAAO,CAAC,uEAAmB;AAC/B,IAAI,mBAAO,CAAC,iFAAwB;AACpC,IAAI,mBAAO,CAAC,qDAAU;AACtB,IAAI,mBAAO,CAAC,2DAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,0CAA0C;;AAE1C;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC9sBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,4DAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,QAAQ;AAC3B,mBAAmB,yBAAyB;AAC5C,mBAAmB,KAAK;AACxB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACzHjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC/NjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACrCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AChQjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC9TjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACjMjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,yDAAY;AACxB,IAAI,mBAAO,CAAC,mEAAiB;AAC7B,IAAI,mBAAO,CAAC,uEAAmB;AAC/B,IAAI,mBAAO,CAAC,yFAA4B;AACxC,IAAI,mBAAO,CAAC,+EAAuB;AACnC,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,UAAU;AACzB,eAAe,WAAW;AAC1B,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAiB,mCAAmC,EAAE;AAChF;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,SAAS;AAC5B,qBAAqB,MAAM;AAC3B,oBAAoB,cAAc;AAClC;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,QAAQ;AAC3B,mBAAmB,yBAAyB;AAC5C,mBAAmB,KAAK;AACxB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACl0CjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,yCAAM;AAClB,IAAI,mBAAO,CAAC,uEAAmB;AAC/B,IAAI,mBAAO,CAAC,qDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,QAAQ;AAC3B,mBAAmB,yBAAyB;AAC5C,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA,YAAY;AACZ;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC1cjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,sDAAY;AACxB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,sFAA0B;AACtC,IAAI,mBAAO,CAAC,gEAAe;AAC3B,IAAI,mBAAO,CAAC,kFAAwB;AACpC,IAAI,mBAAO,CAAC,oEAAiB;AAC7B,IAAI,mBAAO,CAAC,4GAAqC;AACjD,IAAI,mBAAO,CAAC,8DAAc;AAC1B,IAAI,mBAAO,CAAC,8DAAc;AAC1B,IAAI,mBAAO,CAAC,gEAAe;AAC3B,IAAI,mBAAO,CAAC,oEAAiB;AAC7B,IAAI,mBAAO,CAAC,kEAAgB;AAC5B,IAAI,mBAAO,CAAC,8DAAc;AAC1B,IAAI,mBAAO,CAAC,kEAAgB;AAC5B,IAAI,mBAAO,CAAC,gFAAuB;AACnC,IAAI,mBAAO,CAAC,kEAAgB;AAC5B,IAAI,mBAAO,CAAC,oDAAS;AACrB,IAAI,mBAAO,CAAC,sFAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,OAAO;AACtB,eAAe,gBAAgB;AAC/B,eAAe,WAAW;AAC1B,eAAe,YAAY;AAC3B,eAAe,cAAc;AAC7B,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,aAAa;AAChC,oBAAoB;AACpB,oBAAoB,MAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,mBAAmB,yCAAyC;AAC5D,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,aAAa;AAChC,mBAAmB,aAAa;AAChC,mBAAmB,kBAAkB;AACrC,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,uBAAuB,UAAU;AACjC;AACA,mBAAmB,MAAM;AACzB,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,yBAAyB;AAC5C,mBAAmB,aAAa;AAChC,mBAAmB,kBAAkB;AACrC,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B,mBAAmB,yBAAyB;AAC5C,mBAAmB,aAAa;AAChC,mBAAmB,kBAAkB;AACrC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACxpBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,oDAAW;AACvB,IAAI,mBAAO,CAAC,wFAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,MAAM;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACzYjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,oDAAW;AACvB;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,UAAU;AACzB,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACxDjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,gHAAmC;AAC/C,IAAI,mBAAO,CAAC,gGAA2B;AACvC,IAAI,mBAAO,CAAC,oFAAqB;AACjC,IAAI,mBAAO,CAAC,0FAAwB;AACpC,IAAI,mBAAO,CAAC,wFAAuB;AACnC,IAAI,mBAAO,CAAC,4FAAyB;AACrC,IAAI,mBAAO,CAAC,sFAAsB;AAClC,IAAI,mBAAO,CAAC,4EAAiB;AAC7B,IAAI,mBAAO,CAAC,kFAAoB;AAChC,IAAI,mBAAO,CAAC,kHAAoC;AAChD,IAAI,mBAAO,CAAC,8FAA0B;AACtC,IAAI,mBAAO,CAAC,gFAAmB;AAC/B,IAAI,mBAAO,CAAC,sGAA8B;AAC1C,IAAI,mBAAO,CAAC,4EAAiB;AAC7B,IAAI,mBAAO,CAAC,oFAAqB;AACjC,IAAI,mBAAO,CAAC,wFAAuB;AACnC,IAAI,mBAAO,CAAC,0GAAgC;AAC5C,IAAI,mBAAO,CAAC,kFAAoB;AAChC,IAAI,mBAAO,CAAC,kGAA4B;AACxC,IAAI,mBAAO,CAAC,0FAAwB;AACpC,IAAI,mBAAO,CAAC,8FAA0B;AACtC,IAAI,mBAAO,CAAC,gGAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,aAAa,2BAA2B;AACxC,aAAa,mBAAmB;AAChC,aAAa,uBAAuB;AACpC,aAAa,eAAe;AAC5B,aAAa,6BAA6B;AAC1C,aAAa,yBAAyB;AACtC,aAAa,uBAAuB;AACpC,aAAa,yCAAyC;AACtD,aAAa,uBAAuB;AACpC,aAAa,qBAAqB;AAClC,aAAa,uCAAuC;AACpD,aAAa,qBAAqB;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;AC5FjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,eAAe,mBAAO,CAAC,oDAAW;AAClC,cAAc,mBAAO,CAAC,8CAAK;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,qBAAqB;AACxC,mBAAmB,+BAA+B;AAClD,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;ACjSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;;;;;;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,IAAI;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,iBAAiB,mBAAO,CAAC,8CAAQ;AACjC,IAAI,mBAAO,CAAC,8DAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,aAAa;;;;;;;;;;;;;ACrCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,WAAW,mBAAO,CAAC,yCAAM;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D,wEAAwE,KAAK;AAC7E,uDAAuD,WAAW,YAAY,UAAU,KAAK,aAAa;AAC1G,mEAAmE,UAAU;AAC7E,mFAAmF,UAAU;AAC7F;AACA,qFAAqF,UAAU;AAC/F,mDAAmD,UAAU;AAC7D,gFAAgF,UAAU,KAAK,aAAa;AAC5G,+DAA+D,OAAO,MAAM,MAAM;AAClF,qEAAqE,OAAO,MAAM,SAAS;AAC3F;AACA,0CAA0C,KAAK;AAC/C;AACA,kDAAkD,MAAM,aAAa,KAAK,aAAa,aAAa,IAAI,WAAW,oBAAoB,WAAW,WAAW,WAAW,kBAAkB,eAAe,GAAG,eAAe;AAC3N,8CAA8C,OAAO;AACrD;AACA,mEAAmE,KAAK,QAAQ,KAAK;AACrF,mFAAmF,UAAU;AAC7F;AACA,6EAA6E,KAAK,MAAM,YAAY,aAAa,WAAW,WAAW,WAAW,eAAe,cAAc;AAC/K,8CAA8C,KAAK,IAAI,QAAQ;AAC/D,oDAAoD,KAAK;AACzD,mFAAmF,UAAU,KAAK,aAAa;AAC/G,sEAAsE,KAAK;AAC3E,0DAA0D,KAAK;AAC/D,4DAA4D,UAAU,IAAI,WAAW;AACrF,yDAAyD,UAAU,KAAK,aAAa;AACrF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS,GAAG,KAAK;AACpE;AACA,mBAAmB,eAAe;AAClC,+BAA+B,SAAS,WAAW,KAAK;AACxD;AACA;AACA,mBAAmB,eAAe;AAClC,+BAA+B,SAAS,WAAW,KAAK;;AAExD;AACA,0CAA0C,SAAS,WAAW,KAAK;;AAEnE;AACA,4BAA4B,KAAK,GAAG,WAAW;;AAE/C;AACA,2DAA2D,aAAa;AACxE,sDAAsD,WAAW;AACjE,uDAAuD,aAAa;;AAEpE;AACA,+BAA+B,SAAS,MAAM,QAAQ;;AAEtD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD;AACA;AACA;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,mBAAmB,mBAAO,CAAC,+EAAuB;AAClD,qBAAqB,mBAAO,CAAC,mFAAyB;AACtD,8BAA8B,mBAAO,CAAC,qGAAkC;AACxE,iBAAiB,mBAAO,CAAC,2EAAqB;AAC9C,qBAAqB,mBAAO,CAAC,mFAAyB;AACtD;;AAEA;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA,wBAAwB,mBAAO,CAAC,iGAAgC;AAChE,4BAA4B,mBAAO,CAAC,yGAAoC;AACxE,mBAAmB,mBAAO,CAAC,uFAA2B;AACtD,yBAAyB,mBAAO,CAAC,mGAAiC;AAClE;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,aAAa,mBAAO,CAAC,uDAAW;AAChC,kBAAkB,mBAAO,CAAC,iEAAgB;AAC1C,wBAAwB,mBAAO,CAAC,mFAAqB;AACrD,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,sBAAsB,mBAAO,CAAC,2DAAa;AAC3C,qBAAqB,mBAAO,CAAC,uEAAmB;AAChD,qBAAqB,mBAAO,CAAC,yDAAY;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA,UAAU,mBAAO,CAAC,oDAAY;AAC9B,0BAA0B,mBAAO,CAAC,oFAA4B;AAC9D,iBAAiB,mBAAO,CAAC,kEAAmB;AAC5C,SAAS,mBAAO,CAAC,kDAAW;AAC5B,aAAa,mBAAO,CAAC,0DAAe;AACpC,uBAAuB,mBAAO,CAAC,8EAAyB;AACxD,kBAAkB,mBAAO,CAAC,oEAAoB;AAC9C;AACA,wBAAwB,mBAAO,CAAC,yDAAW;AAC3C,iBAAiB,mBAAO,CAAC,4DAAkB;AAC3C;AACA;AACA,gGAAgG,qBAAa;AAC7G;;AAEA;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,oBAAoB;AAC/B,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,qDAAM;AACzB,cAAc,mBAAO,CAAC,8CAAK;;AAE3B;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB,gBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,WAAW;AACtB,WAAW,oBAAoB;AAC/B,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,wBAAwB;AACpD;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,SAAS;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,eAAe;;AAEf;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc,iBAAiB,qCAAqC,EAAE;AACtE;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,SAAS;AACxB,eAAe,YAAY;AAC3B,iBAAiB;AACjB;AACA;AACA;AACA,2DAA2D,eAAe;;AAE1E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;ACpDA,mBAAO,CAAC,2EAAsG;AAC9G;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,mBAAO,CAAC,0DAAgC;AACxF,mDAAmD,mBAAO,CAAC,gEAAmC;AAC9F,+DAA+D,mBAAO,CAAC,wFAA+C;AACtH,qEAAqE,mBAAO,CAAC,oGAAqD;AAClI,qEAAqE,mBAAO,CAAC,oGAAqD;AAClI,uEAAuE,mBAAO,CAAC,wGAAuD;AACtI,iEAAiE,mBAAO,CAAC,4FAAiD;AAC1H,iEAAiE,mBAAO,CAAC,4FAAiD;AAC1H,mEAAmE,mBAAO,CAAC,gGAAmD;AAC9H,6DAA6D,mBAAO,CAAC,oFAA6C;AAClH;;AAEA;AACA,CAAC;AACD,YAAY,aAAa,GAAG,mBAAO,CAAC,+HAAgI,KAAK;AACzK,YAAY,mBAAO,CAAC,kEAAoC,I;;;;;;;;;;;;AClCxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,iFAAwB;AAC/C,cAAc,mBAAO,CAAC,sDAAe;;AAErC;;AAEA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,sBAAsB,mBAAO,CAAC,0GAA0B;AACxD,mBAAmB,mBAAO,CAAC,oGAAuB;AAClD,gBAAgB,mBAAO,CAAC,8FAAoB;AAC5C,sBAAsB,mBAAO,CAAC,0GAA0B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;;AAE3B;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,+BAA+B;AAC9C,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA,qCAAqC,mBAAO,CAAC,qJAA4C;;AAEzF;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,MAAM;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,qBAAqB,mBAAO,CAAC,mFAAmB;AAChD,qBAAqB,mBAAO,CAAC,mFAAmB;AAChD,kCAAkC,mBAAO,CAAC,+GAAiC;AAC3E,qBAAqB,mBAAO,CAAC,mFAAmB;AAChD,oCAAoC,mBAAO,CAAC,mHAAmC;AAC/E,wBAAwB,mBAAO,CAAC,mGAA2B;AAC3D,gBAAgB,mBAAO,CAAC,qGAA4B;AACpD,2BAA2B,mBAAO,CAAC,6HAAwC;AAC3E,6BAA6B,mBAAO,CAAC,mGAA2B;AAChE,uCAAuC,mBAAO,CAAC,yHAAsC;AACrF,0BAA0B,mBAAO,CAAC,6FAAwB;AAC1D,0BAA0B,mBAAO,CAAC,6FAAwB;AAC1D,gCAAgC,mBAAO,CAAC,yGAA8B;AACtE,0BAA0B,mBAAO,CAAC,+FAAyB;AAC3D,+BAA+B,mBAAO,CAAC,yIAA8C;AACrF,qBAAqB,mBAAO,CAAC,qHAAoC;AACjE,6BAA6B,mBAAO,CAAC,mGAA2B;AAChE,0BAA0B,mBAAO,CAAC,+FAAyB;AAC3D,oBAAoB,mBAAO,CAAC,iFAAkB;AAC9C,mBAAmB,mBAAO,CAAC,+EAAiB;AAC5C,iCAAiC,mBAAO,CAAC,6GAAgC;AACzE,mBAAmB,mBAAO,CAAC,+EAAiB;AAC5C,qBAAqB,mBAAO,CAAC,mFAAmB;AAChD,sBAAsB,mBAAO,CAAC,qFAAoB;AAClD,sBAAsB,mBAAO,CAAC,qFAAoB;AAClD,+BAA+B,mBAAO,CAAC,yGAA8B;AACrE,oBAAoB,mBAAO,CAAC,2FAAuB;AACnD,gCAAgC,mBAAO,CAAC,yGAA8B;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,sBAAsB,mBAAO,CAAC,kEAAoB;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,eAAe;AACf,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA;AACA,mBAAmB,mBAAO,CAAC,4EAA0B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,oBAAoB;AACvC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,eAAe;AAClC,mBAAmB,sBAAsB;AACzC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,oBAAoB;AACvC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,oBAAoB;AACvC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,oBAAoB;AACvC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,sBAAsB;AACzC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,oCAAoC;AACvD,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7lBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,oDAAW;;AAElC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,oDAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA,eAAe,mBAAO,CAAC,oDAAW;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,oBAAoB,mBAAO,CAAC,2HAAkC;AAC9D,eAAe,mBAAO,CAAC,oDAAW;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,qBAAqB;AACxC,qBAAqB;AACrB;AACA,2EAA2E;AAC3E;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,WAAW,mBAAO,CAAC,yCAAM;AACzB,gBAAgB,mBAAO,CAAC,0FAAiC;;AAEzD;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,oDAAW;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,oDAAW;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA,aAAa;AACb;;AAEA;AACA;;AAEA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,8BAA8B;AACjD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,8BAA8B;AACjD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,sBAAsB,mBAAO,CAAC,qEAAuB;;AAErD;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA,oCAAoC,mBAAO,CAAC,kIAAqD;AACjG;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,kDAAkD;AAClD,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,qEAAqE;AACrE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,qCAAqC,mBAAO,CAAC,sKAA6D;AAC1G;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,+BAA+B;AAClD,mBAAmB,gCAAgC;AACnD,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,+BAA+B;AAClD,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,+BAA+B;AAClD,qBAAqB,sBAAsB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;;AAEA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,mBAAmB,eAAe;AAClC,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACjcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,gBAAgB,mBAAO,CAAC,oDAAW;;AAEnC;AACA;AACA,gCAAgC;AAChC,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,0BAA0B;AAC1B,0BAA0B;;AAE1B,6BAA6B;AAC7B,aAAa;AACb;AACA,2BAA2B;AAC3B,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,4CAA4C,cAAc;AAC1D,gCAAgC;AAChC,iBAAiB;AACjB;AACA;AACA,4CAA4C,cAAc;AAC1D,gCAAgC;AAChC,iCAAiC;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B,wCAAwC,OAAO;AAC/C;;AAEA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,gCAAgC;AACnD,mBAAmB,gCAAgC;AACnD,mBAAmB,+BAA+B;AAClD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,gCAAgC;AACnD,mBAAmB,+BAA+B;AAClD,mBAAmB,gCAAgC;AACnD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,+BAA+B;AAClD,mBAAmB,gCAAgC;AACnD,mBAAmB,+BAA+B;AAClD,mBAAmB,gCAAgC;AACnD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,QAAQ,mBAAO,CAAC,oDAAW;AAC3B,eAAe;AACf,gBAAgB,mBAAO,CAAC,oDAAW;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,eAAe;AAClC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,mBAAmB,iCAAiC;AACpD,mBAAmB,oBAAoB;AACvC,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,yBAAyB;AAC5C,mBAAmB,yBAAyB;AAC5C,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE;;AAEzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB,6DAA6D;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0HAA0H;;AAE1H;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB,6DAA6D;AAC7D,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe;;AAEf;AACA,oDAAoD,IAAI;AACxD;AACA;AACA,WAAW,OAAO;AAClB,WAAW,wBAAwB;AACnC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,IAAI,IAAI;AACvC;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;;;;;;;;;;;;ACpCa;;AAEb,kBAAkB,mBAAO,CAAC,4DAAiB;;AAE3C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;;;;;AClBa;;AAEb,oBAAoB,mBAAO,CAAC,oDAAa;AACzC,oBAAoB,mBAAO,CAAC,sDAAc;AAC1C,oBAAoB,mBAAO,CAAC,8DAAkB;AAC9C,oBAAoB,mBAAO,CAAC,qEAAmB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBa;;AAEb;AACA;AACA;AACA,EAAE;AACF,OAAO,sBAAsB;AAC7B,kBAAkB,aAAa;AAC/B;AACA;;;;;;;;;;;;;ACTa;;AAEb,mBAAmB,mBAAO,CAAC,mEAAkB;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;AC5Ba;;AAEb,cAAc,mBAAO,CAAC,oDAAa;;AAEnC;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;;AAEb,uBAAuB,mBAAO,CAAC,8EAA0B;AACzD,uBAAuB,mBAAO,CAAC,sDAAM;;AAErC;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;;AAEb,iBAAiB,mBAAO,CAAC,0DAAgB;;AAEzC,4BAA4B,EAAE;;AAE9B;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;;AAEb,eAAe,mBAAO,CAAC,sDAAc;;AAErC;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;ACZa;;AAEb,eAAe,mBAAO,CAAC,oDAAa;AACpC,eAAe,mBAAO,CAAC,sDAAc;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,EAAE;AACF;AACA;AACA;;;;;;;;;;;;;ACtBa;;AAEb,uBAAuB,mBAAO,CAAC,8EAA0B;AACzD,uBAAuB,mBAAO,CAAC,6CAAM;;AAErC;AACA;AACA;AACA;;;;;;;;;;;;;ACRa;;AAEb;AACA;;AAEA,mCAAmC,+CAA+C;;;;;;;;;;;;;ACLrE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6CAA6C,yBAAyB,EAAE;AACxE;AACA;AACA,SAAS;AACT;AACA,sEAAsE,yBAAyB,EAAE;AACjG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oC;;;;;;;;;;;;AChEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iDAAiD,EAAE;AAC5F,yCAAyC,yBAAyB,EAAE;AACpE;AACA,SAAS;AACT;AACA,sEAAsE,yBAAyB,EAAE;AACjG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wC;;;;;;;;;;;;AC/Da;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6CAA6C,yBAAyB,EAAE;AACxE;AACA;AACA,SAAS;AACT;AACA,sEAAsE,yBAAyB,EAAE;AACjG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uC;;;;;;;;;;;;AClEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6CAA6C,yBAAyB,EAAE;AACxE;AACA;AACA,SAAS;AACT;AACA,sEAAsE,yBAAyB,EAAE;AACjG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sC;;;;;;;;;;;;AChEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6CAA6C,yBAAyB,EAAE;AACxE;AACA;AACA,SAAS;AACT;AACA,sEAAsE,yBAAyB,EAAE;AACjG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wC;;;;;;;;;;;;AChEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,8EAA8E;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6CAA6C,yBAAyB,EAAE;AACxE;AACA;AACA,SAAS;AACT;AACA,2EAA2E,yBAAyB,EAAE;AACtG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,6C;;;;;;;;;;;;AChEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,oGAAyB;AAClD,qBAAqB,mBAAO,CAAC,4GAA6B;AAC1D,uBAAuB,mBAAO,CAAC,gHAA+B;AAC9D,oBAAoB,mBAAO,CAAC,0GAA4B;AACxD,uBAAuB,mBAAO,CAAC,gHAA+B;AAC9D,mBAAmB,mBAAO,CAAC,wGAA2B;AACtD,qBAAqB,mBAAO,CAAC,4GAA6B;AAC1D,sBAAsB,mBAAO,CAAC,8GAA8B;AAC5D,0BAA0B,mBAAO,CAAC,sHAAkC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,0C;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0EAAoB;;AAE/C;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA,mBAAmB,mBAAO,CAAC,+EAAU;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D,2BAA2B,mDAAmD;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9rBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;0cCVA,8MAEA,2KAEI,mCAAgBE,QAAhB,iSAEI,sBAAAC,sCAAA,UAAQ,sDAAR,GACA,sBAAAC,uCAAA,UAAS,kEAAT,GAGA,sBAAAC,gDAAA,UAAkB,2JAC1B,8LAAI,0KAAJ,KAD0B,CAE1B,2TAAE,iLAAF,CAAiB,yJAAC,6HAAAF,iDAAA,GAAD,KAAjB,CAAwB,4KAAxB,CAAkC,yJAAC,qKAAD,KAAlC,CAAuC,mKAAvC,MACA,2JAAE,4KAAF,CAAY,6HAAAC,kDAAA,GAAZ,CAAkB,8KAAlB,KADA,KAF0B,CAI1B,0KAJ0B,KAAlB,GAMA,iBAAO,YAAAC,2DAAA,YAAiB,8DAAjB,kBAAP,CAZJ,sBAFJ,wCAFA,0C;;;;;;;;;;;;;6cCPA,sCAAa,uDAAU,0EAAV,EAAb,sBAEA,gBAAO,0IAAwD,gEAAxD,6BAAP,C;;;;;;;;;;;;;ydCMA,yLA8BA,0LAmBI,iCAAoC,+CAApC,GAnBJ,6DAEI,4BAFJ,uDAKI,qBAA6B,+CAA7B,GALJ,oDAMI,qBAA0B,+CAA1B,GANJ,sDAOI,qBAA4B,+CAA5B,GAPJ,kDAUI,qBAAwB,+CAAxB,GAVJ,sDAWI,qBAA4B,+CAA5B,GAXJ,oDAaI,qBAA0B,oDAA1B,GAbJ,8CAcI,qBAAoB,+CAApB,GAdJ,2DAeI,qBAAiC,oDAAjC,GAfJ,oDAgBI,qBAA0B,+CAA1B,GAhBJ,gDAiBI,4BAjBJ,6BAqBI,mCAAgBH,YAAhB,wTAEI,oDAAAI,sCAAA,4BAAO,iEAAP,YAAmBC,sDAAnB,GAFJ,2DAAyC,4CAAzC,gBArBJ,iBA0BI,mCAAgBL,YAAhB,2HAEI,cAAI,YAAC,uGAAM,YAAAI,iDAAA,2BAAO,oEAAP,EAAN,iEAAD,cAAJ,iCACI,iBAAO,gGAAqB,2DAArB,EAAoC,wFAAa,YAAAA,iDAAA,2BAAO,oEAAP,EAAb,uDAApC,uDAAP,CADJ,CAIA,iBAAO,+CAAP,CANJ,sBA1BJ,qBAmCI,mCAAgBJ,gBAAhB,2HAEI,iBAAO,YAAAI,iDAAA,2BAAO,sEAAP,aAAP,CAFJ,sBAnCJ,qBAwCI,mCAAgBJ,gBAAhB,2HAEI,iBAAO,YAAAI,iDAAA,2BAAO,wEAAP,aAAP,CAFJ,sBAxCJ,yBA6CI,mCAAgBJ,oBAAhB,2HAEI,iBAAO,YAAAI,iDAAA,2BAAO,wEAAP,aAAP,CAFJ,sBA7CJ,iBAkDI,mCAAgBJ,YAAhB,2HAEI,iBAAO,YAAAI,iDAAA,2BAAO,gEAAP,aAAP,CAFJ,sBAlDJ,iBA0DI,mCAAgBJ,YAAhB,iTAEI,eAAI,aAAAI,kDAAA,2BAAO,iEAAP,aAAJ,iCACI,uDAAAA,uCAAA,4BAAO,iEAAP,YAAkB,yFAAY,aAAAA,kDAAA,2BAAO,iEAAP,EAAZ,EAA6BE,2CAA7B,uDAAlB,GADJ,QAGI,uDAAAF,uCAAA,4BAAO,iEAAP,YAAkBE,sDAAlB,GAHJ,CAFJ,yDA1DJ,SA2EI,mCAAgBN,IAAhB,yqBAEI,eAAI,aAACO,oDAAD,cAAJ,iCACI,eAAIC,qDAAJ,iCACI,uDAAAJ,uCAAA,4BAAO,yEAAP,YAA0B,yFACtB,aAAQK,mDAAR,iBADsB,EAEtB,aAAAL,kDAAA,2BAAO,yEAAP,EAFsB,uDAA1B,GADJ,QAMI,uDAAAA,uCAAA,4BAAO,yEAAP,YAA0B,yFACtB,aAAAA,kDAAA,2BAAO,yEAAP,EADsB,EAEtB,aAAQK,mDAAR,iBAFsB,uDAA1B,GANJ,CAYA,kDAbJ,CAgBA,wBAAAC,wCAAA,UAAS,aAAAH,oDAAA,iBAAQ,iDAAR,aAAT,GACA,eAAI,aAAC,wGAAM,aAAK,aAALH,kDAAK,2BAAE,qEAAF,aAAL,iBAAoBM,mDAApB,6BAA4BH,oDAA5B,EAAN,+DAAD,cAAJ,iCACI,uEAAK,+BAALH,uCAAK,4BAAE,qEAAF,EAAL,kBAAoBM,mDAApB,mBAA4BH,oDAA5B,YAAuC,aAAQE,mDAAR,iBAAvC,GAEA,kDAHJ,CAKA,eAAID,qDAAJ,iCACI,uEAAK,+BAALJ,uCAAK,4BAAE,qEAAF,EAAL,kBAAoBM,mDAApB,mBAA4BH,oDAA5B,YAAuC,yFACnC,aAAQE,mDAAR,iBADmC,EAEnC,aAAK,aAALL,kDAAK,2BAAE,qEAAF,aAAL,iBAAoBM,mDAApB,6BAA4BH,oDAA5B,EAFmC,uDAAvC,GADJ,QAMI,uEAAK,+BAALH,uCAAK,4BAAE,qEAAF,EAAL,kBAAoBM,mDAApB,mBAA4BH,oDAA5B,YAAuC,yFACnC,aAAK,aAALH,kDAAK,2BAAE,qEAAF,aAAL,iBAAoBM,mDAApB,6BAA4BH,oDAA5B,EADmC,EAEnC,aAAQE,mDAAR,iBAFmC,uDAAvC,GANJ,CAxBJ,4FAAgD,qDAAhD,iBA3EJ,aA0HI,mCAAgBT,QAAhB,2qBAEI,eAAI,aAACO,oDAAD,cAAJ,iCAEI,eAAIC,qDAAJ,iCACI,uDAAAJ,uCAAA,4BAAO,yEAAP,YAA0B,yFACtB,aAAQK,mDAAR,iBADsB,EAEtB,aAAAL,kDAAA,2BAAO,yEAAP,EAFsB,uDAA1B,GADJ,QAMI,uDAAAA,uCAAA,4BAAO,yEAAP,YAA0B,yFACtB,aAAAA,kDAAA,2BAAO,yEAAP,EADsB,EAEtB,aAAQK,mDAAR,iBAFsB,uDAA1B,GANJ,CAFJ,QAaM,eAAI,aAAC,wGAAM,aAAK,aAALL,kDAAK,2BAAE,uEAAF,aAAL,iBAAsBG,oDAAtB,EAAN,+DAAD,cAAJ,iCAEF,wBAAAI,yCAAA,UAAU,oFAAOJ,yCAAP,uDAAV,GACA,eAAI,kFAAS,aAAAA,oDAAA,iBAAQ,aAAAI,oDAAA,UAAU,iDAAV,EAAR,aAAT,EAAJ,iCACI,iBAAM,kDAAI,mFAAJ,GAA8B,8GAA9B,GAAN,CADJ,CAGA,uEAAK,+BAALP,uCAAK,4BAAE,0EAAF,EAAL,kBAAyB,aAAAG,oDAAA,iBAAQ,iDAAR,aAAzB,mBAAqCA,oDAArC,YAAgDI,oDAAhD,GACA,sDAAK,+BAALP,uCAAK,4BAAE,uEAAF,EAAL,kBAAsBG,oDAAtB,YAAiC,aAAQE,mDAAR,iBAAjC,GAPE,QAQA,eAAID,qDAAJ,iCAEF,sDAAK,+BAALJ,uCAAK,4BAAE,uEAAF,EAAL,kBAAsBG,oDAAtB,YAAiC,yFAC7B,aAAQE,mDAAR,iBAD6B,EAE7B,aAAK,aAALL,kDAAK,2BAAE,uEAAF,aAAL,iBAAsBG,oDAAtB,EAF6B,uDAAjC,GAFE,QAQF,sDAAK,+BAALH,uCAAK,4BAAE,uEAAF,EAAL,kBAAsBG,oDAAtB,YAAiC,yFAC7B,aAAK,aAALH,kDAAK,2BAAE,uEAAF,aAAL,iBAAsBG,oDAAtB,EAD6B,EAE7B,aAAQE,mDAAR,iBAF6B,uDAAjC,GARE,CARA,CAbN,CAFJ,4FAAoD,qDAApD,iBA1HJ,SAuKI,mCAAgBT,IAAhB,scAEI,eAAI,aAACO,oDAAD,cAAJ,iCACI,uDAAAH,uCAAA,4BAAO,yEAAP,YAA0B,aAAQK,mDAAR,iBAA1B,GADJ,QAGI,uEAAK,+BAALL,uCAAK,4BAAE,qEAAF,EAAL,kBAAoB,aAAAG,oDAAA,iBAAQ,iDAAR,aAApB,mBAAgCA,oDAAhC,YAA2C,aAAQE,mDAAR,iBAA3C,GAHJ,CAFJ,yDAvKJ,aAyLI,mCAAgBT,QAAhB,0fAEI,eAAI,aAACO,oDAAD,cAAJ,iCACI,uDAAAH,uCAAA,4BAAO,yEAAP,YAA0B,aAAQK,mDAAR,iBAA1B,GADJ,QAGI,wBAAAE,yCAAA,UAAU,oFAAOJ,yCAAP,uDAAV,GACA,eAAI,kFAAS,aAAAA,oDAAA,iBAAQ,aAAAI,oDAAA,UAAU,iDAAV,EAAR,aAAT,EAAJ,iCACI,iBAAM,kDAAI,mFAAJ,GAA8B,8GAA9B,GAAN,CADJ,CAGA,uEAAK,+BAALP,uCAAK,4BAAE,0EAAF,EAAL,kBAAyB,aAAAG,oDAAA,iBAAQ,iDAAR,aAAzB,mBAAqCA,oDAArC,YAAgDI,oDAAhD,GACA,sDAAK,+BAALP,uCAAK,4BAAE,uEAAF,EAAL,kBAAsBG,oDAAtB,YAAiC,aAAQE,mDAAR,iBAAjC,GARJ,CAFJ,yDAzLJ,uBA4MI,mCAAgBT,kBAAhB,2VAEI,uDAAAI,uCAAA,4BAAO,uEAAP,YAAwBQ,4DAAxB,GAFJ,gDA5MJ,uBAuNI,mCAAgBZ,kBAAhB,2HAEI,kBAAO,aAAAI,kDAAA,2BAAO,uEAAP,aAAP,CAFJ,uBAvNJ,8BAkOI,mCAAgBJ,yBAAhB,4YAEI,uDAAAI,uCAAA,4BAAO,8EAAP,YAA+BS,mEAA/B,GAFJ,uDAlOJ,6BA4OI,mCAAgBb,wBAAhB,2HAEI,kBAAO,aAAAI,kDAAA,2BAAO,8EAAP,aAAP,CAFJ,uBA5OJ,mBAsPI,mCAAgBJ,cAAhB,+TAEI,uDAAAI,uCAAA,4BAAO,mEAAP,YAAoB,yJAAgB,2DAAhB,0FAAiC,wFAAW,qFAAQ,4DAAR,uDAAX,EAAmC,mEAAnC,uDAAjC,kEAA+FU,wDAA/F,GAA6G,6CAA7G,EAApB,GAFJ,4CAtPJ,mBAgQI,mCAAgBd,cAAhB,2HAEI,kBAAO,aAAAI,kDAAA,2BAAO,mEAAP,aAAP,CAFJ,uBAhQJ,cA0QI,mCAAgBJ,SAAhB,0SAEI,8GAAsB,6CAAMI,kDAAN,EAAa,0DAAb,GAAtB,EAAiD,oDAAjD,EAAuDI,0CAAvD,wDAEA,eAAI,yEAAS,aAAAJ,kDAAA,2BAAO,kEAAP,aAAT,EAAJ,yCAEM,eAAII,qDAAJ,iCACF,uGAAM,0EAAN,4BAA2B,0DAAM,mDAAAJ,kDAAA,2BAAO,kEAAP,eAAoBA,kDAApB,EAAN,QAAmC,+EAAM,0EAAN,6BAAnC,EAA3B,GADE,QAGF,WAAM,aAAI,aAAJ,yCAAI,yBAAE,0EAAF,6BAAJ,iBAAyB,aAAAA,kDAAA,2BAAO,kEAAP,aAAzB,EAAN,SACA,sDAAI,aAAJ,yCAAI,yBAAE,0EAAF,kBAAJ,kBAAyB,aAAAA,kDAAA,2BAAO,kEAAP,aAAzB,YAA6CA,kDAA7C,GAJE,CAFN,CAJJ,yDAAoC,qDAApC,iBA1QJ,gBA2RI,mCAAgBJ,WAAhB,2HAEI,gHAAwB,6CAAMI,kDAAN,EAAa,0DAAb,GAAxB,wDAEA,eAAI,4EAAS,aAAAA,kDAAA,2BAAO,kEAAP,aAAT,EAAJ,iCACI,WAAM,aAAI,aAAJ,yCAAI,yBAAE,0EAAF,6BAAJ,iBAAyB,aAAAA,kDAAA,2BAAO,kEAAP,aAAzB,EAAN,SADJ,CAJJ,uBA3RJ,eA0SI,mCAAgBJ,UAAhB,4UAEI,eAAI,aAAAe,uCAAA,UAAQ,aAAAX,kDAAA,YAAO,iEAAP,eAAgBY,wCAAhB,GAAR,EAAJ,iCACI,oGAAYD,uCAAZ,wDAEA,kBAAO,oDAAP,CAHJ,CAFJ,uCA1SJ,cA0TI,mCAAgBf,SAAhB,0XAGI,eAAI,wGAAM,aAAK,aAALI,kDAAK,2BAAE,iEAAF,aAAL,iBAAgBY,mDAAhB,EAAN,+DAAJ,iCACI,kBAAO,aAAK,aAALZ,kDAAK,2BAAE,iEAAF,aAAL,iBAAgBY,mDAAhB,aAAP,CADJ,CAGA,eAAI,2DAAAZ,kDAAA,2BAAO,8EAAP,gDAAgC,wGAAM,aAAK,aAALA,kDAAK,2BAAE,uEAAF,aAAL,iBAAsBY,mDAAtB,EAAN,+DAAhC,iCAAJ,iCACI,kBAAO,qDAAP,CADJ,CAGA,eAAI,4EAAS,aAAAZ,kDAAA,2BAAO,mEAAP,aAAT,EAAJ,iCACI,wBAAAW,uCAAA,UAAQ,wFAAW,0BAAAX,kDAAA,2BAAO,mEAAP,qBAAkBY,mDAAlB,EAAX,EAAqCC,sCAArC,uDAAR,GACA,eAAIA,iDAAJ,iCACI,kBAAOF,kDAAP,CADJ,CAFJ,CAOA,wBAAAA,uCAAA,UAAQ,aAAAX,kDAAA,YAAO,8EAAP,eAA6BY,wCAA7B,EAAqC,qDAArC,GAAR,GAGA,eAAI,+HAAUD,kDAAV,qCAAmB,qFAAQ,6DAAR,uDAAnB,iCAAJ,iCACI,wBAAAA,uCAAA,UAAQ,aAAAX,kDAAA,YAAO,8EAAP,eAA6BY,wCAA7B,EAAqC,oDAArC,GAAR,GADJ,CAIA,eAAI,4EAAS,aAAAZ,kDAAA,2BAAO,mEAAP,aAAT,EAAJ,iCACI,iGAAS,0BAAAA,kDAAA,2BAAO,mEAAP,qBAAkBY,mDAAlB,EAAT,EAAmCD,uCAAnC,wDADJ,CAIA,eAAI,iFAAUA,kDAAV,EAAJ,iCAEI,sDAAK,+BAALX,uCAAK,4BAAE,uEAAF,EAAL,kBAAsBY,mDAAtB,YAAgC,oDAAhC,GAFJ,CAKA,kBAAOD,kDAAP,CAhCJ,uCA1TJ,0BAkWI,kCAAuBf,qBAAvB,2HAEI,kBAAO,+EAAM,0EAAN,6BAAP,CAFJ,uBAlWJ,2BAuWI,mCAAiBA,sBAAjB,qjCAGI,wBAAAkB,kDAAA,UAAmB,gGAAMF,wCAAN,EAAc,mDAAd,EAAoB,+DAApB,+DAA2CG,iDAA3C,EAAnB,GAEA,wBAAAT,wCAAA,UAAS,aAAAM,mDAAA,iBAAO,iDAAP,aAAT,GACA,eAAI,wGAAM,aAAK,aAALZ,kDAAK,2BAAE,0EAAF,aAAL,iBAAyBM,mDAAzB,EAAN,+DAAJ,iCACI,wBAAAU,0CAAA,UAAWJ,mDAAX,GACA,2BAAO,oFAAU,aAAAK,0CAAA,UAAW,qFAAQD,0CAAR,EAAkB,mDAAlB,uDAAX,EAAV,EAAP,iCACI,wBAAAA,0CAAA,UAAW,oFAAOA,0CAAP,EAAiB,iDAAjB,EAAoBC,0CAApB,uDAAX,GACA,wBAAAC,yCAAA,UAAU,aAAAF,qDAAA,QAAW,mDAAX,EAAV,GACA,eAAI,wGAAM,aAAK,aAALhB,kDAAK,2BAAE,uEAAF,aAAL,iBAAsBkB,oDAAtB,EAAN,+DAAJ,iCACI,wBAAAC,0CAAA,UAAW,oFAAsB,oFAAOL,kDAAP,EAAyB,aAAAG,qDAAA,KAAW,iDAAX,EAAzB,uDAAtB,EAAX,GACA,0CAAS,aAAK,aAALjB,kDAAK,2BAAE,uEAAF,aAAL,iBAAsBkB,oDAAtB,aAAT,mEAA2CE,sCAA3C,+CACI,eAAI,yFAAY,aAAAT,uCAAA,UAAQ,aAAAS,iDAAA,QAAOD,qDAAP,EAAR,EAAZ,uDAAJ,iCACI,kBAAOR,kDAAP,CADJ,CADJ,CAFJ,CAHJ,CAFJ,CAiBA,0CAAS,aAAAX,kDAAA,2BAAO,yEAAP,aAAT,mEAAoCoB,sCAApC,+CACI,eAAI,yFAAY,aAAAT,uCAAA,UAAQ,0BAAAS,iDAAA,QAAO,+DAAP,UAA6BN,6DAA7B,EAAR,EAAZ,uDAAJ,iCACI,kBAAOH,kDAAP,CADJ,CADJ,CAOA,eAAI,oFAAU,aAAAU,sCAAA,UAAO,qFAAQT,wCAAR,EAAgB,mDAAhB,uDAAP,EAAV,EAAJ,iCAEI,wBAAAU,kDAAA,UAAmB,iGAAOR,kDAAP,EAAyB,iDAAzB,EAA4B,aAAAO,iDAAA,KAAO,iDAAP,EAA5B,+DACb,mFAAM,oFAAOP,kDAAP,EAAyB,aAAAO,iDAAA,KAAO,iDAAP,EAAzB,uDAAN,EAA0C,kDAA1C,EAA+C,+DAA/C,uDADa,EAAnB,GAFJ,QAMI,wBAAAC,kDAAA,UAAmB,gGAAMV,wCAAN,EAAc,kDAAd,EAAmB,+DAAnB,+DAA0CG,iDAA1C,EAAnB,GANJ,CASA,eAAI,wGAAM,aAAK,aAALf,kDAAK,2BAAE,qEAAF,aAAL,iBAAoBM,mDAApB,EAAN,+DAAJ,iCACI,0CAAS,aAAK,aAALN,kDAAK,2BAAE,qEAAF,aAAL,iBAAoBM,mDAApB,aAAT,mEAAmDiB,uCAAnD,+CAAwCpB,yCAAxC,sCACI,eAAI,6EAAM,oFAAOS,wCAAP,EAAeT,yCAAf,uDAAN,EAAJ,iCACI,0CAASoB,kDAAT,mEAAkBH,sCAAlB,+CACI,eAAI,yFAAY,aAAAT,uCAAA,UAAQ,0BAAAS,iDAAA,QAAO,+DAAP,UAA6BE,6DAA7B,EAAR,EAAZ,uDAAJ,iCACI,kBAAOX,kDAAP,CADJ,CADJ,CADJ,CADJ,CADJ,CAaA,0CAAS,aAAAX,kDAAA,2BAAO,yEAAP,aAAT,mEAAoCoB,sCAApC,+CACI,eAAI,yFAAY,aAAAT,uCAAA,UAAQ,0BAAAS,iDAAA,QAAO,+DAAP,UAA6BE,6DAA7B,EAAR,EAAZ,uDAAJ,iCACI,kBAAOX,kDAAP,CADJ,CADJ,CAOA,eAAI,2DAAAX,kDAAA,2BAAO,uEAAP,gDAAyB,aAAAW,uCAAA,UAAQ,yGAA4BW,kDAA5B,uDAAR,EAAzB,iCAAJ,iCACI,kBAAOX,kDAAP,CADJ,CAIA,kBAAO,qDAAP,CA/DJ,sDAvWJ,wCA+aA,4DAASf,YAAT,qRAEI,sCAAQe,kDAAR,sBAFJ,2CA7cA,0C;;;;;;;;;;;;;+dCAA,+KAEA,gEACA,gEAOA,wLAEA,iCAA4B,4CAC1B,2FACA,4CACE,qGAAoB,oEAApB,EADF,EAEE,8FAAa,uDAAb,EAFF,EAGE,8FACA,+CADA,EAHF,EAME,gGAAe,4CAAf,EANF,EAOE,2FAAU,8EAAV,EAPF,GADA,EAD0B,EAW1B,+FACA,4CACE,qHACA,4CACE,qGAAoB,oEAApB,EADF,EAEE,8FAAa,uDAAb,EAFF,EAGE,8FACA,+CADA,EAHF,EAME,gGAAe,4CAAf,EANF,GADA,EADF,GADA,EAX0B,GAA5B,GAFA,mDA0BA,mEA1BA,uDA2BA,iCAAoC,+CAApC,GA3BA,sDAmCA,kCAAuBf,qBAAvB,6OAEA,sBAAA4B,0CAAA,UAAY,+CAAZ,GACA,yCAAS,sEAAM,oEAAN,4BAAT,mEAAiCC,2CAAjC,+CACA,mDAAAD,0CAAA,6BAAc,sFAAW,YAAAC,sDAAA,iBAAW,wDAAX,EAAX,uDAAd,GADA,CAKA,cAAI,2EAAM,mFAAOD,0CAAP,uDAAN,EAAJ,iCACA,iBAAO,YAAAA,qDAAA,iBAAU,gDAAV,aAAP,CADA,CAIA,iBAAO,sFAAW,sFAAW,kGAAsB,2DAAtB,EAAqCA,0CAArC,uDAAX,uDAAX,uDAAP,CAZA,sBAnCA,iBA0DA,kCAAuB5B,YAAvB,gYAEA,yCAAS,sEAAM,oEAAN,4BAAT,mEAAiC6B,2CAAjC,+CACA,cAAI,uGAAM,YAAAA,sDAAA,iBAAW,wDAAX,6BAAuBC,wDAAvB,EAAN,+DAAJ,iCACA,iBAAO,mDAAP,CADA,CADA,CAMA,iBAAO,oDAAP,CARA,4CA1DA,eAkFA,kCAAuB9B,UAAvB,8uBAEA,wBAAA+B,6CAAA,UAAc,aAAAC,oDAAA,YAAS,yEAAT,eAA0BD,6CAA1B,GAAd,GACA,wBAAAE,2CAAA,UAAY,aAAAD,oDAAA,YAAS,yEAAT,eAA0B,wEAAM,yEAAN,GAAuBF,8CAAvB,yBAA1B,GAAZ,GAEA,kBAAO,aAAAG,sDAAA,YAAW,gEAAX,eAAmBF,6CAAnB,GAAP,CALA,gIAlFA,sBAmGA,kCAAuB/B,iBAAvB,obAEA,0CAAS,wEAAM,qEAAN,4BAAT,mEAAiC6B,4CAAjC,+CACA,eAAI,aAAC,wGAAM,aAAAA,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,EAAN,+DAAD,cAAJ,iCACA,4BADA,CAIA,wBAAAI,yCAAA,UAAU,gDAAV,GACA,eAAI,wGAAM,aAAAL,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,+DAArC,EAAN,+DAAJ,iCACA,sDAAAI,yCAAA,6BAAY,aAAAL,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,+DAArC,aAAZ,GADA,CAGA,eAAI,8FAAiB,wDAAjB,EAA4B,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,EAA5B,uDAAJ,iCACA,wBAAAI,yCAAA,UAAU,yFAAYA,yCAAZ,EAAqB,aAAAL,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,wDAArC,EAArB,uDAAV,GADA,CAGA,eAAI,8FAAiB,yDAAjB,EAA6B,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,EAA7B,uDAAJ,iCACA,wBAAAI,yCAAA,UAAU,yFAAYA,yCAAZ,EAAqB,aAAAL,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,yDAArC,EAArB,uDAAV,GADA,CAGA,eAAI,8FAAiB,yDAAjB,EAA6B,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,EAA7B,uDAAJ,iCACA,wBAAAI,yCAAA,UAAU,yFAAYA,yCAAZ,EAAqB,aAAAL,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,yDAArC,EAArB,uDAAV,GADA,CAIA,kBAAO,qFAAQ,qDAAR,EAAgBI,yCAAhB,uDAAP,CAnBA,CAsBA,iBAAM,kDAAI,+EAAJ,GAA0B,6FAAcJ,yDAAd,UAA6B,oEAA7B,EAA1B,GAAN,CAxBA,6CAnGA,gBAkIA,kCAAuB9B,WAAvB,gYAEA,0CAAS,wEAAM,qEAAN,4BAAT,mEAAiC6B,4CAAjC,+CACA,eAAI,aAAC,wGAAM,aAAAA,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,EAAN,+DAAD,cAAJ,iCACA,4BADA,CAIA,eAAI,aAAC,wGAAM,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,wDAArC,EAAN,+DAAD,cAAJ,iCACA,kBAAO,6CAAP,CADA,CAIA,kBAAO,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,wDAArC,aAAP,CATA,CAYA,iBAAM,kDAAI,+EAAJ,GAA0B,6FAAcA,yDAAd,UAA6B,oEAA7B,EAA1B,GAAN,CAdA,6CAlIA,sBAuJA,kCAAuB9B,iBAAvB,gYAEA,0CAAS,wEAAM,qEAAN,4BAAT,mEAAiC6B,4CAAjC,+CACA,eAAI,aAAC,wGAAM,aAAAA,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,EAAN,+DAAD,cAAJ,iCACA,4BADA,CAIA,eAAI,aAAC,wGAAM,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,+DAArC,EAAN,+DAAD,cAAJ,iCACA,kBAAO,6CAAP,CADA,CAIA,kBAAO,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,+DAArC,aAAP,CATA,CAYA,iBAAM,kDAAI,+EAAJ,GAA0B,6FAAcA,yDAAd,UAA6B,oEAA7B,EAA1B,GAAN,CAdA,6CAvJA,kBA4KA,kCAAuB9B,aAAvB,gYAEA,0CAAS,wEAAM,qEAAN,4BAAT,mEAAiC6B,4CAAjC,+CACA,eAAI,aAAC,wGAAM,aAAAA,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,EAAN,+DAAD,cAAJ,iCACA,4BADA,CAIA,eAAI,aAAC,wGAAM,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,0DAArC,EAAN,+DAAD,cAAJ,iCACA,kBAAO,6CAAP,CADA,CAIA,kBAAO,aAAAD,uDAAA,iBAAW,yDAAX,6BAAuBC,yDAAvB,6BAAqC,0DAArC,aAAP,CATA,CAYA,iBAAM,kDAAI,+EAAJ,GAA0B,6FAAcA,yDAAd,UAA6B,oEAA7B,EAA1B,GAAN,CAdA,6CA5KA,oBAiMA,kCAAuB9B,eAAvB,qLAEA,wBAAA6B,4CAAA,UAAa,wEAAM,qEAAN,4BAAb,GAEA,kBAAO,aAAAA,uDAAA,iBAAW,iDAAX,6BAAc,qDAAd,aAAP,CAJA,uBAjMA,gBA8MA,kCAAuB7B,WAAvB,2HAEA,kBAAO,+EAAM,kEAAN,6BAAP,CAFA,uBA9MA,YAqOA,kCAAuBA,OAAvB,qRAEA,uGAAM,kEAAN,4BAAmBmC,kDAAnB,GACA,uGAAM,0EAAN,4BAA2B,gDAA3B,GAHA,sCArOA,kBA8OA,kCAAwBnC,aAAxB,mSAEA,eAAI,yEAAS,+EAAM,sEAAN,6BAAT,EAAJ,iCACA,uGAAM,sEAAN,4BAAuB,2FAAc,gFAAd,EAA+C,qEAA/C,uDAAvB,GADA,CAIA,wBAAA6B,4CAAA,UAAa,gDAAb,GAEA,eAAI,+EAAM,sEAAN,6BAAJ,iCAEA,0CAAS,mGAAa,6EAAb,6BAAT,mEAA8DO,yCAA9D,+CAAgD/B,4CAAhD,sCACA,eAAI,wGAAM,aAAI,aAAJ,yCAAI,yBAAE,0EAAF,6BAAJ,iBAAyBA,uDAAzB,EAAN,+DAAJ,iCACA,sDAAAwB,4CAAA,6BAAe,aAAI,aAAJ,yCAAI,yBAAE,0EAAF,6BAAJ,iBAAyBxB,uDAAzB,aAAf,GADA,QAEM,eAAI,qFAAQ,aAAAA,uDAAA,QAAW,wEAAX,EAAR,uDAAJ,iCACN,sDAAAwB,4CAAA,6BAAe,2CAAI,aAAJ,yCAAI,yBAAE,0EAAF,kBAAJ,kBAAyBxB,uDAAzB,YAAuC,2BAAQ,aAAAA,uDAAA,QAAW,wEAAX,EAAR,qBAAvC,EAAf,GADM,CAFN,CADA,CAFA,CAWA,sDAAAwB,4CAAA,6BAAe,+EAAM,kEAAN,6BAAf,GAEA,kBAAOA,uDAAP,CArBA,uBA9OA,wCAVA,0C;;;;;;;;;;;;;+kBCRA,oBAAAxB,0CAAA,UAAa,iFAAQ,iFAAQ,2BAAR,uDAAR,uDAAb,GACA,oBAAAgC,wCAAA,UAAW,iFAAQhC,0CAAR,uDAAX,GAEA,gBAAO,2CACH,gHAAiC,WAAAA,qDAAA,QAAa,8EAAb,EAAjC,EADG,GAAP,C;;;;;;;;;;;;;ilBCHA,oBAAAA,0CAAA,UAAa,iFAAQ,iFAAQ,2BAAR,uDAAR,uDAAb,GACA,oBAAAgC,wCAAA,UAAW,iFAAQhC,0CAAR,uDAAX,GAEA,gBAAO,8CAAP,C;;;;;;;;;;;;;2kBCHA,oBAAAA,0CAAA,UAAa,iFAAQ,iFAAQ,2BAAR,uDAAR,uDAAb,GACA,oBAAAgC,wCAAA,UAAW,iFAAQhC,0CAAR,uDAAX,GAEA,gBAAO,2CACH,8HAA+C,2CAAM,WAAAgC,mDAAA,QAAW,mDAAX,EAAN,GAA/C,EADG,GAAP,C;;;;;;;;;;;;;2dCHA,yNAEI,mEAFJ,iDAII,kCAAuBrC,gBAAvB,4RAEI,cAAI,0GAAoCgB,kDAApC,EAAJ,iCACI,oCAAQ,yDAAU,gEAAV,EAAR,sBADJ,CAFJ,qCAJJ,eAcI,kCAAuBhB,UAAvB,qcAEI,cAAI,0EAAS,6EAAM,8DAAN,6BAAT,EAAJ,iCACI,iBAAO,6EAAM,8DAAN,6BAAP,CADJ,CAIA,2GAAsB,4CAAM,sGAAN,EAAgE,+DAAhE,GAAtB,EAA0G,mDAA1G,EAAgH,mDAAhH,wDACA,mGAAM,8DAAN,4BAAgB,YAAAoC,wCAAA,UAAU,iDAAI,yFAAJ,GAAmC,qFAAS,qFAAS,4BAAT,uDAAT,uDAAnC,GAAV,EAAhB,GACA,6GAAwB,4CAAM,sGAAN,EAAgE,+DAAhE,GAAxB,wDAEA,sBAAAE,iDAAA,UAAmB,qLAAkB,oDAAlB,qCAA2B,YAAC,mFAAQ,4DAAR,uDAAD,cAA3B,oEAAuD,6CAAC,YAAC,2FAAgB,wEAAhB,uDAAD,cAAD,mCAAiD,YAAC,2JAAD,cAAjD,iCAAvD,iCAAnB,GACA,cAAIA,4DAAJ,iCACI,oCAAQ,yDAAU,oEAAV,EAAR,sBAEA,oGAAe,8JAAuE,sEAAvE,GAAsFF,wCAAtF,0BAAf,wDAHJ,QAKI,sBAAAG,qCAAA,UAAO,0BAAQ,yDAAU,wEAAV,EAAR,qBAAP,GACA,yCAASA,gDAAT,mEAA+BC,sCAA/B,+CAAiBC,2CAAjB,sCACI,sBAAAL,mDAAA,YAAS,2DAAT,eAAaK,2CAAb,EAAyBD,sCAAzB,IADJ,CAIA,sBAAAD,qCAAA,UAAO,0BAAQ,yDAAU,kEAAV,EAAR,qBAAP,GACA,yCAASA,gDAAT,mEAA+BC,sCAA/B,+CAAiBC,2CAAjB,sCACI,sBAAAL,mDAAA,YAAS,+DAAT,eAAiBK,2CAAjB,EAA6BD,sCAA7B,IADJ,CAIA,sBAAAlC,0CAAA,UAAY,0BAAQ,yDAAU,sEAAV,EAAR,qBAAZ,GACA,cAAIA,qDAAJ,iCACI,sBAAA8B,mDAAA,YAAS,mEAAT,eAAqB9B,0CAArB,IADJ,CAhBJ,CAqBA,sBAAA8B,mDAAA,YAAS,gEAAT,eAAkB,mDAAlB,IAEA,iBAAOA,mDAAP,CAlCJ,sBAdJ,wC;;;;;;;;;;;;;6dCAA,wLAEA,+NAEI,iCAAmC,2CAC/B,wFACA,4CACI,gIAA+C,iDAA/C,EADJ,GADA,EAD+B,GAAnC,GAFJ,mDASI,iCAAgC,4CAC5B,gIACA,4CACI,uFAAK,qEAAU,sDAAV,UAAqB,oDAArB,EAAL,EADJ,GADA,EAD4B,GAAhC,GATJ,6CAgBI,iCAA0B,4CACtB,kHAAiC,qEAAU,mDAAV,UAAkB,+EAAlB,EAAjC,EADsB,GAA1B,GAhBJ,gDAoBI,kCAAuBpC,eAAvB,+OAEI,iBAAO,+FAAU,4DAAV,GAAe,gVAAiBoC,OAAjB,yCAClB,oDAAAA,wCAAA,4BAAS,yEAAT,YAA6B,+IAAoD,yEAApD,6BAA7B,GACA,oDAAAA,wCAAA,4BAAS,sEAAT,YAA0B,+IAAoD,sEAApD,6BAA1B,GACA,oDAAAA,wCAAA,4BAAS,gEAAT,YAAoB,+IAAoD,gEAApD,6BAApB,GAHkB,oDAAf,EAKJ,4CALI,EAKE,2HALF,0BAAP,CAFJ,gFApBJ,wCAFA,0C;;;;;;;;;;;;;udCJM,gBAAO,2CACX,yFACA,2CACE,mGAAoB,mEAApB,EADF,EAEE,4FAAa,sDAAb,EAFF,EAGE,4FACA,8CADA,EAHF,EAME,8FAAe,2CAAf,EANF,EAOE,2FAAU,8EAAV,EAPF,GADA,EADW,EAWX,+FACA,4CACE,qHACA,4CACE,qGAAoB,oEAApB,EADF,EAEE,8FAAa,uDAAb,EAFF,EAGE,8FACA,+CADA,EAHF,EAME,gGAAe,4CAAf,EANF,GADA,EADF,GADA,EAXW,GAAP,C","file":"browser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./browser/entry.php\");\n","/**\n * Example of how to use Uniter's experimental inline PHP Markdown plugin\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin-example\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin-example/raw/master/MIT-LICENSE.txt\n */\n\nmodule.exports = function (engine) {\n    engine.defineGlobal('domDocument', document);\n};\n","<?php\n\nuse MyUniterProjects\\MarkdownPluginExample\\Markdown;\n\nrequire_once __DIR__ . '/../vendor/autoload.php';\n\n$markdown = new Markdown();\n\n$domDocument->getElementById('main')->innerHTML = $markdown->getHtml();\n","\"use strict\";\n\nvar isValue             = require(\"type/value/is\")\n  , ensureValue         = require(\"type/value/ensure\")\n  , ensurePlainFunction = require(\"type/plain-function/ensure\")\n  , copy                = require(\"es5-ext/object/copy\")\n  , normalizeOptions    = require(\"es5-ext/object/normalize-options\")\n  , map                 = require(\"es5-ext/object/map\");\n\nvar bind = Function.prototype.bind\n  , defineProperty = Object.defineProperty\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , define;\n\ndefine = function (name, desc, options) {\n\tvar value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;\n\tdgs = copy(desc);\n\tdelete dgs.writable;\n\tdelete dgs.value;\n\tdgs.get = function () {\n\t\tif (!options.overwriteDefinition && hasOwnProperty.call(this, name)) return value;\n\t\tdesc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);\n\t\tdefineProperty(this, name, desc);\n\t\treturn this[name];\n\t};\n\treturn dgs;\n};\n\nmodule.exports = function (props/*, options*/) {\n\tvar options = normalizeOptions(arguments[1]);\n\tif (isValue(options.resolveContext)) ensurePlainFunction(options.resolveContext);\n\treturn map(props, function (desc, name) { return define(name, desc, options); });\n};\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","// Inspired by Google Closure:\n// http://closure-library.googlecode.com/svn/docs/\n// closure_goog_array_array.js.html#goog.array.clear\n\n\"use strict\";\n\nvar value = require(\"../../object/valid-value\");\n\nmodule.exports = function () {\n\tvalue(this).length = 0;\n\treturn this;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Array.from : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && result !== arr && result[1] === \"dwa\");\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity, max-lines-per-function\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array((length = arrayLike.length));\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call((function () { return arguments; })());\n\nmodule.exports = function (value) { return objToString.call(value) === id; };\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && isFunctionStringTag(objToString.call(value));\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Math.sign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn sign(10) === 1 && sign(-20) === -1;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || value === 0) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nvar sign  = require(\"../math/sign\")\n  , abs   = Math.abs\n  , floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif (value === 0 || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n  , max       = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nvar aFrom  = require(\"../array/from\")\n  , assign = require(\"./assign\")\n  , value  = require(\"./valid-value\");\n\nmodule.exports = function (obj/*, propertyNames, options*/) {\n\tvar copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);\n\tif (copy !== obj && !propertyNames) return copy;\n\tvar result = {};\n\tif (propertyNames) {\n\t\taFrom(propertyNames, function (propertyName) {\n\t\t\tif (options.ensure || propertyName in obj) result[propertyName] = obj[propertyName];\n\t\t});\n\t} else {\n\t\tassign(result, obj);\n\t}\n\treturn result;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = { configurable: false, enumerable: false, writable: true, value: undefined };\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) { return (isValue(value) && map[typeof value]) || false; };\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar callable = require(\"./valid-callable\")\n  , forEach  = require(\"./for-each\")\n  , call     = Function.prototype.call;\n\nmodule.exports = function (obj, cb/*, thisArg*/) {\n\tvar result = {}, thisArg = arguments[2];\n\tcallable(cb);\n\tforEach(obj, function (value, key, targetObj, index) {\n\t\tresult[key] = call.call(cb, thisArg, value, key, targetObj, index);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.setPrototypeOf : require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject         = require(\"../is-object\")\n  , value            = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty   = Object.defineProperty\n  , nullDesc         = { configurable: true, enumerable: false, writable: true, value: undefined }\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n})(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n);\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isObject = require(\"./is-object\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) throw new TypeError(value + \" is not an Object\");\n\treturn value;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nvar generated = Object.create(null), random = Math.random;\n\nmodule.exports = function () {\n\tvar str;\n\tdo {\n\t\tstr = random().toString(36).slice(2);\n\t} while (generated[str]);\n\treturn str;\n};\n","\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , contains       = require(\"es5-ext/string/#/contains\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, ArrayIterator;\n\nArrayIterator = module.exports = function (arr, kind) {\n\tif (!(this instanceof ArrayIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tIterator.call(this, arr);\n\tif (!kind) kind = \"value\";\n\telse if (contains.call(kind, \"key+value\")) kind = \"key+value\";\n\telse if (contains.call(kind, \"key\")) kind = \"key\";\n\telse kind = \"value\";\n\tdefineProperty(this, \"__kind__\", d(\"\", kind));\n};\nif (setPrototypeOf) setPrototypeOf(ArrayIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete ArrayIterator.prototype.constructor;\n\nArrayIterator.prototype = Object.create(Iterator.prototype, {\n\t_resolve: d(function (i) {\n\t\tif (this.__kind__ === \"value\") return this.__list__[i];\n\t\tif (this.__kind__ === \"key+value\") return [i, this.__list__[i]];\n\t\treturn i;\n\t})\n});\ndefineProperty(ArrayIterator.prototype, Symbol.toStringTag, d(\"c\", \"Array Iterator\"));\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , callable    = require(\"es5-ext/object/valid-callable\")\n  , isString    = require(\"es5-ext/string/is-string\")\n  , get         = require(\"./get\");\n\nvar isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;\n\nmodule.exports = function (iterable, cb /*, thisArg*/) {\n\tvar mode, thisArg = arguments[2], result, doBreak, broken, i, length, char, code;\n\tif (isArray(iterable) || isArguments(iterable)) mode = \"array\";\n\telse if (isString(iterable)) mode = \"string\";\n\telse iterable = get(iterable);\n\n\tcallable(cb);\n\tdoBreak = function () {\n\t\tbroken = true;\n\t};\n\tif (mode === \"array\") {\n\t\tsome.call(iterable, function (value) {\n\t\t\tcall.call(cb, thisArg, value, doBreak);\n\t\t\treturn broken;\n\t\t});\n\t\treturn;\n\t}\n\tif (mode === \"string\") {\n\t\tlength = iterable.length;\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tchar = iterable[i];\n\t\t\tif (i + 1 < length) {\n\t\t\t\tcode = char.charCodeAt(0);\n\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) char += iterable[++i];\n\t\t\t}\n\t\t\tcall.call(cb, thisArg, char, doBreak);\n\t\t\tif (broken) break;\n\t\t}\n\t\treturn;\n\t}\n\tresult = iterable.next();\n\n\twhile (!result.done) {\n\t\tcall.call(cb, thisArg, result.value, doBreak);\n\t\tif (broken) return;\n\t\tresult = iterable.next();\n\t}\n};\n","\"use strict\";\n\nvar isArguments    = require(\"es5-ext/function/is-arguments\")\n  , isString       = require(\"es5-ext/string/is-string\")\n  , ArrayIterator  = require(\"./array\")\n  , StringIterator = require(\"./string\")\n  , iterable       = require(\"./valid-iterable\")\n  , iteratorSymbol = require(\"es6-symbol\").iterator;\n\nmodule.exports = function (obj) {\n\tif (typeof iterable(obj)[iteratorSymbol] === \"function\") return obj[iteratorSymbol]();\n\tif (isArguments(obj)) return new ArrayIterator(obj);\n\tif (isString(obj)) return new StringIterator(obj);\n\treturn new ArrayIterator(obj);\n};\n","\"use strict\";\n\nvar clear    = require(\"es5-ext/array/#/clear\")\n  , assign   = require(\"es5-ext/object/assign\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , value    = require(\"es5-ext/object/valid-value\")\n  , d        = require(\"d\")\n  , autoBind = require(\"d/auto-bind\")\n  , Symbol   = require(\"es6-symbol\");\n\nvar defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;\n\nmodule.exports = Iterator = function (list, context) {\n\tif (!(this instanceof Iterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tdefineProperties(this, {\n\t\t__list__: d(\"w\", value(list)),\n\t\t__context__: d(\"w\", context),\n\t\t__nextIndex__: d(\"w\", 0)\n\t});\n\tif (!context) return;\n\tcallable(context.on);\n\tcontext.on(\"_add\", this._onAdd);\n\tcontext.on(\"_delete\", this._onDelete);\n\tcontext.on(\"_clear\", this._onClear);\n};\n\n// Internal %IteratorPrototype% doesn't expose its constructor\ndelete Iterator.prototype.constructor;\n\ndefineProperties(\n\tIterator.prototype,\n\tassign(\n\t\t{\n\t\t\t_next: d(function () {\n\t\t\t\tvar i;\n\t\t\t\tif (!this.__list__) return undefined;\n\t\t\t\tif (this.__redo__) {\n\t\t\t\t\ti = this.__redo__.shift();\n\t\t\t\t\tif (i !== undefined) return i;\n\t\t\t\t}\n\t\t\t\tif (this.__nextIndex__ < this.__list__.length) return this.__nextIndex__++;\n\t\t\t\tthis._unBind();\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t\tnext: d(function () {\n\t\t\t\treturn this._createResult(this._next());\n\t\t\t}),\n\t\t\t_createResult: d(function (i) {\n\t\t\t\tif (i === undefined) return { done: true, value: undefined };\n\t\t\t\treturn { done: false, value: this._resolve(i) };\n\t\t\t}),\n\t\t\t_resolve: d(function (i) {\n\t\t\t\treturn this.__list__[i];\n\t\t\t}),\n\t\t\t_unBind: d(function () {\n\t\t\t\tthis.__list__ = null;\n\t\t\t\tdelete this.__redo__;\n\t\t\t\tif (!this.__context__) return;\n\t\t\t\tthis.__context__.off(\"_add\", this._onAdd);\n\t\t\t\tthis.__context__.off(\"_delete\", this._onDelete);\n\t\t\t\tthis.__context__.off(\"_clear\", this._onClear);\n\t\t\t\tthis.__context__ = null;\n\t\t\t}),\n\t\t\ttoString: d(function () {\n\t\t\t\treturn \"[object \" + (this[Symbol.toStringTag] || \"Object\") + \"]\";\n\t\t\t})\n\t\t},\n\t\tautoBind({\n\t\t\t_onAdd: d(function (index) {\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t++this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) {\n\t\t\t\t\tdefineProperty(this, \"__redo__\", d(\"c\", [index]));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.__redo__.forEach(function (redo, i) {\n\t\t\t\t\tif (redo >= index) this.__redo__[i] = ++redo;\n\t\t\t\t}, this);\n\t\t\t\tthis.__redo__.push(index);\n\t\t\t}),\n\t\t\t_onDelete: d(function (index) {\n\t\t\t\tvar i;\n\t\t\t\tif (index >= this.__nextIndex__) return;\n\t\t\t\t--this.__nextIndex__;\n\t\t\t\tif (!this.__redo__) return;\n\t\t\t\ti = this.__redo__.indexOf(index);\n\t\t\t\tif (i !== -1) this.__redo__.splice(i, 1);\n\t\t\t\tthis.__redo__.forEach(function (redo, j) {\n\t\t\t\t\tif (redo > index) this.__redo__[j] = --redo;\n\t\t\t\t}, this);\n\t\t\t}),\n\t\t\t_onClear: d(function () {\n\t\t\t\tif (this.__redo__) clear.call(this.__redo__);\n\t\t\t\tthis.__nextIndex__ = 0;\n\t\t\t})\n\t\t})\n\t)\n);\n\ndefineProperty(\n\tIterator.prototype,\n\tSymbol.iterator,\n\td(function () {\n\t\treturn this;\n\t})\n);\n","\"use strict\";\n\nvar isArguments = require(\"es5-ext/function/is-arguments\")\n  , isValue     = require(\"es5-ext/object/is-value\")\n  , isString    = require(\"es5-ext/string/is-string\");\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArray        = Array.isArray;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (isArray(value)) return true;\n\tif (isString(value)) return true;\n\tif (isArguments(value)) return true;\n\treturn typeof value[iteratorSymbol] === \"function\";\n};\n","// Thanks @mathiasbynens\n// http://mathiasbynens.be/notes/javascript-unicode#iterating-over-symbols\n\n\"use strict\";\n\nvar setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , d              = require(\"d\")\n  , Symbol         = require(\"es6-symbol\")\n  , Iterator       = require(\"./\");\n\nvar defineProperty = Object.defineProperty, StringIterator;\n\nStringIterator = module.exports = function (str) {\n\tif (!(this instanceof StringIterator)) throw new TypeError(\"Constructor requires 'new'\");\n\tstr = String(str);\n\tIterator.call(this, str);\n\tdefineProperty(this, \"__length__\", d(\"\", str.length));\n};\nif (setPrototypeOf) setPrototypeOf(StringIterator, Iterator);\n\n// Internal %ArrayIteratorPrototype% doesn't expose its constructor\ndelete StringIterator.prototype.constructor;\n\nStringIterator.prototype = Object.create(Iterator.prototype, {\n\t_next: d(function () {\n\t\tif (!this.__list__) return undefined;\n\t\tif (this.__nextIndex__ < this.__length__) return this.__nextIndex__++;\n\t\tthis._unBind();\n\t\treturn undefined;\n\t}),\n\t_resolve: d(function (i) {\n\t\tvar char = this.__list__[i], code;\n\t\tif (this.__nextIndex__ === this.__length__) return char;\n\t\tcode = char.charCodeAt(0);\n\t\tif (code >= 0xd800 && code <= 0xdbff) return char + this.__list__[this.__nextIndex__++];\n\t\treturn char;\n\t})\n});\ndefineProperty(StringIterator.prototype, Symbol.toStringTag, d(\"c\", \"String Iterator\"));\n","\"use strict\";\n\nvar isIterable = require(\"./is-iterable\");\n\nmodule.exports = function (value) {\n\tif (!isIterable(value)) throw new TypeError(value + \" is not iterable\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? WeakMap : require(\"./polyfill\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar weakMap, obj;\n\n\tif (typeof WeakMap !== \"function\") return false;\n\ttry {\n\t\t// WebKit doesn't support arguments and crashes\n\t\tweakMap = new WeakMap([[obj = {}, \"one\"], [{}, \"two\"], [{}, \"three\"]]);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\tif (String(weakMap) !== \"[object WeakMap]\") return false;\n\tif (typeof weakMap.set !== \"function\") return false;\n\tif (weakMap.set({}, 1) !== weakMap) return false;\n\tif (typeof weakMap.delete !== \"function\") return false;\n\tif (typeof weakMap.has !== \"function\") return false;\n\tif (weakMap.get(obj) !== \"one\") return false;\n\n\treturn true;\n};\n","// Exports true if environment provides native `WeakMap` implementation, whatever that is.\n\n\"use strict\";\n\nmodule.exports = (function () {\n\tif (typeof WeakMap !== \"function\") return false;\n\treturn Object.prototype.toString.call(new WeakMap()) === \"[object WeakMap]\";\n}());\n","\"use strict\";\n\nvar isValue           = require(\"es5-ext/object/is-value\")\n  , setPrototypeOf    = require(\"es5-ext/object/set-prototype-of\")\n  , object            = require(\"es5-ext/object/valid-object\")\n  , ensureValue       = require(\"es5-ext/object/valid-value\")\n  , randomUniq        = require(\"es5-ext/string/random-uniq\")\n  , d                 = require(\"d\")\n  , getIterator       = require(\"es6-iterator/get\")\n  , forOf             = require(\"es6-iterator/for-of\")\n  , toStringTagSymbol = require(\"es6-symbol\").toStringTag\n  , isNative          = require(\"./is-native-implemented\")\n\n  , isArray = Array.isArray, defineProperty = Object.defineProperty\n  , objHasOwnProperty = Object.prototype.hasOwnProperty, getPrototypeOf = Object.getPrototypeOf\n  , WeakMapPoly;\n\nmodule.exports = WeakMapPoly = function (/* Iterable*/) {\n\tvar iterable = arguments[0], self;\n\n\tif (!(this instanceof WeakMapPoly)) throw new TypeError(\"Constructor requires 'new'\");\n\tself = isNative && setPrototypeOf && (WeakMap !== WeakMapPoly)\n\t\t? setPrototypeOf(new WeakMap(), getPrototypeOf(this)) : this;\n\n\tif (isValue(iterable)) {\n\t\tif (!isArray(iterable)) iterable = getIterator(iterable);\n\t}\n\tdefineProperty(self, \"__weakMapData__\", d(\"c\", \"$weakMap$\" + randomUniq()));\n\tif (!iterable) return self;\n\tforOf(iterable, function (val) {\n\t\tensureValue(val);\n\t\tself.set(val[0], val[1]);\n\t});\n\treturn self;\n};\n\nif (isNative) {\n\tif (setPrototypeOf) setPrototypeOf(WeakMapPoly, WeakMap);\n\tWeakMapPoly.prototype = Object.create(WeakMap.prototype, { constructor: d(WeakMapPoly) });\n}\n\nObject.defineProperties(WeakMapPoly.prototype, {\n\tdelete: d(function (key) {\n\t\tif (objHasOwnProperty.call(object(key), this.__weakMapData__)) {\n\t\t\tdelete key[this.__weakMapData__];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}),\n\tget: d(function (key) {\n\t\tif (!objHasOwnProperty.call(object(key), this.__weakMapData__)) return undefined;\n\t\treturn key[this.__weakMapData__];\n\t}),\n\thas: d(function (key) {\n\t\treturn objHasOwnProperty.call(object(key), this.__weakMapData__);\n\t}),\n\tset: d(function (key, value) {\n\t\tdefineProperty(object(key), this.__weakMapData__, d(\"c\", value));\n\t\treturn this;\n\t}),\n\ttoString: d(function () {\n\t\treturn \"[object WeakMap]\";\n\t})\n});\ndefineProperty(WeakMapPoly.prototype, toStringTagSymbol, d(\"c\", \"WeakMap\"));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n","module.exports = isPromise;\nmodule.exports.default = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"finally\"] = function (callback) {\n  if (typeof callback !== 'function') {\n    return this;\n  }\n  var p = this.constructor;\n  return this.then(resolve, reject);\n\n  function resolve(value) {\n    function yes () {\n      return value;\n    }\n    return p.resolve(callback()).then(yes);\n  }\n  function reject(reason) {\n    function no () {\n      throw reason;\n    }\n    return p.resolve(callback()).then(no);\n  }\n};\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./src/each'),\n    escapeRegExp = require('./src/escapeRegExp'),\n    extend = require('./src/extend'),\n    filter = require('./src/filter'),\n    forOwn = require('./src/forOwn'),\n    isArray = require('./src/isArray'),\n    isBoolean = require('./src/isBoolean'),\n    isFunction = require('./src/isFunction'),\n    isNumber = require('./src/isNumber'),\n    isPlainObject = require('./src/isPlainObject'),\n    isString = require('./src/isString'),\n    map = require('./src/map');\n\nmodule.exports = {\n    each: each,\n    escapeRegExp: escapeRegExp,\n    extend: extend(Object),\n    filter: filter,\n    forOwn: forOwn,\n    isArray: isArray(Array),\n    isBoolean: isBoolean,\n    isFunction: isFunction,\n    isNumber: isNumber,\n    isPlainObject: isPlainObject,\n    isString: isString,\n    map: map(Array)\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar hasOwn = {}.hasOwnProperty,\n    isArray = require('./isArray')(Array);\n\nmodule.exports = function (object, iterator, thisArg) {\n    var key,\n        length;\n\n    if (!object) {\n        return;\n    }\n\n    if (isArray(object) || hasOwn.call(object, 'length')) {\n        for (key = 0, length = object.length; key < length; key++) {\n            if (iterator.call(thisArg, object[key], key, object) === false) {\n                break;\n            }\n        }\n\n        return;\n    }\n\n    /*jshint forin: false */\n    for (key in object) {\n        if (hasOwn.call(object, key)) {\n            if (iterator.call(thisArg, object[key], key, object) === false) {\n                break;\n            }\n        }\n    }\n};\n","'use strict';\n\nvar REGEX = /[|\\\\{}()[\\]^$+*?.]/g;\n\n// From https://github.com/sindresorhus/escape-string-regexp/blob/master/index.js\nmodule.exports = function (string) {\n    if (typeof string !== 'string') {\n        throw new TypeError('Expected a string');\n    }\n\n    return string.replace(REGEX,  '\\\\$&');\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./each'),\n    forOwn = require('./forOwn');\n\nmodule.exports = function (Object) {\n    return Object.assign || function (object) {\n        var sources = [].slice.call(arguments, 1);\n\n        each(sources, function (source) {\n            forOwn(source, function (value, key) {\n                object[key] = value;\n            });\n        });\n\n        return object;\n    };\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./each');\n\nmodule.exports = function (collection, iteratee, thisArg) {\n    var result = [];\n\n    each(collection, function (value, key) {\n        if (iteratee.call(thisArg, value, key, collection)) {\n            result.push(value);\n        }\n    });\n\n    return result;\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar hasOwn = {}.hasOwnProperty;\n\nmodule.exports = function (object, iterator, thisArg) {\n    var key;\n\n    /*jshint forin: false */\n    for (key in object) {\n        if (hasOwn.call(object, key)) {\n            if (iterator.call(thisArg, object[key], key, object) === false) {\n                break;\n            }\n        }\n    }\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar REGEX = /\\[object ([^\\]]+)\\]/;\n\nmodule.exports = function (object) {\n    return {}.toString.call(object).match(REGEX)[1];\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar getType = require('./getType');\n\nmodule.exports = function (Array) {\n    return Array.isArray || function (object) {\n        return getType(object) === 'Array';\n    };\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'boolean';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'function';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'number';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar getType = require('./getType');\n\nmodule.exports = function (object) {\n    return getType(object) === 'Object';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (object) {\n    return typeof object === 'string';\n};\n","/*\n * Microdash - Tiny utilities for Node and the browser\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/microdash\n *\n * Released under the MIT license\n * https://github.com/asmblah/microdash/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar each = require('./each'),\n    map = Array.prototype.map;\n\n/**\n * Faster implementation using native Array.map(...) where supported\n *\n * @param {Array} collection\n * @param {Function} iteratee\n * @param {*} thisArg\n * @return {Array}\n */\nfunction fasterMap(collection, iteratee, thisArg) {\n    return collection !== null && typeof collection !== 'undefined' ?\n        map.call(collection, iteratee.bind(thisArg)) :\n        [];\n}\n\n/**\n * Manual implementation where Array.map(...) is not supported\n *\n * @param {Array} collection\n * @param {Function} iteratee\n * @param {*} thisArg\n * @return {Array}\n */\nfunction slowerMap(collection, iteratee, thisArg) {\n    var result = [];\n\n    each(collection, function (value, key) {\n        result[key] = iteratee.call(thisArg, value, key, collection);\n    });\n\n    return result;\n}\n\nmodule.exports = function (Array) {\n    return Array.prototype.map ? fasterMap : slowerMap;\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*\n * Pauser - Wrapper for optional Pausable usage\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/pauser/\n *\n * Released under the MIT license\n * https://github.com/asmblah/pauser/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar Wrapper = require('./src/Wrapper');\n\nmodule.exports = function (args, wrapper, options) {\n    return new Wrapper(args, wrapper, options);\n};\n","/*\n * Pauser - Wrapper for optional Pausable usage\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/pauser/\n *\n * Released under the MIT license\n * https://github.com/asmblah/pauser/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction Wrapper(args, fn, options) {\n    this.args = args;\n    this.evaluatedAsync = false;\n    this.evaluatedSync = false;\n    this.asyncReturnValue = null;\n    this.fn = fn;\n    this.options = options;\n    this.syncReturnValue = null;\n}\n\n_.extend(Wrapper.prototype, {\n    /**\n     * Executes wrapper asynchronously via the Pausable library.\n     *\n     * @param {Pausable} pausable\n     * @returns {*}\n     */\n    async: function (pausable) {\n        var args,\n            wrapper = this;\n\n        if (wrapper.evaluatedAsync) {\n            return wrapper.asyncReturnValue;\n        }\n\n        // Recursively transpile any arguments to the function that are themselves Wrappers\n        args = _.map(wrapper.args, function (arg) {\n            if (arg instanceof Wrapper) {\n                return arg.async(pausable);\n            }\n\n            return arg;\n        });\n\n        wrapper.asyncReturnValue = pausable.executeSync(args, wrapper.fn, wrapper.options);\n        wrapper.evaluatedAsync = true;\n\n        return wrapper.asyncReturnValue;\n    },\n\n    /**\n     * Executes wrapper synchronously when the Pausable library is not available.\n     *\n     * @returns {*}\n     */\n    sync: function () {\n        var args,\n            wrapper = this;\n\n        if (wrapper.evaluatedSync) {\n            return wrapper.syncReturnValue;\n        }\n\n        // Recursively evaluate any arguments to the function that are themselves Wrappers\n        args = _.map(wrapper.args, function (arg) {\n            if (arg instanceof Wrapper) {\n                return arg.sync();\n            }\n\n            return arg;\n        });\n\n        wrapper.syncReturnValue = wrapper.fn.apply(null, args);\n        wrapper.evaluatedSync = true;\n\n        return wrapper.syncReturnValue;\n    }\n});\n\nmodule.exports = Wrapper;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar Exception = require('./src/Error/Exception'),\n    PHPError = require('./src/Error/PHPError'),\n    PHPFatalError = require('./src/Error/PHPFatalError'),\n    PHPParseError = require('./src/Error/PHPParseError'),\n    Translator = require('./src/Translator');\n\nmodule.exports = {\n    Exception: Exception,\n    PHPError: PHPError,\n    PHPFatalError: PHPFatalError,\n    PHPParseError: PHPParseError,\n    Translator: Translator\n};\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util');\n\nfunction Exception(message) {\n    this.message = message;\n}\n\nutil.inherits(Exception, Error);\n\n_.extend(Exception.prototype, {\n    'type': 'Exception'\n});\n\nmodule.exports = Exception;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Exception = require('./Exception');\n\n/**\n * Represents any kind of PHP error (warning, notice, parse, fatal)\n *\n * @param {string} level\n * @param {string} message\n * @param {string|null=} filePath\n * @param {number|null=} lineNumber\n * @constructor\n */\nfunction PHPError(level, message, filePath, lineNumber) {\n    // Form a readable string for the error, for when the library is used outside PHPCore\n    // (as inside PHPCore, these errors will be intercepted and inspected using the getter methods below)\n    Exception.call(\n        this,\n        'PHP ' + level + ': ' + message + ' in ' + (filePath || '(unknown)') + ' on line ' + (lineNumber || '(unknown)')\n    );\n\n    /**\n     * @type {string|null} Path to the file the error occurred in\n     */\n    this.filePath = filePath;\n    /**\n     * @type {string}\n     */\n    this.level = level;\n    /**\n     * @type {number|null} Which line the error occurred on, if known\n     */\n    this.lineNumber = lineNumber;\n    /**\n     * @type {string} Original message without level prefix\n     */\n    this.originalMessage = message;\n}\n\nutil.inherits(PHPError, Exception);\n\n_.extend(PHPError, {\n    E_DEPRECATED: 'Deprecated',\n    E_ERROR: 'Fatal error',\n    E_NOTICE: 'Notice',\n    E_PARSE: 'Parse error',\n    E_STRICT: 'Strict standards',\n    E_WARNING: 'Warning'\n});\n\n_.extend(PHPError.prototype, {\n    /**\n     * Fetches the PHP module file the error occurred in if known, otherwise returns null\n     *\n     * @return {string|null}\n     */\n    getFilePath: function () {\n        return this.filePath;\n    },\n\n    /**\n     * Fetches the level of the error (E_DEPRECATED, E_WARNING etc.)\n     *\n     * @return {string}\n     */\n    getLevel: function () {\n        return this.level;\n    },\n\n    /**\n     * Fetches the line the error occurred on if known, otherwise returns null\n     *\n     * @return {number|null}\n     */\n    getLineNumber: function () {\n        return this.lineNumber;\n    },\n\n    /**\n     * Fetches the message for the error, without the level prefix\n     *\n     * @return {string}\n     */\n    getMessage: function () {\n        return this.originalMessage;\n    }\n});\n\nmodule.exports = PHPError;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar util = require('util'),\n    PHPError = require('./PHPError');\n\n/**\n * Represents a fatal PHP error\n *\n * @param {string} message\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction PHPFatalError(message, filePath, lineNumber) {\n    PHPError.call(this, PHPError.E_ERROR, message, filePath, lineNumber);\n}\n\nutil.inherits(PHPFatalError, PHPError);\n\nmodule.exports = PHPFatalError;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar util = require('util'),\n    PHPError = require('./PHPError');\n\n/**\n * Represents a PHP parse error\n *\n * @param {string} message\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction PHPParseError(message, filePath, lineNumber) {\n    PHPError.call(this, PHPError.E_PARSE, message, filePath, lineNumber);\n}\n\nutil.inherits(PHPParseError, PHPError);\n\nmodule.exports = PHPParseError;\n","/*\n * PHPCommon - Common tools for PHP environments\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcommon/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcommon/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    DEFAULT_LOCALE = 'en_GB',\n    hasOwn = {}.hasOwnProperty,\n    templateString = require('template-string');\n\n/**\n * Stores translations for internal strings in different locales\n *\n * @constructor\n */\nfunction Translator() {\n    /**\n     * @type {Object.<string, Object.<string, string>>}\n     */\n    this.cataloguesByLocale = {};\n    /**\n     * @type {string}\n     */\n    this.currentLocale = DEFAULT_LOCALE;\n}\n\n_.extend(Translator.prototype, {\n    /**\n     * Adds a translation for a specific key within a given locale\n     *\n     * @param {string} locale e.g. en_GB\n     * @param {string} key e.g. error.my_error.my_sub_msg\n     * @param {string} translation\n     */\n    addTranslation: function (locale, key, translation) {\n        var translator = this;\n\n        if (!hasOwn.call(translator.cataloguesByLocale, locale)) {\n            translator.cataloguesByLocale[locale] = {};\n        }\n\n        this.cataloguesByLocale[locale][key] = translation;\n    },\n\n    /**\n     * Adds multiple translations, potentially across multiple locales' catalogues\n     *\n     * @param {Object.<string, object>} structure\n     */\n    addTranslations: function (structure) {\n        var translator = this;\n\n        function add(locale, keyParts, data) {\n            if (_.isPlainObject(data)) {\n                _.forOwn(data, function (data, keyPart) {\n                    add(locale, keyParts.concat([keyPart]), data);\n                });\n            } else {\n                translator.addTranslation(locale, keyParts.join('.'), data);\n            }\n        }\n\n        _.forOwn(structure, function (data, locale) {\n            add(locale, [], data);\n        });\n    },\n\n    /**\n     * Selects which catalogue of messages should be used for translation by locale\n     *\n     * @param {string} locale\n     */\n    setLocale: function (locale) {\n        this.currentLocale = locale;\n    },\n\n    /**\n     * Translates the given key for the current locale (falling back to the default locale if not defined)\n     * and fills in any placeholders with the given variables\n     *\n     * @param {string} key\n     * @param {Object.<string, string>=} placeholderVariables\n     * @returns {string}\n     * @throws {Error} When the translation is not defined for the current nor fallback locales\n     */\n    translate: function (key, placeholderVariables) {\n        var translation,\n            translator = this;\n\n        if (hasOwn.call(translator.cataloguesByLocale, translator.currentLocale) &&\n            hasOwn.call(translator.cataloguesByLocale[translator.currentLocale], key)\n        ) {\n            // The translation is defined for the current locale - use it\n            translation = translator.cataloguesByLocale[translator.currentLocale][key];\n        } else {\n            // Fall back to the default locale's catalogue\n\n            if (!hasOwn.call(translator.cataloguesByLocale[DEFAULT_LOCALE], key)) {\n                throw new Error(\n                    'Translation \"' + key + '\" is not defined for current locale \"' + translator.currentLocale +\n                    '\" nor the default locale \"' + DEFAULT_LOCALE + '\"'\n                );\n            }\n\n            translation = translator.cataloguesByLocale[DEFAULT_LOCALE][key];\n        }\n\n        return templateString(translation, placeholderVariables);\n    }\n});\n\nmodule.exports = Translator;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/phpconfig/dist sync recursive\";","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEmpty(subConfig) {\n    return Object.keys(subConfig).length === 0;\n}\n/**\n * @inheritDoc\n */\nvar Config = /** @class */ (function () {\n    function Config(requirer, exporter, rootConfig, ConfigSetClass) {\n        this.requirer = requirer;\n        this.exporter = exporter;\n        this.rootConfig = rootConfig;\n        this.ConfigSetClass = ConfigSetClass;\n    }\n    /**\n     * @inheritDoc\n     */\n    Config.prototype.exportLibrary = function (mainLibraryName, subLibraryName) {\n        return this.exporter.exportLibrary(this.rootConfig, mainLibraryName, subLibraryName);\n    };\n    /**\n     * @inheritDoc\n     */\n    Config.prototype.getConfigsForLibrary = function (mainLibraryName, subLibraryName) {\n        var _this = this;\n        var libraryConfig = this.exporter.exportLibrary(this.rootConfig, mainLibraryName, subLibraryName);\n        var configs = libraryConfig.pluginConfigFilePaths.map(function (path) {\n            var _a;\n            var pluginConfig = (_a = _this.requirer.require(path)) !== null && _a !== void 0 ? _a : {};\n            if (typeof pluginConfig !== 'object') {\n                throw new Error(subLibraryName\n                    ? \"Imported config for sub-library \\\"\" + subLibraryName + \"\\\" under main library \\\"\" + mainLibraryName + \"\\\" should be an object\"\n                    : \"Imported config for main library \\\"\" + mainLibraryName + \"\\\" should be an object\");\n            }\n            return pluginConfig;\n        });\n        if (!isEmpty(libraryConfig.topLevelConfig)) {\n            configs.push(libraryConfig.topLevelConfig);\n        }\n        return new this.ConfigSetClass(configs);\n    };\n    return Config;\n}());\nexports.default = Config;\n//# sourceMappingURL=Config.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hasOwn = {}.hasOwnProperty;\n/**\n * Fetches the config for the given library from the root config\n *\n * @param {RootConfig} allConfig\n * @param {string} mainLibraryName\n * @param {string=} subLibraryName\n * @returns {SubConfig}\n */\nfunction getLibraryConfigFromRoot(allConfig, mainLibraryName, subLibraryName) {\n    var _a, _b, _c, _d;\n    var mainConfig = (_b = ((_a = allConfig.settings) !== null && _a !== void 0 ? _a : {})[mainLibraryName]) !== null && _b !== void 0 ? _b : {};\n    if (typeof mainConfig !== 'object') {\n        throw new Error(\"Config for main library \\\"\" + mainLibraryName + \"\\\" should be an object\");\n    }\n    if (subLibraryName == null) {\n        return mainConfig;\n    }\n    var subConfig = (_d = ((_c = allConfig.settings) !== null && _c !== void 0 ? _c : {})[subLibraryName]) !== null && _d !== void 0 ? _d : null;\n    if (subConfig === null) {\n        subConfig = {};\n    }\n    // Config for the sub-library that is specified under the main library\n    // should override settings for the sub-library that are set outside\n    return Object.assign({}, subConfig, mainConfig[subLibraryName]);\n}\n/**\n * Fetches the config for the given main library from a plugin config\n *\n * @param {PluginConfig} pluginConfig\n * @param {string} mainLibraryName\n * @returns {string[]}\n */\nfunction getMainLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName) {\n    var _a, _b;\n    var mainConfig = (_a = pluginConfig[mainLibraryName]) !== null && _a !== void 0 ? _a : null;\n    if (mainConfig === null) {\n        // No config is specified for the main library by this plugin\n        return [];\n    }\n    if (typeof mainConfig === 'string') {\n        // Main config is provided via the simple path-string syntax;\n        // the main library config should be required from the given path\n        return [mainConfig];\n    }\n    if (typeof mainConfig === 'object') {\n        // Main config is provided via the extended object syntax;\n        // the main library config (if given) should be required from the path\n        // given as a property of this object with the main library's name\n        var pathToMainConfig = (_b = mainConfig[mainLibraryName]) !== null && _b !== void 0 ? _b : null;\n        if (pathToMainConfig === null) {\n            // Main library's extended syntax does not specify anything for itself\n            return [];\n        }\n        if (typeof pathToMainConfig !== 'string') {\n            throw new Error(\"Value for main library extended config path \\\"\" + mainLibraryName + \".\" + mainLibraryName + \"\\\" should be a path\");\n        }\n        return [pathToMainConfig];\n    }\n    throw new Error(\"Value for main library \\\"\" + mainLibraryName + \"\\\" should be a path or object\");\n}\n/**\n * Fetches the config for the given sub-library from a plugin config\n *\n * @param {PluginConfig} pluginConfig\n * @param {string} mainLibraryName\n * @param {string} subLibraryName\n * @returns {string[]}\n */\nfunction getSubLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName) {\n    var _a, _b;\n    var isolatedPathToSubLibraryConfig = (_a = pluginConfig[subLibraryName]) !== null && _a !== void 0 ? _a : null;\n    var pathToSubLibraryConfigUnderMain = null;\n    var mainLibraryConfig = (_b = pluginConfig[mainLibraryName]) !== null && _b !== void 0 ? _b : {};\n    if (hasOwn.call(pluginConfig, subLibraryName)) {\n        if (typeof isolatedPathToSubLibraryConfig !== 'string') {\n            throw new Error(\"Isolated value for sub-library \\\"\" + subLibraryName + \"\\\" should be a path\");\n        }\n    }\n    if (typeof mainLibraryConfig === 'object') {\n        // Main config is provided via the extended object syntax;\n        // the sub-library config (if given) should be required from the path\n        // given as a property of this object with the sub-library's name\n        if (hasOwn.call(mainLibraryConfig, subLibraryName)) {\n            if (typeof mainLibraryConfig[subLibraryName] !== 'string') {\n                throw new Error(\"Value for sub-library under \\\"\" + mainLibraryName + \".\" + subLibraryName + \"\\\" should be a path\");\n            }\n            pathToSubLibraryConfigUnderMain = mainLibraryConfig[subLibraryName];\n        }\n    }\n    else if (typeof mainLibraryConfig !== 'string') {\n        throw new Error(\"Value for main library extended config path \\\"\" + mainLibraryName + \".\" + mainLibraryName + \"\\\" should be a path or object\");\n    }\n    var paths = [];\n    if (isolatedPathToSubLibraryConfig !== null) {\n        paths.push(isolatedPathToSubLibraryConfig);\n    }\n    // Sub-library config given under main should take precedence,\n    // so that defaults may be specified in the \"isolated\" config\n    // and then overridden here\n    if (pathToSubLibraryConfigUnderMain !== null) {\n        paths.push(pathToSubLibraryConfigUnderMain);\n    }\n    return paths;\n}\n/**\n * Fetches the paths to plugins for a given library from a single plugin config\n *\n * @param {PluginConfig} pluginConfig\n * @param {string} mainLibraryName\n * @param {string=} subLibraryName\n * @returns {string[]}\n */\nfunction getLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName) {\n    return subLibraryName\n        ? getSubLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName)\n        : getMainLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName);\n}\n/**\n * Fetches the paths to plugins for a given library from a set of plugin configs\n *\n * @param {PluginConfig[]} pluginConfigs\n * @param {string} mainLibraryName\n * @param {string} subLibraryName\n * @returns {string[]}\n */\nfunction getLibraryConfigPathsFromPlugins(pluginConfigs, mainLibraryName, subLibraryName) {\n    var libraryConfigPaths = [];\n    for (var _i = 0, pluginConfigs_1 = pluginConfigs; _i < pluginConfigs_1.length; _i++) {\n        var pluginConfig = pluginConfigs_1[_i];\n        var pluginSubLibraryConfigPaths = getLibraryConfigPathsFromPlugin(pluginConfig, mainLibraryName, subLibraryName);\n        libraryConfigPaths.push.apply(libraryConfigPaths, pluginSubLibraryConfigPaths);\n    }\n    return libraryConfigPaths;\n}\n/**\n * @inheritDoc\n */\nvar ConfigExporter = /** @class */ (function () {\n    function ConfigExporter(serialisationChecker) {\n        this.serialisationChecker = serialisationChecker;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigExporter.prototype.exportLibrary = function (rootConfig, mainLibraryName, subLibraryName) {\n        var libraryName = subLibraryName !== null && subLibraryName !== void 0 ? subLibraryName : mainLibraryName;\n        var topLevelConfig = getLibraryConfigFromRoot(rootConfig, mainLibraryName, subLibraryName);\n        if (!this.serialisationChecker.isSerialisable(topLevelConfig)) {\n            throw new Error(\"Top-level config for library \\\"\" + libraryName + \"\\\" is not serialisable\");\n        }\n        return {\n            libraryName: libraryName,\n            topLevelConfig: topLevelConfig,\n            pluginConfigFilePaths: rootConfig.plugins\n                ? getLibraryConfigPathsFromPlugins(rootConfig.plugins, mainLibraryName, subLibraryName)\n                : [],\n        };\n    };\n    return ConfigExporter;\n}());\nexports.default = ConfigExporter;\n//# sourceMappingURL=ConfigExporter.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @inheritDoc\n */\nvar ConfigImporter = /** @class */ (function () {\n    function ConfigImporter(ConfigSetClass) {\n        this.ConfigSetClass = ConfigSetClass;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigImporter.prototype.importLibrary = function (exportedLibraryConfig) {\n        return new this.ConfigSetClass(exportedLibraryConfig.configs);\n    };\n    return ConfigImporter;\n}());\nexports.default = ConfigImporter;\n//# sourceMappingURL=ConfigImporter.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A type predicate for determining at runtime whether a valid root config was given.\n *\n * @param {RootConfig | SubConfig} config\n * @returns {boolean}\n */\nfunction isValidConfig(config) {\n    return (Object.keys(config).filter(function (settingName) {\n        // Only the keys \"plugins\" and/or \"settings\" are allowed\n        return settingName !== 'plugins' && settingName !== 'settings';\n    }).length === 0);\n}\n/**\n * @inheritDoc\n */\nvar ConfigLoader = /** @class */ (function () {\n    function ConfigLoader(requirer, loader, exporter, ConfigClass, ConfigSetClass) {\n        this.requirer = requirer;\n        this.loader = loader;\n        this.exporter = exporter;\n        this.ConfigClass = ConfigClass;\n        this.ConfigSetClass = ConfigSetClass;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigLoader.prototype.getConfig = function (searchPaths) {\n        var rootConfig = this.loader.load(searchPaths);\n        if (!isValidConfig(rootConfig)) {\n            throw new Error('Given root config is invalid: may only specify \"plugins\" or \"settings\" or both');\n        }\n        return new this.ConfigClass(this.requirer, this.exporter, rootConfig, this.ConfigSetClass);\n    };\n    return ConfigLoader;\n}());\nexports.default = ConfigLoader;\n//# sourceMappingURL=ConfigLoader.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hasOwn = {}.hasOwnProperty;\n/**\n * @inheritDoc\n */\nvar ConfigSet = /** @class */ (function () {\n    function ConfigSet(configs) {\n        this.configs = configs;\n    }\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.concatArrays = function (settingName) {\n        var concatenatedArray = [];\n        for (var _i = 0, _a = this.configs; _i < _a.length; _i++) {\n            var _b = settingName, rawSettingValue = _a[_i][_b];\n            var settingValue = rawSettingValue !== null && rawSettingValue !== void 0 ? rawSettingValue : [];\n            if (!Array.isArray(settingValue)) {\n                throw new Error(\"Invalid value for setting \" + settingName + \": all values must be arrays but \" + typeof settingValue + \" (\" + settingValue + \") given\");\n            }\n            concatenatedArray.push.apply(concatenatedArray, settingValue);\n        }\n        return concatenatedArray;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.getBoolean = function (settingName, defaultValue) {\n        if (defaultValue === void 0) { defaultValue = false; }\n        // TODO: Optimise by only extracting values for this specific setting from each config.\n        //       For now this is assumed to be efficient enough (as deep and complex config trees\n        //       are unlikely)\n        var mergedSettingValues = this.mergeAll();\n        if (!hasOwn.call(mergedSettingValues, settingName)) {\n            // Setting has no value specified in any config\n            return defaultValue;\n        }\n        var settingValue = mergedSettingValues[settingName];\n        if (typeof settingValue !== 'boolean') {\n            throw new Error(\"Expected value for setting \\\"\" + settingName + \"\\\" to be a boolean but it was a \" + typeof settingValue);\n        }\n        return settingValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.mergeAll = function () {\n        var mergedConfig = {};\n        var doMerge = function (config) {\n            var _a;\n            var _b;\n            for (var _i = 0, _c = Object.keys(config); _i < _c.length; _i++) {\n                var settingName = _c[_i];\n                var settingValue = config[settingName];\n                if (settingValue === null || typeof settingValue !== 'object') {\n                    // Latest setting is not a non-null object: this one should replace any value completely\n                    mergedConfig[settingName] = settingValue;\n                    continue;\n                }\n                if (Array.isArray(settingValue)) {\n                    // Latest setting value is an array\n                    if (Array.isArray(mergedConfig[settingName])) {\n                        // Setting in work area is also an array: just concatenate onto the end\n                        (_a = mergedConfig[settingName]).push.apply(_a, settingValue);\n                    }\n                    else {\n                        // Setting in work area is not an array: this one should replace the value completely\n                        mergedConfig[settingName] = settingValue;\n                    }\n                }\n                else {\n                    // Latest setting is an object: merge it onto the existing one (if any)\n                    Object.assign((_b = mergedConfig[settingName]) !== null && _b !== void 0 ? _b : (mergedConfig[settingName] = {}), settingValue);\n                }\n            }\n        };\n        for (var _i = 0, _a = this.configs; _i < _a.length; _i++) {\n            var config = _a[_i];\n            doMerge(config);\n        }\n        return mergedConfig;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.mergeObjects = function (settingName) {\n        var mergedConfig = {};\n        for (var _i = 0, _a = this.configs; _i < _a.length; _i++) {\n            var _b = settingName, rawSettingValue = _a[_i][_b];\n            var settingValue = rawSettingValue !== null && rawSettingValue !== void 0 ? rawSettingValue : {};\n            if (typeof settingValue !== 'object') {\n                throw new Error(\"Invalid value for setting \" + settingName + \": all values must be objects but \" + typeof settingValue + \" (\" + settingValue + \") given\");\n            }\n            Object.assign(mergedConfig, settingValue);\n        }\n        return mergedConfig;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.mergeUniqueObjects = function (settingName) {\n        var _a;\n        var mergedConfig = {};\n        for (var _i = 0, _b = this.configs; _i < _b.length; _i++) {\n            var config = _b[_i];\n            var settingValue = void 0;\n            if (settingName) {\n                // A setting was specified: merge all values for that setting\n                var rawSettingValue = config[settingName];\n                settingValue = (_a = rawSettingValue) !== null && _a !== void 0 ? _a : {};\n                if (typeof settingValue !== 'object') {\n                    throw new Error(\"Invalid value for setting \" + settingName + \": all values must be objects but \" + typeof settingValue + \" (\" + settingValue + \") given\");\n                }\n            }\n            else {\n                // No setting was specified: merge the configs themselves\n                settingValue = config;\n            }\n            for (var _c = 0, _d = Object.keys(settingValue); _c < _d.length; _c++) {\n                var propertyName = _d[_c];\n                if (hasOwn.call(mergedConfig, propertyName) &&\n                    // Allow a setting to be overridden with the exact same value\n                    // (eg. where multiple plugins are used that define the same flag setting)\n                    mergedConfig[propertyName] !== settingValue[propertyName]) {\n                    var newValue = settingValue[propertyName];\n                    var propertyOrSettingName = settingName !== null && settingName !== void 0 ? settingName : propertyName;\n                    var propertyOrSetting = settingName\n                        ? \"property \\\"\" + propertyName + \"\\\"\"\n                        : 'setting';\n                    throw new Error(\"Invalid value for setting \" + propertyOrSettingName + \": all objects must be unique but \" + propertyOrSetting + \" has both value (\" + mergedConfig[propertyName] + \") and value (\" + newValue + \")\");\n                }\n            }\n            Object.assign(mergedConfig, settingValue);\n        }\n        return mergedConfig;\n    };\n    /**\n     * @inheritDoc\n     */\n    ConfigSet.prototype.toArray = function () {\n        return this.configs;\n    };\n    return ConfigSet;\n}());\nexports.default = ConfigSet;\n//# sourceMappingURL=ConfigSet.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path_1 = require(\"path\");\n/**\n * @inheritDoc\n */\nvar Loader = /** @class */ (function () {\n    function Loader(existsSync, requirer, fileName) {\n        this.existsSync = existsSync;\n        this.requirer = requirer;\n        this.fileName = fileName;\n    }\n    /**\n     * @inheritDoc\n     */\n    Loader.prototype.load = function (searchDirectories) {\n        for (var _i = 0, searchDirectories_1 = searchDirectories; _i < searchDirectories_1.length; _i++) {\n            var searchDirectory = searchDirectories_1[_i];\n            var searchPath = path_1.join(searchDirectory, this.fileName);\n            if (this.existsSync(searchPath)) {\n                return this.requirer.require(searchPath);\n            }\n        }\n        return {};\n    };\n    return Loader;\n}());\nexports.default = Loader;\n//# sourceMappingURL=Loader.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @inheritDoc\n */\nvar Requirer = /** @class */ (function () {\n    function Requirer(nodeRequire) {\n        this.nodeRequire = nodeRequire;\n    }\n    /**\n     * @inheritDoc\n     */\n    Requirer.prototype.require = function (path) {\n        return this.nodeRequire(path);\n    };\n    return Requirer;\n}());\nexports.default = Requirer;\n//# sourceMappingURL=Requirer.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @inheritDoc\n */\nvar SerialisationChecker = /** @class */ (function () {\n    function SerialisationChecker() {\n    }\n    /**\n     * @inheritDoc\n     */\n    SerialisationChecker.prototype.isSerialisable = function (object) {\n        return this.isObjectSerialisable(object);\n    };\n    SerialisationChecker.prototype.isObjectSerialisable = function (object, objectsSeen) {\n        if (objectsSeen === void 0) { objectsSeen = []; }\n        if (objectsSeen.includes(object)) {\n            return false;\n        }\n        objectsSeen = objectsSeen.concat([object]);\n        if (object instanceof Function || object instanceof RegExp) {\n            return false;\n        }\n        if (Array.isArray(object)) {\n            for (var _i = 0, object_1 = object; _i < object_1.length; _i++) {\n                var element = object_1[_i];\n                if (!this.isValueSerialisable(element, objectsSeen)) {\n                    return false;\n                }\n            }\n        }\n        for (var _a = 0, _b = Object.keys(object); _a < _b.length; _a++) {\n            var settingName = _b[_a];\n            if (!this.isValueSerialisable(object[settingName], objectsSeen)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    SerialisationChecker.prototype.isValueSerialisable = function (value, objectsSeen) {\n        if (objectsSeen === void 0) { objectsSeen = []; }\n        if (value == null ||\n            typeof value === 'boolean' ||\n            typeof value === 'number' ||\n            typeof value === 'string') {\n            return true;\n        }\n        if (typeof value === 'object') {\n            return this.isObjectSerialisable(value, objectsSeen);\n        }\n        return false;\n    };\n    return SerialisationChecker;\n}());\nexports.default = SerialisationChecker;\n//# sourceMappingURL=SerialisationChecker.js.map","\"use strict\";\n/*\n * PHPConfig - Loads Uniter's PHP configuration\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpconfig/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConfigLoader = exports.configImporter = void 0;\nvar Config_1 = require(\"./Config\");\nvar ConfigExporter_1 = require(\"./ConfigExporter\");\nvar ConfigImporter_1 = require(\"./ConfigImporter\");\nvar ConfigLoader_1 = require(\"./ConfigLoader\");\nvar ConfigSet_1 = require(\"./ConfigSet\");\nvar Loader_1 = require(\"./Loader\");\nvar Requirer_1 = require(\"./Requirer\");\nvar SerialisationChecker_1 = require(\"./SerialisationChecker\");\nvar UNIFIED_CONFIG_FILE_NAME = 'uniter.config.js';\nvar requirer = new Requirer_1.default(require);\nvar createConfigLoader = function (existsSync) {\n    return new ConfigLoader_1.default(requirer, new Loader_1.default(existsSync, requirer, UNIFIED_CONFIG_FILE_NAME), new ConfigExporter_1.default(new SerialisationChecker_1.default()), Config_1.default, ConfigSet_1.default);\n};\nexports.createConfigLoader = createConfigLoader;\nvar configImporter = new ConfigImporter_1.default(ConfigSet_1.default);\nexports.configImporter = configImporter;\n//# sourceMappingURL=index.js.map","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * \"Promise-synchronous\" (psync) mode entrypoint\n *\n * Allows the public API to be Promise-based even when not using Pausable,\n * so that switching to/from async mode does not require changes to the consuming application.\n */\n\n'use strict';\n\nvar debugFormatterInstaller = require('./src/shared/debugFormatterInstaller'),\n    runtimeFactory = require('./src/shared/runtimeFactory');\n\ndebugFormatterInstaller.install();\n\nmodule.exports = runtimeFactory.create('psync');\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Scope} scope\n * @param {NamespaceScope} namespaceScope\n * @param {Value[]} args\n * @param {Class|null} newStaticClass\n * @constructor\n */\nfunction Call(scope, namespaceScope, args, newStaticClass) {\n    /**\n     * @type {Value[]}\n     */\n    this.args = args;\n    /**\n     * @type {function|null}\n     */\n    this.finder = null;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n    /**\n     * @type {Class|null}\n     */\n    this.newStaticClass = newStaticClass;\n    /**\n     * @type {Scope}\n     */\n    this.scope = scope;\n}\n\n_.extend(Call.prototype, {\n    /**\n     * Fetches the current class for the call, if any\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        return this.scope.getCurrentClass();\n    },\n\n    /**\n     * Fetches the path to the file this call was made from\n     *\n     * @returns {string|null}\n     */\n    getFilePath: function () {\n        return this.namespaceScope.getFilePath();\n    },\n\n    /**\n     * Fetches the Value objects passed as arguments to the called function\n     *\n     * @returns {Value[]}\n     */\n    getFunctionArgs: function () {\n        return this.args;\n    },\n\n    /**\n     * Fetches the name of the current function\n     *\n     * @returns {string}\n     */\n    getFunctionName: function () {\n        return this.scope.getTraceFrameName();\n    },\n\n    /**\n     * Fetches the number of the last line executed inside this call's scope\n     *\n     * @returns {number|null}\n     */\n    getLastLine: function () {\n        var call = this;\n\n        if (!call.finder) {\n            return null;\n        }\n\n        return call.finder();\n    },\n\n    /**\n     * Fetches the scope inside the called function\n     *\n     * @returns {Scope}\n     */\n    getScope: function () {\n        return this.scope;\n    },\n\n    /**\n     * Fetches the static class introduced by this call's scope. If null,\n     * the call was a forwarding call, and so the parent call's static class should be used\n     *\n     * @returns {Class|null}\n     */\n    getStaticClass: function () {\n        var call = this,\n            thisObject = call.scope.getThisObject();\n\n        if (thisObject && thisObject.getType() !== 'null') {\n            return thisObject.getClass();\n        }\n\n        return call.newStaticClass;\n    },\n\n    /**\n     * Fetches the ObjectValue that is the current `$this` object, if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        return this.scope.getThisObject();\n    },\n\n    /**\n     * Fetches the path to the file this call was made from, suitable for stack traces (so without any eval context)\n     *\n     * @returns {string|null}\n     */\n    getTraceFilePath: function () {\n        var call = this;\n\n        return call.scope.getFilePath(call.namespaceScope.getFilePath());\n    },\n\n    /**\n     * Registers a finder for looking up the current/last line number inside the called function\n     *\n     * @param {function} finder\n     */\n    instrument: function (finder) {\n        this.finder = finder;\n    },\n\n    /**\n     * Determines whether this call is to a userland function (defined inside PHP-land) or not\n     *\n     * @returns {boolean}\n     */\n    isUserland: function () {\n        // If the called function was defined inside the \"invisible\" global namespace scope,\n        // then it was defined in JS-land either as a built-in or was consumer-provided\n        return !this.namespaceScope.isGlobal();\n    },\n\n    /**\n     * Determines whether all errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesErrors: function () {\n        return this.scope.suppressesErrors();\n    },\n\n    /**\n     * Determines whether own errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesOwnErrors: function () {\n        return this.scope.suppressesOwnErrors();\n    }\n});\n\nmodule.exports = Call;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Call\n * @param {class} FFICall\n * @constructor\n */\nfunction CallFactory(Call, FFICall) {\n    /**\n     * @type {class}\n     */\n    this.Call = Call;\n    /**\n     * @type {class}\n     */\n    this.FFICall = FFICall;\n}\n\n_.extend(CallFactory.prototype, {\n    /**\n     * Creates a new Call\n     *\n     * @param {Scope} scope\n     * @param {NamespaceScope} namespaceScope\n     * @param {Reference[]|Value[]|Variable[]|=} args\n     * @param {Class|null} newStaticClass\n     * @returns {Call}\n     */\n    create: function (scope, namespaceScope, args, newStaticClass) {\n        var factory = this;\n\n        return new factory.Call(scope, namespaceScope, args || [], newStaticClass || null);\n    },\n\n    /**\n     * Creates a new FFI Call\n     *\n     * @param {Reference[]|Value[]|Variable[]|=} args\n     */\n    createFFICall: function (args) {\n        var factory = this;\n\n        return new factory.FFICall(args || []);\n    }\n});\n\nmodule.exports = CallFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    PHPFatalError = phpCommon.PHPFatalError;\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {Translator} translator\n * @param {ErrorReporting} errorReporting\n * @constructor\n */\nfunction CallStack(valueFactory, translator, errorReporting) {\n    /**\n     * @type {Call[]}\n     */\n    this.calls = [];\n    /**\n     * @type {ErrorReporting}\n     */\n    this.errorReporting = errorReporting;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(CallStack.prototype, {\n    /**\n     * Fetches the previous Call near the top of the stack, or null if none\n     *\n     * @returns {Call|null}\n     */\n    getCaller: function () {\n        var chain = this;\n\n        return chain.calls[chain.calls.length - 2] || null;\n    },\n\n    /**\n     * Fetches the path to the file containing the last line of code executed\n     *\n     * @returns {string|null}\n     */\n    getCallerFilePath: function () {\n        var caller = this.getUserlandCaller();\n\n        return caller ? caller.getFilePath() : null;\n    },\n\n    /**\n     * Fetches the number of the last line of code executed in the caller\n     *\n     * @returns {number|null}\n     */\n    getCallerLastLine: function () {\n        var caller = this.getUserlandCaller();\n\n        return caller ? caller.getLastLine() : null;\n    },\n\n    /**\n     * Fetches the scope of the previous Call near the top of the stack, or null if none\n     *\n     * @returns {Scope|null}\n     */\n    getCallerScope: function () {\n        var chain = this,\n            callerCall = chain.calls[chain.calls.length - 2] || null;\n\n        return callerCall ? callerCall.getScope() : null;\n    },\n\n    /**\n     * Fetches the current Call on the top of the stack, or null if none\n     *\n     * @returns {Call|null}\n     */\n    getCurrent: function () {\n        var chain = this;\n\n        return chain.calls[chain.calls.length - 1] || null;\n    },\n\n    /**\n     * Fetches the class that defines the current function being executed\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        var chain = this,\n            call = chain.getCurrent();\n\n        if (!call) {\n            return null;\n        }\n\n        return call.getCurrentClass();\n    },\n\n    /**\n     * Fetches the path to the file containing the last line of code executed\n     *\n     * @returns {string|null}\n     */\n    getLastFilePath: function () {\n        var caller = this.getUserlandCallee();\n\n        return caller ? caller.getFilePath() : null;\n    },\n\n    /**\n     * Fetches the number of the last line of code executed\n     *\n     * @returns {number|null}\n     */\n    getLastLine: function () {\n        var caller = this.getUserlandCallee();\n\n        return caller ? caller.getLastLine() : null;\n    },\n\n    /**\n     * Fetches the number of calls on the stack (stack depth)\n     *\n     * @returns {number}\n     */\n    getLength: function () {\n        return this.calls.length;\n    },\n\n    /**\n     * Fetches the class that is currently considered the static context,\n     * referenced with static:: in PHP-land\n     *\n     * @returns {Class|null}\n     */\n    getStaticClass: function () {\n        var call,\n            callStack = this,\n            index,\n            newStaticClass,\n            staticClass = null;\n\n        for (index = callStack.calls.length - 1; index >= 0; index--) {\n            call = callStack.calls[index];\n            newStaticClass = call.getStaticClass();\n\n            if (newStaticClass) {\n                staticClass = newStaticClass;\n\n                break;\n            }\n        }\n\n        return staticClass;\n    },\n\n    /**\n     * Fetches the ObjectValue that is the current `$this` object, if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        var currentCall = this.getCurrent();\n\n        if (!currentCall) {\n            return null;\n        }\n\n        return currentCall.getThisObject();\n    },\n\n    /**\n     * Fetches a call stack trace array, with one element for each stack frame (call)\n     *\n     * @returns {{index: number, file: string, line: number, func: function, args: *[]}[]}\n     */\n    getTrace: function () {\n        var call,\n            callStack = this,\n            index,\n            trace = [],\n            chronoIndex = callStack.calls.length - 2;\n\n        for (index = 1; index < callStack.calls.length; index++) {\n            call = callStack.calls[index];\n\n            trace.unshift({\n                // Most recent call should have index 0\n                index: chronoIndex--,\n                file: callStack.calls[index - 1].getTraceFilePath(),\n                // Fetch the line number the call _occurred on_, rather than the line\n                // last executed inside the called function\n                line: callStack.calls[index - 1].getLastLine(),\n                func: call.getFunctionName(),\n                args: call.getFunctionArgs()\n            });\n        }\n\n        return trace;\n    },\n\n    /**\n     * Fetches the PHP-land call for the current stack frame. If we are currently\n     * executing a built-in function called from a PHP method, the PHP method\n     * would be the PHP-land (userland) caller.\n     *\n     * @returns {Call|null}\n     */\n    getUserlandCallee: function () {\n        var call,\n            callStack = this,\n            index;\n\n        if (callStack.calls.length === 0) {\n            return null;\n        }\n\n        index = callStack.calls.length - 1;\n        call = callStack.calls[index];\n\n        do {\n            if (call.isUserland() || index === 0) {\n                return call;\n            }\n\n            call = callStack.calls[--index];\n        } while (call);\n\n        throw new Error('Could not find a valid userland callee');\n    },\n\n    /**\n     * Fetches the PHP-land call for the current stack frame. If we are currently\n     * executing a built-in function called from a PHP method, the PHP method\n     * would be the PHP-land (userland) caller.\n     *\n     * @returns {Call|null}\n     */\n    getUserlandCaller: function () {\n        var call,\n            callStack = this,\n            index;\n\n        if (callStack.calls.length < 2) {\n            return null;\n        }\n\n        index = callStack.calls.length - 2;\n        call = callStack.calls[index];\n\n        do {\n            if (call.isUserland() || index === 0) {\n                return call;\n            }\n\n            call = callStack.calls[--index];\n        } while (call);\n\n        throw new Error('Could not find a valid userland caller');\n    },\n\n    /**\n     * Instruments the current call\n     *\n     * @param {function} finder\n     */\n    instrumentCurrent: function (finder) {\n        this.getCurrent().instrument(finder);\n    },\n\n    /**\n     * Removes the current call from the stack\n     */\n    pop: function () {\n        this.calls.pop();\n    },\n\n    /**\n     * Pushes a new current call onto the top of the stack\n     *\n     * @param {Call} call\n     */\n    push: function (call) {\n        this.calls.push(call);\n    },\n\n    /**\n     * Raises an error/warning with the specified level and message\n     *\n     * @TODO: Most places where this function is called provide built-in strings,\n     *        which we should move to translations. An exception is trigger_error(...)'s user-provided messages\n     * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n     * @param {string} message String text message representing the error\n     * @param {string=} errorClass\n     * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n     */\n    raiseError: function (level, message, errorClass, reportsOwnContext) {\n        var call,\n            chain = this,\n            calls = chain.calls,\n            index;\n\n        if (level === PHPError.E_ERROR) {\n            // Throw an uncatchable fatal error (catchable errors must be thrown\n            // via .raiseTranslatedError(...))\n            throw new PHPFatalError(message, chain.getLastFilePath(), chain.getLastLine());\n        }\n\n        // Some constructs like isset(...) should only suppress errors\n        // for their own scope\n        call = chain.getCurrent();\n\n        if (call && call.suppressesOwnErrors()) {\n            return;\n        }\n\n        // Check whether any parent scope is set to suppress errors (eg. with the @-operator)\n        for (index = calls.length - 1; index >= 0; --index) {\n            call = calls[index];\n\n            if (call.suppressesErrors()) {\n                return;\n            }\n        }\n\n        chain.errorReporting.reportError(\n            level,\n            message,\n            chain.getLastFilePath(),\n            chain.getLastLine(),\n            chain.getTrace(),\n            !!reportsOwnContext\n        );\n    },\n\n    /**\n     * Raises a catchable Error or a notice/warning with the specified level, message translation key and variables\n     *\n     * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n     * @param {string} translationKey\n     * @param {Object.<string, string>=} placeholderVariables\n     * @param {string=} errorClass\n     * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n     * @param {string=} filePath\n     * @param {number=} lineNumber\n     * @throws {ObjectValue} Throws an ObjectValue-wrapped Throwable if not a notice or warning\n     */\n    raiseTranslatedError: function (\n        level,\n        translationKey,\n        placeholderVariables,\n        errorClass,\n        reportsOwnContext,\n        filePath,\n        lineNumber\n    ) {\n        var callStack = this,\n            message = callStack.translator.translate(translationKey, placeholderVariables);\n\n        if (level === PHPError.E_ERROR) {\n            // Non-warning/non-notice errors need to actually stop execution\n            // NB: The Error class' constructor will fetch file and line number info\n            throw callStack.valueFactory.createErrorObject(\n                errorClass || 'Error',\n                message,\n                null,\n                null,\n                filePath,\n                lineNumber,\n                reportsOwnContext\n            );\n        }\n\n        callStack.raiseError(level, message, errorClass, reportsOwnContext);\n    },\n\n    /**\n     * Raises an uncatchable PHP fatal error with the specified message translation key and variables\n     *\n     * @param {string} translationKey\n     * @param {Object.<string, string>=} placeholderVariables\n     * @throws {PHPFatalError} Throws an uncatchable PHPFatalError\n     */\n    raiseUncatchableFatalError: function (translationKey, placeholderVariables) {\n        var callStack = this,\n            message = callStack.translator.translate(translationKey, placeholderVariables);\n\n        callStack.raiseError(PHPError.E_ERROR, message);\n    }\n});\n\nmodule.exports = CallStack;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Reference/StaticProperty'),\n    require('./Reference/UndeclaredStaticProperty')\n], function (\n    _,\n    phpCommon,\n    StaticPropertyReference,\n    UndeclaredStaticPropertyReference\n) {\n    var IS_STATIC = 'isStatic',\n        MAGIC_CALL = '__call',\n        MAGIC_CALL_STATIC = '__callStatic',\n\n        CANNOT_ACCESS_PROPERTY = 'core.cannot_access_property',\n        UNDEFINED_CLASS_CONSTANT = 'core.undefined_class_constant',\n        UNDEFINED_METHOD = 'core.undefined_method',\n\n        VALUE = 'value',\n        VISIBILITY = 'visibility',\n        hasOwn = {}.hasOwnProperty,\n        PHPError = phpCommon.PHPError,\n        getMethod = function (object, methodName) {\n            var result = null;\n\n            _.forOwn(object, function (value, propertyName) {\n                if (\n                    propertyName.toLowerCase() === methodName.toLowerCase() &&\n                    _.isFunction(value)\n                ) {\n                    result = value;\n                    return false;\n                }\n            });\n\n            return result;\n        };\n\n    /**\n     * Represents a class exposed to PHP-land\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {FunctionFactory} functionFactory\n     * @param {CallStack} callStack\n     * @param {string} name Fully-qualified class name (FQCN)\n     * @param {string} constructorName\n     * @param {Function} InternalClass\n     * @param {Object} rootInternalPrototype\n     * @param {Object} staticPropertiesData\n     * @param {Object.<string, Function>} constants Map of constant names to value factory functions\n     * @param {Class|null} superClass Parent class, if any\n     * @param {string[]} interfaceNames FQCNs (FQINs) of interfaces implemented by this class\n     * @param {NamespaceScope} namespaceScope\n     * @param {ExportRepository} exportRepository\n     * @param {ValueCoercer} valueCoercer Value coercer configured specifically for this class\n     * @param {FFIFactory} ffiFactory\n     * @constructor\n     */\n    function Class(\n        valueFactory,\n        functionFactory,\n        callStack,\n        name,\n        constructorName,\n        InternalClass,\n        rootInternalPrototype,\n        staticPropertiesData,\n        constants,\n        superClass,\n        interfaceNames,\n        namespaceScope,\n        exportRepository,\n        valueCoercer,\n        ffiFactory\n    ) {\n        var classObject = this,\n            staticProperties = {};\n\n        this.callStack = callStack;\n        this.constants = constants;\n        this.constructorName = constructorName;\n        this.exportRepository = exportRepository;\n        /**\n         * @type {FFIFactory}\n         */\n        this.ffiFactory = ffiFactory;\n        this.functionFactory = functionFactory;\n        this.interfaceNames = interfaceNames || [];\n        this.InternalClass = InternalClass;\n        this.name = name;\n        this.namespaceScope = namespaceScope;\n        // The prototype object that we should stop at when walking up the chain\n        this.rootInternalPrototype = rootInternalPrototype;\n        this.staticProperties = staticProperties;\n        this.superClass = superClass || null;\n        /**\n         * @type {ValueCoercer}\n         */\n        this.valueCoercer = valueCoercer;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n\n        _.each(staticPropertiesData, function (data, name) {\n            // Pass the class object to the property initialiser (if any),\n            // so that it may refer to other properties/constants of this class with self::*\n            staticProperties[name] = new StaticPropertyReference(\n                valueFactory,\n                callStack,\n                classObject,\n                name,\n                data[VISIBILITY],\n                data[VALUE](classObject)\n            );\n        });\n    }\n\n    _.extend(Class.prototype, {\n        /**\n         * Calls an instance or static method. If `objectValue` is passed, the call\n         * will be in an object context, otherwise it will be in a static context.\n         *\n         * Omit both `objectValue` and `currentNativeObject` for a static call.\n         *\n         * @param {string} methodName The name of the method to call\n         * @param {Value[]} args The wrapped value objects to pass as arguments to the method\n         * @param {ObjectValue|null} objectValue The wrapped ObjectValue for this instance\n         * @param {object|null} currentNativeObject The current native JS object on the prototype chain to search for the method\n         * @param {Class|null} currentClass The original called class (this function is called recursively for inherited methods)\n         * @param {bool} isForwardingStaticCall eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value} Returns the result of the method if it is defined\n         * @throws {PHPFatalError} Throws when the method is not defined\n         */\n        callMethod: function (methodName, args, objectValue, currentNativeObject, currentClass, isForwardingStaticCall) {\n            var classObject = this,\n                nativeObject = objectValue ? objectValue.getObject() : null,\n                result,\n                thisObject = classObject.callStack.getThisObject();\n\n            function callMethod(currentObject, methodName, args) {\n                var method = getMethod(currentObject, methodName);\n\n                if (method !== null) {\n                    if (!objectValue && !method[IS_STATIC]) {\n                        objectValue = thisObject;\n\n                        if (!objectValue) {\n                            // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                            classObject.callStack.raiseError(\n                                PHPError.E_STRICT,\n                                'Non-static method ' + method.data.classObject.name +\n                                '::' + methodName + '() should not be called statically'\n                            );\n                        } else if (!objectValue.classIs(classObject.getName())) {\n                            // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                            classObject.callStack.raiseError(\n                                PHPError.E_STRICT,\n                                'Non-static method ' + method.data.classObject.name +\n                                '::' + methodName + '() should not be called statically, ' +\n                                'assuming $this from incompatible context'\n                            );\n                        }\n                    }\n\n                    // For a non-forwarding static call, pass the new static class through.\n                    // (For a forwarding static call, we will pass `null` through as the \"new static class\"\n                    // inside FunctionFactory, because we just want to use the one the caller has.)\n                    if (!isForwardingStaticCall) {\n                        classObject.functionFactory.setNewStaticClassIfWrapped(method, currentClass);\n                    }\n\n                    return classObject.valueFactory.coerce(\n                        method.apply(\n                            // Some methods should never have their `this` object and args auto-coerced,\n                            // eg the magic `__construct` method as it is proxied in Namespace.js\n                            classObject.valueCoercer.isAutoCoercionEnabled() && !method.neverCoerce ?\n                                objectValue.getObject() :\n                                objectValue,\n                            method.neverCoerce ? args : classObject.valueCoercer.coerceArguments(args)\n                        )\n                    );\n                }\n\n                if (\n                    currentObject === classObject.rootInternalPrototype &&\n                    classObject.superClass\n                ) {\n                    return classObject.superClass.callMethod(\n                        methodName,\n                        args,\n                        objectValue,\n                        Object.getPrototypeOf(currentObject),\n                        currentClass,\n                        isForwardingStaticCall\n                    );\n                }\n\n                currentObject = Object.getPrototypeOf(currentObject);\n\n                if (!currentObject) {\n                    return null;\n                }\n\n                return callMethod(currentObject, methodName, args);\n            }\n\n            isForwardingStaticCall = !!isForwardingStaticCall;\n\n            if (!currentNativeObject) {\n                // Walk up the prototype chain from the native object\n                currentNativeObject = nativeObject;\n            }\n\n            if (!currentClass) {\n                currentClass = classObject;\n            }\n\n            if (nativeObject instanceof classObject.InternalClass) {\n                // Ignore own properties of the native object when searching for methods\n                if (currentNativeObject === nativeObject) {\n                    currentNativeObject = Object.getPrototypeOf(currentNativeObject);\n                }\n            } else {\n                // For some special classes (eg. JSObject, Closure) the native object may not actually\n                // be an instance of the InternalClass, so fake inheritance of the native class\n                currentNativeObject = classObject.InternalClass.prototype;\n            }\n\n            result = callMethod(currentNativeObject, methodName, args);\n\n            if (result !== null) {\n                return result;\n            }\n\n            // Method was not found on object or its prototype chain: try the magic method(s)\n\n            if (!objectValue && thisObject) {\n                // Magic __call(...) should override __callStatic(...)\n                // when both present for static call in object context\n                result = callMethod(thisObject.getObject(), MAGIC_CALL, [\n                    classObject.valueFactory.createString(methodName),\n                    classObject.valueFactory.createArray(args)\n                ]);\n\n                if (result !== null) {\n                    return result;\n                }\n            }\n\n            result = callMethod(\n                currentNativeObject,\n                objectValue ? MAGIC_CALL : MAGIC_CALL_STATIC,\n                [\n                    classObject.valueFactory.createString(methodName),\n                    classObject.valueFactory.createArray(args)\n                ]\n            );\n\n            if (result !== null) {\n                return result;\n            }\n\n            // Method was not found and no magic __call method is defined\n            classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_METHOD, {\n                className: classObject.name,\n                methodName: methodName\n            });\n        },\n\n        /**\n         * Calls the userland constructor for the provided object\n         *\n         * @param {ObjectValue} objectValue\n         * @param {Value[]} args\n         */\n        construct: function (objectValue, args) {\n            var classObject = this;\n\n            if (!classObject.constructorName) {\n                // Class does not define a constructor: call the superclass' constructor\n                // if it has one, otherwise do nothing\n                if (classObject.superClass) {\n                    classObject.superClass.construct(objectValue, args);\n                }\n\n                return;\n            }\n\n            // Call the constructor for the current class and not via the object value,\n            // as the method may have been overridden by descendant classes\n            classObject.callMethod(classObject.constructorName, args, objectValue);\n        },\n\n        /**\n         * Exports instances of this class with a defined unwrapper if one has been set,\n         * otherwise wraps them in a native JS class that extends the PHP class' internal class\n         *\n         * @param {ObjectValue} objectValue\n         * @returns {Object}\n         */\n        exportInstanceForJS: function (objectValue) {\n            return this.exportRepository.export(objectValue);\n        },\n\n        /**\n         * Determines whether this class extends the given other class\n         *\n         * @param {Class} superClass\n         * @returns {boolean}\n         */\n        extends: function (superClass) {\n            var classObject = this;\n\n            return classObject.superClass && (classObject.superClass.name === superClass.name || classObject.superClass.extends(superClass));\n        },\n\n        /**\n         * Fetches the value of a constant of this class. Constants may be defined by the current class,\n         * an ancestor or by an interface implemented by this class or an ancestor\n         *\n         * @param {string} name\n         * @returns {Value}\n         */\n        getConstantByName: function (name) {\n            var classObject = this,\n                i,\n                interfaceObject;\n\n            if (name.toLowerCase() === 'class') {\n                // The special MyClass::class constant that fetches the FQCN of the class as a string\n                return classObject.valueFactory.createString(classObject.getName());\n            }\n\n            if (hasOwn.call(classObject.constants, name)) {\n                return classObject.constants[name]();\n            }\n\n            for (i = 0; i < classObject.interfaceNames.length; i++) {\n                interfaceObject = classObject.namespaceScope.getClass(classObject.interfaceNames[i]);\n\n                try {\n                    return interfaceObject.getConstantByName(name);\n                } catch (e) {\n                    // Not found, try the next interface\n                }\n            }\n\n            if (classObject.superClass) {\n                return classObject.superClass.getConstantByName(name);\n            }\n\n            classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_CLASS_CONSTANT, {\n                name: name\n            });\n        },\n\n        getInternalClass: function () {\n            return this.InternalClass;\n        },\n\n        /**\n         * Fetches the spec for an instance or static method\n         *\n         * @param {string} methodName The name of the method to fetch the spec for\n         * @param {ObjectValue=null} objectValue The wrapped ObjectValue for this instance\n         * @param {object=null} currentNativeObject The current native JS object on the prototype chain to search for the method\n         * @param {Class=null} originalClass The original class (this function is called recursively for inherited methods)\n         * @returns {MethodSpec|null} Returns the spec of the method if it exists, or null if it does not\n         */\n        getMethodSpec: function (methodName, objectValue, currentNativeObject, originalClass) {\n            var classObject = this,\n                nativeObject = objectValue ? objectValue.getObject() : null;\n\n            function getMethodSpec(currentObject, methodName) {\n                var method = getMethod(currentObject, methodName);\n\n                if (method !== null) {\n                    return classObject.functionFactory.createMethodSpec(originalClass, classObject, methodName, method);\n                }\n\n                if (\n                    currentObject === classObject.rootInternalPrototype &&\n                    classObject.superClass\n                ) {\n                    return classObject.superClass.getMethodSpec(\n                        methodName,\n                        objectValue,\n                        Object.getPrototypeOf(currentObject),\n                        originalClass\n                    );\n                }\n\n                currentObject = Object.getPrototypeOf(currentObject);\n\n                if (!currentObject) {\n                    return null;\n                }\n\n                return getMethodSpec(currentObject, methodName);\n            }\n\n            if (!currentNativeObject) {\n                // Walk up the prototype chain from the native object\n                currentNativeObject = nativeObject;\n            }\n\n            if (!originalClass) {\n                originalClass = classObject;\n            }\n\n            if (nativeObject instanceof classObject.InternalClass) {\n                // Ignore own properties of the native object when searching for methods\n                if (currentNativeObject === nativeObject) {\n                    currentNativeObject = Object.getPrototypeOf(currentNativeObject);\n                }\n            } else {\n                // For some special classes (eg. JSObject, Closure) the native object may not actually\n                // be an instance of the InternalClass, so fake inheritance of the native class\n                currentNativeObject = classObject.InternalClass.prototype;\n            }\n\n            return getMethodSpec(currentNativeObject, methodName);\n        },\n\n        /**\n         * Fetches the FQCN (Fully-Qualified Class Name) of this class.\n         * If the namespace prefix is not wanted, see .getUnprefixedName()\n         *\n         * @returns {string}\n         */\n        getName: function () {\n            return this.name;\n        },\n\n        /**\n         * Fetches the name of this class with any namespace prefix removed,\n         * eg.:\n         *     class with FQCN: My\\Stuff\\AwesomeClass\n         *     unprefixed name: AwesomeClass\n         *\n         * @returns {string}\n         */\n        getUnprefixedName: function () {\n            return this.name.replace(/^.*\\\\/, '');\n        },\n\n        /**\n         * Fetches a reference to a static property of this class by its name\n         *\n         * @param {string} name\n         * @param {Class=} calledClass\n         * @returns {StaticPropertyReference|UndeclaredStaticPropertyReference}\n         */\n        getStaticPropertyByName: function (name, calledClass) {\n            var callingClass,\n                classObject = this,\n                staticProperty;\n\n            // The class that the static property was originally dereferenced for:\n            // if we've walked up the class hierarchy to find its definition,\n            // this will refer to the class that was actually specified to the left of the `::`\n            calledClass = calledClass || classObject;\n\n            if (!hasOwn.call(classObject.staticProperties, name)) {\n                if (classObject.superClass) {\n                    // Inherit static properties from the parent class, if we extend one\n                    return classObject.superClass.getStaticPropertyByName(name, calledClass);\n                }\n\n                // Undeclared static properties cannot be accessed _except_ by isset(...) or empty(...),\n                // which return the relevant boolean result (`false` and `true` respectively)\n                return new UndeclaredStaticPropertyReference(\n                    classObject.valueFactory,\n                    classObject.callStack,\n                    classObject,\n                    name\n                );\n            }\n\n            staticProperty = classObject.staticProperties[name];\n\n            // Property is private; may only be read from methods of this class and not derivatives\n            if (staticProperty.getVisibility() === 'private') {\n                callingClass = classObject.callStack.getCurrentClass();\n\n                if (!callingClass || callingClass.name !== classObject.name) {\n                    classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                        className: calledClass.getName(),\n                        propertyName: name,\n                        visibility: 'private'\n                    });\n                }\n            // Property is protected; may be read from methods of this class and methods of derivatives\n            } else if (staticProperty.getVisibility() === 'protected') {\n                callingClass = classObject.callStack.getCurrentClass();\n\n                if (\n                    !callingClass ||\n                    (\n                        classObject.getName() !== callingClass.getName() &&\n                        !callingClass.isInFamilyOf(classObject)\n                    )\n                ) {\n                    classObject.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                        className: classObject.name,\n                        propertyName: name,\n                        visibility: 'protected'\n                    });\n                }\n            }\n\n            return staticProperty;\n        },\n\n        /**\n         * Fetches the parent class of this one, or null if it has no parent\n         *\n         * @returns {Class|null}\n         */\n        getSuperClass: function () {\n            return this.superClass;\n        },\n\n        hasStaticPropertyByName: function (name) {\n            return hasOwn.call(this.staticProperties, name);\n        },\n\n        /**\n         * Fetches all interfaces directly implemented by this class\n         *\n         * @returns {Class[]}\n         */\n        getInterfaces: function () {\n            var classObject = this;\n\n            return classObject.interfaceNames.map(function (interfaceName) {\n                return classObject.namespaceScope.getClass(interfaceName);\n            });\n        },\n\n        /**\n         * Returns either the given ObjectValue or its inner native object, based on the class' auto-coercion mode\n         *\n         * @param {ObjectValue} instance\n         * @returns {ObjectValue|Object}\n         */\n        getThisObjectForInstance: function (instance) {\n            return this.valueCoercer.isAutoCoercionEnabled() ? instance.getObject() : instance;\n        },\n\n        /**\n         * Creates a new instance of this class\n         *\n         * @param {Value[]=} args\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args) {\n            var classObject = this,\n                objectValue;\n\n            if (!args) {\n                args = [];\n            }\n\n            objectValue = classObject.instantiateBare(args);\n\n            // Call the userland constructor\n            classObject.construct(objectValue, args);\n\n            return objectValue;\n        },\n\n        /**\n         * Creates a new instance of this class without calling any userland constructor\n         * (note that for JS classes the class-constructor-function will still be called)\n         *\n         * @param {Value[]=} args\n         * @returns {ObjectValue}\n         */\n        instantiateBare: function (args) {\n            var classObject = this,\n                nativeObject = Object.create(classObject.InternalClass.prototype),\n                objectValue = classObject.valueFactory.createObject(nativeObject, classObject);\n\n            if (!args) {\n                args = [];\n            }\n\n            classObject.InternalClass.apply(\n                // Always use the wrapped object value as `this` regardless of coercion status,\n                // so that non-native properties/methods may be accessed\n                objectValue,\n                classObject.valueCoercer.coerceArguments(args)\n            );\n\n            return objectValue;\n        },\n\n        /**\n         * Creates a new instance of this class and also sets the given internal properties (shorthand)\n         *\n         * @param {Value[]} args\n         * @param {Object.<string, *>} internals\n         * @return {ObjectValue}\n         */\n        instantiateWithInternals: function (args, internals) {\n            var classObject = this,\n                objectValue = classObject.instantiate(args);\n\n            _.forOwn(internals, function (value, name) {\n                objectValue.setInternalProperty(name, value);\n            });\n\n            return objectValue;\n        },\n\n        /**\n         * Determines whether:\n         * - This class' FQCN is the same as the one given, or\n         * - This class implements an interface with the name given, or\n         * - This class has an ancestor with the name given\n         *\n         * @param {Class} className\n         * @returns {boolean}\n         */\n        is: function (className) {\n            var classObject = this,\n                interfaceMatches = false;\n\n            // Case-insensitively compare the fully-qualified class paths\n            if (classObject.name.toLowerCase() === className.toLowerCase()) {\n                return true;\n            }\n\n            // Iterate over all the interfaces implemented by this class: if any of them\n            // are the requested class or extend from it, return true\n            _.each(classObject.interfaceNames, function (interfaceName) {\n                var interfaceObject = classObject.namespaceScope.getClass(interfaceName);\n\n                if (interfaceObject.is(className)) {\n                    interfaceMatches = true;\n                    return false;\n                }\n            });\n\n            if (interfaceMatches) {\n                return true;\n            }\n\n            if (classObject.superClass) {\n                return classObject.superClass.is(className);\n            }\n\n            return false;\n        },\n\n        /**\n         * Determines whether this class is identical to or is an ancestor or descendant\n         * of the specified other class\n         *\n         * @param {Class} otherClass\n         * @returns {boolean}\n         */\n        isInFamilyOf: function (otherClass) {\n            var classObject = this;\n\n            return classObject === otherClass ||\n                classObject.extends(otherClass) ||\n                otherClass.extends(classObject);\n        },\n\n        /**\n         * Returns true if auto-coercion is enabled, and false otherwise.\n         * Constructor and method arguments will be unwrapped to native JS values when enabled\n         *\n         * @returns {boolean}\n         */\n        isAutoCoercionEnabled: function () {\n            return this.valueCoercer.isAutoCoercionEnabled();\n        },\n\n        /**\n         * Wraps instances of this class in instances of the proxying PHPObject class\n         *\n         * @param {ObjectValue} instance\n         * @returns {PHPObject}\n         */\n        proxyInstanceForJS: function (instance) {\n            var classObject = this;\n\n            // Return a wrapper object that presents a promise-based API\n            // for calling methods of PHP objects in sync or async mode\n            return classObject.ffiFactory.createPHPObject(instance);\n        },\n\n        /**\n         * Unwraps arguments for a method based on the coercion & prefer-sync modes for the class\n         *\n         * @param {Value[]} argumentValues\n         * @returns {Value[]|*[]}\n         */\n        unwrapArguments: function (argumentValues) {\n            return this.valueCoercer.coerceArguments(argumentValues);\n        }\n    });\n\n    return Class;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    var MAGIC_AUTOLOAD_FUNCTION = '__autoload';\n\n    function ClassAutoloader(valueFactory) {\n        this.globalNamespace = null;\n        this.splStack = null;\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(ClassAutoloader.prototype, {\n        appendAutoloadCallable: function (autoloadCallable) {\n            var autoloader = this,\n                splStack = autoloader.splStack;\n\n            if (!splStack) {\n                splStack = [];\n                autoloader.splStack = splStack;\n            }\n\n            splStack.push(autoloadCallable);\n        },\n\n        autoloadClass: function (name) {\n            var autoloader = this,\n                globalNamespace = autoloader.globalNamespace,\n                magicAutoloadFunction,\n                splStack = autoloader.splStack;\n\n            if (splStack) {\n                _.each(splStack, function (autoloadCallable) {\n                    autoloadCallable.call([autoloader.valueFactory.createString(name)], globalNamespace);\n\n                    if (globalNamespace.hasClass(name)) {\n                        // Autoloader has defined the class: no need to call any further autoloaders\n                        return false;\n                    }\n                });\n            } else {\n                magicAutoloadFunction = globalNamespace.getOwnFunction(MAGIC_AUTOLOAD_FUNCTION);\n\n                if (magicAutoloadFunction) {\n                    magicAutoloadFunction(autoloader.valueFactory.createString(name));\n                }\n            }\n        },\n\n        removeAutoloadCallable: function (autoloadCallable) {\n            var found = false,\n                splStack = this.splStack;\n\n            if (!splStack) {\n                // SPL stack has not been enabled: nothing to do\n                return false;\n            }\n\n            _.each(splStack, function (existingAutoloadCallable, index) {\n                // Callables may be different value types or different objects,\n                // so compare using the *Value API\n                if (existingAutoloadCallable.isEqualTo(autoloadCallable).getNative()) {\n                    found = true;\n                    splStack.splice(index, 1);\n                    return false;\n                }\n            });\n\n            return found;\n        },\n\n        setGlobalNamespace: function (globalNamespace) {\n            this.globalNamespace = globalNamespace;\n        }\n    });\n\n    return ClassAutoloader;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {ClosureFactory} closureFactory\n     * @param {ValueFactory} valueFactory\n     * @param {NamespaceScope} namespaceScope\n     * @param {Function} unwrappedFunction\n     * @param {Function} wrappedFunction\n     * @param {Scope} enclosingScope\n     * @param {ObjectValue|null} thisObject\n     * @param {FunctionSpec} functionSpec\n     * @constructor\n     */\n    function Closure(\n        closureFactory,\n        valueFactory,\n        namespaceScope,\n        enclosingScope,\n        unwrappedFunction,\n        wrappedFunction,\n        thisObject,\n        functionSpec\n    ) {\n        /**\n         * @type {ClosureFactory}\n         */\n        this.closureFactory = closureFactory;\n        /**\n         * @type {Scope}\n         */\n        this.enclosingScope = enclosingScope;\n        /**\n         * @type {FunctionSpec}\n         */\n        this.functionSpec = functionSpec;\n        /**\n         * @type {NamespaceScope}\n         */\n        this.namespaceScope = namespaceScope;\n        /**\n         * @type {ObjectValue|null}\n         */\n        this.thisObject = thisObject;\n        /**\n         * @type {Function}\n         */\n        this.unwrappedFunction = unwrappedFunction;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n        /**\n         * @type {Function}\n         */\n        this.wrappedFunction = wrappedFunction;\n    }\n\n    _.extend(Closure.prototype, {\n        /**\n         * Creates a new closure identical to this one,\n         * but bound to the specified `$this` object and class scope\n         *\n         * @param {ObjectValue|NullValue} thisObject\n         * @param {Class|undefined} scopeClass\n         * @returns {closure.enclosingScope}\n         */\n        bind: function (thisObject, scopeClass) {\n            var closure = this;\n\n            return closure.closureFactory.create(\n                closure.enclosingScope,\n                closure.unwrappedFunction,\n                closure.namespaceScope,\n                scopeClass || null,\n                thisObject,\n                closure.functionSpec\n            );\n        },\n\n        /**\n         * Invokes this closure with the provided arguments, returning its result\n         *\n         * @param {Value[]} args\n         * @param {ObjectValue|undefined} thisObject\n         * @returns {Value}\n         */\n        invoke: function (args, thisObject) {\n            // Store the current PHP thisObj to set for the closure\n            var closure = this;\n\n            return closure.valueFactory.coerce(\n                closure.wrappedFunction.apply(thisObject || closure.thisObject, args)\n            );\n        }\n    });\n\n    return Closure;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {FunctionFactory} functionFactory\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {class} Closure\n     * @constructor\n     */\n    function ClosureFactory(\n        functionFactory,\n        valueFactory,\n        callStack,\n        Closure\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {class}\n         */\n        this.Closure = Closure;\n        /**\n         * @type {FunctionFactory}\n         */\n        this.functionFactory = functionFactory;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(ClosureFactory.prototype, {\n        /**\n         * Creates a new Closure\n         *\n         * @param {Scope} enclosingScope\n         * @param {Function} unwrappedFunction\n         * @param {NamespaceScope} namespaceScope\n         * @param {Class|undefined} scopeClass\n         * @param {ObjectValue|NullValue|null} thisObject Null for a static closure, the object to use otherwise\n         * @param {FunctionSpec} functionSpec\n         * @returns {Closure}\n         */\n        create: function (enclosingScope, unwrappedFunction, namespaceScope, scopeClass, thisObject, functionSpec) {\n            var factory = this,\n                wrappedFunction;\n\n            // If a bound object is specified but no class scope, use the class of the object\n            if (!scopeClass) {\n                scopeClass = thisObject && thisObject.getType() !== 'null' ?\n                    thisObject.getClass() :\n                    null;\n            }\n\n            wrappedFunction = factory.functionFactory.create(\n                namespaceScope,\n                scopeClass,\n                unwrappedFunction,\n                null,\n                null,\n                // Inside a closure, static:: will either refer to the current bound static class\n                // or, if none, then the current/owning class of the method that created it\n                factory.callStack.getStaticClass() || scopeClass || null,\n                functionSpec\n            );\n\n            return new factory.Closure(\n                factory,\n                factory.valueFactory,\n                namespaceScope,\n                enclosingScope,\n                unwrappedFunction,\n                wrappedFunction,\n                thisObject,\n                functionSpec\n            );\n        }\n    });\n\n    return ClosureFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} DebugFormatter\n * @param {class} DebugValue\n * @param {class} ValueFormatter\n * @constructor\n */\nfunction DebugFactory(DebugFormatter, DebugValue, ValueFormatter) {\n    /**\n     * @type {class}\n     */\n    this.DebugFormatter = DebugFormatter;\n    /**\n     * @type {class}\n     */\n    this.DebugValue = DebugValue;\n    /**\n     * @type {class}\n     */\n    this.ValueFormatter = ValueFormatter;\n}\n\n_.extend(DebugFactory.prototype, {\n    /**\n     * Creates a new DebugFormatter\n     *\n     * @returns {DebugFormatter}\n     */\n    createDebugFormatter: function () {\n        var factory = this,\n            valueFormatter = new factory.ValueFormatter(factory);\n\n        return new factory.DebugFormatter(valueFormatter);\n    },\n\n    /**\n     * Creates a DebugValue that wraps the specified value\n     *\n     * @param {Value} value\n     * @returns {DebugValue}\n     */\n    createValue: function (value) {\n        return new this.DebugValue(value);\n    }\n});\n\nmodule.exports = DebugFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    DebugValue = require('./DebugValue'),\n    DebugVariable = require('./DebugVariable');\n\n/**\n * Debugging variable formatter for Chrome's Developer Tools\n *\n * @param {ValueFormatter} valueFormatter\n * @constructor\n */\nfunction DebugFormatter(valueFormatter) {\n    /**\n     * @type {ValueFormatter}\n     */\n    this.valueFormatter = valueFormatter;\n}\n\n_.extend(DebugFormatter.prototype, {\n    /**\n     * Formats an \"expanded\" view of a PHP variable in Chrome's dev tools\n     *\n     * @param {DebugVariable|DebugValue} debugVariable\n     * @returns {[]}\n     */\n    body: function (debugVariable) {\n        var value = debugVariable.getValue(),\n            formattedValue = this.valueFormatter.format(value),\n            structure = [\n                'table',\n                {},\n                [\n                    'tr',\n                    {},\n                    [\n                        'td',\n                        {\n                            'style': 'font-weight: bold;'\n                        },\n                        'type:'\n                    ],\n                    [\n                        'td',\n                        {},\n                        value.getType()\n                    ]\n                ]\n            ];\n\n        function addAttribute(name, value, style) {\n            structure.push([\n                'tr',\n                {},\n                [\n                    'td',\n                    {\n                        'style': 'font-weight: bold;'\n                    },\n                    name + ':'\n                ],\n                [\n                    'td',\n                    {\n                        'style': style\n                    },\n                    value\n                ]\n            ]);\n        }\n\n        if (formattedValue.attributes.length === 0) {\n            // No attributes provided, only value, so add value as the only attribute\n            // so that the value can be expanded in the debugger to see its type along with value\n            addAttribute('value', formattedValue.headingValue, formattedValue.headingStyle);\n        } else {\n            _.each(formattedValue.attributes, function (attribute) {\n                addAttribute(attribute.name, attribute.value, attribute.style);\n            });\n        }\n\n        return structure;\n    },\n\n    /**\n     * Returns true if the value can be expanded with .body(...) above, false otherwise\n     *\n     * @param {DebugVariable|DebugValue|*} debugVariable\n     * @returns {boolean}\n     */\n    hasBody: function (debugVariable) {\n        return (debugVariable instanceof DebugVariable && debugVariable.isDefined()) ||\n            debugVariable instanceof DebugValue;\n    },\n\n    /**\n     * Formats a minimal/inline view of a PHP variable in Chrome's dev tools\n     *\n     * @param {DebugVariable|DebugValue|*} debugVariable\n     * @returns {[]}\n     */\n    header: function (debugVariable) {\n        var formattedValue,\n            value;\n\n        if (!(debugVariable instanceof DebugVariable) && !(debugVariable instanceof DebugValue)) {\n            return null;\n        }\n\n        if (!debugVariable.isDefined()) {\n            return ['span', {'style': 'text-style: italic; color: gray;'}, '<undefined>'];\n        }\n\n        value = debugVariable.getValue();\n\n        formattedValue = this.valueFormatter.format(value);\n\n        return ['span', {'style': formattedValue.headingStyle}, formattedValue.headingValue];\n    }\n});\n\nmodule.exports = DebugFormatter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Installer for the debugging variable formatter\n * for Chrome's Developer Tools\n *\n * @param {Window} window\n * @param {DebugFactory} debugFactory\n * @constructor\n */\nfunction DebugFormatterInstaller(window, debugFactory) {\n    /**\n     * @type {DebugFactory}\n     */\n    this.debugFactory = debugFactory;\n    /**\n     * @type {Window}\n     */\n    this.window = window;\n}\n\n_.extend(DebugFormatterInstaller.prototype, {\n    /**\n     * Installs a DebugFormatter into the global scope\n     * for Chrome's Developer Tools to pick up\n     */\n    install: function () {\n        var installer = this,\n            debugFormatter = installer.debugFactory.createDebugFormatter();\n\n        if (!installer.window.devtoolsFormatters) {\n            installer.window.devtoolsFormatters = [];\n        }\n\n        installer.window.devtoolsFormatters.push(debugFormatter);\n    }\n});\n\nmodule.exports = DebugFormatterInstaller;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Represents a PHP value to be displayed in the devtools debugger\n *\n * @param {Value} value\n * @constructor\n */\nfunction DebugValue(value) {\n    /**\n     * @type {Value}\n     */\n    this.value = value;\n}\n\n_.extend(DebugValue.prototype, {\n    /**\n     * Fetches the value this debug value represents\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        return this.value;\n    },\n\n    /**\n     * Determines whether the value is defined: should always be true\n     * (this is shared by the interface of DebugVariable, which may return false\n     * if the variable has not (yet) been defined in the scope)\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return true;\n    }\n});\n\nmodule.exports = DebugValue;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Scope} scope\n * @param {string} variableName\n * @constructor\n */\nfunction DebugVariable(scope, variableName) {\n    /**\n     * @type {Scope}\n     */\n    this.scope = scope;\n    /**\n     * @type {string}\n     */\n    this.variableName = variableName;\n}\n\n_.extend(DebugVariable.prototype, {\n    /**\n     * Fetches the value currently assigned to the variable this DebugVariable is tracking\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        var variable = this;\n\n        return variable.scope.getVariable(variable.variableName).getValue();\n    },\n\n    /**\n     * Determines whether the wrapped Value is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var variable = this;\n\n        return variable.scope.getVariable(variable.variableName).isDefined();\n    }\n});\n\nmodule.exports = DebugVariable;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    /**\n     * Formats the elements of an ArrayValue as a devtools formatter structure\n     *\n     * @param {ArrayValue} arrayValue\n     * @param {DebugFactory} debugFactory\n     * @returns {*[]}\n     */\n    formatArrayElements = function (arrayValue, debugFactory) {\n        var elements = [\n                'table',\n                {}\n            ];\n\n        _.each(arrayValue.getKeys(), function (keyValue) {\n            var element = arrayValue.getElementByKey(keyValue),\n                keyString = keyValue.getNative();\n\n            // Display the keys of elements with string keys in quotes\n            if (keyValue.getType() === 'string') {\n                keyString = '\"' + keyString + '\"';\n            }\n\n            elements.push([\n                'tr',\n                {},\n                [\n                    'td',\n                    {\n                        'style': 'font-weight: bold;'\n                    },\n                    // Prefix the key of elements that are references with an ampersand\n                    (element.isReference() ? '&' : '') + keyString + ':'\n                ],\n                [\n                    'td',\n                    {},\n                    // Format the element recursively with a DebugValue\n                    // (custom object formatter should be called again if/when expanded in debugger)\n                    ['object', {object: debugFactory.createValue(element.getValue())}]\n                ]\n            ]);\n        });\n\n        return elements;\n    };\n\n/**\n * Debugging value formatter for Chrome's Developer Tools\n *\n * @param {DebugFactory} debugFactory\n * @constructor\n */\nfunction ValueFormatter(debugFactory) {\n    /**\n     * @type {DebugFactory}\n     */\n    this.debugFactory = debugFactory;\n}\n\n_.extend(ValueFormatter.prototype, {\n    /**\n     * Formats a value for display in Chrome's dev tools\n     *\n     * @param {Value} value\n     * @returns {{headingStyle: string, headingValue: (string|number), attributes: object[]}}\n     */\n    format: function (value) {\n        var attributes = [],\n            formatter = this,\n            headingValue = null,\n            headingStyle = '',\n            nativeValue = value.getNative(),\n            prototype;\n\n        if (value.getType() === 'array') {\n            headingValue = 'Array[' + value.getLength() + ']';\n            attributes.push(\n                {\n                    name: 'length',\n                    value: value.getLength(),\n                    style: 'color: blue;'\n                },\n                {\n                    name: 'elements',\n                    value: formatArrayElements(value, formatter.debugFactory)\n                }\n            );\n        } else if (value.getType() === 'null') {\n            headingValue = '<null>';\n            headingStyle = 'font-weight: bold;';\n        } else if (value.getType() === 'object') {\n            if (value.getClassName() === 'JSObject') {\n                attributes.push({\n                    name: 'PHP class',\n                    value: 'JSObject'\n                });\n\n                if (typeof nativeValue === 'function') {\n                    headingValue = '<JS:function ' + nativeValue.name + '()>';\n\n                    attributes.push({\n                        name: 'JS class',\n                        value: '(Function)'\n                    });\n                } else {\n                    prototype = Object.getPrototypeOf(nativeValue);\n\n                    if (prototype.constructor) {\n                        headingValue = '<JS:' + prototype.constructor.name + '>';\n\n                        attributes.push({\n                            name: 'JS class',\n                            value: prototype.constructor.name\n                        });\n                    } else {\n                        headingValue = '<JS:Object>';\n\n                        attributes.push({\n                            name: 'JS class',\n                            value: '(anonymous)'\n                        });\n                    }\n                }\n            } else {\n                headingValue = '<' + value.getClassName() + '>';\n\n                attributes.push({\n                    name: 'class',\n                    value: value.getClassName()\n                });\n            }\n        } else if (\n            value.getType() === 'int' ||\n            value.getType() === 'float' ||\n            value.getType() === 'boolean'\n        ) {\n            headingValue = nativeValue;\n            headingStyle = 'color: blue;';\n        } else if (value.getType() === 'string') {\n            headingValue = '\"' + nativeValue + '\"';\n            headingStyle = 'color: red;';\n        }\n\n        return {\n            attributes: attributes,\n            headingStyle: headingStyle,\n            headingValue: headingValue\n        };\n    }\n});\n\nmodule.exports = ValueFormatter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    PATH = 'path',\n    Promise = require('lie'),\n    ValueWrapper = require('./Value');\n\n/**\n * Executes a transpiled PHP module\n *\n * @param {Environment} environment PHPCore environment to execute inside\n * @param {Scope|null} topLevelScope Scope for the top-level statements of the module\n * @param {Object} phpCommon\n * @param {Object} options Configuration options for this engine\n * @param {Function} wrapper The wrapper function for the transpiled PHP module\n * @param {Resumable|null} pausable Pausable library for async mode, null for psync or sync modes\n * @param {string} mode\n * @constructor\n */\nfunction Engine(\n    environment,\n    topLevelScope,\n    phpCommon,\n    options,\n    wrapper,\n    pausable,\n    mode\n) {\n    /**\n     * @type {Environment}\n     */\n    this.environment = environment;\n    /**\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @type {object}\n     */\n    this.options = _.extend(\n        {\n            'path': null\n        },\n        options || {}\n    );\n    /**\n     * @type {Resumable}\n     */\n    this.pausable = pausable;\n    /**\n     * @type {Object}\n     */\n    this.phpCommon = phpCommon;\n    /**\n     * @type {Scope|null}\n     */\n    this.topLevelScope = topLevelScope || null;\n    /**\n     * @type {Function}\n     */\n    this.wrapper = wrapper;\n}\n\n_.extend(Engine.prototype, {\n    /**\n     * Defines the given alias for the given function\n     *\n     * @param {string} originalName\n     * @param {string} aliasName\n     */\n    aliasFunction: function (originalName, aliasName) {\n        this.environment.aliasFunction(originalName, aliasName);\n    },\n\n    /**\n     * Creates a new FFI Result, to provide the result of a call to a JS function\n     *\n     * @param {Function} syncCallback\n     * @param {Function|null} asyncCallback\n     * @returns {FFIResult}\n     */\n    createFFIResult: function (syncCallback, asyncCallback) {\n        return this.environment.createFFIResult(syncCallback, asyncCallback);\n    },\n\n    /**\n     * Creates a Pause object for use in async mode\n     *\n     * @returns {PauseException}\n     */\n    createPause: function () {\n        var engine = this;\n\n        if (!engine.pausable) {\n            throw new Error('Pausable is not available');\n        }\n\n        return engine.pausable.createPause();\n    },\n\n    /**\n     * Defines a new class (in any namespace).\n     * Note that the class will be defined on the current engine's environment,\n     * so any other engines that share this environment will also see the new class\n     *\n     * @param {string} name FQCN for the class to define\n     * @param {function} definitionFactory Called with `internals` object, returns the class definition\n     * @returns {Class} Returns the instance of Class that represents a PHP class\n     */\n    defineClass: function (name, definitionFactory) {\n        return this.environment.defineClass(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineCoercingFunction: function (name, fn) {\n        this.environment.defineCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a constant with the given native value\n     *\n     * @param {string} name\n     * @param {*} value\n     * @param {object} options\n     */\n    defineConstant: function (name, value, options) {\n        this.environment.defineConstant(name, value, options);\n    },\n\n    /**\n     * Defines a new function (in any namespace).\n     * Note that the function will be defined on the current engine's environment,\n     * so any other engines that share this environment will also see the new function\n     *\n     * @param {string} name Fully-qualified name for the function to define\n     * @param {function} definitionFactory Called with `internals` object, returns the function definition\n     * @returns {Class} Returns the defined function\n     */\n    defineFunction: function (name, definitionFactory) {\n        return this.environment.defineFunction(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global variable and gives it the provided value\n     *\n     * @param {string} name\n     * @param {*} nativeValue\n     */\n    defineGlobal: function (name, nativeValue) {\n        var engine = this,\n            valueFactory = engine.environment.getState().getValueFactory(),\n            value = valueFactory.coerce(nativeValue);\n\n        engine.environment.defineGlobal(name, value);\n    },\n\n    /**\n     * Defines a global variable using a getter/setter pair\n     *\n     * @param {string} name\n     * @param {Function} valueGetter\n     * @param {Function} valueSetter\n     */\n    defineGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.environment.defineGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineNonCoercingFunction: function (name, fn) {\n        this.environment.defineNonCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a super global variable (available in all scopes implicitly,\n     * unlike a normal global which is not available unless imported with a `global` statement)\n     * and gives it the provided value. If a native value is given then it will be coerced to a PHP one.\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     */\n    defineSuperGlobal: function (name, value) {\n        this.environment.defineSuperGlobal(name, value);\n    },\n\n    defineSuperGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.environment.defineSuperGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    /**\n     * Executes this PHP script, returning either its resulting value if in synchronous mode\n     * or a Promise if in asynchronous mode that will later be resolved with its resulting value\n     * (from a top-level `return` statement, if any - otherwise defaulting to null)\n     *\n     * @returns {Promise|Value}\n     */\n    execute: function __uniterInboundStackMarker__() {\n        var callFactory,\n            callStack,\n            engine = this,\n            environment = engine.environment,\n            errorReporting,\n            globalNamespace,\n            globalScope,\n            mode = engine.mode,\n            module,\n            moduleFactory,\n            options = engine.options,\n            path = options[PATH],\n            isMainProgram = engine.topLevelScope === null,\n            output,\n            pausable = engine.pausable,\n            phpCommon = engine.phpCommon,\n            PHPError = phpCommon.PHPError,\n            PHPParseError = phpCommon.PHPParseError,\n            resultValue,\n            scopeFactory,\n            state,\n            stderr = engine.getStderr(),\n            stdin = engine.getStdin(),\n            tools,\n            toolsFactory,\n            wrapper = engine.wrapper,\n            unwrap = function (wrapper) {\n                return mode === 'async' ? wrapper.async(pausable) : wrapper.sync();\n            },\n            // TODO: Wrap this module with `pauser` to remove the need for this\n            Value = unwrap(ValueWrapper),\n            topLevelNamespaceScope,\n            topLevelScope;\n\n        state = environment.getState();\n        callFactory = state.getCallFactory();\n        errorReporting = state.getErrorReporting();\n        moduleFactory = state.getModuleFactory();\n        scopeFactory = state.getScopeFactory();\n        globalNamespace = state.getGlobalNamespace();\n        callStack = state.getCallStack();\n        globalScope = state.getGlobalScope();\n        output = state.getOutput();\n        toolsFactory = state.getToolsFactory();\n        // Use the provided top-level scope if specified, otherwise use the global scope\n        // (used eg. when an `include(...)` is used inside a function)\n        topLevelScope = engine.topLevelScope || globalScope;\n        module = moduleFactory.create(path);\n        topLevelNamespaceScope = scopeFactory.createNamespaceScope(globalNamespace, globalNamespace, module);\n\n        // Create the runtime tools object, referenced by the transpiled JS output from PHPToJS\n        tools = toolsFactory.create(environment, module, topLevelNamespaceScope, topLevelScope, options);\n\n        // Push the 'main' global scope call onto the stack\n        callStack.push(callFactory.create(topLevelScope, topLevelNamespaceScope));\n\n        function handleError(error, reject) {\n            var errorValue,\n                trace;\n\n            if (error instanceof Value && error.getType() === 'exit') {\n                return error;\n            }\n\n            if (error instanceof Value && error.getType() === 'object') {\n                if (!isMainProgram) {\n                    // For included files/eval etc., just pass the Throwable up the call stack\n                    reject(error);\n\n                    return;\n                }\n\n                errorValue = error;\n                error = errorValue.coerceToNativeError();\n                trace = errorValue.getInternalProperty('trace');\n\n                if (error instanceof PHPParseError) {\n                    // ParseErrors are special - when they reach the top level scope,\n                    // if nothing has caught them then they are displayed as\n                    // \"PHP Parse error: ...\" rather than \"PHP Fatal error: Uncaught ParseError ...\"\n                    errorReporting.reportError(\n                        PHPError.E_PARSE,\n                        errorValue.getProperty('message').getNative(),\n                        errorValue.getProperty('file').getNative(),\n                        errorValue.getProperty('line').getNative(),\n                        trace,\n                        false\n                    );\n                } else {\n                    errorReporting.reportError(\n                        PHPError.E_ERROR,\n                        error.getMessage(),\n                        errorValue.getProperty('file').getNative(),\n                        errorValue.getProperty('line').getNative(),\n                        trace,\n                        errorValue.getInternalProperty('reportsOwnContext')\n                    );\n                }\n\n                reject(error);\n\n                return;\n            }\n\n            if (error instanceof PHPError) {\n                // Some fatal errors are not catchable\n\n                if (isMainProgram) {\n                    errorReporting.reportError(\n                        PHPError.E_ERROR,\n                        error.getMessage(),\n                        error.getFilePath(),\n                        error.getLineNumber(),\n                        null,\n                        false\n                    );\n                }\n\n                reject(error);\n                return;\n            }\n\n            reject(error);\n        }\n\n        // Asynchronous mode - Pausable must be available\n        if (mode === 'async') {\n            return new Promise(function (resolve, reject) {\n                var code = 'return (' +\n                    wrapper.toString() +\n                    '(stdin, stdout, stderr, tools, globalNamespace));';\n\n                pausable.execute(code, {\n                    strict: true,\n                    expose: {\n                        stdin: stdin,\n                        stdout: output,\n                        stderr: stderr,\n                        tools: tools,\n                        globalNamespace: globalNamespace\n                    }\n                }).then(function (resultValue) {\n                    // Pop the top-level scope (of the include, if this module was included) off the stack\n                    // regardless of whether an error occurred\n                    callStack.pop();\n\n                    resolve(resultValue);\n                }, function (error) {\n                    var result;\n\n                    // Pop the top-level scope (of the include, if this module was included) off the stack\n                    // regardless of whether an error occurred\n                    callStack.pop();\n\n                    result = handleError(error, reject);\n\n                    if (result) {\n                        resolve(result);\n                    }\n                });\n            });\n        }\n\n        // Otherwise load the module synchronously\n        try {\n            try {\n                resultValue = wrapper(stdin, output, stderr, tools, globalNamespace);\n\n                return mode === 'psync' && isMainProgram ?\n                    // Promise-sync mode - return a promise resolved with the result\n                    Promise.resolve(resultValue) :\n\n                    // Sync mode - just return the result, with no Promise involved\n                    resultValue;\n            } finally {\n                // Pop the top-level scope (of the include, if this module was included) off the stack\n                // regardless of whether an error occurred\n                callStack.pop();\n            }\n        } catch (error) {\n            if (mode === 'psync' && isMainProgram) {\n                // Promise-sync mode - return a promise...\n\n                return new Promise(function (resolve, reject) {\n                    var resultValue = handleError(error, function (error) {\n                        // ... rejected with the error if applicable\n                        reject(error);\n                    });\n\n                    // Otherwise if it was a special ExitValue, resolve with it\n                    if (resultValue) {\n                        resolve(resultValue);\n                    }\n                });\n            }\n\n            return handleError(error, function (error) {\n                throw error;\n            });\n        }\n    },\n\n    expose: function (object, name) {\n        this.environment.expose(object, name);\n    },\n\n    getConstant: function (name) {\n        return this.environment.getConstant(name);\n    },\n\n    /**\n     * Fetches the value of a global variable, if defined.\n     * If the variable is not defined then a NULL value will be returned.\n     *\n     * @param {string} name\n     * @return {Value}\n     */\n    getGlobal: function (name) {\n        return this.environment.getGlobal(name);\n    },\n\n    getStderr: function () {\n        return this.environment.getStderr();\n    },\n\n    getStdin: function () {\n        return this.environment.getStdin();\n    },\n\n    getStdout: function () {\n        return this.environment.getStdout();\n    },\n\n    /**\n     * Sets the value of an existing PHP global. If a native value is given\n     * then it will be coerced to a PHP one.\n     * If the global is not defined than an error will be thrown -\n     * use .defineGlobal(...) when defining a new variable\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     * @throws {Error} Throws if the variable is not defined in the global scope\n     */\n    setGlobal: function (name, value) {\n        this.environment.setGlobal(name, value);\n    },\n\n    /**\n     * Takes the given proxy and returns a new one with a synchronous API,\n     * even in Promise-synchronous mode\n     *\n     * @param {ProxyClass} proxy\n     * @return {ProxyClass}\n     */\n    toNativeWithSyncApi: function (proxy) {\n        return this.environment.toNativeWithSyncApi(proxy);\n    }\n});\n\nmodule.exports = Engine;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    PHPFatalError = phpCommon.PHPFatalError,\n    PHPParseError = phpCommon.PHPParseError;\n\n/**\n * @param {PHPState} state\n * @constructor\n */\nfunction Environment(state) {\n    /**\n     * @type {PHPState}\n     */\n    this.state = state;\n}\n\n_.extend(Environment.prototype, {\n    /**\n     * Defines the given alias for the given function\n     *\n     * @param {string} originalName\n     * @param {string} aliasName\n     */\n    aliasFunction: function (originalName, aliasName) {\n        this.state.aliasFunction(originalName, aliasName);\n    },\n\n    /**\n     * Creates a new FFI Result, to provide the result of a call to a JS function\n     *\n     * @param {Function} syncCallback\n     * @param {Function|null} asyncCallback\n     * @returns {FFIResult}\n     */\n    createFFIResult: function (syncCallback, asyncCallback) {\n        return this.state.createFFIResult(syncCallback, asyncCallback);\n    },\n\n    /**\n     * Defines a new class (in any namespace)\n     *\n     * @param {string} name FQCN for the class to define\n     * @param {function} definitionFactory Called with `internals` object, returns the class definition\n     * @returns {Class} Returns the instance of Class that represents a PHP class\n     */\n    defineClass: function (name, definitionFactory) {\n        return this.state.defineClass(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineCoercingFunction: function (name, fn) {\n        this.state.defineCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a constant with the given native value\n     *\n     * @param {string} name\n     * @param {*} value\n     * @param {object} options\n     */\n    defineConstant: function (name, value, options) {\n        this.state.defineConstant(name, value, options);\n    },\n\n    /**\n     * Defines a new function (in any namespace).\n     *\n     * @param {string} name Fully-qualified name for the function to define\n     * @param {function} definitionFactory Called with `internals` object, returns the function definition\n     * @returns {Class} Returns the defined function\n     */\n    defineFunction: function (name, definitionFactory) {\n        return this.state.defineFunction(name, definitionFactory);\n    },\n\n    /**\n     * Defines a global variable and gives it the provided value\n     *\n     * @param {string} name\n     * @param {Value} value\n     */\n    defineGlobal: function (name, value) {\n        this.state.defineGlobal(name, value);\n    },\n\n    /**\n     * Defines a global variable using a getter/setter pair\n     *\n     * @param {string} name\n     * @param {Function} valueGetter\n     * @param {Function} valueSetter\n     */\n    defineGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.state.defineGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    /**\n     * Defines a global function from a native JS one. If a fully-qualified name is provided\n     * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n     *\n     * @param {string} name\n     * @param {Function} fn\n     */\n    defineNonCoercingFunction: function (name, fn) {\n        this.state.defineNonCoercingFunction(name, fn);\n    },\n\n    /**\n     * Defines a super global variable (available in all scopes implicitly,\n     * unlike a normal global which is not available unless imported with a `global` statement)\n     * and gives it the provided value. If a native value is given then it will be coerced to a PHP one.\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     */\n    defineSuperGlobal: function (name, value) {\n        this.state.defineSuperGlobal(name, value);\n    },\n\n    defineSuperGlobalAccessor: function (name, valueGetter, valueSetter) {\n        this.state.defineSuperGlobalAccessor(name, valueGetter, valueSetter);\n    },\n\n    expose: function (object, name) {\n        this.state.getGlobalScope().expose(object, name);\n    },\n\n    getConstant: function (name) {\n        return this.state.getConstant(name);\n    },\n\n    /**\n     * Fetches the value of a global variable, if defined.\n     * If the variable is not defined then a NULL value will be returned.\n     *\n     * @param {string} name\n     * @return {Value}\n     */\n    getGlobal: function (name) {\n        return this.state.getGlobal(name);\n    },\n\n    getOptions: function () {\n        return this.state.getOptions();\n    },\n\n    getState: function () {\n        return this.state;\n    },\n\n    getStderr: function () {\n        return this.state.getStderr();\n    },\n\n    getStdin: function () {\n        return this.state.getStdin();\n    },\n\n    getStdout: function () {\n        return this.state.getStdout();\n    },\n\n    /**\n     * Reports a PHPError (fatal or parse error) originating from the parser or transpiler\n     *\n     * @param {PHPError} error\n     * @throws {Error} Throws if a non-PHPError is given\n     */\n    reportError: function (error) {\n        var errorReporting = this.state.getErrorReporting();\n\n        // Handle any PHP errors from the transpiler or parser using the ErrorReporting\n        // mechanism for PHPCore (as INI settings such as `display_errors` should take effect)\n        if (error instanceof PHPFatalError) {\n            errorReporting.reportError(\n                PHPError.E_ERROR,\n                error.getMessage(),\n                error.getFilePath(),\n                error.getLineNumber(),\n                null,\n                false\n            );\n        } else if (error instanceof PHPParseError) {\n            errorReporting.reportError(\n                PHPError.E_PARSE,\n                error.getMessage(),\n                error.getFilePath(),\n                error.getLineNumber(),\n                null,\n                false\n            );\n        } else {\n            throw new Error('Invalid error type given');\n        }\n    },\n\n    /**\n     * Sets the value of an existing PHP global. If a native value is given\n     * then it will be coerced to a PHP one.\n     * If the global is not defined than an error will be thrown -\n     * use .defineGlobal(...) when defining a new variable\n     *\n     * @param {string} name\n     * @param {Value|*} value\n     * @throws {Error} Throws if the variable is not defined in the global scope\n     */\n    setGlobal: function (name, value) {\n        this.state.setGlobal(name, value);\n    },\n\n    /**\n     * Takes the given proxy and returns a new one with a synchronous API,\n     * even in Promise-synchronous mode\n     *\n     * @param {ProxyClass} proxy\n     * @return {ProxyClass}\n     */\n    toNativeWithSyncApi: function (proxy) {\n        return this.state.getFFIValueHelper().toNativeWithSyncApi(proxy);\n    }\n});\n\nmodule.exports = Environment;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Handles the configuration for error handling in PHP-land\n *\n * @param {INIState} iniState\n * @constructor\n */\nfunction ErrorConfiguration(iniState) {\n    /**\n     * @type {INIState}\n     */\n    this.iniState = iniState;\n}\n\n_.extend(ErrorConfiguration.prototype, {\n    /**\n     * Determines whether errors should be displayed\n     *\n     * @returns {boolean}\n     */\n    getDisplayErrors: function () {\n        var iniOption = this.iniState.get('display_errors');\n\n        return String(iniOption).toLowerCase() !== 'off' && !!iniOption;\n    },\n\n    /**\n     * Fetches a bitmask of which error levels to report\n     * (set by the error_reporting(...) builtin function and \"error_reporting\" INI option)\n     *\n     * @returns {number}\n     */\n    getErrorReportingLevel: function () {\n        return parseInt(this.iniState.get('error_reporting'), 10);\n    },\n\n    /**\n     * Sets the error reporting level (may be a non-integer even though only integer is valid)\n     *\n     * @param {number|*} level\n     */\n    setErrorReportingLevel: function (level) {\n        this.iniState.set('error_reporting', level);\n    }\n});\n\nmodule.exports = ErrorConfiguration;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    // Maps the error type PHP constant name to the internal PHPError type that should be raised\n    ERROR_CONSTANT_NAME_TO_LEVEL = {\n        'E_ERROR': PHPError.E_ERROR,\n        'E_WARNING': PHPError.E_WARNING,\n        'E_PARSE': PHPError.E_PARSE,\n        'E_NOTICE': PHPError.E_NOTICE,\n        'E_STRICT': PHPError.E_STRICT,\n        'E_RECOVERABLE_ERROR': PHPError.E_RECOVERABLE_ERROR,\n        'E_DEPRECATED': PHPError.E_DEPRECATED\n    };\n\n/**\n * Converts between Uniter error levels and the PHP constant error level values\n *\n * @param {Function} getConstant\n * @constructor\n */\nfunction ErrorConverter(getConstant) {\n    /**\n     * @type {Function}\n     */\n    this.getConstant = getConstant;\n}\n\n_.extend(ErrorConverter.prototype, {\n    /**\n     * Converts from a Uniter error level string to the PHP integer value (E_* constant)\n     *\n     * @param {string} level\n     * @returns {number}\n     */\n    errorLevelToBits: function (level) {\n        var bits = null,\n            converter = this;\n\n        _.forOwn(ERROR_CONSTANT_NAME_TO_LEVEL, function (candidateLevel, constantName) {\n            if (candidateLevel !== level) {\n                return;\n            }\n\n            bits = converter.getConstant(constantName);\n\n            return false;\n        });\n\n        if (bits === null) {\n            throw new Error('Unknown error level \"' + level + '\"');\n        }\n\n        return bits;\n    }\n});\n\nmodule.exports = ErrorConverter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * Handles taking an ObjectValue containing an Error instance, raises it via the ErrorReporting mechanism\n * and then returns a native error constructed from its contents\n *\n * @param {ErrorReporting} errorReporting\n * @constructor\n */\nfunction ErrorPromoter(errorReporting) {\n    /**\n     * @type {ErrorReporting}\n     */\n    this.errorReporting = errorReporting;\n}\n\n_.extend(ErrorPromoter.prototype, {\n    /**\n     * Reports the specified error message to stdout, stderr, both or neither\n     * depending on its level and the current error_reporting level/display_errors configured\n     *\n     * @param {ObjectValue} errorValue\n     * @returns {Error}\n     */\n    promote: function (errorValue) {\n        var nativeError = errorValue.coerceToNativeError(),\n            promoter = this,\n            trace = errorValue.getInternalProperty('trace');\n\n        if (errorValue.classIs('ParseError')) {\n            // ParseErrors are special - when they reach the top level scope,\n            // if nothing has caught them then they are displayed as\n            // \"PHP Parse error: ...\" rather than \"PHP Fatal error: Uncaught ParseError ...\"\n            promoter.errorReporting.reportError(\n                PHPError.E_PARSE,\n                errorValue.getProperty('message').getNative(),\n                errorValue.getProperty('file').getNative(),\n                errorValue.getProperty('line').getNative(),\n                trace,\n                false\n            );\n        } else {\n            promoter.errorReporting.reportError(\n                PHPError.E_ERROR,\n                nativeError.getMessage(),\n                errorValue.getProperty('file').getNative(),\n                errorValue.getProperty('line').getNative(),\n                trace,\n                errorValue.getInternalProperty('reportsOwnContext')\n            );\n        }\n\n        return nativeError;\n    }\n});\n\nmodule.exports = ErrorPromoter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n\n    ERROR_WITH_CONTEXT_AND_TRACE = 'core.error_with_context_and_trace',\n    ERROR_WITHOUT_CONTEXT_BUT_WITH_TRACE = 'core.error_without_context_but_with_trace',\n    ERROR_WITHOUT_TRACE = 'core.error_without_trace',\n    UNKNOWN = 'core.unknown';\n\n/**\n * Handles the final output of error messages to the standard streams,\n * based on the current configuration\n *\n * @param {ErrorConfiguration} errorConfiguration\n * @param {ErrorConverter} errorConverter\n * @param {TraceFormatter} traceFormatter\n * @param {Translator} translator\n * @param {Stream} stdout\n * @param {Stream} stderr\n * @constructor\n */\nfunction ErrorReporting(\n    errorConfiguration,\n    errorConverter,\n    traceFormatter,\n    translator,\n    stdout,\n    stderr\n) {\n    /**\n     * @type {ErrorConfiguration}\n     */\n    this.errorConfiguration = errorConfiguration;\n    /**\n     * @type {ErrorConverter}\n     */\n    this.errorConverter = errorConverter;\n    /**\n     * @type {Stream}\n     */\n    this.stderr = stderr;\n    /**\n     * @type {Stream}\n     */\n    this.stdout = stdout;\n    /**\n     * @type {TraceFormatter}\n     */\n    this.traceFormatter = traceFormatter;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n}\n\n_.extend(ErrorReporting.prototype, {\n    /**\n     * Reports the specified error message to stdout, stderr, both or neither\n     * depending on its level and the current error_reporting level/display_errors configured\n     *\n     * @param {string} level\n     * @param {string} message\n     * @param {string|null=} filePath\n     * @param {number|null=} lineNumber\n     * @param {{index: number, file: string, line: number, func: Function, args: *[]}[]=} trace\n     * @param {boolean} reportsOwnContext Whether the error handles reporting its own file/line context\n     */\n    reportError: function (level, message, filePath, lineNumber, trace, reportsOwnContext) {\n        var errorReporting = this,\n            displayErrors = errorReporting.errorConfiguration.getDisplayErrors(),\n            allowedErrorBitmask = errorReporting.errorConfiguration.getErrorReportingLevel(),\n            levelBits = errorReporting.errorConverter.errorLevelToBits(level),\n            formattedTrace,\n            normalisedLineNumber = lineNumber || errorReporting.translator.translate(UNKNOWN),\n            normalisedFilePath = filePath || errorReporting.translator.translate(UNKNOWN),\n            suffix;\n\n        /*jshint bitwise: false */\n        if ((allowedErrorBitmask & levelBits) === 0) {\n            // This error level is not enabled for reporting: do nothing\n            return;\n        }\n\n        // When written to one of the standard streams, the file/line combo is provided\n        // in a colon-separated format rather than the verbose \"in ... on line ...\"\n\n        if (level === PHPError.E_ERROR && trace) {\n            formattedTrace = trace ? errorReporting.traceFormatter.format(trace) : null;\n\n            if (reportsOwnContext) {\n                suffix = errorReporting.translator.translate(ERROR_WITHOUT_CONTEXT_BUT_WITH_TRACE, {\n                    filePath: normalisedFilePath,\n                    line: normalisedLineNumber,\n                    formattedTrace: formattedTrace\n                });\n            } else {\n                suffix = errorReporting.translator.translate(ERROR_WITH_CONTEXT_AND_TRACE, {\n                    filePath: normalisedFilePath,\n                    line: normalisedLineNumber,\n                    formattedTrace: formattedTrace\n                });\n            }\n        } else {\n            if (reportsOwnContext) {\n                suffix = '';\n            } else {\n                suffix = errorReporting.translator.translate(ERROR_WITHOUT_TRACE, {\n                    filePath: normalisedFilePath,\n                    line: normalisedLineNumber\n                });\n            }\n        }\n\n        // NB: The double-space after colon is intentional, to match the reference implementation\n        errorReporting.stderr.write('PHP ' + level + ':  ' + message + suffix + '\\n');\n\n        if (displayErrors) {\n            errorReporting.stdout.write('\\n' + level + ': ' + message + suffix + '\\n');\n        }\n    }\n});\n\nmodule.exports = ErrorReporting;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    UNKNOWN = 'core.unknown';\n\n/**\n * Standard way to convert a call stack trace (returned by CallStack.getTrace())\n * to a printable formatted form. Used by Error::getTraceAsString(), Exception::getTraceAsString()\n * and when an uncaught fatal error is written to stdout/stderr.\n *\n * @param {Translator} translator\n * @constructor\n */\nfunction TraceFormatter(translator) {\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n}\n\n_.extend(TraceFormatter.prototype, {\n    /**\n     * Formats a call stack trace to a string\n     *\n     * @param {{index: number, file: string, line: number, func: Function, args: *[]}[]} trace\n     * @returns {string}\n     */\n    format: function (trace) {\n        var formatter = this,\n            traceStrings = [];\n\n        _.each(trace, function (callData) {\n            // Convert arguments to a string representation\n            var args = _.map(callData.args, function (argValue) {\n                return argValue.formatAsString();\n            }),\n                line = callData.line || formatter.translator.translate(UNKNOWN);\n\n            traceStrings.push(\n                '#' + callData.index + ' ' + callData.file + '(' + line + '): ' +\n                callData.func + '(' + args.join(', ') + ')'\n            );\n        });\n\n        traceStrings.push('#' + trace.length + ' {main}');\n\n        return traceStrings.join('\\n');\n    }\n});\n\nmodule.exports = TraceFormatter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    Exception = phpCommon.Exception;\n\n/**\n * Represents a failed load operation. Loads may be made by an include/require or an eval(...)\n *\n * @param {Error} previousError\n * @constructor\n */\nfunction LoadFailedException(previousError) {\n    Exception.call(this, 'Load failed' + (previousError ? ' :: ' + previousError.message : ''));\n\n    /**\n     * @type {Error}\n     */\n    this.previousError = previousError;\n}\n\nutil.inherits(LoadFailedException, Exception);\n\n_.extend(LoadFailedException.prototype, {\n    /**\n     * Fetches the previous error or exception that caused the load to fail\n     *\n     * @returns {Error}\n     */\n    getPreviousError: function () {\n        return this.previousError;\n    }\n});\n\nmodule.exports = LoadFailedException;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    util = require('util'),\n    Exception = phpCommon.Exception;\n\n/**\n * Represents an attempt to fetch or pop the active output buffer when none is active\n *\n * @constructor\n */\nfunction NoActiveOutputBufferException() {\n    Exception.call(this, 'No output buffer is active');\n}\n\nutil.inherits(NoActiveOutputBufferException, Exception);\n\nmodule.exports = NoActiveOutputBufferException;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Value[]} args\n * @constructor\n */\nfunction Call(args) {\n    /**\n     * @type {Reference[]|Value[]|Variable[]}\n     */\n    this.args = args;\n}\n\n_.extend(Call.prototype, {\n    /**\n     * Fetches the current class for the call, if any\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the path to the file this call was made from\n     *\n     * @returns {string|null}\n     */\n    getFilePath: function () {\n        return '(JavaScript code)';\n    },\n\n    /**\n     * Fetches the Value objects passed as arguments to the called function\n     *\n     * @returns {Value[]}\n     */\n    getFunctionArgs: function () {\n        return this.args;\n    },\n\n    /**\n     * Fetches the name of the current function\n     *\n     * @returns {string}\n     */\n    getFunctionName: function () {\n        return '(JavaScript function)';\n    },\n\n    /**\n     * Fetches the number of the last line executed inside this call's scope\n     *\n     * @returns {number|null}\n     */\n    getLastLine: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the scope inside the called function\n     *\n     * @returns {Scope}\n     */\n    getScope: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the static class introduced by this call's scope. If null,\n     * the call was a forwarding call, and so the parent call's static class should be used\n     *\n     * @returns {Class|null}\n     */\n    getStaticClass: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the ObjectValue that is the current `$this` object, if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        return null;\n    },\n\n    /**\n     * Fetches the path to the file this call was made from, suitable for stack traces (so without any eval context)\n     *\n     * @returns {string|null}\n     */\n    getTraceFilePath: function () {\n        return '(JavaScript code)';\n    },\n\n    /**\n     * Registers a finder for looking up the current/last line number inside the called function\n     */\n    instrument: function () {\n        throw new Error('Unable to instrument an FFI Call');\n    },\n\n    /**\n     * Determines whether this call is a userland call (from inside PHP-land) or not\n     *\n     * @returns {boolean}\n     */\n    isUserland: function () {\n        return false;\n    },\n\n    /**\n     * Determines whether all errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesErrors: function () {\n        return false;\n    },\n\n    /**\n     * Determines whether own errors should be suppressed for this call\n     *\n     * @returns {boolean}\n     */\n    suppressesOwnErrors: function () {\n        return false;\n    }\n});\n\nmodule.exports = Call;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('../Call'),\n    require('lie'),\n    require('../../Value')\n], function (\n    _,\n    phpCommon,\n    FFICall,\n    Promise,\n    Value\n) {\n    var Exception = phpCommon.Exception;\n\n    /**\n     * Encapsulates calling a PHP-land method from JS-land using the FFI API\n     *\n     * @param {CallFactory} callFactory\n     * @param {CallStack} callStack\n     * @param {ErrorPromoter} errorPromoter\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @constructor\n     */\n    function Caller(\n        callFactory,\n        callStack,\n        errorPromoter,\n        pausable,\n        mode\n    ) {\n        /**\n         * @type {CallFactory}\n         */\n        this.callFactory = callFactory;\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {ErrorPromoter}\n         */\n        this.errorPromoter = errorPromoter;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n    }\n\n    _.extend(Caller.prototype, {\n        /**\n         * Calls a method in asynchronous mode\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @returns {Promise<Value>}\n         */\n        callMethodAsync: function (objectValue, methodName, args) {\n            var caller = this;\n\n            if (caller.mode !== 'async') {\n                throw new Exception('Caller.callMethodAsync() :: Must be in async mode');\n            }\n\n            // Call the method via Pausable to allow for blocking operation\n            return caller.pausable.call(\n                objectValue.callMethod,\n                [methodName, args],\n                objectValue\n            )\n                // Pop the call off the stack _before_ returning, to mirror sync mode's behaviour\n                .finally(caller.popFFICall.bind(caller))\n                .catch(function (error) {\n                    if (error instanceof Value && error.getType() === 'object') {\n                        // Method threw a PHP Exception, so throw a native JS error for it\n                        throw caller.errorPromoter.promote(error);\n                    }\n\n                    // Normal error: just pass it up to the caller\n                    throw error;\n                });\n        },\n\n        /**\n         * Calls a method in either Promise-synchronous (psync) or synchronous (sync) mode.\n         * If in psync mode, useSyncApiAlthoughPsync may be passed as true, in which case\n         * the API will be presented in a synchronous fashion without Promises.\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @param {boolean=} useSyncApiAlthoughPsync\n         * @returns {Promise<Value>|Value}\n         */\n        callMethodSyncLike: function (objectValue, methodName, args, useSyncApiAlthoughPsync) {\n            var caller = this;\n\n            if (caller.mode === 'async') {\n                throw new Exception('callMethodSyncLike() :: Cannot call in async mode');\n            }\n\n            function invoke() {\n                try {\n                    return objectValue.callMethod(methodName, args);\n                } catch (error) {\n                    if (error instanceof Value && error.getType() === 'object') {\n                        // Method threw a PHP Exception, so throw a native JS error for it\n                        throw caller.errorPromoter.promote(error);\n                    }\n\n                    throw error;\n                } finally {\n                    caller.popFFICall();\n                }\n            }\n\n            if (caller.mode === 'psync' && !useSyncApiAlthoughPsync) {\n                // For Promise-synchronous mode, we need to return a promise\n                // even though the actual invocation must return synchronously\n                return new Promise(function (resolve, reject) {\n                    try {\n                        resolve(invoke());\n                    } catch (error) {\n                        reject(error);\n                    }\n                });\n            }\n\n            // Otherwise we're in sync mode (or psync mode with sync API explicitly requested)\n            return invoke();\n        },\n\n        /**\n         * Pushes an FFI call onto the call stack\n         *\n         * @param {Value[]} args\n         */\n        pushFFICall: function (args) {\n            var caller = this;\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            caller.callStack.push(caller.callFactory.createFFICall(args));\n        },\n\n        /**\n         * Pops the FFI call off of the call stack\n         */\n        popFFICall: function () {\n            var caller = this;\n\n            if (!(caller.callStack.getCurrent() instanceof FFICall)) {\n                throw new Exception('Caller.popFFICall() :: Current call is not an FFI call');\n            }\n\n            caller.callStack.pop();\n        }\n    });\n\n    return Caller;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {Caller} caller\n     * @param {string} mode\n     * @constructor\n     */\n    function NativeCaller(caller, mode) {\n        /**\n         * @type {Caller}\n         */\n        this.caller = caller;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n    }\n\n    _.extend(NativeCaller.prototype, {\n        /**\n         * Encapsulates calling a PHP-land method from JS-land using the FFI API,\n         * unwrapping the result to a native value\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @param {boolean=} useSyncApiAlthoughPsync\n         * @returns {Promise<*>|*}\n         */\n        callMethod: function (objectValue, methodName, args, useSyncApiAlthoughPsync) {\n            var nativeCaller = this,\n                result;\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            nativeCaller.caller.pushFFICall(args);\n\n            if (nativeCaller.mode === 'async') {\n                return nativeCaller.caller.callMethodAsync(objectValue, methodName, args)\n                    .then(function (resultValue) {\n                        return resultValue.getNative();\n                    });\n            }\n\n            // Otherwise we're in sync or psync mode\n            result = nativeCaller.caller.callMethodSyncLike(objectValue, methodName, args, useSyncApiAlthoughPsync);\n\n            return nativeCaller.mode === 'psync' && !useSyncApiAlthoughPsync ?\n                result.then(function (resultValue) {\n                    return resultValue.getNative();\n                }) :\n                result.getNative();\n        }\n    });\n\n    return NativeCaller;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {Caller} caller\n     * @param {string} mode\n     * @constructor\n     */\n    function ValueCaller(caller, mode) {\n        /**\n         * @type {Caller}\n         */\n        this.caller = caller;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n    }\n\n    _.extend(ValueCaller.prototype, {\n        /**\n         * Encapsulates calling a PHP-land method from JS-land using the FFI API,\n         * returning the result as a Value object\n         *\n         * @param {ObjectValue} objectValue\n         * @param {string} methodName\n         * @param {Value[]} args\n         * @param {boolean=} useSyncApiAlthoughPsync\n         * @returns {Promise<Value>|Value}\n         */\n        callMethod: function (objectValue, methodName, args, useSyncApiAlthoughPsync) {\n            var valueCaller = this;\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            valueCaller.caller.pushFFICall(args);\n\n            if (valueCaller.mode === 'async') {\n                // Unlike NativeCaller, do not coerce to native here\n                return valueCaller.caller.callMethodAsync(objectValue, methodName, args);\n            }\n\n            // Otherwise we're in sync or psync mode\n            return valueCaller.caller.callMethodSyncLike(objectValue, methodName, args, useSyncApiAlthoughPsync);\n        }\n    });\n\n    return ValueCaller;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Fetches the exported value for an FFIObjectValue, creating and caching it if needed\n *\n * @param {UnwrapperRepository} unwrapperRepository\n * @param {ProxyFactory} proxyFactory\n * @constructor\n */\nfunction ExportFactory(unwrapperRepository, proxyFactory) {\n    /**\n     * @type {ProxyFactory}\n     */\n    this.proxyFactory = proxyFactory;\n    /**\n     * @type {UnwrapperRepository}\n     */\n    this.unwrapperRepository = unwrapperRepository;\n}\n\n_.extend(ExportFactory.prototype, {\n    /**\n     * Creates an exported value for the object value that the wrapped reference points to.\n     * If a custom unwrapper has been defined for its class then that will be used instead.\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {Object|*}\n     */\n    create: function (objectValue) {\n        var classObject = objectValue.getClass(),\n            coercedObject,\n            factory = this,\n            unwrapper = factory.unwrapperRepository.getUnwrapperForClass(classObject);\n\n        if (unwrapper !== null) {\n            // A custom unwrapper has been defined for the class of this object\n\n            // In auto-coercing mode, provide the native object, otherwise the object value\n            coercedObject = objectValue.getThisObject();\n\n            // Provide the object as both the thisObj and the first argument for ease of use\n            return unwrapper.call(coercedObject, coercedObject);\n        }\n\n        // No custom unwrapper has been defined, use a generated ProxyClass\n        return factory.proxyFactory.create(objectValue);\n    }\n});\n\nmodule.exports = ExportFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Fetches the exported value for an ObjectValue, creating and caching it if needed\n *\n * @param {ExportFactory} exportFactory\n * @param {ValueStorage} valueStorage\n * @constructor\n */\nfunction ExportRepository(exportFactory, valueStorage) {\n    /**\n     * @type {ExportFactory}\n     */\n    this.exportFactory = exportFactory;\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ExportRepository.prototype, {\n    /**\n     * Fetches an exported native object for the given object value\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {Object|*}\n     */\n    export: function (objectValue) {\n        var exportedValue,\n            repository = this;\n\n        if (repository.valueStorage.hasExportForObjectValue(objectValue)) {\n            // Cache the exported value for each ObjectValue for identity and to save on memory\n            return repository.valueStorage.getExportForObjectValue(objectValue);\n        }\n\n        exportedValue = repository.exportFactory.create(objectValue);\n\n        // Allow us to always map the source object value to this same exported value\n        repository.valueStorage.setExportForObjectValue(objectValue, exportedValue);\n\n        /*\n         * If the exported value is an object that is ever passed back into PHP-land,\n         * allow us to map it back to the source object value.\n         * If a primitive value is exported instead then we can ignore, as it will just\n         * be coerced to and from its native value and a scalar value object\n         */\n        if (typeof exportedValue === 'object' && exportedValue !== null) {\n            repository.valueStorage.setObjectValueForExport(exportedValue, objectValue);\n        }\n\n        return exportedValue;\n    }\n});\n\nmodule.exports = ExportRepository;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * Stores custom unwrappers for classes. When later fetched, if a class does not define\n * an unwrapper on itself, its ancestry will be checked to see if any ancestor does,\n * in which case that unwrapper will be used.\n *\n * @constructor\n */\nfunction UnwrapperRepository() {\n    /**\n     * @type {WeakMap<object, Function>}\n     */\n    this.classToUnwrapperMap = new WeakMap();\n}\n\n_.extend(UnwrapperRepository.prototype, {\n    /**\n     * Defines a custom unwrapper for a class\n     *\n     * @param {Class} classObject\n     * @param {Function} unwrapper\n     */\n    defineUnwrapper: function (classObject, unwrapper) {\n        this.classToUnwrapperMap.set(classObject, unwrapper);\n    },\n\n    /**\n     * Fetches the custom unwrapper for the class or an ancestor if defined\n     *\n     * @param {Class} classObject\n     * @returns {Function|null}\n     */\n    getUnwrapperForClass: function (classObject) {\n        var currentClass = classObject,\n            repository = this,\n            unwrapper = null;\n\n        while (currentClass !== null) {\n            if (repository.classToUnwrapperMap.has(currentClass)) {\n                // A custom unwrapper has been defined for the class\n                return repository.classToUnwrapperMap.get(currentClass);\n            }\n\n            // Now check whether any interfaces implemented directly by the class define an unwrapper\n            /*jshint loopfunc: true */\n            if (currentClass.getInterfaces().some(function (interfaceObject) {\n                unwrapper = repository.getUnwrapperForClass(interfaceObject);\n\n                if (unwrapper !== null) {\n                    // A custom unwrapper has been defined for the interface (or somewhere in its ancestry)\n\n                    return true; // No need to keep checking\n                }\n            })) {\n                return unwrapper;\n            }\n\n            currentClass = currentClass.getSuperClass();\n        }\n\n        // No custom unwrapper has been defined\n        return null;\n    }\n});\n\nmodule.exports = UnwrapperRepository;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} AsyncObjectValue\n * @param {class} PHPObject\n * @param {class} ValueCoercer\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {NativeCaller} nativeCaller\n * @param {ValueCaller} valueCaller\n * @constructor\n */\nfunction FFIFactory(\n    AsyncObjectValue,\n    PHPObject,\n    ValueCoercer,\n    valueFactory,\n    callStack,\n    nativeCaller,\n    valueCaller\n) {\n    /**\n     * @type {class}\n     */\n    this.AsyncObjectValue = AsyncObjectValue;\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {Object.<boolean, ValueCoercer}\n     */\n    this.modeToValueCoercerMap = {};\n    /**\n     * @type {NativeCaller}\n     */\n    this.nativeCaller = nativeCaller;\n    /**\n     * @type {class}\n     */\n    this.PHPObject = PHPObject;\n    /**\n     * @type {ValueCaller}\n     */\n    this.valueCaller = valueCaller;\n    /**\n     * @type {class}\n     */\n    this.ValueCoercer = ValueCoercer;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FFIFactory.prototype, {\n    /**\n     * Creates an AsyncObjectValue that wraps the given ObjectValue\n     *\n     * @param {ObjectValue} wrappedObjectValue\n     * @returns {AsyncObjectValue}\n     */\n    createAsyncObjectValue: function (wrappedObjectValue) {\n        var factory = this;\n\n        return new factory.AsyncObjectValue(\n            factory.valueFactory,\n            factory.callStack,\n            factory.valueCaller,\n            wrappedObjectValue\n        );\n    },\n\n    /**\n     * Creates a PHPObject, which wraps an ObjectValue and allows its methods\n     * to be called and passed native values for its parameter arguments\n     * and coerces its return value back to a native too.\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {PHPObject}\n     */\n    createPHPObject: function (objectValue) {\n        var factory = this;\n\n        return new factory.PHPObject(factory.valueFactory, factory.nativeCaller, objectValue);\n    },\n\n    /**\n     * Fetches a value coercer for the given configuration. Note that as there are only\n     * two possible modes, the instances are cached on first fetch to save memory usage.\n     *\n     * @param {boolean} autoCoercionEnabled\n     * @returns {ValueCoercer}\n     */\n    createValueCoercer: function (autoCoercionEnabled) {\n        var factory = this;\n\n        if (!factory.modeToValueCoercerMap[autoCoercionEnabled]) {\n            factory.modeToValueCoercerMap[autoCoercionEnabled] = new factory.ValueCoercer(autoCoercionEnabled);\n        }\n\n        return factory.modeToValueCoercerMap[autoCoercionEnabled];\n    }\n});\n\nmodule.exports = FFIFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception;\n\n/**\n * @param {Internals} baseInternals\n * @param {UnwrapperRepository} unwrapperRepository\n * @param {ValueFactory} valueFactory\n * @param {Namespace} globalNamespace\n * @param {NamespaceScope} globalNamespaceScope\n * @constructor\n */\nfunction ClassInternalsClassFactory(\n    baseInternals,\n    unwrapperRepository,\n    valueFactory,\n    globalNamespace,\n    globalNamespaceScope\n) {\n    /**\n     * @type {Internals}\n     */\n    this.baseInternals = baseInternals;\n    /**\n     * @type {Namespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.globalNamespaceScope = globalNamespaceScope;\n    /**\n     * @type {UnwrapperRepository}\n     */\n    this.unwrapperRepository = unwrapperRepository;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(ClassInternalsClassFactory.prototype, {\n    /**\n     * Creates a ClassInternals class for use when defining a class using JS\n     *\n     * @return {class}\n     */\n    create: function () {\n        var factory = this;\n\n        /**\n         * @param {string} fqcn\n         * @constructor\n         */\n        function ClassInternals(fqcn) {\n            /**\n             * @type {string[]}\n             */\n            this.definedInterfaceNames = [];\n            /**\n             * @type {boolean}\n             */\n            this.enableAutoCoercion = true;\n            /**\n             * @type {string}\n             */\n            this.fqcn = fqcn;\n            /**\n             * @type {Class|null}\n             */\n            this.superClass = null;\n            /**\n             * @type {Function|null}\n             */\n            this.unwrapper = null;\n        }\n\n        // Extend the base Internals object so we inherit all the public service properties etc.\n        ClassInternals.prototype = Object.create(factory.baseInternals);\n\n        _.extend(ClassInternals.prototype, {\n            /**\n             * Calls the constructor for the superclass of this class, if this class extends another\n             *\n             * @param {ObjectValue|object} instance Object instance (see below)\n             * @param {Value[]|*[]} args Arguments (Value objects if non-coercing, native if coercing)\n             */\n            callSuperConstructor: function (instance, args) {\n                var argValues,\n                    instanceValue,\n                    internals = this;\n\n                if (!internals.superClass) {\n                    throw new Exception(\n                        'Cannot call superconstructor: no superclass is defined for class \"' + internals.fqcn + '\"'\n                    );\n                }\n\n                if (!args) {\n                    args = [];\n                }\n\n                /*\n                 * If the class is in auto-coercing mode, `instance` will be the native\n                 * object value. If the class is in non-coercing mode, `instance` will be\n                 * an ObjectValue wrapping the instance, so we need to coerce what we are passed\n                 * to make sure it is an ObjectValue as expected by Class.prototype.construct(...).\n                 * The same applies to the arguments list.\n                 */\n                if (internals.enableAutoCoercion) {\n                    instanceValue = factory.valueFactory.coerce(instance);\n\n                    argValues = _.map(args, function (nativeArg) {\n                        return factory.valueFactory.coerce(nativeArg);\n                    });\n                } else {\n                    instanceValue = instance;\n                    argValues = args;\n                }\n\n                internals.superClass.construct(instanceValue, argValues);\n            },\n\n            /**\n             * Defines the class\n             *\n             * @param {Function} definitionFactory\n             * @return {Class}\n             */\n            defineClass: function (definitionFactory) {\n                var internals = this,\n                    name,\n                    Class = definitionFactory(internals),\n                    classObject,\n                    namespace,\n                    // Split the FQCN into a Namespace from its prefix and its name within that namespace\n                    // (ie. a FQCN of \"My\\Stuff\\MyClass\" gives Namespace<My\\Stuff> and name \"MyClass\")\n                    parsed = factory.globalNamespace.parseName(internals.fqcn);\n\n                if (internals.superClass) {\n                    Class.superClass = internals.superClass;\n                }\n\n                // Add any new interfaces to implement to the class definition\n                if (!Class.interfaces) {\n                    Class.interfaces = [];\n                }\n                [].push.apply(Class.interfaces, internals.definedInterfaceNames);\n\n                namespace = parsed.namespace;\n                name = parsed.name;\n\n                // Now create the internal Uniter class (an instance of Class)\n                // from the PHP class definition information\n                classObject = namespace.defineClass(\n                    name,\n                    Class,\n                    factory.globalNamespaceScope,\n                    internals.enableAutoCoercion\n                );\n\n                if (internals.unwrapper) {\n                    // Custom unwrappers may be used to eg. unwrap a PHP \\DateTime object to a JS Date object\n                    factory.unwrapperRepository.defineUnwrapper(classObject, internals.unwrapper);\n                }\n\n                return classObject;\n            },\n\n            /**\n             * Defines a custom unwrapper for this class. When an instance of this class\n             * is exported to JS-land, the unwrapper will be used to produce the unwrapped value\n             *\n             * @param {Function} unwrapper\n             */\n            defineUnwrapper: function (unwrapper) {\n                this.unwrapper = unwrapper;\n            },\n\n            /**\n             * Disables auto-coercion for the class\n             */\n            disableAutoCoercion: function () {\n                this.enableAutoCoercion = false;\n            },\n\n            /**\n             * Extends another defined class\n             *\n             * @param {string} fqcn\n             */\n            extendClass: function (fqcn) {\n                this.superClass = factory.globalNamespace.getClass(fqcn);\n            },\n\n            /**\n             * Implements an interface\n             *\n             * @param {string} interfaceName\n             */\n            implement: function (interfaceName) {\n                this.definedInterfaceNames.push(interfaceName);\n            }\n        });\n\n        return ClassInternals;\n    }\n});\n\nmodule.exports = ClassInternalsClassFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {Internals} baseInternals\n * @param {ValueFactory} valueFactory\n * @param {FFIFactory} ffiFactory\n * @param {Namespace} globalNamespace\n * @param {NamespaceScope} globalNamespaceScope\n * @constructor\n */\nfunction FunctionInternalsClassFactory(\n    baseInternals,\n    valueFactory,\n    ffiFactory,\n    globalNamespace,\n    globalNamespaceScope\n) {\n    /**\n     * @type {Internals}\n     */\n    this.baseInternals = baseInternals;\n    /**\n     * @type {FFIFactory}\n     */\n    this.ffiFactory = ffiFactory;\n    /**\n     * @type {Namespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.globalNamespaceScope = globalNamespaceScope;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FunctionInternalsClassFactory.prototype, {\n    /**\n     * Creates a FunctionInternals class for use when defining a function using JS\n     *\n     * @return {class}\n     */\n    create: function () {\n        var factory = this;\n\n        /**\n         * @param {string} fqfn\n         * @constructor\n         */\n        function FunctionInternals(fqfn) {\n            /**\n             * @type {boolean}\n             */\n            this.enableAutoCoercion = true;\n            /**\n             * @type {string}\n             */\n            this.fqfn = fqfn;\n        }\n\n        // Extend the base Internals object so we inherit all the public service properties etc.\n        FunctionInternals.prototype = Object.create(factory.baseInternals);\n\n        _.extend(FunctionInternals.prototype, {\n            /**\n             * Defines the function\n             *\n             * @param {Function} definitionFactory\n             */\n            defineFunction: function (definitionFactory) {\n                var internals = this,\n                    name,\n                    func = definitionFactory(internals),\n                    namespace,\n                    parsed = factory.globalNamespace.parseName(internals.fqfn),\n                    valueCoercer = factory.ffiFactory.createValueCoercer(internals.enableAutoCoercion);\n\n                namespace = parsed.namespace;\n                name = parsed.name;\n\n                namespace.defineFunction(\n                    name,\n                    function __uniterOutboundStackMarker__() {\n                        // Unwrap args from PHP-land to JS-land to native values if/as appropriate\n                        var effectiveArguments = valueCoercer.coerceArguments(arguments);\n\n                        return func.apply(internals, effectiveArguments);\n                    },\n                    factory.globalNamespaceScope\n                );\n            },\n\n            /**\n             * Disables auto-coercion for the class\n             */\n            disableAutoCoercion: function () {\n                this.enableAutoCoercion = false;\n            }\n        });\n\n        return FunctionInternals;\n    }\n});\n\nmodule.exports = FunctionInternalsClassFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {string} mode Synchronicity mode: \"async\", \"psync\" or \"sync\"\n * @param {Resumable|null} pausable\n * @param {ValueFactory} valueFactory\n * @param {CallFactory} callFactory\n * @param {CallStack} callStack\n * @param {ValueHelper} valueHelper\n * @param {ClassAutoloader} classAutoloader\n * @param {ErrorConfiguration} errorConfiguration\n * @param {ErrorPromoter} errorPromoter\n * @param {ErrorReporting} errorReporting\n * @param {Namespace} globalNamespace,\n * @param {Scope} globalScope,\n * @param {INIState} iniState,\n * @param {OptionSet} optionSet,\n * @param {Output} output,\n * @param {Runtime} runtime,\n * @param {Stream} stdout,\n * @param {TraceFormatter} traceFormatter,\n * @param {Translator} translator,\n * @param {PHPState} state\n * @constructor\n */\nfunction Internals(\n    mode,\n    pausable,\n    valueFactory,\n    callFactory,\n    callStack,\n    valueHelper,\n    classAutoloader,\n    errorConfiguration,\n    errorPromoter,\n    errorReporting,\n    globalNamespace,\n    globalScope,\n    iniState,\n    optionSet,\n    output,\n    runtime,\n    stdout,\n    traceFormatter,\n    translator,\n    state\n) {\n    /**\n     * @public\n     * @type {CallFactory}\n     */\n    this.callFactory = callFactory;\n    /**\n     * @public\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @public\n     * @type {ClassAutoloader}\n     */\n    this.classAutoloader = classAutoloader;\n    /**\n     * @public\n     * @type {ErrorConfiguration}\n     */\n    this.errorConfiguration = errorConfiguration;\n    /**\n     * @public\n     * @type {ErrorPromoter}\n     */\n    this.errorPromoter = errorPromoter;\n    /**\n     * @public\n     * @type {ErrorReporting}\n     */\n    this.errorReporting = errorReporting;\n    /**\n     * @public\n     * @type {Namespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @public\n     * @type {Scope}\n     */\n    this.globalScope = globalScope;\n    /**\n     * @public\n     * @type {INIState}\n     */\n    this.iniState = iniState;\n    /**\n     * @public\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @public\n     * @type {OptionSet}\n     */\n    this.optionSet = optionSet;\n    /**\n     * @public\n     * @type {Output}\n     */\n    this.output = output;\n    /**\n     * @public\n     * @type {Resumable|null}\n     */\n    this.pausable = pausable;\n    /**\n     * @public\n     * @type {Runtime}\n     */\n    this.runtime = runtime;\n    /**\n     * @public\n     * @type {PHPState}\n     */\n    this.state = state;\n    /**\n     * @public\n     * @type {Stream}\n     */\n    this.stdout = stdout;\n    /**\n     * @public\n     * @type {TraceFormatter}\n     */\n    this.traceFormatter = traceFormatter;\n    /**\n     * @public\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @public\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @public\n     * @type {ValueHelper}\n     */\n    this.valueHelper = valueHelper;\n\n    // Sanity check\n    if (mode === 'async' && !pausable) {\n        throw new Error('Pausable is required for async mode');\n    }\n}\n\n_.extend(Internals.prototype, {\n    /**\n     * Creates a new FFI Result, to provide the result of a call to a JS function\n     *\n     * @param {Function} syncCallback\n     * @param {Function|null} asyncCallback\n     * @returns {FFIResult}\n     */\n    createFFIResult: function (syncCallback, asyncCallback) {\n        return this.state.createFFIResult(syncCallback, asyncCallback);\n    },\n\n    /**\n     * Fetches a binding by its name\n     *\n     * @param {string} bindingName\n     * @returns {*}\n     */\n    getBinding: function (bindingName) {\n        return this.state.getBinding(bindingName);\n    },\n\n    /**\n     * Fetches the native value of a constant by its name\n     *\n     * @param {string} name\n     * @returns {*}\n     */\n    getConstant: function (name) {\n        return this.state.getConstant(name);\n    },\n\n    /**\n     * Fetches the value of a global variable, if defined.\n     * If the variable is not defined then a NULL value will be returned.\n     *\n     * @param {string} name\n     * @return {Value}\n     */\n    getGlobal: function (name) {\n        return this.state.getGlobal(name);\n    },\n\n    /**\n     * Determines whether we're in true asynchronous mode (not psync or sync mode)\n     *\n     * @return {boolean}\n     */\n    isAsync: function () {\n        return this.mode === 'async';\n    },\n\n    /**\n     * Determines whether we're in Promise-synchronous mode\n     *\n     * @return {boolean}\n     */\n    isPsync: function () {\n        return this.mode === 'psync';\n    },\n\n    /**\n     * Determines whether we're in synchronous mode\n     *\n     * @return {boolean}\n     */\n    isSync: function () {\n        return this.mode === 'sync';\n    },\n\n    /**\n     * Sets the value of an existing PHP global. If a native value is given\n     * then it will be coerced to a PHP one.\n     * If the global is not defined than an error will be thrown -\n     * use .defineGlobal(...) when defining a new variable\n     *\n     * @param {string} name\n     * @param {Value|*} value Value object or native value to be coerced\n     * @throws {Error} Throws if the variable is not defined in the global scope\n     */\n    setGlobal: function (name, value) {\n        this.state.setGlobal(name, value);\n    }\n});\n\nmodule.exports = Internals;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    isPromise = require('is-promise'),\n    Promise = require('lie');\n\n/**\n * Represents a result returned from JS-land back to PHP-land. This allows\n * a result that may be fetched asynchronously to be used in async mode\n * while also providing a way to fetch it synchronously in sync mode.\n *\n * @param {Function} syncCallback\n * @param {Function=} asyncCallback\n * @param {Resumable=} pausable\n * @constructor\n */\nfunction Result(syncCallback, asyncCallback, pausable) {\n    /**\n     * @type {Function|null}\n     */\n    this.asyncCallback = asyncCallback;\n    /**\n     * @type {Resumable|null}\n     */\n    this.pausable = pausable || null;\n    /**\n     * @type {Function}\n     */\n    this.syncCallback = syncCallback;\n}\n\n_.extend(Result.prototype, {\n    /**\n     * Fetches the result asynchronously. If only a synchronous callback is provided,\n     * it will be used but then its result will be wrapped in a resolved Promise.\n     *\n     * @returns {Promise}\n     */\n    getAsync: function () {\n        var promise;\n\n        if (this.asyncCallback) {\n            // We have an async callback - it must return a valid Promise (thenable)\n            promise = this.asyncCallback();\n\n            if (!isPromise(promise)) {\n                throw new Error('Async callback did not return a Promise');\n            }\n\n            return promise;\n        }\n\n        // Otherwise if no async callback was provided, fall back to using the sync one\n        // but maintain the same API by wrapping it in a resolved Promise\n        return Promise.resolve(this.getSync());\n    },\n\n    /**\n     * Fetches the result synchronously\n     *\n     * @returns {*}\n     */\n    getSync: function () {\n        return this.syncCallback();\n    },\n\n    /**\n     * Resolves this FFI result to a value, awaiting the Promise\n     * returned by the async callback if needed\n     *\n     * @param {ValueFactory} valueFactory\n     * @return {Value}\n     */\n    resolve: function (valueFactory) {\n        var result = this,\n            pause;\n\n        if (!result.pausable) {\n            /**\n             * We're in either sync or psync mode - use the synchronous fetcher\n             * as we are unable to wait for an asynchronous operation to complete.\n             * Remember that we still need to coerce the result as needed,\n             * in case the fetcher returns an unwrapped native JS value.\n             */\n            return valueFactory.coerce(result.getSync());\n        }\n\n        pause = result.pausable.createPause();\n\n        // Wait for the returned promise to resolve or reject before continuing\n        result.getAsync().then(function (resultValue) {\n            // Remember we still need to coerce the result as above\n            pause.resume(valueFactory.coerce(resultValue));\n        }, function (error) {\n            pause.throw(error);\n        });\n\n        return pause.now();\n    }\n});\n\nmodule.exports = Result;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {NonV8FrameStackHooker|V8FrameStackHooker} frameStackHooker\n * @param {Global} global\n * @constructor\n */\nfunction GlobalStackHooker(frameStackHooker, global) {\n    /**\n     * @type {NonV8FrameStackHooker|V8FrameStackHooker}\n     */\n    this.frameStackHooker = frameStackHooker;\n    /**\n     * @type {Global}\n     */\n    this.global = global;\n}\n\n_.extend(GlobalStackHooker.prototype, {\n    /**\n     * Hooks error stack handling for all frames/global contexts accessible from the current one.\n     */\n    hook: function () {\n        var hooker = this,\n            hookErrorStacksForAllSubFrames = function (frame) {\n                try {\n                    hooker.frameStackHooker.hook(frame);\n                } catch (e) {\n                    // Unable to access the context.\n                }\n\n                try {\n                    _.each(frame.frames, function (frame) {\n                        hookErrorStacksForAllSubFrames(frame);\n                    });\n                } catch (e) {\n                    // Unable to access the context.\n                }\n            };\n\n        if (hooker.global.top !== hooker.global) {\n            // We're not the top context, so attempt to hook from there recursively.\n            // Note that due to same-origin policy this may not be feasible.\n            hookErrorStacksForAllSubFrames(hooker.global.top);\n        }\n\n        hookErrorStacksForAllSubFrames(hooker.global);\n    }\n});\n\nmodule.exports = GlobalStackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Handles the hooking of native JS error stack traces for a specific window/frame\n * in environments where <Error>.stack is defined as an accessor property, eg. Firefox/SpiderMonkey\n *\n * @param {StackCleaner} stackCleaner\n * @constructor\n */\nfunction NonV8FrameStackHooker(stackCleaner) {\n    /**\n     * @type {StackCleaner}\n     */\n    this.stackCleaner = stackCleaner;\n}\n\n_.extend(NonV8FrameStackHooker.prototype, {\n    /**\n     * Hooks native JS error stack traces for a specific window/frame\n     *\n     * @param {Window} frame\n     */\n    hook: function (frame) {\n        var hooker = this,\n            NativeError = frame.Error,\n            originalDescriptor = Object.getOwnPropertyDescriptor(NativeError.prototype, 'stack');\n\n        if (originalDescriptor !== null && originalDescriptor.get && originalDescriptor.set) {\n            Object.defineProperty(NativeError.prototype, 'stack', {\n                configurable: true,\n                enumerable: false,\n                get: function () {\n                    // Fetch the stack via the native mechanism before running it through our cleaning routine\n                    return hooker.stackCleaner.cleanStack(originalDescriptor.get.call(this));\n                },\n                set: function (stackTrace) {\n                    // Use the native .stack property value assignment logic for simplicity\n                    originalDescriptor.set.call(this, stackTrace);\n                }\n            });\n        }\n    }\n});\n\nmodule.exports = NonV8FrameStackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    STATE_JS_LAND = 'js land',\n    STATE_PHP_LAND = 'php land';\n\n/**\n * Handles the cleaning of JS/PHP mixed stack traces to remove PHPCore internal frames\n *\n * @constructor\n */\nfunction StackCleaner() {\n\n}\n\n_.extend(StackCleaner.prototype, {\n    /**\n     * Removes all frames from the given stack trace that relate to PHPCore internals,\n     * to produce a more useful and readable output, especially with tools such as Cypress.\n     *\n     * @param {string} stack\n     * @param {number=} stackTraceLimit\n     * @returns {string}\n     */\n    cleanStack: function (stack, stackTraceLimit) {\n        var frameIndex,\n            line,\n            resultFrames = [],\n            state = STATE_JS_LAND,\n            stackLines = stack.split('\\n');\n\n        for (frameIndex = stackLines.length - 1; frameIndex >= 0; frameIndex--) {\n            line = stackLines[frameIndex];\n\n            if (/__uniterInboundStackMarker__/.test(line)) {\n                state = STATE_PHP_LAND;\n            } else if (/__uniterOutboundStackMarker__/.test(line)) {\n                // We're now back out in JS land\n                state = STATE_JS_LAND;\n            } else if (state === STATE_JS_LAND || /__uniter(Module|Function)StackMarker__/.test(line)) {\n                resultFrames.unshift(\n                    line\n                        // Tidy stack frames from top-level PHP modules\n                        .replace(/\\b__uniterModuleStackMarker__/g, '__uniter_php_module__')\n                        // Remove stack markers from named PHP functions\n                        .replace(/\\B__uniterFunctionStackMarker__/g, '')\n                        // Tidy stack frames from PHP closures\n                        .replace(/\\b__uniterFunctionStackMarker__/g, '__uniter_php_closure__')\n                );\n            }\n        }\n\n        if (typeof stackTraceLimit !== 'undefined' && isFinite(stackTraceLimit)) {\n            resultFrames = resultFrames.slice(0, stackTraceLimit);\n        }\n\n        return resultFrames.join('\\n');\n    }\n});\n\nmodule.exports = StackCleaner;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {GlobalStackHooker} globalStackHooker\n * @param {OptionSet} optionSet\n * @constructor\n */\nfunction StackHooker(globalStackHooker, optionSet) {\n    /**\n     * @type {GlobalStackHooker}\n     */\n    this.globalStackHooker = globalStackHooker;\n    /**\n     * @type {OptionSet}\n     */\n    this.optionSet = optionSet;\n}\n\n_.extend(StackHooker.prototype, {\n    /**\n     * Detects whether native stack cleaning is enabled, installing the relevant hooks if so\n     */\n    hook: function () {\n        var hooker = this,\n            // TODO: Consider defaulting to on (opt-out) once stable\n            stackCleaningEnabled = hooker.optionSet.getOption('stackCleaning') === true;\n\n        if (stackCleaningEnabled) {\n            hooker.globalStackHooker.hook();\n        }\n    }\n});\n\nmodule.exports = StackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Handles the hooking of native JS error stack traces for a specific window/frame in V8,\n * where we can use the Stack Trace API (https://v8.dev/docs/stack-trace-api)\n *\n * @param {StackCleaner} stackCleaner\n * @constructor\n */\nfunction V8FrameStackHooker(stackCleaner) {\n    /**\n     * @type {StackCleaner}\n     */\n    this.stackCleaner = stackCleaner;\n}\n\n_.extend(V8FrameStackHooker.prototype, {\n    /**\n     * Hooks native JS error stack traces for a specific window/frame\n     *\n     * @param {Window} frame\n     */\n    hook: function (frame) {\n        var hooker = this,\n            NativeError = frame.Error,\n\n            // On init, take note of the current limit so we can continue to apply it until/unless changed\n            // via the setter on the overriding CustomError we define below\n            stackTraceLimit = NativeError.stackTraceLimit;\n\n        // Hook the creation of error stack traces in V8 using the Stack Trace API\n        NativeError.prepareStackTrace = function (error/*, structuredStackTrace*/) {\n            var cleanedStack = hooker.stackCleaner.cleanStack(\n                error.stack,\n                // Allow one extra line for the error message\n                stackTraceLimit + 1\n            );\n\n            // For older versions of V8 we need to write to the .stack property,\n            // as the return value from .prepareStackTrace(...) is not always respected\n            error.stack = cleanedStack;\n\n            return cleanedStack;\n        };\n\n        /**\n         * Capture all stack frames so that we can correctly clean the stack. Note that\n         * Error.stackTraceLimit may still be set elsewhere (to give its \"visible\" value),\n         * which will use the accessor property that shadows this one below.\n         *\n         * Once a stack has been cleaned it will be truncated to the limit set.\n         */\n        NativeError.stackTraceLimit = Infinity;\n\n        /**\n         * Custom Error class that allows hooking static .stackTraceLimit so we can apply it post-cleaning\n         *\n         * @param {string} message\n         * @constructor\n         */\n        function CustomError(message) {\n            this.message = message;\n\n            // Unlike the native Error class that we're overriding, we need to explicitly capture .stack\n            NativeError.captureStackTrace(this, CustomError);\n        }\n\n        // Define the Error.* V8 Stack Trace API static members\n        Object.defineProperties(CustomError, {\n            captureStackTrace: {\n                configurable: true,\n                enumerable: true,\n                value: NativeError.captureStackTrace,\n                writable: true\n            },\n\n            // Name this class as the native Error\n            name: {\n                configurable: true,\n                enumerable: false,\n                value: 'Error'\n            },\n\n            // Shadow the native preparer we set above.\n            prepareStackTrace: {\n                configurable: true,\n                enumerable: true,\n\n                get: function () {\n                    return undefined;\n                },\n\n                set: function () {\n                    // TODO: Support this by also cleaning structuredStackTrace\n                    //       so that it may be passed on to the next preparer in the chain\n                    throw new Error('Uniter: Stacking of Error.prepareStackTrace not yet supported');\n                }\n            },\n\n            /**\n             * Allow Error.stackTraceLimit to be get and set, always returning the correct current value.\n             * However, internally we need to set the limit differently in order to capture enough frames\n             * to correctly clean the stack.\n             *\n             * NB: Attempting to simply redefine this property as an accessor on the native Error class\n             *     seems to result in the V8 Stack Trace API being disabled, hence this custom Error class.\n             */\n            stackTraceLimit: {\n                configurable: true,\n                enumerable: true,\n\n                /**\n                 * Fetches the current (visible) Error.stackTraceLimit\n                 *\n                 * @returns {number}\n                 */\n                get: function () {\n                    return stackTraceLimit;\n                },\n\n                /**\n                 * Handles a new (visible) Error.stackTraceLimit being set\n                 *\n                 * @param {number} newLimit\n                 */\n                set: function (newLimit) {\n                    stackTraceLimit = newLimit;\n                }\n            }\n        });\n\n        // Use the native Error.prototype so that we implement any other properties\n        // and so that instanceof will still work correctly.\n        CustomError.prototype = NativeError.prototype;\n\n        frame.Error = CustomError;\n    }\n});\n\nmodule.exports = V8FrameStackHooker;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('util'),\n    require('../../Value')\n], function (\n    _,\n    util,\n    Value\n) {\n    /**\n     * @param {ValueFactory} factory\n     * @param {CallStack} callStack\n     * @param {ValueCaller} valueCaller\n     * @param {ObjectValue} wrappedObjectValue\n     * @constructor\n     */\n    function AsyncObjectValue(factory, callStack, valueCaller, wrappedObjectValue) {\n        var nativeValue = wrappedObjectValue.getObject();\n\n        Value.call(this, factory, callStack, 'object', nativeValue);\n\n        /**\n         * @type {ValueCaller}\n         */\n        this.valueCaller = valueCaller;\n        /**\n         * @type {ObjectValue}\n         */\n        this.wrappedObjectValue = wrappedObjectValue;\n    }\n\n    util.inherits(AsyncObjectValue, Value);\n\n    _.extend(AsyncObjectValue.prototype, {\n        /**\n         * Calls the specified method of this object\n         *\n         * @param {string} methodName\n         * @param {Value[]?} args\n         * @returns {Promise<Value>} Returns the result of the method\n         * @throws {PHPFatalError} Throws when the method does not exist\n         */\n        callMethod: function (methodName, args) {\n            var value = this;\n\n            return value.valueCaller.callMethod(value.wrappedObjectValue, methodName, args);\n        }\n    });\n\n    return AsyncObjectValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * Provides a proxy for accessing all data/methods of an instance of a PHP-defined class.\n     *\n     * Objects that implement __call(), __get(), __set() or define a public property\n     * anywhere along their class ancestry could benefit from being unwrapped to a PHPObject\n     * as this will permit access to those from native JS code, at the expense of a more complex API.\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {NativeCaller} nativeCaller\n     * @param {ObjectValue} objectValue\n     * @constructor\n     */\n    function PHPObject(\n        valueFactory,\n        nativeCaller,\n        objectValue\n    ) {\n        /**\n         * @type {NativeCaller}\n         */\n        this.nativeCaller = nativeCaller;\n        /**\n         * @type {ObjectValue}\n         */\n        this.objectValue = objectValue;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(PHPObject.prototype, {\n        /**\n         * Calls the specified method of the wrapped ObjectValue, returning a Promise.\n         * Allows JS-land code to call objects exported/returned from PHP-land,\n         * where asynchronous (blocking) operation is possible.\n         *\n         * @param {string} methodName\n         * @returns {Promise<*>|*}\n         */\n        callMethod: function (methodName) {\n            var phpObject = this,\n                // Arguments will be from JS-land, so coerce any to internal PHP value objects\n                args = _.map([].slice.call(arguments, 1), function (arg) {\n                    return phpObject.valueFactory.coerce(arg);\n                });\n\n            return phpObject.nativeCaller.callMethod(phpObject.objectValue, methodName, args);\n        },\n\n        /**\n         * Fetches the unwrapped ObjectValue that this PHPObject was created from\n         *\n         * @returns {ObjectValue}\n         */\n        getObjectValue: function () {\n            return this.objectValue;\n        }\n    });\n\n    return PHPObject;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the ProxyClass for a given PHP class\n *\n * @param {ValueStorage} valueStorage\n * @param {ProxyMemberFactory} proxyMemberFactory\n * @constructor\n */\nfunction ProxyClassFactory(valueStorage, proxyMemberFactory) {\n    /**\n     * @type {ProxyMemberFactory}\n     */\n    this.proxyMemberFactory = proxyMemberFactory;\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ProxyClassFactory.prototype, {\n    /**\n     * Creates the ProxyClass for a given PHP class\n     *\n     * @param {Class} classObject\n     * @returns {class}\n     */\n    create: function (classObject) {\n        var currentClass,\n            currentPrototype,\n            factory = this,\n            methodNamesProxied = {};\n\n        /**\n         * @param {ObjectValue} objectValue Internal ObjectValue instance\n         * @param {boolean} useSyncApiAlthoughPsync\n         * @constructor\n         */\n        function ProxyClass(objectValue, useSyncApiAlthoughPsync) {\n            /*\n             * This data is stored in a WeakMap using this instance as the key, for multiple reasons:\n             * a) To ensure there are no collisions with methods of the proxied class\n             *    (ie. if we stored objectValue as a property of this object, but the proxied class\n             *    happened to have a method called \"objectValue\" there would be an issue)\n             * b) To more neatly allow the data to be extracted and funneled into a new instance\n             *    in the scenario where we want a proxy with a synchronous API (see ValueHelper)\n             */\n            factory.valueStorage.setPrivatesForNativeProxy(this, {\n                objectValue: objectValue,\n                useSyncApiAlthoughPsync: Boolean(useSyncApiAlthoughPsync)\n            });\n        }\n        ProxyClass.prototype = Object.create(classObject.getInternalClass().prototype);\n\n        function defineProxyMethod(methodName) {\n            ProxyClass.prototype[methodName] = factory.proxyMemberFactory.createProxyMethod(methodName);\n        }\n\n        currentClass = classObject;\n\n        /*\n         * Iterate up the class hierarchy, proxying methods as we go. Note that\n         * in most cases the first class' prototype chain is probably all we need\n         * to process, however some classes in the hierarchy may have non-standard\n         * native objects (eg. JSObject) and so we need to process each one's\n         * prototype chain just in case.\n         *\n         * TODO: Remove the need for this duplication by handling the special JSObject case\n         *       in that class alone.\n         */\n        while (currentClass) {\n            currentPrototype = currentClass.getInternalClass().prototype;\n\n            while (currentPrototype !== null && currentPrototype !== Object.prototype) {\n                /*jshint loopfunc: true */\n                _.forOwn(currentPrototype, function (property, propertyName) {\n                    if (\n                        // Only proxy methods\n                        typeof property !== 'function' ||\n                        // Only proxy each method once\n                        methodNamesProxied[propertyName] === true\n                    ) {\n                        return;\n                    }\n\n                    defineProxyMethod(propertyName);\n\n                    methodNamesProxied[propertyName] = true;\n                });\n\n                currentPrototype = Object.getPrototypeOf(currentPrototype);\n            }\n\n            currentClass = currentClass.getSuperClass();\n        }\n\n        return ProxyClass;\n    }\n});\n\nmodule.exports = ProxyClassFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * Fetches the generated JS proxy class for a PHP class, creating and caching it if needed\n *\n * @param {ProxyClassFactory} proxyClassFactory\n * @constructor\n */\nfunction ProxyClassRepository(proxyClassFactory) {\n    /**\n     * @type {WeakMap<object, Function>}\n     */\n    this.classToProxyClassMap = new WeakMap();\n    /**\n     * @type {ProxyClassFactory}\n     */\n    this.proxyClassFactory = proxyClassFactory;\n}\n\n_.extend(ProxyClassRepository.prototype, {\n    /**\n     * Fetches the proxy class for the given PHP class\n     *\n     * @param {Class} classObject\n     * @returns {class}\n     */\n    getProxyClass: function (classObject) {\n        var ProxyClass,\n            repository = this;\n\n        if (repository.classToProxyClassMap.has(classObject)) {\n            // Cache the ProxyClass for each PHP class for identity and to save on memory\n            return repository.classToProxyClassMap.get(classObject);\n        }\n\n        ProxyClass = repository.proxyClassFactory.create(classObject);\n\n        repository.classToProxyClassMap.set(classObject, ProxyClass);\n\n        return ProxyClass;\n    }\n});\n\nmodule.exports = ProxyClassRepository;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates an exported proxying object value for an FFIObjectValue based on its class' interface\n *\n * @param {ProxyClassRepository} proxyClassRepository\n * @param {string} mode Synchronicity mode\n * @constructor\n */\nfunction ProxyFactory(proxyClassRepository, mode) {\n    /**\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @type {ProxyClassRepository}\n     */\n    this.proxyClassRepository = proxyClassRepository;\n}\n\n_.extend(ProxyFactory.prototype, {\n    /**\n     * Creates an exported proxy object value for the object value that the wrapped reference points to\n     *\n     * @param {ObjectValue} objectValue\n     * @param {boolean=} useSyncApiAlthoughPsync\n     * @returns {Object|*}\n     */\n    create: function (objectValue, useSyncApiAlthoughPsync) {\n        var factory = this,\n            ProxyClass = factory.proxyClassRepository.getProxyClass(objectValue.getClass());\n\n        if (useSyncApiAlthoughPsync && factory.mode !== 'psync') {\n            throw new Error('Cannot explicitly request sync API when not in psync mode');\n        }\n\n        return new ProxyClass(objectValue, useSyncApiAlthoughPsync);\n    }\n});\n\nmodule.exports = ProxyFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates proxying versions of PHP class members (methods and properties)\n *\n * @param {ValueFactory} valueFactory\n * @param {ValueStorage} valueStorage\n * @param {NativeCaller} nativeCaller\n * @constructor\n */\nfunction ProxyMemberFactory(\n    valueFactory,\n    valueStorage,\n    nativeCaller\n) {\n    /**\n     * @type {NativeCaller}\n     */\n    this.nativeCaller = nativeCaller;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ProxyMemberFactory.prototype, {\n    /**\n     * Creates a proxying method for the ProxyClass for a method of a PHP class\n     *\n     * @param {string} methodName\n     * @returns {Function}\n     */\n    createProxyMethod: function (methodName) {\n        var factory = this;\n\n        return function __uniterInboundStackMarker__() {\n            // Arguments will be from JS-land, so coerce any to internal PHP value objects\n            var args = _.map(arguments, function (arg) {\n                    return factory.valueFactory.coerce(arg);\n                }),\n                privates = factory.valueStorage.getPrivatesForNativeProxy(this),\n                objectValue = privates.objectValue,\n                useSyncApiAlthoughPsync = privates.useSyncApiAlthoughPsync;\n\n            return factory.nativeCaller.callMethod(objectValue, methodName, args, useSyncApiAlthoughPsync);\n        };\n    }\n});\n\nmodule.exports = ProxyMemberFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {boolean} autoCoercionEnabled\n * @constructor\n */\nfunction ValueCoercer(autoCoercionEnabled) {\n    /**\n     * @type {boolean}\n     */\n    this.autoCoercionEnabled = autoCoercionEnabled;\n}\n\n_.extend(ValueCoercer.prototype, {\n    /**\n     * Unwraps arguments for a method based on the coercion mode for the class\n     *\n     * @param {Value[]} argumentValues\n     * @returns {Value[]|*[]}\n     */\n    coerceArguments: function (argumentValues) {\n        var coercer = this;\n\n        if (coercer.autoCoercionEnabled) {\n            argumentValues = _.map(argumentValues, function (argumentValue) {\n                return argumentValue.getNative();\n            });\n        }\n\n        return argumentValues;\n    },\n\n    /**\n     * Determines whether auto-coercion is enabled\n     *\n     * @returns {boolean}\n     */\n    isAutoCoercionEnabled: function () {\n        return this.autoCoercionEnabled;\n    }\n});\n\nmodule.exports = ValueCoercer;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * @param {ProxyFactory} proxyFactory\n * @param {FFIFactory} ffiFactory\n * @param {ValueStorage} valueStorage\n * @param {string} mode\n * @constructor\n */\nfunction ValueHelper(proxyFactory, ffiFactory, valueStorage, mode) {\n    /**\n     * @type {FFIFactory}\n     */\n    this.ffiFactory = ffiFactory;\n    /**\n     * @type {string}\n     */\n    this.mode = mode;\n    /**\n     * @type {ProxyFactory}\n     */\n    this.proxyFactory = proxyFactory;\n    /**\n     * Used for mapping native objects that have previously been re-proxied\n     * with a synchronous API to the re-proxied object\n     *\n     * @type {WeakMap}\n     */\n    this.proxyToSyncApiProxy = new WeakMap();\n    /**\n     * @type {ValueStorage}\n     */\n    this.valueStorage = valueStorage;\n}\n\n_.extend(ValueHelper.prototype, {\n    /**\n     * Takes the given proxy and returns a new one with a synchronous API,\n     * even in Promise-synchronous mode. Note that an error will be thrown\n     * if in async mode as synchronous operation is then impossible.\n     *\n     * @param {ProxyClass} proxy\n     * @return {ProxyClass}\n     */\n    toNativeWithSyncApi: function (proxy) {\n        var helper = this,\n            objectValue,\n            privates,\n            reproxy;\n\n        if (helper.mode === 'sync') {\n            // In sync mode, the original proxy will use a synchronous API,\n            // so there is nothing to do, just return it unchanged\n            return proxy;\n        }\n\n        if (helper.mode === 'async') {\n            // Sanity check\n            throw new Error(\n                'ValueHelper.toNativeWithSyncApi() :: Unable to provide a synchronous API in async mode'\n            );\n        }\n\n        if (helper.proxyToSyncApiProxy.has(proxy)) {\n            // We already have a re-proxied object with a sync API, so reuse it\n            // both for speed and identity\n            return helper.proxyToSyncApiProxy.get(proxy);\n        }\n\n        if (!helper.valueStorage.hasPrivatesForNativeProxy(proxy)) {\n            throw new Error('ValueHelper.toNativeWithSyncApi() :: Invalid proxy instance given');\n        }\n\n        privates = helper.valueStorage.getPrivatesForNativeProxy(proxy);\n        objectValue = privates.objectValue;\n\n        reproxy = helper.proxyFactory.create(objectValue, true);\n\n        // Store this conversion so we can reuse the reproxied object as mentioned above\n        helper.proxyToSyncApiProxy.set(proxy, reproxy);\n        // Also map the reproxied object to itself\n        helper.proxyToSyncApiProxy.set(reproxy, reproxy);\n\n        // Ensure the reproxied object may also be mapped back to the original object value\n        // (eg. in the scenario where an object is exported to JS-land, reproxied for a sync API\n        // and then the reproxied object is passed back into PHP-land)\n        helper.valueStorage.setObjectValueForExport(reproxy, objectValue);\n\n        return reproxy;\n    },\n\n    /**\n     * Takes the given ObjectValue and returns a special AsyncObjectValue that wraps it,\n     * providing the same API but with Promises returned when relevant methods are called,\n     * to avoid the caller having to be Pausable-aware\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {AsyncObjectValue}\n     */\n    toValueWithAsyncApi: function (objectValue) {\n        var helper = this;\n\n        return helper.ffiFactory.createAsyncObjectValue(objectValue);\n    }\n});\n\nmodule.exports = ValueHelper;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    WeakMap = require('es6-weak-map');\n\n/**\n * @constructor\n */\nfunction ValueStorage() {\n    /**\n     * @type {WeakMap<Object|*, ObjectValue>}\n     */\n    this.exportToObjectValueMap = new WeakMap();\n    /**\n     * @type {WeakMap<ObjectValue, Object|*>}\n     */\n    this.objectValueToExportMap = new WeakMap();\n    /**\n     * @type {WeakMap<object, {objectValue: ObjectValue, useSyncApiAlthoughPsync: boolean}>}\n     */\n    this.proxyPrivatesMap = new WeakMap();\n}\n\n_.extend(ValueStorage.prototype, {\n    /**\n     * Fetches the cached export for the given object value\n     * (cached both for identity and to save on memory usage)\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {Object|*}\n     */\n    getExportForObjectValue: function (objectValue) {\n        return this.objectValueToExportMap.get(objectValue);\n    },\n\n    /**\n     * Fetches the original ObjectValue that was exported\n     *\n     * @param {Object|*} exportedValue\n     * @returns {ObjectValue}\n     */\n    getObjectValueForExport: function (exportedValue) {\n        return this.exportToObjectValueMap.get(exportedValue);\n    },\n\n    /**\n     * Fetches the private data for the given native proxy\n     *\n     * @param {ProxyClass} proxy\n     * @returns {{objectValue: ObjectValue, useSyncApiAlthoughPsync: boolean}}\n     */\n    getPrivatesForNativeProxy: function (proxy) {\n        return this.proxyPrivatesMap.get(proxy);\n    },\n\n    /**\n     * Determines whether we have a cached export for an object value\n     * (cached both for identity and to save on memory usage)\n     *\n     * @param {ObjectValue} objectValue\n     * @returns {boolean}\n     */\n    hasExportForObjectValue: function (objectValue) {\n        return this.objectValueToExportMap.has(objectValue);\n    },\n\n    /**\n     * Determines whether we have an original ObjectValue for the given export value\n     *\n     * @param {Object} exportedValue\n     * @returns {boolean}\n     */\n    hasObjectValueForExport: function (exportedValue) {\n        return this.exportToObjectValueMap.has(exportedValue);\n    },\n\n    /**\n     * Determines whether there is private data for the given native proxy\n     * (ie. whether it is actually a valid native proxy)\n     *\n     * @param {ProxyClass} proxy\n     * @returns {boolean}\n     */\n    hasPrivatesForNativeProxy: function (proxy) {\n        return this.proxyPrivatesMap.has(proxy);\n    },\n\n    /**\n     * Stores the given export for the specified object value\n     *\n     * @param {ObjectValue} objectValue\n     * @param {Object|*} exportedValue\n     */\n    setExportForObjectValue: function (objectValue, exportedValue) {\n        var storage = this;\n\n        storage.objectValueToExportMap.set(objectValue, exportedValue);\n    },\n\n    /**\n     * Stores an export for an object value (note that an object value may be unwrapped\n     * to several exports, eg. for psync mode, both an async and a sync API proxy)\n     *\n     * @param {Object|*} exportedValue\n     * @param {ObjectValue} objectValue\n     */\n    setObjectValueForExport: function (exportedValue, objectValue) {\n        this.exportToObjectValueMap.set(exportedValue, objectValue);\n    },\n\n    /**\n     * Stores the private data for the given native proxy\n     *\n     * @param {ProxyClass} proxy\n     * @param {{objectValue: ObjectValue, useSyncApiAlthoughPsync: boolean}} privates\n     */\n    setPrivatesForNativeProxy: function (proxy, privates) {\n        var storage = this;\n\n        if (storage.proxyPrivatesMap.has(proxy)) {\n            throw new Error('Proxy already has privates set');\n        }\n\n        storage.proxyPrivatesMap.set(proxy, privates);\n    }\n});\n\nmodule.exports = ValueStorage;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    FunctionContextInterface = require('./FunctionContextInterface');\n\n/**\n * Represents a PHP closure function\n *\n * @param {NamespaceScope} namespaceScope\n * @param {Class|null} classObject Used when the closure is defined inside a class\n * @constructor\n * @implements {FunctionContextInterface}\n */\nfunction ClosureContext(namespaceScope, classObject) {\n    /**\n     * @type {Class|null}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n}\n\nutil.inherits(ClosureContext, FunctionContextInterface);\n\n_.extend(ClosureContext.prototype, {\n    /**\n     * Fetches the fully-qualified name of the closure (eg. as used by __METHOD__)\n     *\n     * @returns {string}\n     */\n    getName: function () {\n        return this.namespaceScope.getNamespacePrefix() + '{closure}';\n    },\n\n    /**\n     * Fetches the name of the closure as required for stack traces\n     *\n     * @returns {string}\n     */\n    getTraceFrameName: function () {\n        var spec = this,\n            name = spec.namespaceScope.getNamespacePrefix() + '{closure}';\n\n        if (spec.classObject) {\n            name = spec.classObject.getName() + '::' + name;\n        }\n\n        return name;\n    },\n\n    /**\n     * Fetches the name of the closure, without any qualifying class prefix\n     * (eg. as used by __FUNCTION__).\n     * NB1: the namespace prefix is intentionally always included\n     * NB2: the class (if set) is intentionally never included\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: function () {\n        return this.namespaceScope.getNamespacePrefix() + '{closure}';\n    }\n});\n\nmodule.exports = ClosureContext;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    FunctionContextInterface = require('./FunctionContextInterface');\n\n/**\n * Represents a PHP function\n *\n * @param {NamespaceScope} namespaceScope\n * @param {string} name\n * @constructor\n * @implements {FunctionContextInterface}\n */\nfunction FunctionContext(namespaceScope, name) {\n    /**\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n}\n\nutil.inherits(FunctionContext, FunctionContextInterface);\n\n_.extend(FunctionContext.prototype, {\n    /**\n     * Fetches the fully-qualified name of the function (eg. as used by __METHOD__)\n     *\n     * @returns {string}\n     */\n    getName: function () {\n        var spec = this;\n\n        return spec.namespaceScope.getNamespacePrefix() + spec.name;\n    },\n\n    /**\n     * Fetches the name of the function as required for stack traces\n     *\n     * @returns {string}\n     */\n    getTraceFrameName: function () {\n        return this.getName();\n    },\n\n    /**\n     * Fetches the name of the function\n     * (eg. as used by __FUNCTION__)\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: function () {\n        return this.getName(); // Functions must always be prefixed\n    }\n});\n\nmodule.exports = FunctionContext;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error(functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * @interface\n */\nfunction FunctionContextInterface() {\n    throw new Error('FunctionContextInterface cannot be instantiated');\n}\n\n_.extend(FunctionContextInterface.prototype, {\n    /**\n     * Fetches the fully-qualified name of the function\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getName: throwUnimplemented('getName'),\n\n    /**\n     * Fetches the name of the function as required for stack traces\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getTraceFrameName: throwUnimplemented('getTraceFrameName'),\n\n    /**\n     * Fetches the name of the function, without any qualifying namespace and/or class prefix\n     * (eg. as used by __FUNCTION__)\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: throwUnimplemented('getUnprefixedName')\n});\n\nmodule.exports = FunctionContextInterface;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    TOO_FEW_ARGS_FOR_EXACT_COUNT = 'core.too_few_args_for_exact_count';\n\n/**\n * Represents the parameters for a PHP function\n *\n * @param {CallStack} callStack\n * @param {ValueFactory} valueFactory\n * @param {FunctionContextInterface} context\n * @param {NamespaceScope} namespaceScope\n * @param {Parameter[]} parameterList\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction FunctionSpec(\n    callStack,\n    valueFactory,\n    context,\n    namespaceScope,\n    parameterList,\n    filePath,\n    lineNumber\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {FunctionContextInterface}\n     */\n    this.context = context;\n    /**\n     * @type {string|null}\n     */\n    this.filePath = filePath;\n    /**\n     * @type {number|null}\n     */\n    this.lineNumber = lineNumber;\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n    /**\n     * @type {Parameter[]|null[]}\n     */\n    this.parameterList = parameterList;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FunctionSpec.prototype, {\n    /**\n     * Coerces the given set of arguments for this function as needed\n     *\n     * @param {Reference[]|Value[]|Variable[]} argumentReferenceList\n     * @returns {Reference[]|Value[]|Variable[]}\n     */\n    coerceArguments: function (argumentReferenceList) {\n        var coercedArguments = argumentReferenceList.slice(),\n            spec = this;\n\n        _.each(spec.parameterList, function (parameter, index) {\n            if (!parameter) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n                return;\n            }\n\n            if (argumentReferenceList.length <= index) {\n                // Argument is not provided: do not attempt to fetch it\n                return;\n            }\n\n            // Coerce the argument as the parameter requires\n            coercedArguments[index] = parameter.coerceArgument(argumentReferenceList[index]);\n        });\n\n        // TODO: PHP7 scalar types should be coerced at this point, assuming caller\n        //       was in weak-types mode\n        return coercedArguments;\n    },\n\n    /**\n     * Creates a new function (and its FunctionSpec) for an alias of the current FunctionSpec\n     *\n     * @param {string} aliasName\n     * @param {Function} func\n     * @param {FunctionSpecFactory} functionSpecFactory\n     * @param {FunctionFactory} functionFactory\n     * @return {Function}\n     */\n    createAliasFunction: function (aliasName, func, functionSpecFactory, functionFactory) {\n        var spec = this,\n            aliasFunctionSpec = functionSpecFactory.createAliasFunctionSpec(\n                spec.namespaceScope,\n                aliasName,\n                spec.parameterList,\n                spec.filePath,\n                spec.lineNumber\n            );\n\n        return functionFactory.create(\n            spec.namespaceScope,\n            // Class will always be null for 'normal' functions\n            // as defining a function inside a class will define it\n            // inside the current namespace instead.\n            null,\n            func,\n            aliasName,\n            null,\n            null,\n            aliasFunctionSpec\n        );\n    },\n\n    /**\n     * Fetches the fully-qualified name of the function\n     *\n     * @param {boolean} isStaticCall\n     * @returns {string}\n     */\n    getFunctionName: function (isStaticCall) {\n        return this.context.getName(isStaticCall);\n    },\n\n    /**\n     * Fetches the fully-qualified name of the function\n     *\n     * @param {boolean} isStaticCall\n     * @returns {string}\n     */\n    getFunctionTraceFrameName: function (isStaticCall) {\n        return this.context.getTraceFrameName(isStaticCall);\n    },\n\n    /**\n     * Fetches the parameter of this function at the specified 0-based position\n     * in the parameter list.\n     * Note that some of its parameters and return type may not be given\n     * at runtime due to bundle-size optimisations, for example\n     *\n     * @param {number} position\n     * @returns {Parameter}\n     */\n    getParameterByPosition: function (position) {\n        var spec = this;\n\n        if (position >= spec.parameterList.length || !spec.parameterList[position]) {\n            throw new Error('Unable to fetch parameter #' + position + ' of function \"' + spec.context.getName() + '\"');\n        }\n\n        return spec.parameterList[position];\n    },\n\n    /**\n     * Fetches the name of this function, without any qualifying namespace and/or class prefix\n     *\n     * @returns {string}\n     */\n    getUnprefixedFunctionName: function () {\n        return this.context.getUnprefixedName();\n    },\n\n    /**\n     * Populates any unspecified arguments with their default values from parameters\n     *\n     * @param {Reference[]|Value[]|Variable[]} argumentReferenceList\n     * @returns {Reference[]|Value[]|Variable[]}\n     */\n    populateDefaultArguments: function (argumentReferenceList) {\n        var coercedArguments = argumentReferenceList.slice(),\n            currentParameter,\n            spec = this;\n\n        // Provide special line number instrumentation while loading default arguments\n        spec.callStack.instrumentCurrent(function () {\n            if (!currentParameter) {\n                return null;\n            }\n\n            return currentParameter.getLineNumber();\n        });\n\n        _.each(spec.parameterList, function (parameter, index) {\n            if (!parameter) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n\n                return;\n            }\n\n            if (parameter.isRequired() && argumentReferenceList.length <= index) {\n                // No argument is given for this required parameter - should fail validation later\n\n                return;\n            }\n\n            currentParameter = parameter;\n\n            // Coerce the argument as the parameter requires\n            coercedArguments[index] = parameter.populateDefaultArgument(argumentReferenceList[index]);\n        });\n\n        return coercedArguments;\n    },\n\n    /**\n     * Validates that the given set of arguments are valid for this function\n     *\n     * @param {Reference[]|Value[]|Variable[]} argumentReferenceList\n     */\n    validateArguments: function (argumentReferenceList) {\n        var spec = this;\n\n        _.each(spec.parameterList, function (parameter, index) {\n            var filePath = null,\n                lineNumber = null;\n\n            if (!parameter) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n                return;\n            }\n\n            if (parameter.isRequired() && argumentReferenceList.length <= index) {\n                if (spec.callStack.getCurrent()) {\n                    filePath = spec.callStack.getCallerFilePath();\n                    lineNumber = spec.callStack.getCallerLastLine();\n                }\n\n                // No argument is given for this required parameter - error\n                throw spec.valueFactory.createTranslatedErrorObject(\n                    'ArgumentCountError',\n                    TOO_FEW_ARGS_FOR_EXACT_COUNT,\n                    {\n                        func: spec.context.getName(),\n                        expectedCount: spec.parameterList.length,\n                        actualCount: argumentReferenceList.length,\n                        callerFile: filePath !== null ? filePath : '(unknown)',\n                        callerLine: lineNumber !== null ? lineNumber : '(unknown)'\n                    },\n                    null,\n                    null,\n                    spec.filePath,\n                    spec.lineNumber\n                );\n            }\n\n            // Validate the argument as the parameter requires\n            parameter.validateArgument(argumentReferenceList[index]);\n        });\n    }\n});\n\nmodule.exports = FunctionSpec;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates FunctionSpec-related objects\n *\n * @param {class} FunctionSpec\n * @param {class} FunctionContext\n * @param {class} MethodContext\n * @param {class} ClosureContext\n * @param {CallStack} callStack\n * @param {ParameterListFactory} parameterListFactory\n * @param {ValueFactory} valueFactory\n * @constructor\n */\nfunction FunctionSpecFactory(\n    FunctionSpec,\n    FunctionContext,\n    MethodContext,\n    ClosureContext,\n    callStack,\n    parameterListFactory,\n    valueFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {class}\n     */\n    this.ClosureContext = ClosureContext;\n    /**\n     * @type {class}\n     */\n    this.FunctionContext = FunctionContext;\n    /**\n     * @type {class}\n     */\n    this.FunctionSpec = FunctionSpec;\n    /**\n     * @type {class}\n     */\n    this.MethodContext = MethodContext;\n    /**\n     * @type {ParameterListFactory}\n     */\n    this.parameterListFactory = parameterListFactory;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(FunctionSpecFactory.prototype, {\n    /**\n     * Creates a FunctionSpec for a function alias\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {string} functionName\n     * @param {Parameter[]} parameters\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createAliasFunctionSpec: function (namespaceScope, functionName, parameters, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.FunctionContext(namespaceScope, functionName);\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Creates a FunctionSpec from the given spec data for a closure\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {Class|null} classObject\n     * @param {Array} parametersSpecData\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createClosureSpec: function (namespaceScope, classObject, parametersSpecData, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.ClosureContext(namespaceScope, classObject),\n            parameters = factory.parameterListFactory.createParameterList(\n                context,\n                parametersSpecData,\n                namespaceScope,\n                filePath,\n                lineNumber\n            );\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Creates a FunctionSpec from the given spec data\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {string} functionName\n     * @param {Array} parametersSpecData\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createFunctionSpec: function (namespaceScope, functionName, parametersSpecData, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.FunctionContext(namespaceScope, functionName),\n            parameters = factory.parameterListFactory.createParameterList(\n                context,\n                parametersSpecData,\n                namespaceScope,\n                filePath,\n                lineNumber\n            );\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Creates a FunctionSpec from the given spec data for a method\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {Class} classObject\n     * @param {string} methodName\n     * @param {Array} parametersSpecData\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {FunctionSpec}\n     */\n    createMethodSpec: function (namespaceScope, classObject, methodName, parametersSpecData, filePath, lineNumber) {\n        var factory = this,\n            context = new factory.MethodContext(classObject, methodName),\n            parameters = factory.parameterListFactory.createParameterList(\n                context,\n                parametersSpecData,\n                namespaceScope,\n                filePath,\n                lineNumber\n            );\n\n        return new factory.FunctionSpec(\n            factory.callStack,\n            factory.valueFactory,\n            context,\n            namespaceScope,\n            parameters,\n            filePath,\n            lineNumber\n        );\n    }\n});\n\nmodule.exports = FunctionSpecFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    FunctionContextInterface = require('./FunctionContextInterface');\n\n/**\n * Represents a PHP method function\n *\n * @param {Class} classObject\n * @param {string|null} name\n * @constructor\n * @implements {FunctionContextInterface}\n */\nfunction MethodContext(classObject, name) {\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {string|null}\n     */\n    this.name = name;\n}\n\nutil.inherits(MethodContext, FunctionContextInterface);\n\n_.extend(MethodContext.prototype, {\n    /**\n     * Fetches the fully-qualified name of the method\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getName: function (isStaticCall) {\n        var spec = this;\n\n        return spec.classObject.getName() + (isStaticCall !== false ? '::' : '->') + spec.name;\n    },\n\n    /**\n     * Fetches the name of the method as required for stack traces\n     *\n     * @param {boolean=} isStaticCall\n     * @returns {string}\n     */\n    getTraceFrameName: function (isStaticCall) {\n        return this.getName(isStaticCall);\n    },\n\n    /**\n     * Fetches the name of the method, without any qualifying namespace and/or class prefix\n     * (eg. as used by __FUNCTION__)\n     *\n     * @returns {string}\n     */\n    getUnprefixedName: function () {\n        return this.name;\n    }\n});\n\nmodule.exports = MethodContext;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    Value = require('../Value').sync(),\n\n    INSTANCE_OF_TYPE_ACTUAL = 'core.instance_of_type_actual',\n    INVALID_VALUE_FOR_TYPE = 'core.invalid_value_for_type',\n    ONLY_VARIABLES_BY_REFERENCE = 'core.only_variables_by_reference',\n    UNKNOWN = 'core.unknown';\n\n/**\n * Represents a parameter to a PHP function\n *\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @param {string|null} name\n * @param {number} index\n * @param {TypeInterface} typeObject\n * @param {FunctionContextInterface} context\n * @param {boolean} passedByReference\n * @param {Function|null} defaultValueProvider\n * @param {string|null} filePath\n * @param {number|null} lineNumber\n * @constructor\n */\nfunction Parameter(\n    callStack,\n    translator,\n    name,\n    index,\n    typeObject,\n    context,\n    passedByReference,\n    defaultValueProvider,\n    filePath,\n    lineNumber\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {FunctionContextInterface}\n     */\n    this.context = context;\n    /**\n     * @type {Function|null}\n     */\n    this.defaultValueProvider = defaultValueProvider;\n    /**\n     * @type {string|null}\n     */\n    this.filePath = filePath;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    /**\n     * @type {number|null}\n     */\n    this.lineNumber = lineNumber;\n    /**\n     * @type {string|null}\n     */\n    this.name = name;\n    /**\n     * @type {boolean}\n     */\n    this.passedByReference = passedByReference;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {TypeInterface}\n     */\n    this.typeObject = typeObject;\n}\n\n_.extend(Parameter.prototype, {\n    /**\n     * Coerces the given argument for this parameter to a suitable value or reference,\n     * causing the correct notice to be raised if an undefined variable or reference\n     * is given where a value was expected\n     *\n     * @param {Reference|Value|Variable} argumentReference\n     * @returns {Reference|Value|Variable}\n     */\n    coerceArgument: function (argumentReference) {\n        var parameter = this;\n\n        if (parameter.passedByReference) {\n            // It is valid to pass an undefined variable/reference to a by-ref parameter\n            return argumentReference;\n        }\n\n        return argumentReference.getValue();\n    },\n\n    /**\n     * Fetches the line number this parameter was defined on, if known\n     *\n     * @returns {number|null}\n     */\n    getLineNumber: function () {\n        return this.lineNumber;\n    },\n\n    /**\n     * Determines whether this parameter must have an argument provided.\n     * Arguments are required for PHP function parameters unless that parameter defines a default value\n     *\n     * @returns {boolean}\n     */\n    isRequired: function () {\n        return this.defaultValueProvider === null;\n    },\n\n    /**\n     * Fetches the default value for this parameter if its argument is missing\n     *\n     * @param {Reference|Value|Variable|null=} argumentReference\n     * @returns {Reference|Value|Variable}\n     */\n    populateDefaultArgument: function (argumentReference) {\n        var parameter = this;\n\n        if (!argumentReference) {\n            if (parameter.isRequired()) {\n                // This should never happen - the scenario is captured within FunctionSpec\n                throw new Error('Missing argument for required parameter \"' + parameter.name + '\"');\n            }\n\n            argumentReference = parameter.defaultValueProvider();\n        }\n\n        // TODO: For PHP 7, if the caller is in weak mode then we need to coerce if the type is scalar\n\n        // Make sure we preserve any reference rather than always casting to value\n        return argumentReference;\n    },\n\n    /**\n     * Validates whether the given argument is valid for this parameter\n     *\n     * @param {Reference|Value|Variable|null=} argumentReference\n     */\n    validateArgument: function (argumentReference) {\n        var actualType,\n            argumentIsValid,\n            argumentValue,\n            callerFilePath = null,\n            callerLineNumber = null,\n            definitionFilePath,\n            definitionLineNumber,\n            expectedType,\n            parameter = this;\n\n        if (parameter.passedByReference && argumentReference instanceof Value) {\n            // Parameter expects a reference but was given a value - error\n            parameter.callStack.raiseTranslatedError(\n                PHPError.E_ERROR,\n                ONLY_VARIABLES_BY_REFERENCE,\n                {},\n                null,\n                false,\n                parameter.callStack.getCallerFilePath(),\n                parameter.callStack.getCallerLastLine()\n            );\n        }\n\n        if (!argumentReference) {\n            if (parameter.isRequired()) {\n                // This should never happen - the scenario is captured within FunctionSpec\n                throw new Error('Missing argument for required parameter \"' + parameter.name + '\"');\n            }\n\n            // Argument was omitted but its parameter is optional: allow it through, we'll use its default value\n            return;\n        }\n\n        argumentValue = argumentReference.getValueOrNull();\n\n        argumentIsValid =\n            // Check whether the type allows the given argument (including null,\n            // if it is a nullable type) or ...\n            parameter.typeObject.allowsValue(argumentValue) ||\n            (\n                // ... otherwise if null is given but not allowed by the type,\n                // null will need to have been given as the default value in order to be allowed\n                argumentValue.getType() === 'null' &&\n                parameter.defaultValueProvider &&\n                parameter.defaultValueProvider().getType() === 'null'\n            );\n\n        if (!argumentIsValid) {\n            // TODO: For PHP 7, if the caller is in weak mode then we need to coerce if the type is scalar\n\n            definitionFilePath = parameter.filePath || parameter.translator.translate(UNKNOWN);\n            definitionLineNumber = parameter.lineNumber || parameter.translator.translate(UNKNOWN);\n\n            if (parameter.callStack.getCurrent()) {\n                callerFilePath = parameter.callStack.getCallerFilePath();\n                callerLineNumber = parameter.callStack.getCallerLastLine();\n            }\n\n            actualType = argumentValue.getDisplayType();\n            expectedType = parameter.typeObject.getExpectedMessage(parameter.translator);\n\n            if (argumentValue.getType() === 'object') {\n                actualType = parameter.translator.translate(INSTANCE_OF_TYPE_ACTUAL, {\n                    actualType: actualType\n                });\n            }\n\n            // Parameter is typehinted as expecting instances of a class or interface,\n            // but the given argument does not match\n            parameter.callStack.raiseTranslatedError(\n                PHPError.E_ERROR,\n                INVALID_VALUE_FOR_TYPE,\n                {\n                    index: parameter.index + 1,\n                    func: parameter.context.getName(),\n                    expectedType: expectedType,\n                    actualType: actualType,\n                    callerFile: callerFilePath !== null ? callerFilePath : parameter.translator.translate(UNKNOWN),\n                    callerLine: callerLineNumber !== null ? callerLineNumber : parameter.translator.translate(UNKNOWN),\n                    definitionFile: definitionFilePath,\n                    definitionLine: definitionLineNumber\n                },\n                'TypeError',\n                true,\n                definitionFilePath,\n                definitionLineNumber\n            );\n        }\n    }\n});\n\nmodule.exports = Parameter;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Parameter\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @constructor\n */\nfunction ParameterFactory(Parameter, callStack, translator) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {class}\n     */\n    this.Parameter = Parameter;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n}\n\n_.extend(ParameterFactory.prototype, {\n    /**\n     * Creates a Parameter from the given spec data\n     *\n     * @param {string|null} name\n     * @param {number} index\n     * @param {Type} typeObject\n     * @param {FunctionContextInterface} context\n     * @param {boolean} passedByReference\n     * @param {Function|null} defaultValueProvider\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {Parameter}\n     */\n    createParameter: function (\n        name,\n        index,\n        typeObject,\n        context,\n        passedByReference,\n        defaultValueProvider,\n        filePath,\n        lineNumber\n    ) {\n        var factory = this;\n\n        return new factory.Parameter(\n            factory.callStack,\n            factory.translator,\n            name,\n            index,\n            typeObject,\n            context,\n            passedByReference,\n            defaultValueProvider,\n            filePath,\n            lineNumber\n        );\n    }\n});\n\nmodule.exports = ParameterFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the correct Parameters from a function, closure or method parameter list spec\n *\n * @param {ParameterFactory} parameterFactory\n * @param {ParameterTypeFactory} parameterTypeFactory\n * @constructor\n */\nfunction ParameterListFactory(parameterFactory, parameterTypeFactory) {\n    /**\n     * @type {ParameterFactory}\n     */\n    this.parameterFactory = parameterFactory;\n    /**\n     * @type {ParameterTypeFactory}\n     */\n    this.parameterTypeFactory = parameterTypeFactory;\n}\n\n_.extend(ParameterListFactory.prototype, {\n    /**\n     * Creates the correct Parameters from a function, closure or method parameter list spec\n     *\n     * @param {FunctionContextInterface} context\n     * @param {Array} parametersSpecData\n     * @param {NamespaceScope} namespaceScope\n     * @param {string|null} filePath\n     * @param {number|null} lineNumber\n     * @returns {Parameter[]|null[]}\n     */\n    createParameterList: function (\n        context,\n        parametersSpecData,\n        namespaceScope,\n        filePath,\n        lineNumber\n    ) {\n        var factory = this,\n            parameters = [];\n\n        _.each(parametersSpecData, function (parameterSpecData, parameterIndex) {\n            var parameterType;\n\n            if (!parameterSpecData) {\n                // Parameter is omitted due to bundle-size optimisations or similar, ignore\n                parameters.push(null);\n\n                return;\n            }\n\n            parameterType = factory.parameterTypeFactory.createParameterType(parameterSpecData, namespaceScope);\n\n            parameters.push(factory.parameterFactory.createParameter(\n                parameterSpecData.name,\n                parameterIndex,\n                parameterType,\n                context,\n                parameterSpecData.ref,\n                parameterSpecData.value || null,\n                filePath,\n                lineNumber\n            ));\n        });\n\n        return parameters;\n    }\n});\n\nmodule.exports = ParameterListFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the correct Type from a function, closure or method parameter spec\n *\n * @param {TypeFactory} typeFactory\n * @constructor\n */\nfunction ParameterTypeFactory(typeFactory) {\n    /**\n     * @type {TypeFactory}\n     */\n    this.typeFactory = typeFactory;\n}\n\n_.extend(ParameterTypeFactory.prototype, {\n    /**\n     * Creates the correct Type from a function, closure or method parameter spec\n     *\n     * @param {Object} parameterSpecData\n     * @param {NamespaceScope} namespaceScope\n     * @returns {TypeInterface}\n     */\n    createParameterType: function (parameterSpecData, namespaceScope) {\n        var factory = this,\n            resolvedClass;\n\n        switch (parameterSpecData.type) {\n            case 'array':\n                return factory.typeFactory.createArrayType();\n            case 'callable':\n                return factory.typeFactory.createCallableType(namespaceScope);\n            case 'class':\n                // We must now resolve the class name given relative to the current namespace scope,\n                // as it may be a relative class name that relies on the current namespace or a `use` import\n                resolvedClass = namespaceScope.resolveClass(parameterSpecData.className);\n\n                return factory.typeFactory.createClassType(resolvedClass.namespace.getPrefix() + resolvedClass.name);\n            case 'iterable':\n                return factory.typeFactory.createIterableType();\n            case undefined:\n                return factory.typeFactory.createMixedType();\n            default:\n                throw new Error('Unsupported parameter type \"' + parameterSpecData.type + '\"');\n        }\n    }\n});\n\nmodule.exports = ParameterTypeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    var slice = [].slice;\n\n    /**\n     * @param {class} MethodSpec\n     * @param {ScopeFactory} scopeFactory\n     * @param {CallFactory} callFactory\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @constructor\n     */\n    function FunctionFactory(\n        MethodSpec,\n        scopeFactory,\n        callFactory,\n        valueFactory,\n        callStack\n    ) {\n        /**\n         * @type {CallFactory}\n         */\n        this.callFactory = callFactory;\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {class}\n         */\n        this.MethodSpec = MethodSpec;\n        /**\n         * @type {Class|null}\n         */\n        this.newStaticClassForNextCall = null;\n        /**\n         * @type {ScopeFactory}\n         */\n        this.scopeFactory = scopeFactory;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(FunctionFactory.prototype, {\n        /**\n         * Wraps the specified function in another that handles the PHP call stack and scoping\n         *\n         * @param {NamespaceScope} namespaceScope\n         * @param {Class|null} currentClass Used by eg. self::\n         * @param {Function} func\n         * @param {string|null} name\n         * @param {ObjectValue|null} currentObject\n         * @param {Class|null} staticClass Used by eg. static::\n         * @param {FunctionSpec} functionSpec\n         * @returns {Function}\n         */\n        create: function (namespaceScope, currentClass, func, name, currentObject, staticClass, functionSpec) {\n            var factory = this,\n                wrapperFunc = function () {\n                    var args = slice.call(arguments),\n                        thisObject = currentObject || this,\n                        scope,\n                        call,\n                        newStaticClass = null,\n                        result;\n\n                    if (factory.newStaticClassForNextCall !== null) {\n                        newStaticClass = factory.newStaticClassForNextCall;\n                        factory.newStaticClassForNextCall = null;\n                    } else if (staticClass) {\n                        // Allow an explicit static class to be specified, eg. by a Closure\n                        newStaticClass = staticClass;\n                    }\n\n                    if (!factory.valueFactory.isValue(thisObject)) {\n                        thisObject = null;\n                    }\n\n                    // Coerce parameter arguments as required\n                    args = functionSpec.coerceArguments(args);\n\n                    scope = factory.scopeFactory.create(currentClass, wrapperFunc, thisObject);\n                    call = factory.callFactory.create(scope, namespaceScope, args, newStaticClass);\n\n                    // Push the call onto the stack\n                    factory.callStack.push(call);\n\n                    try {\n                        // Now validate the arguments at this point (coercion was done earlier)\n                        // - if any error is raised then the call will still be popped off\n                        //   by the finally clause below\n                        functionSpec.validateArguments(args);\n\n                        // Now populate any optional arguments that were omitted with their default values\n                        args = functionSpec.populateDefaultArguments(args);\n\n                        result = func.apply(scope, args);\n\n                        // Coerce the result to a Value object, handling any FFIResult as needed\n                        // (in async mode this could result in a pause if required)\n                        result = factory.valueFactory.coerce(result);\n\n                        // TODO: Coerce the result as needed (if the PHP function has a return type defined\n                        //       and we are in loose-types mode)\n                    } finally {\n                        // Pop the call off the stack when done\n                        factory.callStack.pop();\n                    }\n\n                    return result;\n                };\n\n            wrapperFunc.functionSpec = functionSpec;\n            wrapperFunc.isPHPCoreWrapped = true;\n            wrapperFunc.originalFunc = func;\n\n            return wrapperFunc;\n        },\n\n        /**\n         * Creates a new MethodSpec, that describes the specified method of a class\n         *\n         * @TODO: Replace with FunctionSpec instead?\n         *\n         * @param {Class} originalClass The original class checked against (eg. a derived class for an inherited method)\n         * @param {Class} classObject The class the method is actually defined on (may be an ancestor)\n         * @param {string} methodName\n         * @param {Function} method\n         */\n        createMethodSpec: function (originalClass, classObject, methodName, method) {\n            return new this.MethodSpec(originalClass, classObject, methodName, method);\n        },\n\n        /**\n         * Specifies the class to use as the static:: class for the next call\n         * to the specified wrapped function\n         *\n         * @param {Function} func\n         * @param {Class} newStaticClass\n         */\n        setNewStaticClassIfWrapped: function (func, newStaticClass) {\n            if (!func.isPHPCoreWrapped) {\n                return;\n            }\n\n            this.newStaticClassForNextCall = newStaticClass;\n        }\n    });\n\n    return FunctionFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty;\n\n/**\n * Contains all INI options at runtime\n *\n * @constructor\n */\nfunction INIState() {\n    /**\n     * @type {Object.<string, *>}\n     */\n    this.settings = {\n        'include_path': '.'\n    };\n}\n\n_.extend(INIState.prototype, {\n    /**\n     * Fetches an INI option, returning null if it is not defined\n     *\n     * @param {string} name\n     * @returns {*}\n     */\n    get: function (name) {\n        return hasOwn.call(this.settings, name) ?\n            this.settings[name] :\n            null;\n    },\n\n    /**\n     * Sets the value of an INI option\n     *\n     * @param {string} name\n     * @param {*} value\n     */\n    set: function (name, value) {\n        this.settings[name] = value;\n    }\n});\n\nmodule.exports = INIState;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Used by transpiled foreach(...) statements to iterate over the elements in an array\n * or the properties of an object that does not implement Traversable\n *\n * @param {ArrayValue|ObjectValue} arrayLikeValue\n * @constructor\n */\nfunction ArrayIterator(arrayLikeValue) {\n    /**\n     * @type {ArrayValue|ObjectValue}\n     */\n    this.arrayLikeValue = arrayLikeValue;\n    /**\n     * @type {number}\n     */\n    this.pointer = 0;\n}\n\n_.extend(ArrayIterator.prototype, {\n    /**\n     * Advances this iterator to the next element\n     */\n    advance: function () {\n        this.pointer++;\n    },\n\n    /**\n     * Fetches a reference to the element this iterator is currently pointing at\n     *\n     * @returns {Reference}\n     */\n    getCurrentElementReference: function () {\n        var iterator = this;\n\n        return iterator.arrayLikeValue.getElementByIndex(iterator.pointer).getReference();\n    },\n\n    /**\n     * Fetches the value of the element this iterator is currently pointing at\n     *\n     * @returns {Value}\n     */\n    getCurrentElementValue: function () {\n        var iterator = this;\n\n        return iterator.arrayLikeValue.getElementByIndex(iterator.pointer).getValue();\n    },\n\n    /**\n     * Fetches the key of the element this iterator is currently pointing at.\n     * If the array is empty or the pointer is past the end of the array,\n     * null will be returned.\n     *\n     * @returns {Value|null}\n     */\n    getCurrentKey: function () {\n        var iterator = this;\n\n        return iterator.arrayLikeValue.getKeyByIndex(iterator.pointer);\n    },\n\n    /**\n     * Fetches the ArrayValue or ObjectValue that this iterator iterates over\n     *\n     * @returns {ArrayValue|ObjectValue}\n     */\n    getIteratedValue: function () {\n        return this.arrayLikeValue;\n    },\n\n    /**\n     * Determines whether this iterator is pointing past the end of the array being iterated over\n     *\n     * @returns {boolean}\n     */\n    isNotFinished: function () {\n        var iterator = this;\n\n        return iterator.pointer < iterator.arrayLikeValue.getLength();\n    }\n});\n\nmodule.exports = ArrayIterator;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction KeyReferencePair(key, reference) {\n    this.key = key;\n    this.reference = reference;\n}\n\n_.extend(KeyReferencePair.prototype, {\n    getKey: function () {\n        return this.key;\n    },\n\n    getReference: function () {\n        return this.reference;\n    }\n});\n\nmodule.exports = KeyReferencePair;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction KeyValuePair(key, value) {\n    this.key = key;\n    this.value = value;\n}\n\n_.extend(KeyValuePair.prototype, {\n    getKey: function () {\n        return this.key;\n    },\n\n    getValue: function () {\n        return this.value;\n    }\n});\n\nmodule.exports = KeyValuePair;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nfunction List(valueFactory, elements) {\n    this.elements = elements;\n    this.valueFactory = valueFactory;\n}\n\n_.extend(List.prototype, {\n    setValue: function (value) {\n        var list = this;\n\n        if (value.getType() === 'array') {\n            _.each(list.elements, function (reference, index) {\n                reference.setValue(value.getElementByIndex(index).getValue());\n            });\n        } else {\n            // Non-array value assigned to list, all references should just be nulled\n            _.each(list.elements, function (reference) {\n                reference.setValue(list.valueFactory.createNull());\n            });\n        }\n\n        return value;\n    }\n});\n\nmodule.exports = List;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('../Exception/LoadFailedException')\n], function (\n    _,\n    phpCommon,\n    LoadFailedException\n) {\n    var hasOwn = {}.hasOwnProperty,\n        Exception = phpCommon.Exception,\n        INCLUDE_OPTION = 'include',\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * Handles include(...), require(...) and the _once(...) variants\n     *\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @param {ScopeFactory} scopeFactory\n     * @param {Loader} loader\n     * @param {OptionSet} optionSet\n     * @constructor\n     */\n    function Includer(\n        callStack,\n        valueFactory,\n        scopeFactory,\n        loader,\n        optionSet\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Object.<string, boolean>}\n         */\n        this.includedPaths = {};\n        /**\n         * @type {Loader}\n         */\n        this.loader = loader;\n        /**\n         * @type {OptionSet}\n         */\n        this.optionSet = optionSet;\n        /**\n         * @type {ScopeFactory}\n         */\n        this.scopeFactory = scopeFactory;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Includer.prototype, {\n        /**\n         * Determines whether the given module has already been included\n         *\n         * @param {string} path\n         * @returns {boolean}\n         */\n        hasModuleBeenIncluded: function (path) {\n            return hasOwn.call(this.includedPaths, path);\n        },\n\n        /**\n         * Creates an includer for include(...), require(...) and the _once(...) variants\n         *\n         * @param {string} type \"include\", \"require\" or a \"_once\" variant\n         * @param {string} errorLevel One of the PHPError.E_* constant\n         * @param {Environment} environment\n         * @param {Module} module PHP Module that the include occurred inside\n         * @param {NamespaceScope} topLevelNamespaceScope\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @param {Object} options\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        include: function (\n            type,\n            errorLevel,\n            environment,\n            module,\n            topLevelNamespaceScope,\n            includedPath,\n            enclosingScope,\n            options\n        ) {\n            var includer = this,\n                includeFunction = includer.optionSet.getOption(INCLUDE_OPTION),\n                includeScope,\n                previousError;\n\n            if (!includeFunction) {\n                throw new Exception(\n                    type + '(' + includedPath + ') :: No \"' +\n                    INCLUDE_OPTION +\n                    '\" transport option is available for loading the module.'\n                );\n            }\n\n            includeScope = includer.scopeFactory.createLoadScope(\n                enclosingScope,\n                topLevelNamespaceScope.getFilePath(),\n                type\n            );\n\n            // Mark the module as included so we may avoid including it a second time\n            includer.includedPaths[includedPath] = true;\n\n            try {\n                return includer.loader.load(\n                    type,\n                    includedPath,\n                    options,\n                    environment,\n                    module,\n                    includeScope,\n                    function (path, promise, parentPath, valueFactory) {\n                        return includeFunction(path, promise, parentPath, valueFactory);\n                    }\n                );\n            } catch (error) {\n                if (!(error instanceof LoadFailedException)) {\n                    // Rethrow for anything other than the expected possible exception(s) trying to load the module\n                    throw error;\n                }\n\n                previousError = error.getPreviousError();\n\n                includer.callStack.raiseError(\n                    PHPError.E_WARNING,\n                    type + '(' + includedPath + '): failed to open stream: ' +\n                        (previousError ? previousError.message : 'Unknown error')\n                );\n                includer.callStack.raiseError(\n                    errorLevel,\n                    type + '(): Failed opening \\'' + includedPath + '\\' for inclusion'\n                );\n\n                return includer.valueFactory.createBoolean(false);\n            }\n        }\n    });\n\n    return Includer;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Wraps a Scope having a load (eval, include etc.) performed from inside it\n *\n * @param {ValueFactory} valueFactory\n * @param {Scope} effectiveScope\n * @param {string} callerFilePath\n * @param {string} type The type of load, eg. `eval` or `include`\n * @constructor\n */\nfunction LoadScope(valueFactory, effectiveScope, callerFilePath, type) {\n    /**\n     * @type {string}\n     */\n    this.callerFilePath = callerFilePath;\n    /**\n     * @type {Scope}\n     */\n    this.effectiveScope = effectiveScope;\n    /**\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(LoadScope.prototype, {\n    /**\n     * Creates a closure, either static (with no `$this` object bound) or non-static\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {Function} func\n     * @param {Array=} parametersSpecData\n     * @param {boolean=} isStatic\n     * @param {number|null=} lineNumber\n     * @returns {Closure}\n     */\n    createClosure: function (namespaceScope, func, parametersSpecData, isStatic, lineNumber) {\n        return this.effectiveScope.createClosure(\n            namespaceScope,\n            func,\n            parametersSpecData,\n            isStatic,\n            lineNumber\n        );\n    },\n\n    /**\n     * Defines a variable with the given name in this scope\n     *\n     * @param {string} name\n     * @returns {Variable}\n     */\n    defineVariable: function (name) {\n        return this.effectiveScope.defineVariable(name);\n    },\n\n    /**\n     * Defines one or more variables with the given names in this scope\n     *\n     * @param {string[]} names\n     */\n    defineVariables: function (names) {\n        this.effectiveScope.defineVariables(names);\n    },\n\n    /**\n     * Returns a hash with the values of all variables defined\n     * for this scope, including all superglobals\n     *\n     * @returns {Object.<string, Value>}\n     */\n    exportVariables: function () {\n        return this.effectiveScope.exportVariables();\n    },\n\n    /**\n     * Defines a variable in the current scope with the given native value\n     *\n     * @param {Value} value\n     * @param {string} name\n     */\n    expose: function (value, name) {\n        this.effectiveScope.expose(value, name);\n    },\n\n    /**\n     * Fetches the name of the current class, or an empty string if there is none\n     *\n     * @returns {StringValue}\n     */\n    getClassName: function () {\n        return this.effectiveScope.getClassName();\n    },\n\n    /**\n     * Fetches the name of the class in which this scope's function is defined\n     *\n     * @returns {StringValue}\n     * @throws {PHPFatalError} When there is no current class scope\n     */\n    getClassNameOrThrow: function () {\n        return this.effectiveScope.getClassNameOrThrow();\n    },\n\n    /**\n     * Fetches the current class, if any\n     *\n     * @returns {Class|null}\n     */\n    getCurrentClass: function () {\n        return this.effectiveScope.getCurrentClass();\n    },\n\n    /**\n     * Fetches the current file path, taking eval or include into account\n     *\n     * @param {string|null} filePath\n     * @returns {string|null}\n     */\n    getFilePath: function (filePath) {\n        return filePath !== null ? filePath : this.callerFilePath;\n    },\n\n    /**\n     * Fetches the current function name (used by eg. the magic __FUNCTION__ constant)\n     *\n     * @returns {StringValue}\n     */\n    getFunctionName: function () {\n        // Eval/include contexts do not report the calling function, if any\n        return this.valueFactory.createString('');\n    },\n\n    /**\n     * Fetches the current method name (used by eg. the magic __METHOD__ constant)\n     *\n     * Note that this differs from .getFunctionName() when the current function is a method\n     *\n     * @returns {StringValue}\n     */\n    getMethodName: function () {\n        // Eval/include contexts do not report the calling method, if any\n        return this.valueFactory.createString('');\n    },\n\n    /**\n     * Fetches the name of the parent of the current class in scope\n     *\n     * @returns {StringValue}\n     * @throws {PHPFatalError} When there is no current class scope or current class has no parent\n     */\n    getParentClassNameOrThrow: function () {\n        return this.effectiveScope.getParentClassNameOrThrow();\n    },\n\n    /**\n     * Fetches the name of the current static class scope, which may be different\n     * from the class in which its function is defined (eg. after a forward_static_call(...))\n     *\n     * @returns {StringValue}\n     * @throws {PHPFatalError} When there is no static class scope\n     */\n    getStaticClassNameOrThrow: function () {\n        return this.effectiveScope.getStaticClassNameOrThrow();\n    },\n\n    /**\n     * Fetches the current object (the value of $this) if any\n     *\n     * @returns {ObjectValue|null}\n     */\n    getThisObject: function () {\n        return this.effectiveScope.getThisObject();\n    },\n\n    /**\n     * Fetches the current function or method name as used in stack traces\n     *\n     * Note that this differs from .getFunctionName() and .getMethodName()\n     *\n     * @returns {string}\n     */\n    getTraceFrameName: function () {\n        return this.type;\n    },\n\n    /**\n     * Fetches a variable for the current or super global scope,\n     * implicitly defining it if needed\n     *\n     * @param {string} name\n     * @returns {Variable}\n     */\n    getVariable: function (name) {\n        return this.effectiveScope.getVariable(name);\n    },\n\n    /**\n     * Imports a global variable into this scope by defining the variable\n     * in this scope and setting its reference to point to the global one.\n     *\n     * @param {string} variableName\n     */\n    importGlobal: function (variableName) {\n        this.effectiveScope.importGlobal(variableName);\n    },\n\n    /**\n     * Imports a static variable into this scope by defining the variable\n     * in this scope and setting its reference to point to the \"static\" one,\n     * stored against the current function/method. The first time the variable\n     * is declared, it will be assigned the initial value (if any).\n     *\n     * @param {string} variableName\n     * @param {Value|null} initialValue\n     */\n    importStatic: function (variableName, initialValue) {\n        this.effectiveScope.importStatic(variableName, initialValue);\n    },\n\n    /**\n     * Whether this call scope is in a static context or not\n     *\n     * @returns {boolean}\n     */\n    isStatic: function () {\n        return this.effectiveScope.isStatic();\n    },\n\n    /**\n     * Raises a catchable Error or a notice/warning with the specified level, message translation key and variables,\n     * scoped to the current function scope\n     *\n     * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n     * @param {string} translationKey\n     * @param {Object.<string, string>=} placeholderVariables\n     * @param {string=} errorClass\n     * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n     * @param {string=} filePath\n     * @param {number=} lineNumber\n     * @throws {ObjectValue} Throws an ObjectValue-wrapped Throwable if not a notice or warning\n     */\n    raiseScopedTranslatedError: function (\n        level,\n        translationKey,\n        placeholderVariables,\n        errorClass,\n        reportsOwnContext,\n        filePath,\n        lineNumber\n    ) {\n        this.effectiveScope.raiseScopedTranslatedError(\n            level,\n            translationKey,\n            placeholderVariables,\n            errorClass,\n            reportsOwnContext,\n            filePath,\n            lineNumber\n        );\n    },\n\n    /**\n     * Suppresses errors for this and any descendant scopes\n     */\n    suppressErrors: function () {\n        this.effectiveScope.suppressErrors();\n    },\n\n    /**\n     * Suppresses errors for only this and not any descendant scopes\n     */\n    suppressOwnErrors: function () {\n        this.effectiveScope.suppressOwnErrors();\n    },\n\n    /**\n     * Determines whether errors have been suppressed for this and any descendant scopes\n     *\n     * @returns {boolean}\n     */\n    suppressesErrors: function () {\n        return this.effectiveScope.suppressesErrors();\n    },\n\n    /**\n     * Determines whether errors have been suppressed for this but not any descendant scopes\n     *\n     * @returns {boolean}\n     */\n    suppressesOwnErrors: function () {\n        return this.effectiveScope.suppressesOwnErrors();\n    },\n\n    /**\n     * Unsuppresses errors for this and any descendant scopes\n     */\n    unsuppressErrors: function () {\n        this.effectiveScope.unsuppressErrors();\n    },\n\n    /**\n     * Unsuppresses errors for this but not any descendant scopes\n     */\n    unsuppressOwnErrors: function () {\n        this.effectiveScope.unsuppressOwnErrors();\n    }\n});\n\nmodule.exports = LoadScope;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('path'),\n    require('phpcommon'),\n    require('../Value/Exit'),\n    require('../Exception/LoadFailedException'),\n    require('../Value')\n], function (\n    _,\n    path,\n    phpCommon,\n    ExitValue,\n    LoadFailedException,\n    Value\n) {\n    var Exception = phpCommon.Exception,\n        PHPFatalError = phpCommon.PHPFatalError,\n        PHPParseError = phpCommon.PHPParseError;\n\n    /**\n     * @param {ValueFactory} valueFactory\n     * @param {Resumable|null} pausable\n     * @constructor\n     */\n    function Loader(valueFactory, pausable) {\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Loader.prototype, {\n        /**\n         * Loads a resource by calling the provided loader. Used for:\n         *\n         * - `include(...)`\n         * - `require(...)`\n         * - `eval(...)`\n         *\n         * When the relevant transport options are installed.\n         *\n         * @param {string} type The type of load to be done, eg. `eval` or `include`\n         * @param {string} filePath The path to the resource being loaded\n         * @param {object} options\n         * @param {Environment} environment\n         * @param {Module} module\n         * @param {Scope} enclosingScope\n         * @param {Function} load\n         * @returns {*}\n         */\n        load: function (type, filePath, options, environment, module, enclosingScope, load) {\n            var done = false,\n                errorResult = null,\n                loader = this,\n                pause = null,\n                result,\n                subOptions;\n\n            function completeWith(moduleResult) {\n                done = true;\n\n                if (pause) {\n                    if (moduleResult instanceof ExitValue) {\n                        pause.throw(moduleResult);\n                        return;\n                    }\n\n                    pause.resume(moduleResult);\n                } else {\n                    if (moduleResult instanceof ExitValue) {\n                        throw moduleResult;\n                    }\n\n                    result = moduleResult;\n                }\n            }\n\n            function resolve(valueOrModule) {\n                var executeResult;\n\n                // Handle wrapper function being returned from loader for module\n                if (_.isFunction(valueOrModule)) {\n                    executeResult = valueOrModule(subOptions, environment, enclosingScope).execute();\n\n                    if (!loader.pausable) {\n                        completeWith(executeResult);\n                        return;\n                    }\n\n                    executeResult.then(\n                        completeWith,\n                        function (error) {\n                            pause.throw(error);\n                        }\n                    );\n\n                    return;\n                }\n\n                // Handle PHP code string being returned from loader for module\n                if (_.isString(valueOrModule)) {\n                    throw new Exception(type + '(' + filePath + ') :: Returning a PHP string is not supported');\n                }\n\n                // Handle a value object being returned as the module's return value\n                if (loader.valueFactory.isValue(valueOrModule)) {\n                    completeWith(valueOrModule);\n                    return;\n                }\n\n                throw new Exception(type + '(' + filePath + ') :: Module is in a weird format');\n            }\n\n            function reject(error) {\n                var filePath,\n                    lineNumber,\n                    subError;\n\n                if (error instanceof PHPParseError) {\n                    filePath = error.getFilePath();\n                    lineNumber = error.getLineNumber();\n\n                    // Parse errors should be thrown as a ParseError in PHP 7+\n                    // NB: The Error class' constructor will fetch file and line number info\n                    subError = loader.valueFactory.createErrorObject(\n                        'ParseError',\n                        error.getMessage(),\n                        null,\n                        null,\n                        filePath !== null ? filePath : '(unknown)',\n                        lineNumber !== null ? lineNumber : 0\n                    );\n                } else if (error instanceof PHPFatalError) {\n                    // Uncatchable fatal error (?)\n\n                    subError = error;\n                } else if (error instanceof Value) {\n                    // Throwable Error, Exception or an exit occurred (ExitValue)\n\n                    subError = error;\n                } else {\n                    subError = new LoadFailedException(error);\n                }\n\n                if (pause) {\n                    pause.throw(subError);\n                } else {\n                    errorResult = subError;\n                }\n            }\n\n            // Resolve \"./\" and \"../\" components in the file path\n            filePath = path.normalize(filePath);\n\n            subOptions = _.extend({}, options, {\n                // TODO: Can we improve this? Can we include a module's path in its compiled output,\n                //       rather than having the runtime provide its path like this?\n                'path': filePath\n            });\n\n            // NB: The loader may throw an error, which will be caught and passed to reject()\n            //     for consistent behaviour\n            try {\n                load(filePath, {\n                    reject: reject,\n                    resolve: resolve\n                }, module.getFilePath(), loader.valueFactory);\n            } catch (error) {\n                reject(error);\n            }\n\n            if (errorResult) {\n                throw errorResult;\n            }\n\n            if (done) {\n                return result;\n            }\n\n            if (!loader.pausable) {\n                // Pausable is not available, so we cannot yield while the module is loaded\n                throw new Exception(type + '(' + filePath + ') :: Async support not enabled');\n            }\n\n            pause = loader.pausable.createPause();\n            return pause.now();\n        }\n    });\n\n    return Loader;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * Handles include_once(...) and require_once(...)\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {Includer} includer\n     * @constructor\n     */\n    function OnceIncluder(valueFactory, includer)\n    {\n        /**\n         * @type {Includer}\n         */\n        this.includer = includer;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(OnceIncluder.prototype, {\n        /**\n         * Includes the specified module, returning its return value.\n         * Throws if no include transport has been configured.\n         * Returns boolean true if the module has already been included.\n         *\n         * @param {string} type \"include_once\" or \"require_once\"\n         * @param {string} errorLevel One of the PHPError.E_* constants\n         * @param {Environment} environment\n         * @param {Module} module PHP Module that the include occurred inside\n         * @param {NamespaceScope} topLevelNamespaceScope\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @param {Object} options\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        includeOnce: function (\n            type,\n            errorLevel,\n            environment,\n            module,\n            topLevelNamespaceScope,\n            includedPath,\n            enclosingScope,\n            options\n        ) {\n            var includer = this;\n\n            // Note that this lookup is updated in .include(...)\n            if (includer.includer.hasModuleBeenIncluded(includedPath)) {\n                // Module has already been included, so just return bool(true) to PHP-land\n                return includer.valueFactory.createBoolean(true);\n            }\n\n            return includer.includer.include(\n                type,\n                errorLevel,\n                environment,\n                module,\n                topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                options\n            );\n        }\n    });\n\n    return OnceIncluder;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    IS_STATIC = 'isStatic';\n\n/**\n * @param {Class} originalClass The original class checked against (eg. a derived class for an inherited method)\n * @param {Class} classObject The class the method is actually defined on (may be an ancestor)\n * @param {string} methodName\n * @param {Function} method\n * @constructor\n */\nfunction MethodSpec(originalClass, classObject, methodName, method) {\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {Function}\n     */\n    this.method = method;\n    /**\n     * @type {string}\n     */\n    this.methodName = methodName;\n    /**\n     * @type {Class}\n     */\n    this.originalClass = originalClass;\n}\n\n_.extend(MethodSpec.prototype, {\n    /**\n     * Fetches the name of the method this spec is for\n     * \n     * @returns {string}\n     */\n    getMethodName: function () {\n        return this.methodName;\n    },\n\n    /**\n     * Determines whether this method is static (or an instance method)\n     *\n     * @returns {boolean}\n     */\n    isStatic: function () {\n        return !!this.method[IS_STATIC];\n    }\n});\n\nmodule.exports = MethodSpec;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {string|null} filePath\n * @constructor\n */\nfunction Module(filePath) {\n    /**\n     * @type {string|null}\n     */\n    this.filePath = filePath || null;\n}\n\n_.extend(Module.prototype, {\n    /**\n     * Fetches the path to the file this module is defined in, or null if none\n     *\n     * @returns {string|null}\n     */\n    getFilePath: function () {\n        return this.filePath;\n    }\n});\n\nmodule.exports = Module;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Module\n * @constructor\n */\nfunction ModuleFactory(Module) {\n    /**\n     * @type {class}\n     */\n    this.Module = Module;\n}\n\n_.extend(ModuleFactory.prototype, {\n    /**\n     * Creates a new Module\n     *\n     * @param {string|null} filePath Path to the PHP file this module is defined in, or null if none\n     * @returns {Module}\n     */\n    create: function (filePath) {\n        return new this.Module(filePath);\n    }\n});\n\nmodule.exports = ModuleFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Class')\n], function (\n    _,\n    phpCommon,\n    Class\n) {\n    var CALL_TO_UNDEFINED_FUNCTION = 'core.call_to_undefined_function',\n        CANNOT_DECLARE_CLASS_AS_NAME_ALREADY_IN_USE = 'core.cannot_declare_class_as_name_already_in_use',\n        CANNOT_IMPLEMENT_THROWABLE = 'core.cannot_implement_throwable',\n        CANNOT_REDECLARE_CLASS_AS_NAME_ALREADY_IN_USE = 'core.cannot_redeclare_class_as_name_already_in_use',\n        CLASS_NOT_FOUND = 'core.class_not_found',\n        CONSTANT_ALREADY_DEFINED = 'core.constant_already_defined',\n        UNDEFINED_CONSTANT = 'core.undefined_constant',\n\n        IS_METHOD = 'isMethod',\n        IS_STATIC = 'isStatic',\n        MAGIC_CONSTRUCT = '__construct',\n        hasOwn = {}.hasOwnProperty,\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * Represents a single namespace within the namespace hierarchy.\n     * For example, the class path `My\\Lib\\SubNs\\MyClass` defines the namespace `My`\n     * under the global namespace, with a single Namespace instance for `My`.\n     * `SubNs` is another instance, with `My\\Lib` as its parent and `My` as its grandparent.\n     *\n     * The special global namespace has the empty string as its unique name,\n     * along with null as its parent namespace.\n     *\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @param {NamespaceFactory} namespaceFactory\n     * @param {FunctionFactory} functionFactory\n     * @param {FunctionSpecFactory} functionSpecFactory\n     * @param {ClassAutoloader} classAutoloader\n     * @param {ExportRepository} exportRepository\n     * @param {FFIFactory} ffiFactory\n     * @param {Namespace|null} parent\n     * @param {string} name\n     * @constructor\n     */\n    function Namespace(\n        callStack,\n        valueFactory,\n        namespaceFactory,\n        functionFactory,\n        functionSpecFactory,\n        classAutoloader,\n        exportRepository,\n        ffiFactory,\n        parent,\n        name\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Object.<string, Namespace>}\n         */\n        this.children = {};\n        /**\n         * @type {ClassAutoloader}\n         */\n        this.classAutoloader = classAutoloader;\n        /**\n         * @type {Object.<string, Class>}\n         */\n        this.classes = {};\n        /**\n         * @type {Object.<string, {caseInsensitive: boolean, name: string, value: Value}>}\n         */\n        this.constants = {};\n        /**\n         * @type {ExportRepository}\n         */\n        this.exportRepository = exportRepository;\n        /**\n         * @type {FFIFactory}\n         */\n        this.ffiFactory = ffiFactory;\n        /**\n         * @type {FunctionFactory}\n         */\n        this.functionFactory = functionFactory;\n        /**\n         * @type {FunctionSpecFactory}\n         */\n        this.functionSpecFactory = functionSpecFactory;\n        /**\n         * @type {Object.<string, Function>}\n         */\n        this.functions = {};\n        /**\n         * @type {string}\n         */\n        this.name = name;\n        /**\n         * @type {NamespaceFactory}\n         */\n        this.namespaceFactory = namespaceFactory;\n        /**\n         * @type {Namespace|null}\n         */\n        this.parent = parent;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Namespace.prototype, {\n        /**\n         * Defines the given alias for the given function\n         *\n         * @param {string} originalName\n         * @param {string} aliasName\n         * @throws {Error} Throws when the specified original function does not exist\n         */\n        aliasFunction: function (originalName, aliasName) {\n            var existingFunction,\n                namespace = this;\n\n            if (!namespace.hasFunction(originalName)) {\n                throw new Error('Cannot alias undefined function \"' + originalName + '\"');\n            }\n\n            existingFunction = namespace.getFunction(originalName);\n\n            namespace.functions[aliasName.toLowerCase()] = existingFunction.functionSpec.createAliasFunction(\n                aliasName,\n                existingFunction.originalFunc,\n                namespace.functionSpecFactory,\n                namespace.functionFactory\n            );\n        },\n\n        /**\n         * Defines a class in the current namespace, either from a JS class/function or from a transpiled PHP class,\n         * where PHPToJS has generated an object containing all the information related to the class\n         *\n         * @TODO: Consider moving this to NamespaceScope.defineClass(...) rather than having that injected\n         *        as a required argument to this method?\n         *\n         * @param {string} name\n         * @param {Function|object} definition Either a Function for a native JS class or a transpiled definition object\n         * @param {NamespaceScope} namespaceScope\n         * @param {boolean=} autoCoercionEnabled Whether the class should be auto-coercing\n         * @returns {Class} Returns the internal Class instance created\n         */\n        defineClass: function (\n            name,\n            definition,\n            namespaceScope,\n            autoCoercionEnabled\n        ) {\n            var classObject,\n                constants,\n                constructorName = null,\n                methodData = {},\n                methods = {},\n                namespace = this,\n                proxyConstructor,\n                rootInternalPrototype,\n                staticProperties,\n                InternalClass;\n\n            autoCoercionEnabled = Boolean(autoCoercionEnabled);\n\n            if (namespaceScope.hasClass(name)) {\n                namespace.callStack.raiseUncatchableFatalError(\n                    namespace.hasClass(name) ?\n                        CANNOT_REDECLARE_CLASS_AS_NAME_ALREADY_IN_USE :\n                        CANNOT_DECLARE_CLASS_AS_NAME_ALREADY_IN_USE,\n                    {\n                        className: namespace.getPrefix() + name\n                    }\n                );\n            }\n\n            if (_.isFunction(definition)) {\n                // Class is defined using native JavaScript, not PHP\n\n                // Create a new, empty native constructor so that we can avoid calling\n                // the original if the derived class does not call parent::__construct(...)\n                // - Unless the class defines the special `shadowConstructor` property, which\n                //   is always called regardless of whether the parent constructor is called explicitly\n                InternalClass = function () {\n                    var objectValue = this;\n\n                    if (definition.shadowConstructor) {\n                        definition.shadowConstructor.call(\n                            // Use the native object as the `this` object inside the shadow constructor\n                            // if auto-coercion is enabled, otherwise use the ObjectValue\n                            classObject.isAutoCoercionEnabled() ? objectValue.getObject() : objectValue\n                        );\n                    }\n\n                    if (definition.superClass) {\n                        // Class has a parent, call the parent's internal constructor\n                        definition.superClass.getInternalClass().call(objectValue);\n                    }\n                };\n                InternalClass.prototype = Object.create(definition.prototype);\n                proxyConstructor = function () {\n                    var\n                        objectValue = this,\n                        // Will be the native object as the `this` object inside the (shadow) constructor\n                        // if auto-coercion is enabled, otherwise use the ObjectValue\n                        unwrappedThisObject = classObject.isAutoCoercionEnabled() ?\n                            objectValue.getObject() :\n                            objectValue,\n                        unwrappedArgs = classObject.unwrapArguments(arguments);\n\n                    // Call the original native constructor\n                    definition.apply(unwrappedThisObject, unwrappedArgs);\n\n                    // Call magic __construct method if defined for the original native class\n                    if (definition.prototype[MAGIC_CONSTRUCT]) {\n                        definition.prototype[MAGIC_CONSTRUCT].apply(unwrappedThisObject, unwrappedArgs);\n                    }\n                };\n                proxyConstructor.neverCoerce = true;\n                proxyConstructor.data = methodData;\n                InternalClass.prototype[MAGIC_CONSTRUCT] = proxyConstructor;\n                constructorName = MAGIC_CONSTRUCT;\n\n                // Record the prototype object that we should stop at when walking up the chain\n                rootInternalPrototype = definition.prototype;\n            } else {\n                // Class has a definition, so it was defined using PHP\n\n                // Ensure the class does not attempt to implement Throwable directly\n                _.each(definition.interfaces, function (interfaceName) {\n                    var resolvedClass = namespaceScope.resolveClass(interfaceName);\n\n                    if (resolvedClass.namespace.getName() === '' && resolvedClass.name.toLowerCase() === 'throwable') {\n                        namespace.callStack.raiseUncatchableFatalError(\n                            CANNOT_IMPLEMENT_THROWABLE,\n                            {\n                                className: namespace.getPrefix() + name\n                            }\n                        );\n                    }\n                });\n\n                InternalClass = function () {\n                    var objectValue = this,\n                        properties = {};\n\n                    // Go through and declare the properties and their default values\n                    // on the object from the class definition\n                    _.forOwn(definition.properties, function (propertyData, name) {\n                        properties[name] = objectValue.declareProperty(name, classObject, propertyData.visibility);\n                    });\n\n                    if (definition.superClass) {\n                        // Class has a parent, call the parent's internal constructor\n                        definition.superClass.getInternalClass().call(objectValue);\n                    }\n\n                    // Go through and define the properties and their default values\n                    // on the object from the class definition by initialising them\n                    _.forOwn(definition.properties, function (propertyData, name) {\n                        var instanceProperty = properties[name],\n                            initialValue = propertyData.value();\n\n                        if (initialValue === null) {\n                            // If a property has no initialiser then its initial value is NULL\n                            initialValue = namespace.valueFactory.createNull();\n                        }\n\n                        instanceProperty.initialise(initialValue);\n                    });\n                };\n\n                // Prevent native 'constructor' property from erroneously being detected as PHP class method\n                delete InternalClass.prototype.constructor;\n\n                if (definition.superClass) {\n                    InternalClass.prototype = Object.create(definition.superClass.getInternalClass().prototype);\n                }\n\n                _.each(definition.methods, function (data, methodName) {\n                    // PHP5-style __construct magic method takes precedence\n                    if (methodName === '__construct') {\n                        if (constructorName) {\n                            // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                            namespace.callStack.raiseError(PHPError.E_STRICT, 'Redefining already defined constructor for class ' + name);\n                        }\n\n                        constructorName = methodName;\n                    }\n\n                    if (!constructorName && methodName === name) {\n                        constructorName = methodName;\n                    }\n\n                    methods[methodName] = data;\n                });\n\n                staticProperties = definition.staticProperties;\n                constants = definition.constants;\n\n                // Record the prototype object that we should stop at when walking up the chain\n                rootInternalPrototype = InternalClass.prototype;\n            }\n\n            classObject = new Class(\n                namespace.valueFactory,\n                namespace.functionFactory,\n                namespace.callStack,\n                namespace.getPrefix() + name,\n                constructorName,\n                InternalClass,\n                rootInternalPrototype,\n                staticProperties,\n                constants,\n                definition.superClass,\n                definition.interfaces,\n                namespaceScope,\n                namespace.exportRepository,\n                namespace.ffiFactory.createValueCoercer(autoCoercionEnabled),\n                namespace.ffiFactory\n            );\n\n            _.forOwn(methods, function (data, methodName) {\n                // TODO: For JS-defined functions, `methods` is always empty - see above.\n                //       Consider building it up with processed methods/specs etc., indexed by lowercased name,\n                //       to also solve the performance issue with the current method lookup logic.\n                var functionSpec,\n                    lineNumber = data.line,\n                    method,\n                    methodIsStatic = data[IS_STATIC],\n                    // Parameter spec data may only be provided for PHP-transpiled functions\n                    parametersSpecData = data.args;\n\n                functionSpec = namespace.functionSpecFactory.createMethodSpec(\n                    namespaceScope,\n                    classObject,\n                    methodName,\n                    parametersSpecData || [],\n                    namespace.callStack.getLastFilePath(),\n                    lineNumber || null\n                );\n\n                method = namespace.functionFactory.create(\n                    namespaceScope,\n                    classObject,\n                    data.method,\n                    methodName,\n                    null,\n                    null, // NB: No need to override the class for a method\n                    functionSpec\n                );\n\n                method[IS_METHOD] = true;\n                method[IS_STATIC] = methodIsStatic;\n                method.data = methodData;\n\n                InternalClass.prototype[methodName] = method;\n            });\n\n            methodData.classObject = classObject;\n\n            namespace.classes[name.toLowerCase()] = classObject;\n\n            return classObject;\n        },\n\n        /**\n         * Defines a constant for the current namespace, optionally making it case-insensitive\n         *\n         * @param {string} name\n         * @param {Value} value\n         * @param {object=} options\n         */\n        defineConstant: function (name, value, options) {\n            var caseInsensitive,\n                effectiveName,\n                existingDefinition,\n                namespace = this;\n\n            options = options || {};\n            caseInsensitive = !!options.caseInsensitive;\n            existingDefinition = namespace.getConstantDefinition(name);\n\n            if (existingDefinition !== null) {\n                namespace.callStack.raiseTranslatedError(PHPError.E_NOTICE, CONSTANT_ALREADY_DEFINED, {\n                    // Use original name in the error message rather than the effective one\n                    name: namespace.getPrefix().toLowerCase() + existingDefinition.name\n                });\n\n                return; // Do not redefine the existing constant\n            }\n\n            effectiveName = caseInsensitive ? name.toLowerCase() : name;\n\n            namespace.constants[effectiveName] = {\n                caseInsensitive: caseInsensitive,\n                // Store the original name for reference (as the effective one may be lower-cased)\n                name: name,\n                value: value\n            };\n        },\n\n        /**\n         * Defines a new function within this namespace\n         *\n         * @param {string} name\n         * @param {Function} func\n         * @param {NamespaceScope} namespaceScope\n         * @param {Array=} parametersSpecData\n         * @param {number=} lineNumber\n         */\n        defineFunction: function (name, func, namespaceScope, parametersSpecData, lineNumber) {\n            var functionSpec,\n                namespace = this;\n\n            // Parameter spec data may only be provided for PHP-transpiled functions\n            functionSpec = namespace.functionSpecFactory.createFunctionSpec(\n                namespaceScope,\n                name,\n                parametersSpecData || [],\n                namespace.callStack.getLastFilePath(),\n                lineNumber || null\n            );\n\n            namespace.functions[name.toLowerCase()] = namespace.functionFactory.create(\n                namespaceScope,\n                // Class will always be null for 'normal' functions\n                // as defining a function inside a class will define it\n                // inside the current namespace instead.\n                null,\n                func,\n                name,\n                null,\n                null,\n                functionSpec\n            );\n        },\n\n        /**\n         * Fetches a class definition from within this namespace or a descendant.\n         * If applicable, the class autoloader will be invoked.\n         *\n         * @param {string} name\n         * @returns {Class}\n         */\n        getClass: function (name) {\n            var namespace = this,\n                parsed = namespace.parseName(name),\n                lowerName = parsed.name.toLowerCase();\n\n            if (!hasOwn.call(parsed.namespace.classes, lowerName)) {\n                // Try to autoload the class\n                namespace.classAutoloader.autoloadClass(parsed.namespace.getPrefix() + parsed.name);\n\n                // Raise an error if it is still not defined\n                if (!hasOwn.call(parsed.namespace.classes, lowerName)) {\n                    namespace.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NOT_FOUND, {\n                        name: parsed.namespace.getPrefix() + parsed.name\n                    });\n                }\n            }\n\n            return parsed.namespace.classes[lowerName];\n        },\n\n        /**\n         * Fetches the value of a constant if it is defined. If it is not defined,\n         * then it will either raise a notice and return the name of the constant as a string,\n         * or throw an exception, depending on whether it is a namespaced constant\n         *\n         * @param {string} name\n         * @param {boolean} usesNamespace\n         * @returns {Value}\n         */\n        getConstant: function (name, usesNamespace) {\n            var namespace = this,\n                constant = namespace.getConstantDefinition(name);\n\n            if (constant) {\n                return constant.value;\n            }\n\n            if (usesNamespace) {\n                namespace.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_CONSTANT, {\n                    name: namespace.getPrefix() + name\n                });\n            }\n\n            namespace.callStack.raiseError(\n                PHPError.E_WARNING,\n                'Use of undefined constant ' + name + ' - assumed \\'' + name + '\\' ' +\n                '(this will throw an Error in a future version of PHP)'\n            );\n\n            return this.valueFactory.createString(name);\n        },\n\n        /**\n         * Fetches a sub-namespace within this one, by its name. Any namespaces in the hierarchy\n         * that do not exist will be created and then cached on-demand\n         *\n         * @param {string} name\n         * @returns {Namespace}\n         */\n        getDescendant: function (name) {\n            var namespace = this,\n                subNamespace = namespace;\n\n            if (name === '') {\n                throw new Error('Namespace.getDescendant() :: Name cannot be empty');\n            }\n\n            _.each(name.split('\\\\'), function (part) {\n                if (!hasOwn.call(subNamespace.children, part.toLowerCase())) {\n                    subNamespace.children[part.toLowerCase()] = namespace.namespaceFactory.create(\n                        subNamespace,\n                        part\n                    );\n                }\n\n                subNamespace = subNamespace.children[part.toLowerCase()];\n            });\n\n            return subNamespace;\n        },\n\n        /**\n         * Fetches a function from the current namespace if defined, otherwise falls back\n         * to the global namespace. Raises an error if the function is not defined at all\n         *\n         * @param {string|Function} name\n         * @returns {Function}\n         */\n        getFunction: function (name) {\n            var globalNamespace,\n                match,\n                namespace = this,\n                path,\n                subNamespace;\n\n            if (_.isFunction(name)) {\n                return name;\n            }\n\n            match = name.match(/^(.*?)\\\\([^\\\\]+)$/);\n\n            if (match) {\n                path = match[1];\n                name = match[2];\n\n                subNamespace = namespace.getDescendant(path);\n\n                return subNamespace.getFunction(name);\n            }\n\n            if (hasOwn.call(namespace.functions, name.toLowerCase())) {\n                return namespace.functions[name.toLowerCase()];\n            }\n\n            globalNamespace = namespace.getGlobal();\n\n            if (hasOwn.call(globalNamespace.functions, name.toLowerCase())) {\n                return globalNamespace.functions[name.toLowerCase()];\n            }\n\n            namespace.callStack.raiseTranslatedError(PHPError.E_ERROR, CALL_TO_UNDEFINED_FUNCTION, {\n                name: namespace.getPrefix() + name\n            });\n        },\n\n        getGlobal: function () {\n            var namespace = this;\n\n            return namespace.name === '' ? namespace : namespace.getParent().getGlobal();\n        },\n\n        getGlobalNamespace: function () {\n            return this.getGlobal();\n        },\n\n        getName: function () {\n            var namespace = this;\n\n            if (namespace.name === '') {\n                return '';\n            }\n\n            return (namespace.parent ? namespace.parent.getPrefix() : '') + namespace.name;\n        },\n\n        getOwnFunction: function (name) {\n            var namespace = this;\n\n            if (hasOwn.call(namespace.functions, name.toLowerCase())) {\n                return namespace.functions[name.toLowerCase()];\n            }\n\n            return null;\n        },\n\n        getParent: function () {\n            return this.parent;\n        },\n\n        getPrefix: function () {\n            var name = this.getName();\n\n            if (name !== '') {\n                name += '\\\\';\n            }\n\n            return name;\n        },\n\n        /**\n         * Fetches the definition object for a constant, or null if it is not defined\n         *\n         * @param {string} name\n         * @returns {object|null}\n         */\n        getConstantDefinition: function (name) {\n            var globalNamespace,\n                lowercaseName,\n                namespace = this;\n\n            if (hasOwn.call(namespace.constants, name)) {\n                return namespace.constants[name];\n            }\n\n            lowercaseName = name.toLowerCase();\n\n            if (\n                hasOwn.call(namespace.constants, lowercaseName) &&\n                namespace.constants[lowercaseName].caseInsensitive\n            ) {\n                return namespace.constants[lowercaseName];\n            }\n\n            globalNamespace = namespace.getGlobal();\n\n            if (hasOwn.call(globalNamespace.constants, name)) {\n                return globalNamespace.constants[name];\n            }\n\n            if (\n                hasOwn.call(globalNamespace.constants, lowercaseName) &&\n                globalNamespace.constants[lowercaseName].caseInsensitive\n            ) {\n                return globalNamespace.constants[lowercaseName];\n            }\n\n            return null;\n        },\n\n        /**\n         * Determines whether or not the given class exists in this namespace (or a descendant of it)\n         * without invoking the autoloader if it does not\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasClass: function (name) {\n            var namespace = this,\n                parsed = namespace.parseName(name),\n                lowerName = parsed.name.toLowerCase();\n\n            return hasOwn.call(parsed.namespace.classes, lowerName);\n        },\n\n        /**\n         * Returns true if this namespace defines the specified constant, and false otherwise.\n         * If the constant is case-insensitive, then it will be returned for any case\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasConstant: function (name) {\n            return this.getConstantDefinition(name) !== null;\n        },\n\n        /**\n         * Returns true if this namespace defines the specified function, and false otherwise.\n         * Note that function names are case-insensitive\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasFunction: function (name) {\n            var namespace = this,\n                parsed = namespace.parseName(name),\n                lowerName = parsed.name.toLowerCase();\n\n            return hasOwn.call(parsed.namespace.functions, lowerName);\n        },\n\n        /**\n         * Parses a class, function or constant name to its namespace and name\n         *\n         * @param {string} name\n         * @returns {{namespace: (Namespace), name: string}}\n         */\n        parseName: function (name) {\n            var match = name.match(/^(\\\\?)(.*?)\\\\?([^\\\\]+)$/),\n                namespace = this,\n                path,\n                relativeToGlobalNamespace,\n                subNamespace;\n\n            if (match) {\n                // Name was fully-qualified: return the resolved namespace it was inside\n\n                relativeToGlobalNamespace = (match[1] === '\\\\');\n\n                path = match[2];\n                name = match[3];\n\n                subNamespace = relativeToGlobalNamespace ? namespace.getGlobalNamespace() : namespace;\n\n                if (path !== '') {\n                    subNamespace = subNamespace.getDescendant(path);\n                }\n\n                return {\n                    namespace: subNamespace,\n                    name: name\n                };\n            }\n\n            return {\n                namespace: namespace,\n                name: name\n            };\n        },\n\n        resolveClass: function (name) {\n            return name;\n        }\n    });\n\n    return Namespace;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates objects related to Namespaces\n *\n * @param {class} Namespace\n * @param {CallStack} callStack\n * @param {FunctionFactory} functionFactory\n * @param {FunctionSpecFactory} functionSpecFactory\n * @param {ValueFactory} valueFactory\n * @param {ClassAutoloader} classAutoloader\n * @param {ExportRepository} exportRepository\n * @param {FFIFactory} ffiFactory\n * @constructor\n */\nfunction NamespaceFactory(\n    Namespace,\n    callStack,\n    functionFactory,\n    functionSpecFactory,\n    valueFactory,\n    classAutoloader,\n    exportRepository,\n    ffiFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {ClassAutoloader}\n     */\n    this.classAutoloader = classAutoloader;\n    /**\n     * @type {ExportRepository}\n     */\n    this.exportRepository = exportRepository;\n    /**\n     * @type {FFIFactory}\n     */\n    this.ffiFactory = ffiFactory;\n    /**\n     * @type {FunctionFactory}\n     */\n    this.functionFactory = functionFactory;\n    /**\n     * @type {FunctionSpecFactory}\n     */\n    this.functionSpecFactory = functionSpecFactory;\n    /**\n     * @type {class}\n     */\n    this.Namespace = Namespace;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(NamespaceFactory.prototype, {\n    create: function (parentNamespace, name) {\n        var factory = this;\n\n        return new factory.Namespace(\n            factory.callStack,\n            factory.valueFactory,\n            factory,\n            factory.functionFactory,\n            factory.functionSpecFactory,\n            factory.classAutoloader,\n            factory.exportRepository,\n            factory.ffiFactory,\n            parentNamespace || null,\n            name || ''\n        );\n    }\n});\n\nmodule.exports = NamespaceFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    var hasOwn = {}.hasOwnProperty,\n        NAMESPACE = 'namespace',\n\n        CANNOT_USE_AS_NAME_ALREADY_IN_USE = 'core.cannot_use_as_name_already_in_use';\n\n    /**\n     * Represents a block within a PHP module that is inside a namespace statement,\n     * containing classes imported with `use` statements etc.\n     *\n     * @param {Namespace} globalNamespace\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {Module} module\n     * @param {Namespace} namespace\n     * @param {boolean} global Whether this namespace scope is the special \"invisible\" global one\n     * @constructor\n     */\n    function NamespaceScope(globalNamespace, valueFactory, callStack, module, namespace, global) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Namespace}\n         */\n        this.globalNamespace = globalNamespace;\n        /**\n         * Imports from `use` statements\n         *\n         * @type {object}\n         */\n        this.imports = {};\n        /**\n         * @type {boolean}\n         */\n        this.global = global;\n        /**\n         * @type {Module}\n         */\n        this.module = module;\n        /**\n         * @type {Namespace}\n         */\n        this.namespace = namespace;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(NamespaceScope.prototype, {\n        getClass: function (name) {\n            var resolvedClass = this.resolveClass(name);\n\n            return resolvedClass.namespace.getClass(resolvedClass.name);\n        },\n\n        getConstant: function (name) {\n            var match,\n                scope = this,\n                namespace = scope.namespace,\n                path,\n                prefix,\n                usesNamespace = false;\n\n            // Check whether the constant path is absolute, so no 'use's apply\n            if (name.charAt(0) === '\\\\') {\n                usesNamespace = true;\n                match = name.match(/^\\\\(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    path = match[1];\n                    name = match[2];\n                    namespace = scope.globalNamespace.getDescendant(path);\n                } else {\n                    name = name.substr(1);\n                }\n                // Check whether the namespace prefix is an alias\n            } else {\n                match = name.match(/^([^\\\\]+)(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    usesNamespace = true;\n                    prefix = match[1];\n                    path = match[2];\n                    name = match[3];\n\n                    if (hasOwn.call(scope.imports, prefix.toLowerCase())) {\n                        namespace = scope.globalNamespace.getDescendant(scope.imports[prefix.toLowerCase()].substr(1) + path);\n                    } else {\n                        // Not an alias: look up the namespace path relative to this namespace\n                        // (ie. 'namespace Test { echo Our\\CONSTANT; }' -> 'echo \\Test\\Our\\CONSTANT;')\n                        namespace = scope.globalNamespace.getDescendant(namespace.getPrefix() + prefix + path);\n                    }\n                }\n            }\n\n            return namespace.getConstant(name, usesNamespace);\n        },\n\n        /**\n         * Fetches the path to the file this scope's parent module originates from\n         *\n         * @returns {string|null}\n         */\n        getFilePath: function () {\n            return this.module.getFilePath();\n        },\n\n        getFunction: function (name) {\n            var match,\n                scope = this,\n                namespace = scope.namespace,\n                path,\n                prefix;\n\n            // Check whether the function path is absolute, so no 'use's apply\n            if (name.charAt(0) === '\\\\') {\n                match = name.match(/^\\\\(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    path = match[1];\n                    name = match[2];\n                    namespace = scope.globalNamespace.getDescendant(path);\n                } else {\n                    name = name.substr(1);\n                    namespace = scope.globalNamespace;\n                }\n                // Check whether the namespace prefix is an alias\n            } else {\n                match = name.match(/^([^\\\\]+)(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    prefix = match[1];\n                    path = match[2];\n                    name = match[3];\n\n                    if (hasOwn.call(scope.imports, prefix.toLowerCase())) {\n                        namespace = scope.globalNamespace.getDescendant(scope.imports[prefix.toLowerCase()].substr(1) + path);\n                    } else {\n                        // Not an alias: look up the namespace path relative to this namespace\n                        // (ie. 'namespace Test { Our\\Func(); }' -> '\\Test\\Our\\Func();')\n                        namespace = scope.globalNamespace.getDescendant(namespace.getPrefix() + prefix + path);\n                    }\n                }\n            }\n\n            return namespace.getFunction(name);\n        },\n\n        getGlobalNamespace: function () {\n            return this.globalNamespace;\n        },\n\n        getNamespaceName: function () {\n            var scope = this;\n\n            return scope.valueFactory.createString(scope.namespace.getName());\n        },\n\n        /**\n         * Fetches the backslash-delimited prefix string for this scope's namespace\n         *\n         * @returns {string}\n         */\n        getNamespacePrefix: function () {\n            return this.namespace.getPrefix();\n        },\n\n        /**\n         * Determines whether the specified class is defined for this namespace scope,\n         * taking any imports/aliases via `use` into account\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasClass: function (name) {\n            var scope = this,\n                resolvedClass = scope.resolveClass(name);\n\n            // Check whether the entire class name is aliased\n            if (hasOwn.call(scope.imports, name.toLowerCase())) {\n                return true;\n            }\n\n            return resolvedClass.namespace.hasClass(resolvedClass.name);\n        },\n\n        /**\n         * Determines whether this namespace scope is the special \"invisible\" global one\n         *\n         * @returns {boolean}\n         */\n        isGlobal: function () {\n            return this.global;\n        },\n\n        /**\n         * Resolves a potentially relatively- or fully-qualified class path\n         * to the Namespace instance it should be defined by and its name\n         *\n         * @param {string} name\n         * @returns {{namespace: Namespace, name: string}}\n         */\n        resolveClass: function (name) {\n            var loweredPrefix,\n                match,\n                scope = this,\n                namespace = scope.namespace,\n                path,\n                prefix;\n\n            // Check whether the entire class name is aliased\n            if (hasOwn.call(scope.imports, name.toLowerCase())) {\n                name = scope.imports[name.toLowerCase()];\n                namespace = scope.globalNamespace;\n            }\n\n            // Check whether the class path is absolute, so no 'use's apply\n            if (name.charAt(0) === '\\\\') {\n                match = name.match(/^\\\\(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    path = match[1];\n                    name = match[2];\n                    namespace = scope.globalNamespace.getDescendant(path);\n                } else {\n                    // A class in the global namespace with explicit absolute path, eg. `\\MyClass`\n                    name = name.substr(1);\n                    namespace = scope.globalNamespace;\n                }\n            // Check whether the namespace prefix is an alias\n            } else {\n                match = name.match(/^([^\\\\]+)(.*?)\\\\([^\\\\]+)$/);\n\n                if (match) {\n                    prefix = match[1];\n                    path = match[2];\n                    name = match[3];\n                    loweredPrefix = prefix.toLowerCase();\n\n                    if (loweredPrefix === NAMESPACE) {\n                        // Reference uses the special \"namespace\" keyword as a prefix:\n                        // resolve relative to the current namespace\n                        namespace = namespace.getDescendant(path.replace(/^\\\\/, ''));\n                    } else if (hasOwn.call(scope.imports, loweredPrefix)) {\n                        namespace = scope.globalNamespace.getDescendant(scope.imports[loweredPrefix].substr(1) + path);\n                    } else {\n                        // Not an alias: look up the namespace path relative to this namespace\n                        // (ie. 'namespace Test { Our\\Func(); }' -> '\\Test\\Our\\Func();')\n                        namespace = namespace.getDescendant(prefix + path);\n                    }\n                }\n            }\n\n            return {namespace: namespace, name: name};\n        },\n\n        /**\n         * Imports a class into the current namespace scope, eg. from a PHP `use ...` statement\n         *\n         * @param {string} source\n         * @param {string} alias\n         */\n        use: function (source, alias) {\n            var scope = this,\n                normalizedSource = source;\n\n            if (!alias) {\n                alias = source.replace(/^.*?([^\\\\]+)$/, '$1');\n            }\n\n            if (normalizedSource.charAt(0) !== '\\\\') {\n                normalizedSource = '\\\\' + normalizedSource;\n            }\n\n            if (scope.hasClass(alias.toLowerCase())) {\n                scope.callStack.raiseUncatchableFatalError(CANNOT_USE_AS_NAME_ALREADY_IN_USE, {\n                    alias: alias,\n                    source: source\n                });\n            }\n\n            scope.imports[alias.toLowerCase()] = normalizedSource;\n        }\n    });\n\n    return NamespaceScope;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty;\n\n/**\n * Represents a set of options for a running PHP application\n *\n * @param {object} options\n * @constructor\n */\nfunction OptionSet(options) {\n    /**\n     * @type {Object}\n     */\n    this.options = options;\n}\n\n_.extend(OptionSet.prototype, {\n    /**\n     * Fetches the value of a single option by its name\n     *\n     * @param {string} name\n     * @returns {*}\n     */\n    getOption: function (name) {\n        var optionSet = this;\n\n        return hasOwn.call(optionSet.options, name) ? optionSet.options[name] : null;\n    },\n\n    /**\n     * Fetches all defined options\n     *\n     * @returns {Object}\n     */\n    getOptions: function () {\n        return this.options;\n    }\n});\n\nmodule.exports = OptionSet;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    NoActiveOutputBufferException = require('../Exception/NoActiveOutputBufferException');\n\n/**\n * @param {OutputFactory} factory\n * @param {StdoutBuffer} stdoutBuffer\n * @constructor\n */\nfunction Output(factory, stdoutBuffer) {\n    /**\n     * @type {OutputBufferInterface}\n     */\n    this.currentOutputBuffer = stdoutBuffer;\n    /**\n     * @type {OutputFactory}\n     */\n    this.factory = factory;\n    /**\n     * @type {OutputBufferInterface[]}\n     */\n    this.outputBufferStack = [];\n}\n\n_.extend(Output.prototype, {\n    /**\n     * Discards the contents of the current buffer without flushing it through\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    cleanCurrentBuffer: function () {\n        return this.currentOutputBuffer.clean();\n    },\n\n    /**\n     * Writes the contents of the current buffer through to the next buffer\n     * and then discards them from this buffer\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    flushCurrentBuffer: function () {\n        return this.currentOutputBuffer.flush();\n    },\n\n    /**\n     * Fetches the current contents of the current buffer if it is actually a buffering one\n     *\n     * @returns {string|null}\n     */\n    getCurrentBufferContents: function () {\n        return this.currentOutputBuffer.getContents();\n    },\n\n    /**\n     * Fetches the number of nested buffers that are currently active\n     *\n     * @returns {number}\n     */\n    getDepth: function () {\n        return this.currentOutputBuffer.getDepth();\n    },\n\n    /**\n     * Pops the current buffer off of the stack, returning to using the previous one\n     */\n    popBuffer: function () {\n        var output = this;\n\n        if (output.outputBufferStack.length === 0) {\n            throw new NoActiveOutputBufferException();\n        }\n\n        output.currentOutputBuffer = output.outputBufferStack.pop();\n    },\n\n    /**\n     * Pushes a new output buffer onto the stack\n     *\n     * @returns {OutputBuffer}\n     */\n    pushBuffer: function () {\n        var output = this,\n            newOutputBuffer = output.factory.createOutputBuffer(output.currentOutputBuffer);\n\n        output.outputBufferStack.push(output.currentOutputBuffer);\n        output.currentOutputBuffer = newOutputBuffer;\n\n        return newOutputBuffer;\n    },\n\n    /**\n     * Writes data to the current output buffer\n     *\n     * @param {string} data\n     */\n    write: function (data) {\n        this.currentOutputBuffer.write(data);\n    }\n});\n\nmodule.exports = Output;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    OutputBufferInterface = require('./OutputBufferInterface');\n\n/**\n * @param {OutputBufferInterface} previousBuffer\n * @constructor\n */\nfunction OutputBuffer(previousBuffer) {\n    /**\n     * @type {string}\n     */\n    this.bufferedData = '';\n    /**\n     * @type {OutputBufferInterface}\n     */\n    this.previousBuffer = previousBuffer;\n}\n\nutil.inherits(OutputBuffer, OutputBufferInterface);\n\n_.extend(OutputBuffer.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    clean: function () {\n        this.bufferedData = '';\n\n        return true; // Success\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    flush: function () {\n        var buffer = this;\n\n        buffer.previousBuffer.write(buffer.bufferedData);\n        buffer.bufferedData = '';\n\n        return true; // Success\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getContents: function () {\n        return this.bufferedData;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDepth: function () {\n        return this.previousBuffer.getDepth() + 1;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    write: function (data) {\n        this.bufferedData += data;\n    }\n});\n\nmodule.exports = OutputBuffer;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error(functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * @interface\n */\nfunction OutputBufferInterface() {\n    throw new Error('OutputBufferInterface cannot be instantiated');\n}\n\n_.extend(OutputBufferInterface.prototype, {\n    /**\n     * Discards the contents of this buffer without flushing it through\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    clean: throwUnimplemented('clean'),\n\n    /**\n     * Writes the contents of this buffer through to the next buffer and then discards them from this buffer\n     *\n     * @returns {bool} Returns true on success, false otherwise\n     */\n    flush: throwUnimplemented('flush'),\n\n    /**\n     * Fetches the current contents of this buffer if it is actually a buffering one\n     *\n     * @returns {string|null}\n     */\n    getContents: throwUnimplemented('getContents'),\n\n    /**\n     * Fetches the depth of this buffer\n     *\n     * @returns {number}\n     */\n    getDepth: throwUnimplemented('getDepth'),\n\n    /**\n     * Writes data to this buffer, storing it for future use\n     *\n     * @param {string} data\n     */\n    write: throwUnimplemented('write')\n});\n\nmodule.exports = OutputBufferInterface;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} OutputBuffer\n * @constructor\n */\nfunction OutputFactory(OutputBuffer) {\n    /**\n     * @type {class}\n     */\n    this.OutputBuffer = OutputBuffer;\n}\n\n_.extend(OutputFactory.prototype, {\n    /**\n     * Creates a new OutputBuffer\n     *\n     * @param {OutputBufferInterface} previousBuffer\n     * @returns {OutputBuffer}\n     */\n    createOutputBuffer: function (previousBuffer) {\n        return new this.OutputBuffer(previousBuffer);\n    }\n});\n\nmodule.exports = OutputFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    OutputBufferInterface = require('./OutputBufferInterface');\n\n/**\n * @param {Stream} stdout\n * @constructor\n */\nfunction StdoutBuffer(stdout) {\n    /**\n     * @type {Stream}\n     */\n    this.stdout = stdout;\n}\n\nutil.inherits(StdoutBuffer, OutputBufferInterface);\n\n_.extend(StdoutBuffer.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    clean: function () {\n        return false; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    flush: function () {\n        return false; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getContents: function () {\n        return null; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDepth: function () {\n        return 0; // This buffer does not actually buffer\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    write: function (data) {\n        this.stdout.write(data);\n    }\n});\n\nmodule.exports = StdoutBuffer;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('./builtin/builtins'),\n    require('phpcommon'),\n    require('util'),\n    require('./Reference/AccessorReference'),\n    require('./Call'),\n    require('./CallFactory'),\n    require('./CallStack'),\n    require('./ClassAutoloader'),\n    require('./Closure'),\n    require('./Function/ClosureContext'),\n    require('./ClosureFactory'),\n    require('./Reference/Element/ElementProviderFactory'),\n    require('./Error/ErrorConfiguration'),\n    require('./Error/ErrorConverter'),\n    require('./Error/ErrorPromoter'),\n    require('./Error/ErrorReporting'),\n    require('./FFI/Value/AsyncObjectValue'),\n    require('./FFI/Call'),\n    require('./FFI/Call/Caller'),\n    require('./FFI/Internals/ClassInternalsClassFactory'),\n    require('./FFI/Export/ExportFactory'),\n    require('./FFI/Export/ExportRepository'),\n    require('./FFI/FFIFactory'),\n    require('./FFI/Internals/FunctionInternalsClassFactory'),\n    require('./FFI/Internals/Internals'),\n    require('./FFI/Call/NativeCaller'),\n    require('./FFI/Value/PHPObject'),\n    require('./FFI/Value/Proxy/ProxyClassFactory'),\n    require('./FFI/Value/Proxy/ProxyClassRepository'),\n    require('./FFI/Value/Proxy/ProxyFactory'),\n    require('./FFI/Value/Proxy/ProxyMemberFactory'),\n    require('./FFI/Result'),\n    require('./FFI/Stack/StackHooker'),\n    require('./FFI/Export/UnwrapperRepository'),\n    require('./FFI/Call/ValueCaller'),\n    require('./FFI/Value/ValueCoercer'),\n    require('./FFI/Value/ValueHelper'),\n    require('./FFI/Value/ValueStorage'),\n    require('./Function/FunctionContext'),\n    require('./FunctionFactory'),\n    require('./Function/FunctionSpec'),\n    require('./Function/FunctionSpecFactory'),\n    require('./Load/Includer'),\n    require('./INIState'),\n    require('./Load/Loader'),\n    require('./Load/LoadScope'),\n    require('./Function/MethodContext'),\n    require('./MethodSpec'),\n    require('./Module'),\n    require('./ModuleFactory'),\n    require('./Namespace'),\n    require('./NamespaceFactory'),\n    require('./NamespaceScope'),\n    require('./Reference/Null'),\n    require('./Load/OnceIncluder'),\n    require('./OptionSet'),\n    require('./Output/Output'),\n    require('./Output/OutputBuffer'),\n    require('./Output/OutputFactory'),\n    require('./Function/Parameter'),\n    require('./Function/ParameterFactory'),\n    require('./Function/ParameterListFactory'),\n    require('./Function/ParameterTypeFactory'),\n    require('./ReferenceFactory'),\n    require('./Scope'),\n    require('./ScopeFactory'),\n    require('./Output/StdoutBuffer'),\n    require('./SuperGlobalScope'),\n    require('./Tools'),\n    require('./ToolsFactory'),\n    require('./Error/TraceFormatter'),\n    require('./Type/TypeFactory'),\n    require('./Value'),\n    require('./ValueFactory'),\n    require('./Variable'),\n    require('./VariableFactory')\n], function (\n    _,\n    builtinTypes,\n    phpCommon,\n    util,\n    AccessorReference,\n    Call,\n    CallFactory,\n    CallStack,\n    ClassAutoloader,\n    Closure,\n    ClosureContext,\n    ClosureFactory,\n    ElementProviderFactory,\n    ErrorConfiguration,\n    ErrorConverter,\n    ErrorPromoter,\n    ErrorReporting,\n    FFIAsyncObjectValue,\n    FFICall,\n    FFICaller,\n    FFIClassInternalsClassFactory,\n    FFIExportFactory,\n    FFIExportRepository,\n    FFIFactory,\n    FFIFunctionInternalsClassFactory,\n    FFIInternals,\n    FFINativeCaller,\n    FFIPHPObject,\n    FFIProxyClassFactory,\n    FFIProxyClassRepository,\n    FFIProxyFactory,\n    FFIProxyMemberFactory,\n    FFIResult,\n    FFIStackHooker,\n    FFIUnwrapperRepository,\n    FFIValueCaller,\n    FFIValueCoercer,\n    FFIValueHelper,\n    FFIValueStorage,\n    FunctionContext,\n    FunctionFactory,\n    FunctionSpec,\n    FunctionSpecFactory,\n    Includer,\n    INIState,\n    Loader,\n    LoadScope,\n    MethodContext,\n    MethodSpec,\n    Module,\n    ModuleFactory,\n    Namespace,\n    NamespaceFactory,\n    NamespaceScope,\n    NullReference,\n    OnceIncluder,\n    OptionSet,\n    Output,\n    OutputBuffer,\n    OutputFactory,\n    Parameter,\n    ParameterFactory,\n    ParameterListFactory,\n    ParameterTypeFactory,\n    ReferenceFactory,\n    Scope,\n    ScopeFactory,\n    StdoutBuffer,\n    SuperGlobalScope,\n    Tools,\n    ToolsFactory,\n    TraceFormatter,\n    TypeFactory,\n    Value,\n    ValueFactory,\n    Variable,\n    VariableFactory\n) {\n    var THROWABLE_INTERFACE = 'Throwable',\n        hasOwn = {}.hasOwnProperty,\n        setUpState = function (state, installedBuiltinTypes, optionGroups) {\n            var globalNamespace = state.globalNamespace;\n\n            /**\n             * Bindings allow components of an addon to share data.\n             *\n             * @param {Function} groupFactory\n             */\n            function installBindingGroup(groupFactory) {\n                var groupBindings = groupFactory(state.ffiInternals);\n\n                _.each(groupBindings, function (bindingFactory, bindingName) {\n                    var bindingOptions = state.optionSet.getOption(bindingName);\n\n                    state.bindings[bindingName] = bindingFactory(bindingOptions);\n                });\n            }\n\n            /**\n             * Installs a set of related functions into PHP-land\n             *\n             * @param {Function} groupFactory\n             */\n            function installFunctionGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals),\n                    functionAliases = {};\n\n                _.each(groupBuiltins, function (fn, name) {\n                    if (typeof fn === 'function') {\n                        state.defineNonCoercingFunction(name, fn);\n                    } else {\n                        // Gather function aliases (strings) and install the aliases at the end\n                        // (see below), to ensure that the original functions exist first\n                        // as an alias can only be installed using an existing function's FunctionSpec\n                        functionAliases[name] = fn;\n                    }\n                });\n\n                _.forOwn(functionAliases, function (originalName, aliasName) {\n                    globalNamespace.aliasFunction(originalName, aliasName);\n                });\n            }\n\n            /**\n             * Installs a single class into PHP-land\n             *\n             * @param {Function} definitionFactory\n             * @param {string} name\n             */\n            function installClass(definitionFactory, name) {\n                state.defineClass(name, definitionFactory);\n            }\n\n            /**\n             * Installs a set of related classes into PHP-land\n             *\n             * @param {Function} groupFactory\n             */\n            function installClassGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals);\n\n                _.each(groupBuiltins, function (definitionFactory, name) {\n                    state.defineClass(name, definitionFactory);\n                });\n            }\n\n            /**\n             * Installs a set of related constants into PHP-land\n             *\n             * @param {Function} groupFactory\n             */\n            function installConstantGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals);\n\n                _.each(groupBuiltins, function (value, name) {\n                    globalNamespace.defineConstant(name, state.valueFactory.coerce(value));\n                });\n            }\n\n            /**\n             * Installs a set of defaults for INI options\n             *\n             * @param {Function} groupFactory\n             */\n            function installDefaultINIOptionGroup(groupFactory) {\n                var groupBuiltins = groupFactory(state.ffiInternals);\n\n                _.each(groupBuiltins, function (value, name) {\n                    state.iniState.set(name, value);\n                });\n            }\n\n            /**\n             * Installs a set of related runtime options\n             *\n             * @param {Function} groupFactory\n             */\n            function installOptionGroup(groupFactory) {\n                var groupOptions = groupFactory(state.ffiInternals);\n\n                _.extend(state.options, groupOptions);\n            }\n\n            /**\n             * Installs a set of translations for one or more locales\n             *\n             * @param {object} cataloguesByLocale\n             */\n            function installTranslationCatalogues(cataloguesByLocale) {\n                state.translator.addTranslations(cataloguesByLocale);\n            }\n\n            // Core builtins\n            _.each(builtinTypes.translationCatalogues, installTranslationCatalogues);\n            _.each(builtinTypes.constantGroups, installConstantGroup);\n            _.each(builtinTypes.defaultINIGroups, installDefaultINIOptionGroup);\n            _.each(builtinTypes.functionGroups, installFunctionGroup);\n            _.each(builtinTypes.classGroups, installClassGroup);\n\n            if (_.isArray(builtinTypes.classes)) {\n                // Allow the class set to be an array, for grouping classes\n                // so that they will load in a specific order (ie. when handling dependencies between them)\n                _.each(builtinTypes.classes, function (classes) {\n                    _.forOwn(classes, installClass);\n                });\n            } else {\n                _.forOwn(builtinTypes.classes, installClass);\n            }\n\n            // Optional installed builtins\n            _.each(optionGroups, installOptionGroup);\n            state.bindings = {};\n            _.each(installedBuiltinTypes.translationCatalogues, installTranslationCatalogues);\n            _.each(installedBuiltinTypes.constantGroups, installConstantGroup);\n            _.each(installedBuiltinTypes.defaultINIGroups, installDefaultINIOptionGroup);\n            _.each(installedBuiltinTypes.bindingGroups, installBindingGroup);\n            // TODO: Add \"exposures\" for addons to expose things to transpiled code\n            // TODO: Add \"externals\" for addons to expose things to external code (eg. engine.getExternal(...))?\n            _.each(installedBuiltinTypes.functionGroups, installFunctionGroup);\n            _.each(installedBuiltinTypes.classGroups, installClassGroup);\n            _.forOwn(installedBuiltinTypes.classes, installClass);\n        },\n        Exception = phpCommon.Exception,\n        Translator = phpCommon.Translator;\n\n    /**\n     * Encapsulates an internal PHP state, defining classes, functions, global variables etc.\n     *\n     * For now this class also serves as the main dependency injection container for all services\n     * that relate to a specific internal PHP environment's state.\n     *\n     * @param {Runtime} runtime\n     * @param {GlobalStackHooker} globalStackHooker\n     * @param {Object} installedBuiltinTypes\n     * @param {Stream} stdin\n     * @param {Stream} stdout\n     * @param {Stream} stderr\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @param {Function[]} optionGroups\n     * @param {Object} options\n     * @constructor\n     */\n    function PHPState(\n        runtime,\n        globalStackHooker,\n        installedBuiltinTypes,\n        stdin,\n        stdout,\n        stderr,\n        pausable,\n        mode,\n        optionGroups,\n        options\n    ) {\n        var callFactory = new CallFactory(Call, FFICall),\n            elementProviderFactory = new ElementProviderFactory(),\n            elementProvider = elementProviderFactory.createProvider(),\n            moduleFactory = new ModuleFactory(Module),\n            translator = new Translator(),\n            iniState = new INIState(),\n            getConstant = this.getConstant.bind(this),\n            errorConfiguration = new ErrorConfiguration(iniState),\n            errorConverter = new ErrorConverter(getConstant),\n            traceFormatter = new TraceFormatter(translator),\n            errorReporting = new ErrorReporting(\n                errorConfiguration,\n                errorConverter,\n                traceFormatter,\n                translator,\n                stdout,\n                stderr\n            ),\n            errorPromoter = new ErrorPromoter(errorReporting),\n            ffiValueStorage = new FFIValueStorage(),\n            valueFactory = new ValueFactory(\n                pausable,\n                mode,\n                elementProvider,\n                translator,\n                callFactory,\n                errorPromoter,\n                ffiValueStorage\n            ),\n            callStack = new CallStack(valueFactory, translator, errorReporting, stderr),\n            referenceFactory = new ReferenceFactory(\n                AccessorReference,\n                NullReference,\n                valueFactory\n            ),\n            classAutoloader = new ClassAutoloader(valueFactory),\n            superGlobalScope = new SuperGlobalScope(callStack, valueFactory),\n\n            ffiCaller = new FFICaller(\n                callFactory,\n                callStack,\n                errorPromoter,\n                pausable,\n                mode\n            ),\n            ffiNativeCaller = new FFINativeCaller(ffiCaller, mode),\n            ffiValueCaller = new FFIValueCaller(ffiCaller, mode),\n            ffiFactory = new FFIFactory(\n                FFIAsyncObjectValue,\n                FFIPHPObject,\n                FFIValueCoercer,\n                valueFactory,\n                callStack,\n                ffiNativeCaller,\n                ffiValueCaller\n            ),\n            ffiProxyMemberFactory = new FFIProxyMemberFactory(\n                valueFactory,\n                ffiValueStorage,\n                ffiNativeCaller\n            ),\n            ffiProxyClassFactory = new FFIProxyClassFactory(ffiValueStorage, ffiProxyMemberFactory),\n            ffiProxyClassRepository = new FFIProxyClassRepository(ffiProxyClassFactory),\n            ffiProxyFactory = new FFIProxyFactory(ffiProxyClassRepository, mode),\n            ffiUnwrapperRepository = new FFIUnwrapperRepository(),\n            ffiExportFactory = new FFIExportFactory(ffiUnwrapperRepository, ffiProxyFactory),\n            ffiExportRepository = new FFIExportRepository(ffiExportFactory, ffiValueStorage),\n            ffiValueHelper = new FFIValueHelper(ffiProxyFactory, ffiFactory, ffiValueStorage, mode),\n\n            variableFactory = new VariableFactory(Variable, callStack, valueFactory),\n            typeFactory = new TypeFactory(),\n            parameterFactory = new ParameterFactory(Parameter, callStack, translator),\n            parameterTypeFactory = new ParameterTypeFactory(typeFactory),\n            parameterListFactory = new ParameterListFactory(parameterFactory, parameterTypeFactory),\n            functionSpecFactory = new FunctionSpecFactory(\n                FunctionSpec,\n                FunctionContext,\n                MethodContext,\n                ClosureContext,\n                callStack,\n                parameterListFactory,\n                valueFactory\n            ),\n            scopeFactory = new ScopeFactory(\n                LoadScope,\n                Scope,\n                NamespaceScope,\n                callStack,\n                translator,\n                superGlobalScope,\n                functionSpecFactory,\n                valueFactory,\n                variableFactory,\n                referenceFactory\n            ),\n            functionFactory = new FunctionFactory(\n                MethodSpec,\n                scopeFactory,\n                callFactory,\n                valueFactory,\n                callStack\n            ),\n            closureFactory = new ClosureFactory(functionFactory, valueFactory, callStack, Closure),\n            namespaceFactory = new NamespaceFactory(\n                Namespace,\n                callStack,\n                functionFactory,\n                functionSpecFactory,\n                valueFactory,\n                classAutoloader,\n                ffiExportRepository,\n                ffiFactory\n            ),\n            globalNamespace = namespaceFactory.create(),\n            // The global/default module (not eg. the same as the command line module)\n            globalModule = moduleFactory.create(null),\n            // \"Invisible\" global namespace scope, not defined by any code\n            globalNamespaceScope = new NamespaceScope(\n                globalNamespace,\n                valueFactory,\n                callStack,\n                globalModule,\n                globalNamespace,\n                true\n            ),\n            globalScope,\n            ffiInternals,\n            ffiClassInternalsClassFactory,\n            ffiFunctionInternalsClassFactory,\n            globalsSuperGlobal = superGlobalScope.defineVariable('GLOBALS'),\n            loader = new Loader(valueFactory, pausable),\n            includer,\n            onceIncluder,\n            optionSet,\n            output = new Output(new OutputFactory(OutputBuffer), new StdoutBuffer(stdout)),\n            state = this,\n            toolsFactory;\n\n        scopeFactory.setClosureFactory(closureFactory);\n        globalScope = scopeFactory.create();\n        scopeFactory.setGlobalScope(globalScope);\n        classAutoloader.setGlobalNamespace(globalNamespace);\n        valueFactory.setCallStack(callStack);\n        valueFactory.setGlobalNamespace(globalNamespace);\n\n        // Make a copy of the options object so we don't mutate it\n        options = _.extend({}, options || {});\n\n        optionSet = new OptionSet(options);\n\n        includer = new Includer(\n            callStack,\n            valueFactory,\n            scopeFactory,\n            loader,\n            optionSet\n        );\n        onceIncluder = new OnceIncluder(valueFactory, includer);\n        toolsFactory = new ToolsFactory(\n            Tools,\n            callStack,\n            translator,\n            globalNamespace,\n            loader,\n            includer,\n            onceIncluder,\n            referenceFactory,\n            scopeFactory,\n            valueFactory\n        );\n\n        ffiInternals = new FFIInternals(\n            mode,\n            pausable,\n            valueFactory,\n            callFactory,\n            callStack,\n            ffiValueHelper,\n            classAutoloader,\n            errorConfiguration,\n            errorPromoter,\n            errorReporting,\n            globalNamespace,\n            globalScope,\n            iniState,\n            optionSet,\n            output,\n            runtime,\n            stdout,\n            traceFormatter,\n            translator,\n            state\n        );\n        ffiClassInternalsClassFactory = new FFIClassInternalsClassFactory(\n            ffiInternals,\n            ffiUnwrapperRepository,\n            valueFactory,\n            globalNamespace,\n            globalNamespaceScope\n        );\n        ffiFunctionInternalsClassFactory = new FFIFunctionInternalsClassFactory(\n            ffiInternals,\n            valueFactory,\n            ffiFactory,\n            globalNamespace,\n            globalNamespaceScope\n        );\n\n        // Set up the $GLOBALS superglobal\n        globalsSuperGlobal.setReference(\n            referenceFactory.createAccessor(\n                function () {\n                    var globalsArray,\n                        globalValues = globalScope.exportVariables(),\n                        elementHookCollection = elementProviderFactory.createElementHookCollection(),\n                        hookableElementProvider = elementProviderFactory.createHookableProvider(\n                            elementProvider,\n                            elementHookCollection\n                        );\n\n                    // Use a hookable array for $GLOBALS, so that we do not take a performance hit\n                    // for normal non-$GLOBALS arrays, as we would if we added hooking to all of them\n                    // without using the decorator pattern\n                    globalsArray = valueFactory.createArray(globalValues, hookableElementProvider);\n\n                    // $GLOBALS should have a recursive reference to itself\n                    globalsArray.getElementByKey(valueFactory.createString('GLOBALS'))\n                        .setReference(globalsSuperGlobal.getReference());\n\n                    // Install hooks to ensure that modifications to the $GLOBALS array\n                    // are reflected in the corresponding global variables\n                    elementHookCollection.onElementReferenceSet(function (elementReference, referenceSet) {\n                        var globalVariableName = elementReference.getKey().getNative();\n\n                        globalScope.getVariable(globalVariableName).setReference(referenceSet);\n                    });\n                    elementHookCollection.onElementValueSet(function (elementReference, valueSet) {\n                        var globalVariableName = elementReference.getKey().getNative();\n\n                        globalScope.getVariable(globalVariableName).setValue(valueSet);\n                    });\n                    elementHookCollection.onElementUnset(function (elementReference) {\n                        var globalVariableName = elementReference.getKey().getNative();\n\n                        globalScope.getVariable(globalVariableName).unset();\n                    });\n\n                    return globalsArray;\n                },\n                function (newNative) {\n                    // Clear these accessors first\n                    globalsSuperGlobal.unset();\n\n                    globalsSuperGlobal.setValue(valueFactory.coerce(newNative));\n                }\n            )\n        );\n\n        this.bindings = null;\n        this.callFactory = callFactory;\n        this.callStack = callStack;\n        this.ClassInternals = ffiClassInternalsClassFactory.create();\n        this.errorReporting = errorReporting;\n        this.FunctionInternals = ffiFunctionInternalsClassFactory.create();\n        this.globalNamespace = globalNamespace;\n        this.globalNamespaceScope = globalNamespaceScope;\n        this.globalScope = globalScope;\n        this.iniState = iniState;\n        this.options = options;\n        this.optionSet = optionSet;\n        this.ffiInternals = ffiInternals;\n        this.ffiStackHooker = new FFIStackHooker(globalStackHooker, this.optionSet);\n        this.ffiValueHelper = ffiValueHelper;\n        this.output = output;\n\n        this.loader = loader;\n        this.moduleFactory = moduleFactory;\n        this.referenceFactory = referenceFactory;\n        this.scopeFactory = scopeFactory;\n        this.callStack = callStack;\n        this.classAutoloader = classAutoloader;\n        this.pausable = pausable;\n        this.stderr = stderr;\n        this.stdin = stdin;\n        this.stdout = stdout;\n        this.superGlobalScope = superGlobalScope;\n        this.throwableClassObject = null;\n        this.toolsFactory = toolsFactory;\n        this.translator = translator;\n        this.valueFactory = valueFactory;\n\n        setUpState(this, installedBuiltinTypes, optionGroups || []);\n\n        // Install custom FFI JS engine stack trace handling, if enabled\n        this.ffiStackHooker.hook();\n\n        // Set any INI options provided\n        _.forOwn(options.ini, function (value, name) {\n            iniState.set(name, value);\n        });\n    }\n\n    _.extend(PHPState.prototype, {\n        /**\n         * Defines the given alias for the given function\n         *\n         * @param {string} originalName\n         * @param {string} aliasName\n         */\n        aliasFunction: function (originalName, aliasName) {\n            this.globalNamespace.aliasFunction(originalName, aliasName);\n        },\n\n        /**\n         * Creates a new FFI Result, to provide the result of a call to a JS function\n         *\n         * @param {Function} syncCallback\n         * @param {Function|null} asyncCallback\n         * @returns {FFIResult}\n         */\n        createFFIResult: function (syncCallback, asyncCallback) {\n            return new FFIResult(syncCallback, asyncCallback, this.pausable);\n        },\n\n        /**\n         * Defines a new class (in any namespace)\n         *\n         * @param {string} fqcn FQCN of the class to define\n         * @param {function} definitionFactory Called with `internals` object, returns the class definition\n         * @returns {Class} Returns the instance of Class that represents a PHP class\n         */\n        defineClass: function (fqcn, definitionFactory) {\n            var state = this,\n                classInternals = new state.ClassInternals(fqcn),\n                classObject = classInternals.defineClass(definitionFactory);\n\n            if (fqcn === THROWABLE_INTERFACE) {\n                if (state.throwableClassObject) {\n                    throw new Error('PHPState.defineClass(...) :: Throwable interface is already defined');\n                }\n\n                state.throwableClassObject = classObject;\n            }\n\n            return classObject;\n        },\n\n        /**\n         * Defines a global function from a native JS one. If a fully-qualified name is provided\n         * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n         *\n         * @param {string} name\n         * @param {Function} fn\n         */\n        defineCoercingFunction: function (name, fn) {\n            this.defineFunction(name, function () {\n                return fn;\n            });\n        },\n\n        /**\n         * Defines a constant with the given native value\n         *\n         * @param {string} name\n         * @param {*} nativeValue\n         * @param {object} options\n         */\n        defineConstant: function (name, nativeValue, options) {\n            var state = this,\n                parsed = state.globalNamespace.parseName(name),\n                value = state.valueFactory.coerce(nativeValue);\n\n            parsed.namespace.defineConstant(parsed.name, value, options);\n        },\n\n        /**\n         * Defines a global function from a native JS one. If a fully-qualified name is provided\n         * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n         *\n         * @param {string} fqfn\n         * @param {Function} definitionFactory\n         */\n        defineFunction: function (fqfn, definitionFactory) {\n            var state = this,\n                functionInternals = new state.FunctionInternals(fqfn);\n\n            functionInternals.defineFunction(definitionFactory);\n        },\n\n        /**\n         * Defines a global variable and gives it the provided value,\n         * if not already defined. If the variable is already defined\n         * in this scope then an error will be thrown\n         *\n         * @param {string} name\n         * @param {Value|*} value Value object or native value to be coerced\n         * @throws {Error} Throws when the global scope already defines the specified variable\n         */\n        defineGlobal: function (name, value) {\n            var state = this;\n\n            if (state.globalScope.hasVariable(name)) {\n                throw new Error(\n                    'PHPState.defineGlobal() :: Variable \"' + name + '\" is already defined in the global scope'\n                );\n            }\n\n            state.globalScope.defineVariable(name).setValue(state.valueFactory.coerce(value));\n        },\n\n        /**\n         * Defines a global variable using a getter/setter pair\n         *\n         * @param {string} name\n         * @param {Function} valueGetter\n         * @param {Function} valueSetter\n         */\n        defineGlobalAccessor: function (name, valueGetter, valueSetter) {\n            var state = this,\n                accessorReference = state.referenceFactory.createAccessor(valueGetter, valueSetter);\n\n            state.globalScope.defineVariable(name).setReference(accessorReference);\n        },\n\n        /**\n         * Defines a global function from a native JS one. If a fully-qualified name is provided\n         * with a namespace prefix, eg. `My\\Lib\\MyFunc` then it will be defined in the specified namespace\n         *\n         * @param {string} name\n         * @param {Function} fn\n         */\n        defineNonCoercingFunction: function (name, fn) {\n            this.defineFunction(name, function (internals) {\n                internals.disableAutoCoercion();\n\n                return fn;\n            });\n        },\n\n        /**\n         * Defines a super global variable (available in all scopes implicitly,\n         * unlike a normal global which is not available unless imported with a `global` statement)\n         * and gives it the provided value. If a native value is given then it will be coerced to a PHP one.\n         *\n         * @param {string} name\n         * @param {Value|*} value\n         */\n        defineSuperGlobal: function (name, value) {\n            var state = this;\n\n            state.superGlobalScope\n                .defineVariable(name)\n                .setValue(state.valueFactory.coerce(value));\n        },\n\n        /**\n         * Defines a super global variable (see above) using a getter/setter pair\n         *\n         * @param {string} name\n         * @param {Function} valueGetter\n         * @param {Function} valueSetter\n         */\n        defineSuperGlobalAccessor: function (name, valueGetter, valueSetter) {\n            var state = this,\n                accessorReference = state.referenceFactory.createAccessor(valueGetter, valueSetter);\n\n            state.superGlobalScope.defineVariable(name).setReference(accessorReference);\n        },\n\n        /**\n         * Fetches the specified binding from an installed addon\n         *\n         * @param {string} bindingName\n         * @returns {*}\n         */\n        getBinding: function (bindingName) {\n            var state = this;\n\n            if (state.bindings === null) {\n                // Option groups are loaded before bindings, so if any of them attempt to access a binding\n                // too early then throw a meaningful error message\n                throw new Exception('Option groups cannot access bindings too early');\n            }\n\n            if (!hasOwn.call(state.bindings, bindingName)) {\n                throw new Exception('No binding is defined with name \"' + bindingName + '\"');\n            }\n\n            return state.bindings[bindingName];\n        },\n\n        getCallFactory: function () {\n            return this.callFactory;\n        },\n\n        getCallStack: function () {\n            return this.callStack;\n        },\n\n        getConstant: function (name) {\n            var value;\n\n            try {\n                value = this.globalNamespace.getConstant(name, true);\n            } catch (error) {\n                return null;\n            }\n\n            return value.getNative();\n        },\n\n        /**\n         * Fetches the ErrorReporting service\n         *\n         * @returns {ErrorReporting}\n         */\n        getErrorReporting: function () {\n            return this.errorReporting;\n        },\n\n        /**\n         * Fetches the FFI value helper service\n         *\n         * @returns {ValueHelper}\n         */\n        getFFIValueHelper: function () {\n            return this.ffiValueHelper;\n        },\n\n        /**\n         * Fetches either a global function or one in a namespace\n         *\n         * @param {string} name FQCN of the function to fetch\n         * @return {Function}\n         */\n        getFunction: function (name) {\n            var parsed = this.globalNamespace.parseName(name);\n\n            return parsed.namespace.getFunction(parsed.name);\n        },\n\n        /**\n         * Fetches the value of a global variable, if defined.\n         * If the variable is not defined then a NULL value will be returned.\n         *\n         * @param {string} name\n         * @return {Value}\n         */\n        getGlobal: function (name) {\n            return this.globalScope.getVariable(name).getValueOrNull();\n        },\n\n        getGlobalNamespace: function () {\n            return this.globalNamespace;\n        },\n\n        getGlobalScope: function () {\n            return this.globalScope;\n        },\n\n        /**\n         * Fetches the native value of an INI option\n         *\n         * @param {string} name\n         * @returns {*}\n         */\n        getINIOption: function (name) {\n            return this.iniState.get(name);\n        },\n\n        /**\n         * Fetches the Loader for the runtime state, used for include/require and eval(...)\n         *\n         * @returns {Loader}\n         */\n        getLoader: function () {\n            return this.loader;\n        },\n\n        getModuleFactory: function () {\n            return this.moduleFactory;\n        },\n\n        getOptions: function () {\n            return this.optionSet.getOptions();\n        },\n\n        /**\n         * Fetches the Output service for the runtime state, used for handling buffering and writing to standard out\n         *\n         * @returns {Output}\n         */\n        getOutput: function () {\n            return this.output;\n        },\n\n        /**\n         * Fetches the ReferenceFactory service\n         *\n         * @returns {ReferenceFactory}\n         */\n        getReferenceFactory: function () {\n            return this.referenceFactory;\n        },\n\n        /**\n         * Fetches the ScopeFactory for the runtime state\n         *\n         * @returns {ScopeFactory}\n         */\n        getScopeFactory: function () {\n            return this.scopeFactory;\n        },\n\n        getStderr: function () {\n            return this.stderr;\n        },\n\n        getStdin: function () {\n            return this.stdin;\n        },\n\n        getStdout: function () {\n            return this.stdout;\n        },\n\n        getSuperGlobalScope: function () {\n            return this.superGlobalScope;\n        },\n\n        /**\n         * Fetches the ToolsFactory service\n         *\n         * @returns {ToolsFactory}\n         */\n        getToolsFactory: function () {\n            return this.toolsFactory;\n        },\n\n        /**\n         * Fetches the Translator service\n         *\n         * @returns {Translator}\n         */\n        getTranslator: function () {\n            return this.translator;\n        },\n\n        getValueFactory: function () {\n            return this.valueFactory;\n        },\n\n        /**\n         * Sets the value of an existing PHP global. If a native value is given\n         * then it will be coerced to a PHP one.\n         * If the global is not defined than an error will be thrown -\n         * use .defineGlobal(...) when defining a new variable\n         *\n         * @param {string} name\n         * @param {Value|*} value Value object or native value to be coerced\n         * @throws {Error} Throws if the variable is not defined in the global scope\n         */\n        setGlobal: function (name, value) {\n            var state = this;\n\n            if (!state.globalScope.hasVariable(name)) {\n                throw new Error(\n                    'PHPState.setGlobal() :: Variable \"' + name + '\" is not defined in the global scope'\n                );\n            }\n\n            state.globalScope.getVariable(name).setValue(state.valueFactory.coerce(value));\n        }\n    });\n\n    return PHPState;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\nfunction AccessorReference(valueFactory, valueGetter, valueSetter) {\n    this.valueFactory = valueFactory;\n    this.valueGetter = valueGetter;\n    this.valueSetter = valueSetter;\n}\n\nutil.inherits(AccessorReference, Reference);\n\n_.extend(AccessorReference.prototype, {\n    getReference: function () {\n        return this;\n    },\n\n    getValue: function () {\n        var reference = this;\n\n        return reference.valueFactory.coerce(reference.valueGetter());\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return true;\n    },\n\n    setValue: function (value) {\n        this.valueSetter(value.getNative());\n\n        return value;\n    }\n});\n\nmodule.exports = AccessorReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    KeyReferencePair = require('../KeyReferencePair'),\n    KeyValuePair = require('../KeyValuePair'),\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n    ReferenceSlot = require('./ReferenceSlot');\n\nfunction ElementReference(valueFactory, callStack, arrayValue, key, value, reference) {\n    if (value && reference) {\n        throw new Error('Array elements can only have a value or be a reference, not both');\n    }\n\n    this.arrayValue = arrayValue;\n    this.key = key;\n    this.reference = reference || null;\n    this.callStack = callStack;\n    this.value = value || null;\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(ElementReference, Reference);\n\n_.extend(ElementReference.prototype, {\n    getKey: function () {\n        return this.key;\n    },\n\n    /**\n     * Fetches the relevant type of Pair class to represent this array element.\n     * If the element is a reference (to a variable, another array element or object property)\n     * then a KeyReferencePair will be returned.\n     * Otherwise the element simply holds a value, in which case a KeyValuePair will be returned.\n     *\n     * @param {Value|undefined} overrideKey Optional key to use rather than this element's\n     * @returns {KeyReferencePair|KeyValuePair}\n     * @throws {Error} Throws when the element is neither defined as a reference nor with a value\n     */\n    getPairForAssignment: function (overrideKey) {\n        var element = this;\n\n        if (!overrideKey) {\n            overrideKey = element.key;\n        }\n\n        if (element.value) {\n            return new KeyValuePair(overrideKey, element.value.getForAssignment());\n        }\n\n        if (element.reference) {\n            return new KeyReferencePair(overrideKey, element.reference);\n        }\n\n        throw new Error('Element is not defined');\n    },\n\n    /**\n     * Fetches a reference to this element's value\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        var element = this;\n\n        if (element.reference) {\n            // This element already refers to something else, so return its target\n            return element.reference;\n        }\n\n        // Implicitly define a \"slot\" to contain this element's value\n        element.reference = new ReferenceSlot(element.valueFactory);\n\n        if (element.value) {\n            element.reference.setValue(element.value);\n            element.value = null; // This element now has a reference (to the slot) and not a value\n        }\n\n        return element.reference;\n    },\n\n    getValue: function () {\n        var element = this;\n\n        // Special value of native null (vs. NullValue) represents undefined\n        if (!element.value && !element.reference) {\n            element.callStack.raiseError(PHPError.E_NOTICE, 'Undefined ' + element.arrayValue.referToElement(element.key.getNative()));\n            return element.valueFactory.createNull();\n        }\n\n        return element.value ? element.value : element.reference.getValue();\n    },\n\n    getValueReference: function () {\n        var element = this;\n\n        return element.reference || element.value || null;\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var element = this;\n\n        return !!(element.value || element.reference);\n    },\n\n    /**\n     * Determines whether the specified array element is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        var element = this;\n\n        if (element.value) {\n            return element.value.isEmpty();\n        }\n\n        if (element.reference) {\n            return element.reference.getValue().isEmpty();\n        }\n\n        return true; // Undefined elements are empty\n    },\n\n    isReference: function () {\n        return !!this.reference;\n    },\n\n    isSet: function () {\n        var element = this;\n\n        if (element.value) {\n            return element.value.isSet();\n        }\n\n        if (element.reference) {\n            return element.reference.getValue().isSet();\n        }\n\n        return false;\n    },\n\n    /**\n     * Sets the key for this element\n     *\n     * @param {Value} keyValue\n     */\n    setKey: function (keyValue) {\n        this.key = keyValue;\n    },\n\n    setReference: function (reference) {\n        var element = this;\n\n        element.reference = reference;\n        element.value = null;\n\n        element.arrayValue.defineElement(element);\n\n        return reference;\n    },\n\n    setValue: function (value) {\n        var element = this,\n            isFirstElement = (element.arrayValue.getLength() === 0);\n\n        if (element.key === null) {\n            // This reference refers to a new element to push onto the end of an array\n            element.arrayValue.pushElement(element);\n        }\n\n        if (element.reference) {\n            element.reference.setValue(value);\n        } else {\n            element.arrayValue.defineElement(element);\n            element.value = value.getForAssignment();\n        }\n\n        if (isFirstElement) {\n            element.arrayValue.pointToElement(element);\n        }\n\n        return value;\n    },\n\n    unset: function () {\n        var element = this;\n\n        element.value = element.reference = null;\n    }\n});\n\nmodule.exports = ElementReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Contains a set of hooks to be called when various operations are performed on a hookable array's elements\n *\n * @constructor\n */\nfunction ElementHookCollection() {\n    /**\n     * @type {Function[]}\n     */\n    this.onElementReferenceSetCallbacks = [];\n    /**\n     * @type {Function[]}\n     */\n    this.onElementValueSetCallbacks = [];\n    /**\n     * @type {Function[]}\n     */\n    this.onElementUnsetCallbacks = [];\n}\n\n_.extend(ElementHookCollection.prototype, {\n    /**\n     * Handles the setting of a hookable element's reference by invoking all relevant callbacks\n     *\n     * @param {HookableElement} element\n     * @param {Reference} referenceSet\n     */\n    handleElementReferenceSet: function (element, referenceSet) {\n        _.each(this.onElementReferenceSetCallbacks, function (callback) {\n            callback(element, referenceSet);\n        });\n    },\n\n    /**\n     * Handles the setting of a hookable element's value by invoking all relevant callbacks\n     *\n     * @param {HookableElement} element\n     * @param {Value} valueSet\n     */\n    handleElementValueSet: function (element, valueSet) {\n        _.each(this.onElementValueSetCallbacks, function (callback) {\n            callback(element, valueSet);\n        });\n    },\n\n    /**\n     * Handles the unsetting of a hookable element by invoking all relevant callbacks\n     *\n     * @param {HookableElement} element\n     */\n    handleElementUnset: function (element) {\n        _.each(this.onElementUnsetCallbacks, function (callback) {\n            callback(element);\n        });\n    },\n\n    /**\n     * Installs a new hook callback to be called when a hookable element's reference is set\n     *\n     * @param {Function} callback\n     */\n    onElementReferenceSet: function (callback) {\n        this.onElementReferenceSetCallbacks.push(callback);\n    },\n\n    /**\n     * Installs a new hook callback to be called when a hookable element's value is set\n     *\n     * @param {Function} callback\n     */\n    onElementValueSet: function (callback) {\n        this.onElementValueSetCallbacks.push(callback);\n    },\n\n    /**\n     * Installs a new hook callback to be called when a hookable element is unset\n     *\n     * @param {Function} callback\n     */\n    onElementUnset: function (callback) {\n        this.onElementUnsetCallbacks.push(callback);\n    }\n});\n\nmodule.exports = ElementHookCollection;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    ElementReference = require('../Element');\n\n/**\n * Creates standard (unhooked) array elements\n *\n * @constructor\n */\nfunction ElementProvider() {\n\n}\n\n_.extend(ElementProvider.prototype, {\n    /**\n     * Creates a standard (unhooked) array element\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {ArrayValue} arrayValue\n     * @param {Value} key\n     * @param {Value|null} value\n     * @param {Reference|null} reference\n     * @returns {ElementReference}\n     */\n    createElement: function (valueFactory, callStack, arrayValue, key, value, reference) {\n        return new ElementReference(valueFactory, callStack, arrayValue, key, value, reference);\n    }\n});\n\nmodule.exports = ElementProvider;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    ElementHookCollection = require('./ElementHookCollection'),\n    ElementProvider = require('./ElementProvider'),\n    HookableElementProvider = require('./HookableElementProvider');\n\n/**\n * Creates element providers and objects related to them\n *\n * @constructor\n */\nfunction ElementProviderFactory() {\n\n}\n\n_.extend(ElementProviderFactory.prototype, {\n    /**\n     * Creates a new ElementHookCollection to be passed to a HookableElementProvider\n     *\n     * @returns {ElementHookCollection}\n     */\n    createElementHookCollection: function () {\n        return new ElementHookCollection();\n    },\n\n    /**\n     * Creates a new HookableElementProvider\n     *\n     * @param {ElementProvider} baseElementProvider\n     * @param {ElementHookCollection} elementHookCollection\n     * @returns {HookableElementProvider}\n     */\n    createHookableProvider: function (baseElementProvider, elementHookCollection) {\n        return new HookableElementProvider(baseElementProvider, elementHookCollection);\n    },\n\n    /**\n     * Creates a new ElementProvider\n     *\n     * @returns {ElementProvider}\n     */\n    createProvider: function () {\n        return new ElementProvider();\n    }\n});\n\nmodule.exports = ElementProviderFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('../Reference');\n\n/**\n * Decorates an ElementReference to allow it to be hooked into\n *\n * @param {ElementReference} decoratedElement\n * @param {ElementHookCollection} elementHookCollection\n * @constructor\n */\nfunction HookableElementReference(decoratedElement, elementHookCollection) {\n    /**\n     * @type {ElementReference}\n     */\n    this.decoratedElement = decoratedElement;\n    /**\n     * @type {ElementHookCollection}\n     */\n    this.elementHookCollection = elementHookCollection;\n}\n\nutil.inherits(HookableElementReference, Reference);\n\n_.extend(HookableElementReference.prototype, {\n    /**\n     * Fetches an instance property of this element (assuming it contains an object) by its name\n     *\n     * @param {string} name\n     * @returns {PropertyReference}\n     */\n    getInstancePropertyByName: function (name) {\n        return this.decoratedElement.getInstancePropertyByName(name);\n    },\n\n    /**\n     * Fetches this element's key value\n     *\n     * @returns {Value}\n     */\n    getKey: function () {\n        return this.decoratedElement.getKey();\n    },\n\n    /**\n     * Fetches the relevant type of Pair class to represent this array element.\n     * If the element is a reference (to a variable, another array element or object property)\n     * then a KeyReferencePair will be returned.\n     * Otherwise the element simply holds a value, in which case a KeyValuePair will be returned.\n     *\n     * @param {Value|undefined} overrideKey Optional key to use rather than this element's\n     * @returns {KeyReferencePair|KeyValuePair}\n     */\n    getPairForAssignment: function (overrideKey) {\n        return this.decoratedElement.getPairForAssignment(overrideKey);\n    },\n\n    /**\n     * Fetches a reference to this element\n     *\n     * @returns {HookableElementReference}\n     */\n    getReference: function () {\n        return this;\n    },\n\n    /**\n     * Fetches the value of this element (or the value of its reference, if set)\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        return this.decoratedElement.getValue();\n    },\n\n    /**\n     * Fetches either the value or the reference of this element, depending on which (if any) is set\n     *\n     * @returns {Reference|Value}\n     */\n    getValueReference: function () {\n        return this.decoratedElement.getValueReference();\n    },\n\n    /**\n     * Determines whether this element is \"defined\" (whether it has either a value or reference set)\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return this.decoratedElement.isDefined();\n    },\n\n    /**\n     * Determines whether the specified array element is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return this.decoratedElement.isEmpty();\n    },\n\n    /**\n     * Determines whether this element has a reference set rather than a value\n     *\n     * @returns {boolean}\n     */\n    isReference: function () {\n        return this.decoratedElement.isReference();\n    },\n\n    /**\n     * Determines whether this element is defined and if so, whether its value or reference is \"set\"\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        return this.decoratedElement.isSet();\n    },\n\n    /**\n     * Sets the key for this element\n     *\n     * @param {Value} keyValue\n     */\n    setKey: function (keyValue) {\n        this.decoratedElement.setKey(keyValue);\n    },\n\n    /**\n     * Sets a reference for this element to refer to, clearing any value it may currently have\n     *\n     * @param {Reference} reference\n     */\n    setReference: function (reference) {\n        var element = this;\n\n        element.decoratedElement.setReference(reference);\n        element.elementHookCollection.handleElementReferenceSet(element, reference);\n    },\n\n    /**\n     * Sets a value for this element to have, clearing any reference it may currently have\n     *\n     * @param {Value} value\n     */\n    setValue: function (value) {\n        var element = this;\n\n        element.decoratedElement.setValue(value);\n        element.elementHookCollection.handleElementValueSet(element, value);\n    },\n\n    /**\n     * Unsets this element, so that it no longer refers to a reference or holds a value\n     */\n    unset: function () {\n        var element = this;\n\n        element.decoratedElement.unset();\n        element.elementHookCollection.handleElementUnset(element);\n    }\n});\n\nmodule.exports = HookableElementReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    HookableElement = require('./HookableElement');\n\n/**\n * Creates hookable array elements, which will invoke hooks in the given collection where applicable\n *\n * @param {ElementProvider} baseElementProvider\n * @param {ElementHookCollection} elementHookCollection\n * @constructor\n */\nfunction HookableElementProvider(baseElementProvider, elementHookCollection) {\n    /**\n     * @type {ElementProvider}\n     */\n    this.baseElementProvider = baseElementProvider;\n    /**\n     * @type {ElementHookCollection}\n     */\n    this.elementHookCollection = elementHookCollection;\n}\n\n_.extend(HookableElementProvider.prototype, {\n    /**\n     * Creates a new HookableElement\n     *\n     * @param {ValueFactory} valueFactory\n     * @param {CallStack} callStack\n     * @param {ArrayValue} arrayValue\n     * @param {Value} key\n     * @param {Value|null }value\n     * @param {Reference|null} reference\n     * @returns {HookableElementReference}\n     */\n    createElement: function (valueFactory, callStack, arrayValue, key, value, reference) {\n        var provider = this,\n            decoratedElement = provider.baseElementProvider.createElement(\n                valueFactory,\n                callStack,\n                arrayValue,\n                key,\n                value,\n                reference\n            );\n\n        return new HookableElement(decoratedElement, provider.elementHookCollection);\n    }\n});\n\nmodule.exports = HookableElementProvider;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\nfunction NullReference(valueFactory, options) {\n    options = options || {};\n\n    this.onSet = options.onSet;\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(NullReference, Reference);\n\n_.extend(NullReference.prototype, {\n    getReference: function () {\n        return this;\n    },\n\n    getValue: function () {\n        return this.valueFactory.createNull();\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return false;\n    },\n\n    /**\n     * Determines whether this reference is empty or not\n     * (NULL references are always empty)\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return true; // PHP NULL is classed as empty\n    },\n\n    isSet: function () {\n        return false;\n    },\n\n    setValue: function () {\n        var reference = this;\n\n        if (reference.onSet) {\n            reference.onSet();\n        }\n    }\n});\n\nmodule.exports = NullReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\nfunction ObjectElement(valueFactory, objectValue, keyValue) {\n    this.keyValue = keyValue;\n    this.objectValue = objectValue;\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(ObjectElement, Reference);\n\n_.extend(ObjectElement.prototype, {\n    getReference: function () {\n        return this;\n    },\n\n    getValue: function () {\n        var element = this;\n\n        return element.objectValue.callMethod('offsetGet', [element.keyValue]);\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var element = this;\n\n        return element.objectValue.callMethod('offsetExists', [element.keyValue]).getNative();\n    },\n\n    /**\n     * Determines whether an element of an object is classed as empty.\n     * Objects may only have an element fetched if they can be treated as an array,\n     * by implementing ArrayAccess\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        var element = this;\n\n        // When using empty() ArrayAccess::offsetGet() will be called and checked\n        // if empty only if ArrayAccess::offsetExists() returns TRUE.\n        return !element.objectValue.callMethod('offsetExists', [element.keyValue]).getNative() ||\n            element.objectValue.callMethod('offsetGet', [element.keyValue]).isEmpty();\n    },\n\n    /**\n     * Determines whether an element of an object is classed as set.\n     * Objects may only have an element fetched if they can be treated as an array,\n     * by implementing ArrayAccess\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        var element = this;\n\n        return element.objectValue.callMethod('offsetExists', [element.keyValue]).getNative() &&\n            element.objectValue.callMethod('offsetGet', [element.keyValue]).isSet();\n    },\n\n    setValue: function (value) {\n        var element = this;\n\n        element.objectValue.callMethod('offsetSet', [element.keyValue, value]);\n    },\n\n    unset: function () {\n        var element = this;\n\n        element.objectValue.callMethod('offsetUnset', [element.keyValue]);\n    }\n});\n\nmodule.exports = ObjectElement;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    MAGIC_GET = '__get',\n    MAGIC_SET = '__set',\n    MAGIC_UNSET = '__unset',\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n    ReferenceSlot = require('./ReferenceSlot');\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {ObjectValue} objectValue\n * @param {Value} key\n * @param {Class} classObject Class in the hierarchy that defines the property - may be an ancestor\n * @param {string} visibility \"private\", \"protected\" or \"public\"\n * @param {number} index\n * @constructor\n */\nfunction PropertyReference(valueFactory, callStack, objectValue, key, classObject, visibility, index) {\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {number}\n     */\n    this.index = index;\n    /**\n     * @type {ObjectValue}\n     */\n    this.objectValue = objectValue;\n    /**\n     * @type {Value}\n     */\n    this.key = key;\n    /**\n     * @type {Reference|null}\n     */\n    this.reference = null;\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * Value of this property - a native null value indicates that the property is not defined\n     *\n     * @type {Value|null}\n     */\n    this.value = null;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {string}\n     */\n    this.visibility = visibility;\n}\n\nutil.inherits(PropertyReference, Reference);\n\n_.extend(PropertyReference.prototype, {\n    /**\n     * Fetches the unique name of this property as viewed from outside the class (eg. when casting to array)\n     *\n     * @returns {*}\n     */\n    getExternalName: function () {\n        var property = this;\n\n        switch (property.visibility) {\n            case 'private':\n                return '\\0' + property.classObject.getName() + '\\0' + property.key.getNative();\n            case 'protected':\n                return '\\0*\\0' + property.key.getNative();\n            default:\n                return property.key.getNative();\n        }\n    },\n\n    /**\n     * Fetches the index of this property within its object\n     *\n     * @returns {number}\n     */\n    getIndex: function () {\n        return this.index;\n    },\n\n    getKey: function () {\n        return this.key;\n    },\n\n    /**\n     * Fetches a reference to this property's value\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        var property = this;\n\n        if (property.reference) {\n            // This property already refers to something else, so return its target\n            return property.reference;\n        }\n\n        // Implicitly define a \"slot\" to contain this property's value\n        property.reference = new ReferenceSlot(property.valueFactory);\n\n        if (property.value) {\n            property.reference.setValue(property.value);\n            property.value = null; // This property now has a reference (to the slot) and not a value\n        }\n\n        return property.reference;\n    },\n\n    /**\n     * Fetches the value of this property on its object. If it is not defined,\n     * and a magic __get getter method is defined, it will be called,\n     * otherwise a notice will be raised and NULL returned\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        var property = this;\n\n        // Special value of native null (vs. NullValue) represents undefined\n        if (!property.isDefined()) {\n            if (property.objectValue.isMethodDefined(MAGIC_GET)) {\n                // Magic getter method is defined, so use it\n                return property.objectValue.callMethod(MAGIC_GET, [property.key]);\n            }\n\n            property.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Undefined ' + property.objectValue.referToElement(\n                    property.key.getNative()\n                )\n            );\n\n            return property.valueFactory.createNull();\n        }\n\n        if (property.value) {\n            return property.value;\n        }\n\n        if (property.reference) {\n            return property.reference.getValue();\n        }\n\n        throw new Error('Defined properties should have a value or reference assigned');\n    },\n\n    /**\n     * Fetches the visibility of this property\n     *\n     * @returns {string}\n     */\n    getVisibility: function () {\n        return this.visibility;\n    },\n\n    /**\n     * Sets the initial value for this property, ignoring any magic setter\n     *\n     * @param {Value} value\n     */\n    initialise: function (value) {\n        this.value = value.getForAssignment();\n    },\n\n    /**\n     * Determines whether this property is defined. If assigned a value of NULL,\n     * the property will still be considered defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        var property = this;\n\n        if (property.reference) {\n            return true;\n        }\n\n        // This property is defined if it has a non-native null value -\n        // if it is defined but with a value of PHP NULL, `.value` will be an instance of NullValue\n        return property.value !== null;\n    },\n\n    /**\n     * Determines whether this object property is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        var property = this;\n\n        if (property.isDefined()) {\n            return property.getValue().isEmpty();\n        }\n\n        if (property.objectValue.isMethodDefined(MAGIC_GET)) {\n            // Magic getter method is defined, so use it to determine the property's value\n            // and then check _that_ for being \"empty\"\n            return property.objectValue.callMethod(MAGIC_GET, [property.key]).isEmpty();\n        }\n\n        // Property is not defined and there is no magic getter,\n        // so the property must be empty as it is unset and undefined\n        return true;\n    },\n\n    isReference: function () {\n        return !!this.reference;\n    },\n\n    /**\n     * Determines whether this property is \"set\".\n     * A set property must be both defined and have a non-NULL value\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        var property = this,\n            defined = property.isDefined();\n\n        if (!defined) {\n            return false;\n        }\n\n        // Check that the property resolves to something other than null,\n        // otherwise it is not set\n        // (no need to check for a value of native null - meaning an undefined property -\n        //  as the check for that is done just above)\n        return property.value.getType() !== 'null';\n    },\n\n    /**\n     * Determines whether this property is visible from the calling scope\n     * - for a private property, the calling scope must be inside that class\n     * - for a protected property, the calling scope must be inside that class or an ancestor or descendant of it\n     * - public properties are visible from everywhere\n     *\n     * @returns {boolean}\n     */\n    isVisible: function () {\n        var property = this,\n            // Fetch the class that the current line of PHP code is executing inside (if any)\n            callingClass = property.callStack.getCurrentClass();\n\n        if (property.getVisibility() === 'private') {\n            // Private properties are only accessible by the class that defines them\n            return callingClass &&\n                property.classObject.getName() === callingClass.getName();\n        }\n\n        if (property.getVisibility() === 'protected') {\n            // Protected properties may be accessed by the class that defines them\n            // or an ancestor or descendant of it\n            return callingClass &&\n                callingClass.isInFamilyOf(property.classObject);\n        }\n\n        // Public visibility - public properties are always visible\n        return true;\n    },\n\n    setReference: function (reference) {\n        var property = this;\n\n        property.reference = reference;\n\n        return reference;\n    },\n\n    /**\n     * Sets the value of this property on its object. If it is not defined,\n     * and a magic __set setter method is defined, it will be called,\n     * otherwise the property will be dynamically defined on the object\n     *\n     * @param {Value} value\n     * @returns {Value}\n     */\n    setValue: function (value) {\n        var property = this,\n            isFirstProperty = (property.objectValue.getLength() === 0),\n            valueForAssignment;\n\n        function pointIfFirstProperty() {\n            if (isFirstProperty) {\n                property.objectValue.pointToProperty(property);\n            }\n        }\n\n        if (property.reference) {\n            property.reference.setValue(value);\n\n            pointIfFirstProperty();\n\n            return value;\n        }\n\n        valueForAssignment = value.getForAssignment();\n\n        if (!property.isDefined()) {\n            // Property is not defined - attempt to call magic setter method first,\n            // otherwise just dynamically define the new property by setting its value below\n            if (property.objectValue.isMethodDefined(MAGIC_SET)) {\n                property.objectValue.callMethod(MAGIC_SET, [property.key, valueForAssignment]);\n\n                return value;\n            }\n        }\n\n        // No magic setter is defined - store the value of this property directly on itself\n        property.value = valueForAssignment;\n\n        pointIfFirstProperty();\n\n        return value;\n    },\n\n    /**\n     * Marks this property as unset and undefined\n     */\n    unset: function () {\n        var property = this;\n\n        if (!property.isDefined()) {\n            // Property is not defined - call magic unsetter method if defined\n            if (property.objectValue.isMethodDefined(MAGIC_UNSET)) {\n                property.objectValue.callMethod(MAGIC_UNSET, [property.key]);\n            }\n        }\n\n        // Clear value and/or reference to mark as unset\n        property.value = property.reference = null;\n    }\n});\n\nmodule.exports = PropertyReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error('Reference.' + functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * Interface for references to extend to allow instanceof checking\n *\n * @constructor\n */\nfunction Reference() {\n    throw new Error('Reference is abstract, no need to instantiate it');\n}\n\n_.extend(Reference.prototype, {\n    /**\n     * Coerces the value from this reference and the specified one to strings,\n     * concatenates them together and then assigns the result back to this reference.\n     *\n     * Used by the `.=` operator\n     *\n     * @param {Value} rightValue\n     */\n    concatWith: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().concat(rightValue));\n    },\n\n    /**\n     * Subtracts the specified value from the value from this reference\n     * and then assigns the result back to this reference\n     *\n     * Used by the `-=` operator\n     *\n     * @param {Value} rightValue\n     */\n    decrementBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().subtract(rightValue));\n    },\n\n    /**\n     * Divides the value from this reference by the specified value\n     * and then assigns the result back to this reference\n     *\n     * Used by the `/=` operator\n     *\n     * @param {Value} rightValue\n     */\n    divideBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().divide(rightValue));\n    },\n\n    /**\n     * Formats the reference (which may not be defined) for display in stack traces etc.\n     *\n     * @returns {string}\n     */\n    formatAsString: function () {\n        var reference = this;\n\n        return reference.isDefined() ?\n            reference.getValue().formatAsString() :\n            'NULL';\n    },\n\n    /**\n     * Fetches the value of this reference when it is being assigned to a variable or another reference.\n     * This is used to implement the copy-on-assignment behaviour of PHP arrays\n     *\n     * @returns {Value}\n     */\n    getForAssignment: throwUnimplemented('getForAssignment'),\n\n    /**\n     * Fetches an instance property of this reference's value (assuming it contains an object) by its name\n     *\n     * @param {string} name\n     * @returns {PropertyReference}\n     */\n    getInstancePropertyByName: function (name) {\n        return this.getValue().getInstancePropertyByName(name);\n    },\n\n    /**\n     * Fetches the native value of the PHP value being referred to\n     *\n     * @returns {*}\n     */\n    getNative: function () {\n        return this.getValue().getNative();\n    },\n\n    /**\n     * Fetches this reference\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        return this;\n    },\n\n    /**\n     * Fetches the value this reference stores, if any\n     *\n     * @returns {Value|null}\n     */\n    getValue: throwUnimplemented('getValue'),\n\n    /**\n     * Returns this reference's value if defined, NULL otherwise.\n     * No notice/warning will be raised if the reference has no value defined.\n     *\n     * @return {Value}\n     */\n    getValueOrNull: function () {\n        var reference = this;\n\n        return reference.isDefined() ?\n            reference.getValue() :\n            reference.valueFactory.createNull();\n    },\n\n    /**\n     * Adds the specified value to the value from this reference\n     * and then assigns the result back to this reference\n     *\n     * Used by the `+=` operator\n     *\n     * @param {Value} rightValue\n     */\n    incrementBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().add(rightValue));\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: throwUnimplemented('isDefined'),\n\n    /**\n     * Determines whether the reference is classed as \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: throwUnimplemented('isEmpty'),\n\n    /**\n     * Determines whether the reference is classed as \"set\" or not\n     *\n     * @returns {boolean}\n     */\n    isSet: throwUnimplemented('isSet'),\n\n    /**\n     * Multiplies the specified value by the value from this reference\n     * and then assigns the result back to this reference\n     *\n     * Used by the `*=` operator\n     *\n     * @param {Value} rightValue\n     */\n    multiplyBy: function (rightValue) {\n        var reference = this;\n\n        reference.setValue(reference.getValue().multiply(rightValue));\n    },\n\n    /**\n     * Decrements the stored value, returning its original value\n     *\n     * @returns {Value}\n     */\n    postDecrement: function () {\n        var reference = this,\n            originalValue = reference.getValue(),\n            decrementedValue = originalValue.decrement();\n\n        reference.setValue(decrementedValue);\n\n        return originalValue;\n    },\n\n    /**\n     * Increments the stored value, returning its original value\n     *\n     * @returns {Value}\n     */\n    postIncrement: function () {\n        var reference = this,\n            originalValue = reference.getValue(),\n            incrementedValue = originalValue.increment();\n\n        reference.setValue(incrementedValue);\n\n        return originalValue;\n    },\n\n    /**\n     * Decrements the stored value, returning its new value\n     *\n     * @returns {Value}\n     */\n    preDecrement: function () {\n        var reference = this,\n            decrementedValue = reference.getValue().decrement();\n\n        reference.setValue(decrementedValue);\n\n        return decrementedValue;\n    },\n\n    /**\n     * Increments the stored value, returning its new value\n     *\n     * @returns {Value}\n     */\n    preIncrement: function () {\n        var reference = this,\n            incrementedValue = reference.getValue().increment();\n\n        reference.setValue(incrementedValue);\n\n        return incrementedValue;\n    },\n\n    /**\n     * Sets the value of this reference. If it was already assigned a value it will be overwritten,\n     * otherwise if it was already assigned a sub-reference then that reference will be assigned the value\n     *\n     * @param {Value} value\n     * @returns {Value} Returns the value that was set\n     */\n    setValue: throwUnimplemented('setValue')\n});\n\nmodule.exports = Reference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('./Reference');\n\n/**\n * Stores a value that may be referred to by multiple variables or references\n *\n * @param {ValueFactory} valueFactory\n * @constructor\n */\nfunction ReferenceSlot(valueFactory) {\n    /**\n     * Implicitly define this slot with a value of NULL\n     *\n     * @type {Value}\n     */\n    this.value = valueFactory.createNull();\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(ReferenceSlot, Reference);\n\n_.extend(ReferenceSlot.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    getForAssignment: function () {\n        return this.getValue();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getValue: function () {\n        return this.value;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isDefined: function () {\n        return true;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    setValue: function (value) {\n        this.value = value;\n\n        return value;\n    }\n});\n\nmodule.exports = ReferenceSlot;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n    ReferenceSlot = require('./ReferenceSlot'),\n\n    CANNOT_UNSET_STATIC_PROPERTY = 'core.cannot_unset_static_property';\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {Class} classObject\n * @param {string} name\n * @param {string} visibility \"private\", \"protected\" or \"public\"\n * @param {Value} value\n * @constructor\n */\nfunction StaticPropertyReference(\n    valueFactory,\n    callStack,\n    classObject,\n    name,\n    visibility,\n    value\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * @type {Reference|null}\n     */\n    this.reference = null;\n    /**\n     * @type {Value}\n     */\n    this.value = value;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {string}\n     */\n    this.visibility = visibility;\n}\n\nutil.inherits(StaticPropertyReference, Reference);\n\n_.extend(StaticPropertyReference.prototype, {\n    getName: function () {\n        return this.name;\n    },\n\n    /**\n     * Fetches a reference to this property's value\n     *\n     * @returns {Reference}\n     */\n    getReference: function () {\n        var property = this;\n\n        if (property.reference) {\n            // This property already refers to something else, so return its target\n            return property.reference;\n        }\n\n        // Implicitly define a \"slot\" to contain this property's value\n        property.reference = new ReferenceSlot(property.valueFactory);\n\n        if (property.value) {\n            property.reference.setValue(property.value);\n            property.value = null; // This property now has a reference (to the slot) and not a value\n        }\n\n        return property.reference;\n    },\n\n    getValue: function () {\n        var property = this;\n\n        return property.value ? property.value : property.reference.getValue();\n    },\n\n    getVisibility: function () {\n        return this.visibility;\n    },\n\n    /**\n     * Determines whether this property is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return true;\n    },\n\n    /**\n     * Determines whether this class property is \"empty\" or not\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return this.getValue().isEmpty();\n    },\n\n    isReference: function () {\n        return !!this.reference;\n    },\n\n    /**\n     * Determines whether this class property is \"set\" (assigned a non-NULL value) or not\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        return this.getValue().isSet();\n    },\n\n    setReference: function (reference) {\n        var property = this;\n\n        property.reference = reference;\n        property.value = null;\n    },\n\n    setValue: function (value) {\n        var property = this;\n\n        if (property.reference) {\n            property.reference.setValue(value);\n        } else {\n            property.value = value.getForAssignment();\n        }\n    },\n\n    /**\n     * Static properties cannot be unset, so this always raises an error\n     *\n     * @throws {PHPFatalError}\n     */\n    unset: function () {\n        var property = this;\n\n        property.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_UNSET_STATIC_PROPERTY, {\n            className: property.classObject.getName(),\n            propertyName: property.name\n        });\n    }\n});\n\nmodule.exports = StaticPropertyReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    util = require('util'),\n    PHPError = phpCommon.PHPError,\n    Reference = require('./Reference'),\n\n    UNDECLARED_STATIC_PROPERTY = 'core.undeclared_static_property',\n\n    throwUndeclaredStaticPropertyAccessFatalError = function (reference) {\n        reference.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDECLARED_STATIC_PROPERTY, {\n            className: reference.classObject.name,\n            propertyName: reference.name\n        });\n    };\n\n/**\n * @param {ValueFactory} valueFactory\n * @param {CallStack} callStack\n * @param {Class} classObject\n * @param {string} name Name of the static property\n * @constructor\n */\nfunction UndeclaredStaticPropertyReference(valueFactory, callStack, classObject, name) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {Class}\n     */\n    this.classObject = classObject;\n    /**\n     * @type {string}\n     */\n    this.name = name;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\nutil.inherits(UndeclaredStaticPropertyReference, Reference);\n\n_.extend(UndeclaredStaticPropertyReference.prototype, {\n    /**\n     * Undeclared properties cannot be accessed, only checked for empty or set state\n     *\n     * @throws (PHPFatalError}\n     */\n    getReference: function () {\n        throwUndeclaredStaticPropertyAccessFatalError(this);\n    },\n\n    /**\n     * Undeclared properties cannot be accessed, only checked for empty or set state\n     *\n     * @throws (PHPFatalError}\n     */\n    getValue: function () {\n        throwUndeclaredStaticPropertyAccessFatalError(this);\n    },\n\n    /**\n     * Determines whether this reference is defined\n     *\n     * @returns {boolean}\n     */\n    isDefined: function () {\n        return false;\n    },\n\n    /**\n     * Undeclared properties are classed as empty\n     *\n     * @returns {boolean}\n     */\n    isEmpty: function () {\n        return true;\n    },\n\n    /**\n     * Undeclared properties are classed as unset\n     *\n     * @returns {boolean}\n     */\n    isSet: function () {\n        return false;\n    },\n\n    /**\n     * Undeclared properties cannot be accessed, only checked for empty or set state\n     *\n     * @throws (PHPFatalError}\n     */\n    setValue: function () {\n        throwUndeclaredStaticPropertyAccessFatalError(this);\n    }\n});\n\nmodule.exports = UndeclaredStaticPropertyReference;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {class} AccessorReference\n     * @param {class} NullReference\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function ReferenceFactory(\n        AccessorReference,\n        NullReference,\n        valueFactory\n    ) {\n        /**\n         * @type {class}\n         */\n        this.AccessorReference = AccessorReference;\n        /**\n         * @type {class}\n         */\n        this.NullReference = NullReference;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(ReferenceFactory.prototype, {\n        /**\n         * Creates an AccessorReference\n         *\n         * @param {function} valueGetter\n         * @param {function} valueSetter\n         * @returns {AccessorReference}\n         */\n        createAccessor: function (valueGetter, valueSetter) {\n            var factory = this;\n\n            return new factory.AccessorReference(factory.valueFactory, valueGetter, valueSetter);\n        },\n\n        /**\n         * Creates a NullReference\n         *\n         * @returns {NullReference}\n         */\n        createNull: function () {\n            var factory = this;\n\n            return new factory.NullReference(factory.valueFactory);\n        }\n    });\n\n    return ReferenceFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('./PHPState'),\n    require('./Stream')\n], function (\n    _,\n    PHPState,\n    Stream\n) {\n    var hasOwn = {}.hasOwnProperty;\n\n    /**\n     * PHPCore API encapsulator.\n     *\n     * @param {class} Environment\n     * @param {class} Engine\n     * @param {class} PHPState\n     * @param {object} phpCommon\n     * @param {GlobalStackHooker} globalStackHooker\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @constructor\n     */\n    function Runtime(\n        Environment,\n        Engine,\n        PHPState,\n        phpCommon,\n        globalStackHooker,\n        pausable,\n        mode\n    ) {\n        // Check the mode given is valid\n        if (mode !== 'async' && mode !== 'psync' && mode !== 'sync') {\n            throw new Error('Invalid mode \"' + mode + '\" given - must be one of \"async\", \"psync\" or \"sync\"');\n        }\n\n        // For async mode we require the Pausable library to be available\n        if (mode === 'async' && !pausable) {\n            throw new Error('Pausable library must be provided for async mode');\n        }\n\n        /**\n         * @type {{classes: {}, constantGroups: Array, functionGroups: Array}}\n         */\n        this.builtins = {\n            bindingGroups: [],\n            classGroups: [],\n            classes: {},\n            constantGroups: [],\n            defaultINIGroups: [],\n            functionGroups: [],\n            translationCatalogues: []\n        };\n        /**\n         * @type {class}\n         */\n        this.Engine = Engine;\n        /**\n         * @type {class}\n         */\n        this.Environment = Environment;\n        /**\n         * @type {GlobalStackHooker}\n         */\n        this.globalStackHooker = globalStackHooker;\n        /**\n         * @type {string} One of: \"async\", \"psync\" or \"sync\"\n         */\n        this.mode = mode;\n        /**\n         * @type {Function[]}\n         */\n        this.optionGroups = [];\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n        /**\n         * @type {Object}\n         */\n        this.phpCommon = phpCommon;\n        /**\n         * @type {class}\n         */\n        this.PHPState = PHPState;\n    }\n\n    _.extend(Runtime.prototype, {\n        /**\n         * Creates a factory function that can be called to create\n         * a new Engine instance using this runtime's context.\n         *\n         * @param {Function} wrapper\n         * @returns {Function}\n         */\n        compile: function (wrapper) {\n            var runtime = this,\n                mode = runtime.mode,\n                pausable = runtime.pausable,\n                phpCommon = runtime.phpCommon;\n\n            /**\n             * Extends an existing option set with a new set of options,\n             * with special handling for the \"path\" option as once that option\n             * has been set, its value cannot be overridden. This is because\n             * the include transport configured may set a path on the returned\n             * module factory (via .using(...)) but that would otherwise\n             * be overridden by the default path provided by Loader (where the\n             * default path is just a normalised version of the requested path,\n             * rather than a resolved real path)\n             *\n             * @param {Object|null} existingOptions\n             * @param {Object|null} newOptions\n             * @return {Object}\n             */\n            function extendOptions(existingOptions, newOptions) {\n                if (\n                    existingOptions &&\n                    newOptions &&\n                    hasOwn.call(existingOptions, 'path') &&\n                    hasOwn.call(newOptions, 'path')\n                ) {\n                    newOptions = _.extend({}, newOptions);\n                    delete newOptions.path;\n                }\n\n                return _.extend({}, existingOptions, newOptions);\n            }\n\n            /**\n             * Creates a new Engine instance using this runtime's context.\n             *\n             * @param {object} options\n             * @param {Environment|null} environment\n             * @param {Scope|null} topLevelScope\n             * @returns {Engine}\n             */\n            function factory(options, environment, topLevelScope) {\n                if (environment) {\n                    options = _.extend({}, environment.getOptions(), options);\n                } else {\n                    environment = runtime.createEnvironment(options);\n                    options = environment.getOptions();\n                }\n\n                return new runtime.Engine(\n                    environment,\n                    topLevelScope || null,\n                    phpCommon,\n                    options,\n                    wrapper,\n                    pausable,\n                    mode\n                );\n            }\n\n            /**\n             * Creates a function to be exposed as .using(...) on the module factory,\n             * allowing the new module factory returned when .using(...) is called\n             * to itself expose a .using(...) method recursively\n             *\n             * @param {Function} factory\n             * @return {Function}\n             */\n            function createSubFactory(factory) {\n                /**\n                 * Creates a new factory function with some optional default options,\n                 * environment and top-level Scope\n                 *\n                 * @param {object=} defaultOptions\n                 * @param {Environment=} defaultEnvironment\n                 * @param {Scope=} defaultTopLevelScope\n                 * @returns {Function}\n                 */\n                return function subFactory(defaultOptions, defaultEnvironment, defaultTopLevelScope) {\n                    /**\n                     * A proxying factory function that applies these defaults\n                     * and then forwards onto the original factory function\n                     *\n                     * @param {object=} options\n                     * @param {Environment=} environment\n                     * @param {Scope=} topLevelScope\n                     * @returns {Engine}\n                     */\n                    function proxy(options, environment, topLevelScope) {\n                        options = extendOptions(defaultOptions, options);\n                        environment = environment || defaultEnvironment;\n                        topLevelScope = topLevelScope || defaultTopLevelScope;\n\n                        return factory(options, environment, topLevelScope);\n                    }\n\n                    /**\n                     * Creates a new factory function with some optional default options,\n                     * environment and top-level Scope\n                     */\n                    proxy.using = createSubFactory(proxy);\n\n                    return proxy;\n                };\n            }\n\n            /**\n             * Creates a new factory function with some optional default options,\n             * environment and top-level Scope\n             */\n            factory.using = createSubFactory(factory);\n\n            return factory;\n        },\n\n        /**\n         * Sets one or more configuration options\n         *\n         * @param {object} options\n         */\n        configure: function (options) {\n            // Configuration options are likely to be used by other option groups/bindings etc.,\n            // so set those first\n            this.optionGroups.unshift(function () {\n                return options;\n            });\n        },\n\n        /**\n         * Creates a new Environment instance, useful for sharing a runtime\n         * context between modules.\n         * A factory function returned from `.compile(...)` may be called\n         * passing an Environment instance in order to reuse it, eg.\n         * to make classes, functions and global variables from one module\n         * available in another outside the use of includes.\n         *\n         * @param {object} options\n         * @param {Array=} addons\n         * @returns {Environment}\n         */\n        createEnvironment: function (options, addons) {\n            var runtime = this,\n                allBuiltins = _.extend({}, runtime.builtins),\n                allOptionGroups = runtime.optionGroups,\n                stdin = new Stream(),\n                stdout = new Stream(),\n                stderr = new Stream(),\n                state;\n\n            _.each(addons, function (addon) {\n                if (typeof addon === 'function') {\n                    // Allow an addon to be defined as a function, to allow testing\n                    addon = addon();\n                }\n\n                allBuiltins.translationCatalogues = allBuiltins.translationCatalogues.concat(addon.translationCatalogues || []);\n                allBuiltins.functionGroups = allBuiltins.functionGroups.concat(addon.functionGroups || []);\n                allBuiltins.classGroups = allBuiltins.classGroups.concat(addon.classGroups || []);\n                allBuiltins.classes = _.extend({}, allBuiltins.classes, addon.classes);\n                allBuiltins.constantGroups = allBuiltins.constantGroups.concat(addon.constantGroups || []);\n                allBuiltins.defaultINIGroups = allBuiltins.defaultINIGroups.concat(addon.defaultINIGroups || []);\n                allOptionGroups = allOptionGroups.concat(addon.optionGroups || []);\n                allBuiltins.bindingGroups = allBuiltins.bindingGroups.concat(addon.bindingGroups || []);\n            });\n\n            state = new runtime.PHPState(\n                runtime,\n                runtime.globalStackHooker,\n                allBuiltins,\n                stdin,\n                stdout,\n                stderr,\n                runtime.pausable,\n                runtime.mode,\n                allOptionGroups,\n                options\n            );\n\n            return new runtime.Environment(state);\n        },\n\n        /**\n         * Installs a new set of builtins, to be available to all modules\n         * compiled and executed by this runtime.\n         * All fields are optional - for example, this method can be used\n         * to only define a new class without also defining any constants or functions.\n         *\n         * @param {Function|{classes: {}, constantGroups: Array, functionGroups: Array}} newBuiltins\n         */\n        install: function (newBuiltins) {\n            var builtins = this.builtins;\n\n            if (typeof newBuiltins === 'function') {\n                // Allow an addon to be defined as a function, to allow testing\n                newBuiltins = newBuiltins();\n            }\n\n            [].push.apply(builtins.translationCatalogues, newBuiltins.translationCatalogues);\n            [].push.apply(builtins.functionGroups, newBuiltins.functionGroups);\n            [].push.apply(builtins.classGroups, newBuiltins.classGroups);\n            _.extend(builtins.classes, newBuiltins.classes);\n            [].push.apply(builtins.constantGroups, newBuiltins.constantGroups);\n            [].push.apply(builtins.defaultINIGroups, newBuiltins.defaultINIGroups);\n            [].push.apply(this.optionGroups, newBuiltins.optionGroups);\n            [].push.apply(builtins.bindingGroups, newBuiltins.bindingGroups);\n        }\n    });\n\n    return Runtime;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    /**\n     * Fetches either the sync-mode class (for sync & psync modes) or async-mode class\n     *\n     * @param {Wrapper} wrapper\n     * @param {Resumable=} pausable\n     * @returns {Function}\n     */\n    unwrap = function (wrapper, pausable) {\n        return pausable ? wrapper.async(pausable) : wrapper.sync();\n    };\n\n/**\n * Instantiates the shared Runtime\n *\n * @param {class} Environment\n * @param {class} Engine\n * @param {Wrapper} PHPStateWrapper\n * @param {Wrapper} RuntimeWrapper\n * @param {PHPCommon} phpCommon\n * @param {GlobalStackHooker} globalStackHooker\n * @constructor\n */\nfunction RuntimeFactory(\n    Environment,\n    Engine,\n    PHPStateWrapper,\n    RuntimeWrapper,\n    phpCommon,\n    globalStackHooker\n) {\n    /**\n     * @type {class}\n     */\n    this.Engine = Engine;\n    /**\n     * @type {class}\n     */\n    this.Environment = Environment;\n    /**\n     * @type {GlobalStackHooker}\n     */\n    this.globalStackHooker = globalStackHooker;\n    /**\n     * @type {PHPCommon}\n     */\n    this.phpCommon = phpCommon;\n    /**\n     * @type {Wrapper}\n     */\n    this.PHPStateWrapper = PHPStateWrapper;\n    /**\n     * @type {Wrapper}\n     */\n    this.RuntimeWrapper = RuntimeWrapper;\n}\n\n_.extend(RuntimeFactory.prototype, {\n    /**\n     * Creates a new Runtime instance\n     *\n     * @param {string} mode\n     * @param {Resumable=} pausable\n     * @returns {Runtime}\n     */\n    create: function (mode, pausable) {\n        var factory = this,\n            PHPState = unwrap(factory.PHPStateWrapper, pausable),\n            Runtime = unwrap(factory.RuntimeWrapper, pausable);\n\n        return new Runtime(\n            factory.Environment,\n            factory.Engine,\n            PHPState,\n            factory.phpCommon,\n            factory.globalStackHooker,\n            pausable || null,\n            mode\n        );\n    }\n});\n\nmodule.exports = RuntimeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon')\n], function (\n    _,\n    phpCommon\n) {\n    var hasOwn = {}.hasOwnProperty,\n        IS_STATIC = 'isStatic',\n        PHPError = phpCommon.PHPError,\n\n        CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS = 'core.cannot_access_when_no_active_class',\n        NO_PARENT_CLASS = 'core.no_parent_class',\n        SCOPED_ERROR = 'core.scoped_error';\n\n    /**\n     * @param {CallStack} callStack\n     * @param {Translator} translator\n     * @param {Scope} globalScope\n     * @param {SuperGlobalScope} superGlobalScope\n     * @param {ClosureFactory} closureFactory\n     * @param {FunctionSpecFactory} functionSpecFactory\n     * @param {ValueFactory} valueFactory\n     * @param {VariableFactory} variableFactory\n     * @param {ReferenceFactory} referenceFactory\n     * @param {Class|null} currentClass\n     * @param {Function|null} currentFunction\n     * @param {ObjectValue|null} thisObject\n     * @constructor\n     */\n    function Scope(\n        callStack,\n        translator,\n        globalScope,\n        superGlobalScope,\n        closureFactory,\n        functionSpecFactory,\n        valueFactory,\n        variableFactory,\n        referenceFactory,\n        currentClass,\n        currentFunction,\n        thisObject\n    ) {\n        var thisObjectVariable = variableFactory.createVariable('this');\n\n        this.callStack = callStack;\n        this.closureFactory = closureFactory;\n        /**\n         * @type {Class|null}\n         */\n        this.currentClass = currentClass;\n        this.currentFunction = currentFunction;\n        this.errorsSuppressed = false;\n        this.functionSpecFactory = functionSpecFactory;\n        this.globalScope = globalScope || this;\n        this.referenceFactory = referenceFactory;\n        this.superGlobalScope = superGlobalScope;\n        this.thisObject = currentFunction && currentFunction[IS_STATIC] ? null : thisObject;\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n        this.valueFactory = valueFactory;\n        this.variableFactory = variableFactory;\n        this.variables = {\n            'this': thisObjectVariable\n        };\n\n        if (thisObject && (!currentFunction || !currentFunction[IS_STATIC])) {\n            thisObjectVariable.setValue(thisObject);\n        }\n    }\n\n    _.extend(Scope.prototype, {\n        /**\n         * Creates a closure, either static (with no `$this` object bound) or non-static\n         *\n         * @param {NamespaceScope} namespaceScope\n         * @param {Function} func\n         * @param {Array=} parametersSpecData\n         * @param {boolean=} isStatic\n         * @param {number|null=} lineNumber\n         * @returns {Closure}\n         */\n        createClosure: function (namespaceScope, func, parametersSpecData, isStatic, lineNumber) {\n            var functionSpec,\n                scope = this,\n                thisObject = null;\n\n            // Fetch the `$this` object to bind to the closure from the current scope,\n            // if the closure is a normal (non-static) one. Otherwise, if the closure is static\n            // then it will have no `$this` object bound to it\n            if (!isStatic) {\n                thisObject = scope.thisObject;\n            }\n\n            functionSpec = scope.functionSpecFactory.createClosureSpec(\n                namespaceScope,\n                scope.currentClass,\n                parametersSpecData || [],\n                namespaceScope.getFilePath(),\n                lineNumber\n            );\n\n            return scope.closureFactory.create(\n                scope,\n                func,\n                namespaceScope,\n                scope.currentClass,\n                thisObject,\n                functionSpec\n            );\n        },\n\n        /**\n         * Defines a variable with the given name in this scope. If it is already defined,\n         * in this scope (not including the superglobal scope) then an error will be thrown\n         *\n         * @param {string} name\n         * @returns {Variable}\n         * @throws {Error} Throws when the variable is already defined in this scope\n         */\n        defineVariable: function (name) {\n            var scope = this,\n                variable;\n\n            if (hasOwn.call(scope.variables, name)) {\n                // Variable is already defined, just return\n                throw new Error('Variable \"' + name + '\" is already defined in this scope');\n            }\n\n            variable = scope.variableFactory.createVariable(name);\n\n            scope.variables[name] = variable;\n\n            return variable;\n        },\n\n        /**\n         * Defines one or more variables with the given names in this scope\n         *\n         * @param {string[]} names\n         */\n        defineVariables: function (names) {\n            var scope = this;\n\n            _.each(names, function (name) {\n                scope.defineVariable(name);\n            });\n        },\n\n        /**\n         * Returns a hash with the values of all variables defined\n         * for this scope, including all superglobals\n         *\n         * @returns {Object.<string, Value>}\n         */\n        exportVariables: function () {\n            var scope = this,\n                values = scope.superGlobalScope.exportVariables();\n\n            _.forOwn(scope.variables, function (variable, variableName) {\n                if (variable.isDefined()) {\n                    values[variableName] = variable.getValue();\n                }\n            });\n\n            return values;\n        },\n\n        /**\n         * Defines a variable in the current scope with the given native value\n         *\n         * @param {Value|*} value\n         * @param {string} name\n         */\n        expose: function (value, name) {\n            var scope = this,\n                valueFactory = scope.valueFactory;\n\n            scope.defineVariable(name).setValue(valueFactory.coerce(value));\n        },\n\n        /**\n         * Fetches the name of the current class, or an empty string if there is none\n         *\n         * @returns {StringValue}\n         */\n        getClassName: function () {\n            var scope = this;\n\n            return scope.valueFactory.createString(\n                scope.currentClass ? scope.currentClass.getName() : ''\n            );\n        },\n\n        /**\n         * Fetches the name of the class in which this scope's function is defined\n         *\n         * @returns {StringValue}\n         * @throws {PHPFatalError} When there is no current class scope\n         */\n        getClassNameOrThrow: function () {\n            var scope = this;\n\n            if (!scope.currentClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access self:: when no class scope is active\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS, {\n                    className: 'self'\n                });\n            }\n\n            return scope.valueFactory.createString(scope.currentClass.getName());\n        },\n\n        /**\n         * Fetches the current class, if any\n         *\n         * @returns {Class|null}\n         */\n        getCurrentClass: function () {\n            return this.currentClass;\n        },\n\n        /**\n         * Fetches the current file path, taking eval into account\n         *\n         * @param {string|null} filePath\n         * @returns {string|null}\n         */\n        getFilePath: function (filePath) {\n            return filePath; // Passes through unaltered: see LoadScope for where a change is made\n        },\n\n        /**\n         * Fetches the current function name (used by eg. the magic __FUNCTION__ constant)\n         *\n         * @returns {StringValue}\n         */\n        getFunctionName: function () {\n            var scope = this,\n                functionName = '';\n\n            if (scope.currentFunction) {\n                // NB: Method functions have no special treatment here -\n                //     the owning namespace and/or class will be omitted\n                functionName = scope.currentFunction.functionSpec.getUnprefixedFunctionName();\n            }\n\n            return scope.valueFactory.createString(functionName);\n        },\n\n        /**\n         * Fetches the current method name (used by eg. the magic __METHOD__ constant)\n         *\n         * Note that this differs from .getFunctionName() when the current function is a method\n         *\n         * @param {boolean=} isStaticCall\n         * @returns {StringValue}\n         */\n        getMethodName: function (isStaticCall) {\n            var scope = this,\n                functionName = '';\n\n            if (scope.currentFunction) {\n                // NB: Methods are prefixed with namespace, class and `::`\n                functionName = scope.currentFunction.functionSpec.getFunctionName(isStaticCall !== false);\n            }\n\n            return scope.valueFactory.createString(functionName);\n        },\n\n        /**\n         * Fetches the name of the parent of the current class in scope\n         *\n         * @returns {StringValue}\n         * @throws {PHPFatalError} When there is no current class scope or current class has no parent\n         */\n        getParentClassNameOrThrow: function () {\n            var scope = this,\n                superClass;\n\n            if (!scope.currentClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access parent:: when no class scope is active\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS, {\n                    className: 'parent'\n                });\n            }\n\n            superClass = scope.currentClass.getSuperClass();\n\n            if (!superClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access parent:: when current class scope has no parent\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, NO_PARENT_CLASS);\n            }\n\n            return scope.valueFactory.createString(superClass.getName());\n        },\n\n        /**\n         * Fetches the name of the current static class scope, which may be different\n         * from the class in which its function is defined (eg. after a forward_static_call(...))\n         *\n         * @returns {StringValue}\n         * @throws {PHPFatalError} When there is no static class scope\n         */\n        getStaticClassNameOrThrow: function () {\n            var scope = this,\n                staticClass = scope.callStack.getStaticClass();\n\n            if (!staticClass) {\n                // PHP Fatal error: Uncaught Error: Cannot access static:: when no class scope is active\n                scope.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_WHEN_NO_ACTIVE_CLASS, {\n                    className: 'static'\n                });\n            }\n\n            return scope.valueFactory.createString(staticClass.getName());\n        },\n\n        /**\n         * Fetches the current object (the value of $this) if any\n         *\n         * @returns {ObjectValue|null}\n         */\n        getThisObject: function () {\n            return this.thisObject;\n        },\n\n        /**\n         * Fetches the current function or method name as used in stack traces\n         *\n         * Note that this differs from .getFunctionName() and .getMethodName()\n         *\n         * @returns {string}\n         */\n        getTraceFrameName: function () {\n            var scope = this,\n                functionName = '';\n\n            if (scope.currentFunction) {\n                // NB: Methods are prefixed with namespace, class and `::`\n                functionName = scope.currentFunction.functionSpec.getFunctionTraceFrameName(scope.isStatic());\n            }\n\n            return functionName;\n        },\n\n        /**\n         * Fetches a variable for the current or super global scope,\n         * implicitly defining it if needed\n         *\n         * @param {string} name\n         * @returns {Variable}\n         */\n        getVariable: function (name) {\n            var scope = this,\n                variable;\n\n            // Look in the current scope for the variable first\n            if (hasOwn.call(scope.variables, name)) {\n                return scope.variables[name];\n            }\n\n            // If not found, look in the super global scope\n            variable = scope.superGlobalScope.getVariable(name);\n\n            if (!variable) {\n                // Variable is not local or a super-global: implicitly define it\n                variable = scope.variableFactory.createVariable(name);\n                scope.variables[name] = variable;\n\n                if (scope.errorsSuppressed) {\n                    variable.setValue(scope.valueFactory.createNull());\n                }\n            }\n\n            return variable;\n        },\n\n        /**\n         * Determines whether this scope defines the specified variable or not\n         * (not including the superglobal scope)\n         *\n         * @param {string} name\n         * @returns {boolean}\n         */\n        hasVariable: function (name) {\n            return hasOwn.call(this.variables, name);\n        },\n\n        /**\n         * Imports a global variable into this scope by defining the variable\n         * in this scope and setting its reference to point to the global one.\n         *\n         * @param {string} variableName\n         */\n        importGlobal: function (variableName) {\n            var scope = this;\n\n            if (scope.globalScope === scope) {\n                // Nothing to do; we're trying to import a global into the global scope\n                return;\n            }\n\n            scope.getVariable(variableName).setReference(\n                scope.globalScope.getVariable(variableName).getReference()\n            );\n        },\n\n        /**\n         * Imports a static variable into this scope by defining the variable\n         * in this scope and setting its reference to point to the \"static\" one,\n         * stored against the current function/method. The first time the variable\n         * is declared, it will be assigned the initial value (if any).\n         *\n         * @param {string} variableName\n         * @param {Value|null} initialValue\n         */\n        importStatic: function (variableName, initialValue) {\n            var scope = this,\n                staticVariables,\n                staticVariable;\n\n            if (scope.currentFunction) {\n                if (scope.currentFunction.staticVariables) {\n                    staticVariables = scope.currentFunction.staticVariables;\n                } else {\n                    staticVariables = {};\n                    scope.currentFunction.staticVariables = staticVariables;\n                }\n\n                if (!hasOwn.call(staticVariables, variableName)) {\n                    staticVariables[variableName] = scope.variableFactory.createVariable(variableName);\n\n                    if (initialValue) {\n                        // Initialiser is optional\n                        staticVariables[variableName].setValue(initialValue);\n                    }\n                }\n\n                staticVariable = staticVariables[variableName];\n\n                // Define a variable in the current scope that is a reference\n                // to the static variable stored against either the current function or the global scope if none\n                scope.getVariable(variableName).setReference(staticVariable.getReference());\n            } else {\n                scope.getVariable(variableName).setValue(initialValue);\n            }\n        },\n\n        /**\n         * Whether this call scope is in a static context or not\n         *\n         * @returns {boolean}\n         */\n        isStatic: function () {\n            return !this.thisObject;\n        },\n\n        /**\n         * Raises a catchable Error or a notice/warning with the specified level, message translation key and variables,\n         * scoped to the current function scope\n         *\n         * @param {string} level One of the PHPError.E_* constants, eg. `PHPError.E_WARNING`\n         * @param {string} translationKey\n         * @param {Object.<string, string>=} placeholderVariables\n         * @param {string=} errorClass\n         * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n         * @param {string=} filePath\n         * @param {number=} lineNumber\n         * @throws {ObjectValue} Throws an ObjectValue-wrapped Throwable if not a notice or warning\n         */\n        raiseScopedTranslatedError: function (\n            level,\n            translationKey,\n            placeholderVariables,\n            errorClass,\n            reportsOwnContext,\n            filePath,\n            lineNumber\n        ) {\n            var scope = this,\n                message = scope.translator.translate(SCOPED_ERROR, {\n                    function: scope.getFunctionName().getNative(),\n                    message: scope.translator.translate(translationKey, placeholderVariables)\n                });\n\n            if (level === PHPError.E_ERROR) {\n                // Non-warning/non-notice errors need to actually stop execution\n                // NB: The Error class' constructor will fetch file and line number info\n                throw scope.valueFactory.createErrorObject(\n                    errorClass || 'Error',\n                    message,\n                    null,\n                    null,\n                    filePath,\n                    lineNumber,\n                    reportsOwnContext\n                );\n            }\n\n            scope.callStack.raiseError(level, message, errorClass, reportsOwnContext);\n        },\n\n        /**\n         * Suppresses errors for this and any descendant scopes\n         */\n        suppressErrors: function () {\n            this.errorsSuppressed = true;\n        },\n\n        /**\n         * Suppresses errors for only this and not any descendant scopes\n         */\n        suppressOwnErrors: function () {\n            this.ownErrorsSuppressed = true;\n        },\n\n        /**\n         * Determines whether errors have been suppressed for this and any descendant scopes\n         *\n         * @returns {boolean}\n         */\n        suppressesErrors: function () {\n            return this.errorsSuppressed;\n        },\n\n        /**\n         * Determines whether errors have been suppressed for this but not any descendant scopes\n         *\n         * @returns {boolean}\n         */\n        suppressesOwnErrors: function () {\n            return this.ownErrorsSuppressed;\n        },\n\n        /**\n         * Unsuppresses errors for this and any descendant scopes\n         */\n        unsuppressErrors: function () {\n            this.errorsSuppressed = false;\n        },\n\n        /**\n         * Unsuppresses errors for this but not any descendant scopes\n         */\n        unsuppressOwnErrors: function () {\n            this.ownErrorsSuppressed = false;\n        }\n    });\n\n    return Scope;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} LoadScope\n * @param {class} Scope\n * @param {class} NamespaceScope\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @param {SuperGlobalScope} superGlobalScope\n * @param {FunctionSpecFactory} functionSpecFactory\n * @param {ValueFactory} valueFactory\n * @param {VariableFactory} variableFactory\n * @param {ReferenceFactory} referenceFactory\n * @constructor\n */\nfunction ScopeFactory(\n    LoadScope,\n    Scope,\n    NamespaceScope,\n    callStack,\n    translator,\n    superGlobalScope,\n    functionSpecFactory,\n    valueFactory,\n    variableFactory,\n    referenceFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {ClosureFactory}\n     */\n    this.closureFactory = null;\n    /**\n     * @type {class}\n     */\n    this.LoadScope = LoadScope;\n    /**\n     * @type {FunctionSpecFactory}\n     */\n    this.functionSpecFactory = functionSpecFactory;\n    /**\n     * @type {Scope}\n     */\n    this.globalScope = null;\n    /**\n     * @type {class}\n     */\n    this.NamespaceScope = NamespaceScope;\n    /**\n     * @type {ReferenceFactory}\n     */\n    this.referenceFactory = referenceFactory;\n    /**\n     * @type {class}\n     */\n    this.Scope = Scope;\n    /**\n     * @type {SuperGlobalScope}\n     */\n    this.superGlobalScope = superGlobalScope;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n    /**\n     * @type {VariableFactory}\n     */\n    this.variableFactory = variableFactory;\n}\n\n_.extend(ScopeFactory.prototype, {\n    /**\n     * Creates a new Scope\n     *\n     * @param {Class|null=} currentClass\n     * @param {Function|null=} currentFunction\n     * @param {ObjectValue|null=} thisObject\n     * @returns {Scope}\n     */\n    create: function (currentClass, currentFunction, thisObject) {\n        var factory = this;\n\n        return new factory.Scope(\n            factory.callStack,\n            factory.translator,\n            factory.globalScope,\n            factory.superGlobalScope,\n            factory.closureFactory,\n            factory.functionSpecFactory,\n            factory.valueFactory,\n            factory.variableFactory,\n            factory.referenceFactory,\n            currentClass || null,\n            currentFunction || null,\n            thisObject || null\n        );\n    },\n\n    /**\n     * Creates a new LoadScope\n     *\n     * @param {Scope} effectiveScope\n     * @param {string} callerFilePath\n     * @param {string} type The type of load, eg. `eval` or `include`\n     * @returns {LoadScope}\n     */\n    createLoadScope: function (effectiveScope, callerFilePath, type) {\n        var factory = this;\n\n        return new factory.LoadScope(factory.valueFactory, effectiveScope, callerFilePath, type);\n    },\n\n    /**\n     * Creates a new NamespaceScope\n     *\n     * @param {Namespace} namespace\n     * @param {Namespace} globalNamespace\n     * @param {Module} module\n     * @returns {NamespaceScope}\n     */\n    createNamespaceScope: function (namespace, globalNamespace, module) {\n        var factory = this;\n\n        return new factory.NamespaceScope(globalNamespace, factory.valueFactory, factory.callStack, module, namespace);\n    },\n\n    /**\n     * Sets the ClosureFactory service to pass to Scopes created by this factory\n     *\n     * @param {ClosureFactory} closureFactory\n     */\n    setClosureFactory: function (closureFactory) {\n        this.closureFactory = closureFactory;\n    },\n\n    /**\n     * Sets the global Scope to pass to Scopes created by this factory\n     *\n     * @param {Scope} globalScope\n     */\n    setGlobalScope: function (globalScope) {\n        this.globalScope = globalScope;\n    }\n});\n\nmodule.exports = ScopeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    EventEmitter = require('events').EventEmitter;\n\nfunction Stream() {\n    EventEmitter.call(this);\n\n    this.data = '';\n}\n\nutil.inherits(Stream, EventEmitter);\n\n_.extend(Stream.prototype, {\n    read: function (length) {\n        var data,\n            stream = this;\n\n        if (!length && length !== 0) {\n            data = stream.data;\n            stream.data = '';\n        } else {\n            data = stream.data.substr(0, length);\n            stream.data = stream.data.substr(length);\n        }\n\n        return data;\n    },\n\n    readAll: function () {\n        var stream = this;\n\n        return stream.read(stream.data.length);\n    },\n\n    write: function (data) {\n        var stream = this;\n\n        stream.data += data;\n        stream.emit('data', data);\n    }\n});\n\nmodule.exports = Stream;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('./Variable')\n], function (\n    _,\n    Variable\n) {\n    var hasOwn = {}.hasOwnProperty;\n\n    /**\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function SuperGlobalScope(callStack, valueFactory) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n        /**\n         * @type {Object.<string, Variable>}\n         */\n        this.variables = {};\n    }\n\n    _.extend(SuperGlobalScope.prototype, {\n        /**\n         * Defines a new variable in the super global scope and returns it\n         *\n         * @param {string} name\n         * @returns {Variable}\n         */\n        defineVariable: function (name) {\n            var scope = this,\n                variable = new Variable(scope.callStack, scope.valueFactory, name);\n\n            scope.variables[name] = variable;\n\n            return variable;\n        },\n\n        /**\n         * Returns a hash with the values of all variables defined\n         * for the super global scope. The $GLOBALS superglobal is excluded\n         *\n         * @returns {Object.<string, Value>}\n         */\n        exportVariables: function () {\n            var values = {};\n\n            _.forOwn(this.variables, function (variable, variableName) {\n                // Avoid infinite recursion by not attempting to export GLOBALS itself\n                if (variableName === 'GLOBALS') {\n                    return;\n                }\n\n                values[variableName] = variable.getValue();\n            });\n\n            return values;\n        },\n\n        /**\n         * Fetches an existing variable from the super global scope\n         *\n         * @param {string} name\n         * @returns {Variable|null}\n         */\n        getVariable: function (name) {\n            var scope = this;\n\n            return hasOwn.call(scope.variables, name) ? scope.variables[name] : null;\n        }\n    });\n\n    return SuperGlobalScope;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Debug/DebugVariable'),\n    require('./KeyReferencePair'),\n    require('./KeyValuePair'),\n    require('./List')\n], function (\n    _,\n    phpCommon,\n    DebugVariable,\n    KeyReferencePair,\n    KeyValuePair,\n    List\n) {\n    var Exception = phpCommon.Exception,\n\n        EVAL_PATH = 'core.eval_path',\n        NO_PARENT_CLASS = 'core.no_parent_class',\n        UNKNOWN = 'core.unknown',\n\n        EVAL_OPTION = 'eval',\n        TICK_OPTION = 'tick',\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * @param {CallStack} callStack\n     * @param {Environment} environment\n     * @param {Translator} translator\n     * @param {Namespace} globalNamespace\n     * @param {Loader} loader\n     * @param {Includer} includer\n     * @param {OnceIncluder} onceIncluder\n     * @param {Module} module\n     * @param {Object} options\n     * @param {ReferenceFactory} referenceFactory\n     * @param {ScopeFactory} scopeFactory\n     * @param {NamespaceScope} topLevelNamespaceScope\n     * @param {Scope} topLevelScope\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function Tools(\n        callStack,\n        environment,\n        translator,\n        globalNamespace,\n        loader,\n        includer,\n        onceIncluder,\n        module,\n        options,\n        referenceFactory,\n        scopeFactory,\n        topLevelNamespaceScope,\n        topLevelScope,\n        valueFactory\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Environment}\n         */\n        this.environment = environment;\n        /**\n         * @type {Namespace}\n         */\n        this.globalNamespace = globalNamespace;\n        /**\n         * @type {Includer}\n         */\n        this.includer = includer;\n        /**\n         * @type {Loader}\n         */\n        this.loader = loader;\n        /**\n         * @type {Module}\n         */\n        this.module = module;\n        /**\n         * @type {OnceIncluder}\n         */\n        this.onceIncluder = onceIncluder;\n        /**\n         * @type {Object}\n         */\n        this.options = options;\n        /**\n         * @type {ReferenceFactory}\n         * @public Referenced from transpiled code\n         */\n        this.referenceFactory = referenceFactory;\n        /**\n         * @type {ScopeFactory}\n         */\n        this.scopeFactory = scopeFactory;\n        /**\n         * @type {NamespaceScope}\n         * @public Referenced from transpiled code\n         */\n        this.topLevelNamespaceScope = topLevelNamespaceScope;\n        /**\n         * @type {Scope}\n         * @public Referenced from transpiled code\n         */\n        this.topLevelScope = topLevelScope;\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n        /**\n         * @type {ValueFactory}\n         * @public Referenced from transpiled code\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Tools.prototype, {\n        /**\n         * Creates an ObjectValue that wraps an instance of the builtin PHP Closure class\n         * whose behaviour is defined by the provided function\n         *\n         * @param {Function} func\n         * @param {Scope} scope\n         * @param {NamespaceScope} namespaceScope\n         * @param {Array=} parametersSpecData\n         * @param {boolean=} isStatic\n         * @param {number=} lineNumber\n         * @returns {ObjectValue}\n         */\n        createClosure: function (func, scope, namespaceScope, parametersSpecData, isStatic, lineNumber) {\n            var tools = this;\n\n            return tools.valueFactory.createClosureObject(\n                scope.createClosure(\n                    namespaceScope,\n                    func,\n                    parametersSpecData || [],\n                    !!isStatic,\n                    lineNumber || null\n                )\n            );\n        },\n\n        /**\n         * Creates a DebugVariable, for showing the value of a variable in the scope\n         * inside Google Chrome's developer tools\n         *\n         * @param {Scope} scope\n         * @param {string} variableName\n         * @returns {DebugVariable}\n         */\n        createDebugVar: function (scope, variableName) {\n            return new DebugVariable(scope, variableName);\n        },\n\n        /**\n         * Used by transpiled PHP `new MyClass(<args>)` expressions\n         *\n         * @param {NamespaceScope} namespaceScope\n         * @param {Value} classNameValue\n         * @param {Value[]} args Arguments to pass to the constructor\n         * @returns {ObjectValue}\n         */\n        createInstance: function (namespaceScope, classNameValue, args) {\n            return classNameValue.instantiate(args, namespaceScope);\n        },\n\n        /**\n         * Creates a new KeyReferencePair\n         *\n         * @param {Value} key\n         * @param {Reference|Variable} reference\n         * @returns {KeyReferencePair}\n         */\n        createKeyReferencePair: function (key, reference) {\n            return new KeyReferencePair(key, reference);\n        },\n\n        /**\n         * Creates a new KeyValuePair\n         *\n         * @param {Value} key\n         * @param {Value} value\n         * @returns {KeyValuePair}\n         */\n        createKeyValuePair: function (key, value) {\n            return new KeyValuePair(key, value);\n        },\n\n        /**\n         * Creates a new List, which is a list of references that may be assigned to\n         * by assigning them an array, where each list element gets the corresponding array element\n         *\n         * @param {Reference[]} elements\n         * @returns {List}\n         */\n        createList: function (elements) {\n            return new List(this.valueFactory, elements);\n        },\n\n        /**\n         * Creates a new NamespaceScope\n         *\n         * @param {Namespace} namespace\n         * @returns {NamespaceScope}\n         */\n        createNamespaceScope: function (namespace) {\n            var tools = this;\n\n            return tools.scopeFactory.createNamespaceScope(namespace, tools.globalNamespace, tools.module);\n        },\n\n        /**\n         * Evaluates the given PHP code using the configured `eval` option\n         *\n         * @param {string} code\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         */\n        eval: function (code, enclosingScope) {\n            var evalScope,\n                lineNumber,\n                path,\n                tools = this;\n\n            if (!tools.options[EVAL_OPTION]) {\n                throw new Exception(\n                    'eval(...) :: No \"eval\" interpreter option is available.'\n                );\n            }\n\n            path = tools.topLevelNamespaceScope.getFilePath();\n            evalScope = tools.scopeFactory.createLoadScope(enclosingScope, path, 'eval');\n            lineNumber = tools.callStack.getLastLine();\n\n            if (lineNumber === null) {\n                lineNumber = tools.translator.translate(UNKNOWN);\n            }\n\n            return tools.loader.load(\n                'eval',\n                // Use the path to the script that called eval() along with this suffix\n                // as the path to the current file inside the eval\n                tools.translator.translate(EVAL_PATH, {path: path, lineNumber: lineNumber}),\n                tools.options,\n                tools.environment,\n                tools.module,\n                evalScope,\n                function (path, promise, parentPath, valueFactory) {\n                    return tools.options[EVAL_OPTION]('<?php ' + code, path, promise, parentPath, valueFactory);\n                }\n            );\n        },\n\n        /**\n         * Immediately exits the currently executing PHP script. This is achieved\n         * by throwing a JS error that cannot be caught by any PHP-land try..catch statement.\n         * If the program was run from a command-line, any exit status provided will be used\n         * as the exit code for the process.\n         *\n         * @param {Value|null} statusValue\n         * @throws {ExitValue}\n         */\n        exit: function (statusValue) {\n            throw this.valueFactory.createExit(statusValue);\n        },\n\n        /**\n         * Fetches the name of the specified class, wrapped as a StringValue\n         *\n         * @param {Class} classObject\n         * @returns {StringValue}\n         */\n        getClassName: function (classObject) {\n            return this.valueFactory.createString(classObject.getName());\n        },\n\n        /**\n         * Fetches a human-readable string representing the path to the current script file\n         *\n         * @returns {string}\n         */\n        getNormalizedPath: function () {\n            var tools = this,\n                path = tools.topLevelNamespaceScope.getFilePath();\n\n            return path !== null ? path : '(program)';\n        },\n\n        /**\n         * Fetches the name of the parent of the specified class, wrapped as a StringValue\n         *\n         * @param {Class} classObject\n         * @returns {StringValue}\n         */\n        getParentClassName: function (classObject) {\n            var superClass = classObject.getSuperClass(),\n                tools = this;\n\n            if (!superClass) {\n                // Fatal error: Uncaught Error: Cannot access parent:: when current class scope has no parent\n                tools.callStack.raiseTranslatedError(PHPError.E_ERROR, NO_PARENT_CLASS);\n            }\n\n            return tools.valueFactory.createString(superClass.getName());\n        },\n\n        /**\n         * Fetches the path to the current script, wrapped as a StringValue\n         *\n         * @returns {StringValue}\n         */\n        getPath: function () {\n            var tools = this;\n\n            return tools.valueFactory.createString(tools.getNormalizedPath());\n        },\n\n        /**\n         * Fetches the path to the directory containing the current script, wrapped as a StringValue\n         *\n         * @returns {StringValue}\n         */\n        getPathDirectory: function () {\n            var tools = this,\n                path = tools.topLevelNamespaceScope.getFilePath(),\n                directory = (path || '').replace(/(^|\\/)[^\\/]+$/, '');\n\n            return tools.valueFactory.createString(directory || '');\n        },\n\n        /**\n         * Assigns the provided variable a new array value if it is not currently defined\n         * or defined with a value of NULL, then returns its current value\n         *\n         * @param {Reference|Variable} variable\n         * @returns {Value}\n         */\n        implyArray: function (variable) {\n            // Undefined variables and variables containing null may be implicitly converted to arrays\n            if (!variable.isDefined() || variable.getValue().getType() === 'null') {\n                variable.setValue(this.valueFactory.createArray([]));\n            }\n\n            return variable.getValue();\n        },\n\n        /**\n         * Assigns the provided variable a new stdClass instance value if it is not currently defined\n         * or defined with a value of NULL, then returns its current value\n         *\n         * @param {Reference|Variable} variable\n         * @returns {Reference|Variable}\n         */\n        implyObject: function (variable) {\n            // FIXME: If the given variable/reference does not have an object as its value:\n            //  `PHP Warning: Creating default object from empty value`\n            return variable.getValue();\n        },\n\n        /**\n         * Includes the specified module if it has not been included yet.\n         * If it has not already been included, the module's return value is returned,\n         * otherwise boolean true will be returned.\n         * Throws if no include transport has been configured.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        includeOnce: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.onceIncluder.includeOnce(\n                'include_once',\n                PHPError.E_WARNING, // For includes, only a warning is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Includes the specified module, returning its return value.\n         * Throws if no include transport has been configured.\n         * Raises a warning and returns false if the module cannot be found.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        include: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.includer.include(\n                'include',\n                PHPError.E_WARNING, // For includes, only a warning is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Used for providing a function for fetching the last line executed in the current scope\n         *\n         * @param {function} finder\n         */\n        instrument: function (finder) {\n            this.callStack.instrumentCurrent(finder);\n        },\n\n        /**\n         * Includes the specified module if it has not been included yet.\n         * If it has not already been included, the module's return value is returned,\n         * otherwise boolean true will be returned.\n         * Throws if no include transport has been configured.\n         * Raises a fatal error if the module cannot be found.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         * @returns {Value}\n         */\n        requireOnce: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.onceIncluder.includeOnce(\n                'require_once',\n                PHPError.E_ERROR, // For requires, a fatal error is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Includes the specified module, returning its return value.\n         * Throws if no include transport has been configured.\n         * Raises a fatal error if the module cannot be found.\n         *\n         * @param {string} includedPath\n         * @param {Scope} enclosingScope\n         * @returns {Value}\n         * @throws {Exception} When no include transport has been configured\n         * @throws {Error} When the loader throws a generic error\n         */\n        require: function (includedPath, enclosingScope) {\n            var tools = this;\n\n            return tools.includer.include(\n                'require',\n                PHPError.E_ERROR, // For requires, a fatal error is raised on failure\n                tools.environment,\n                tools.module,\n                tools.topLevelNamespaceScope,\n                includedPath,\n                enclosingScope,\n                tools.options\n            );\n        },\n\n        /**\n         * Calls the configured tick handler with the current statement's position data.\n         * PHPToJS inserts calls to this method when ticking is enabled.\n         *\n         * @param {number} startLine\n         * @param {number} startColumn\n         * @param {number} endLine\n         * @param {number} endColumn\n         * @throws {Exception} When no tick handler has been configured\n         */\n        tick: function (startLine, startColumn, endLine, endColumn) {\n            var tools = this;\n\n            if (!tools.options[TICK_OPTION]) {\n                throw new Exception('tick(...) :: No \"tick\" handler option is available.');\n            }\n\n            tools.options[TICK_OPTION].call(\n                null,\n                tools.getNormalizedPath(),\n                startLine,\n                startColumn,\n                endLine,\n                endColumn\n            );\n        }\n    });\n\n    return Tools;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * @param {class} Tools\n * @param {CallStack} callStack\n * @param {Translator} translator\n * @param {GlobalNamespace} globalNamespace\n * @param {Loader} loader\n * @param {Includer} includer\n * @param {OnceIncluder} onceIncluder\n * @param {ReferenceFactory} referenceFactory\n * @param {ScopeFactory} scopeFactory\n * @param {ValueFactory} valueFactory\n * @constructor\n */\nfunction ToolsFactory(\n    Tools,\n    callStack,\n    translator,\n    globalNamespace,\n    loader,\n    includer,\n    onceIncluder,\n    referenceFactory,\n    scopeFactory,\n    valueFactory\n) {\n    /**\n     * @type {CallStack}\n     */\n    this.callStack = callStack;\n    /**\n     * @type {GlobalNamespace}\n     */\n    this.globalNamespace = globalNamespace;\n    /**\n     * @type {Includer}\n     */\n    this.includer = includer;\n    /**\n     * @type {Loader}\n     */\n    this.loader = loader;\n    /**\n     * @type {OnceIncluder}\n     */\n    this.onceIncluder = onceIncluder;\n    /**\n     * @type {ReferenceFactory}\n     */\n    this.referenceFactory = referenceFactory;\n    /**\n     * @type {ScopeFactory}\n     */\n    this.scopeFactory = scopeFactory;\n    /**\n     * @type {class}\n     */\n    this.Tools = Tools;\n    /**\n     * @type {Translator}\n     */\n    this.translator = translator;\n    /**\n     * @type {ValueFactory}\n     */\n    this.valueFactory = valueFactory;\n}\n\n_.extend(ToolsFactory.prototype, {\n    /**\n     * Creates a new Tools instance\n     *\n     * @param {Environment} environment\n     * @param {Module} module PHP module\n     * @param {NamespaceScope} topLevelNamespaceScope\n     * @param {Scope} topLevelScope\n     * @param {Object} options\n     * @returns {Tools}\n     */\n    create: function (\n        environment,\n        module,\n        topLevelNamespaceScope,\n        topLevelScope,\n        options\n    ) {\n        var factory = this;\n\n        return new factory.Tools(\n            factory.callStack,\n            environment,\n            factory.translator,\n            factory.globalNamespace,\n            factory.loader,\n            factory.includer,\n            factory.onceIncluder,\n            module,\n            options,\n            factory.referenceFactory,\n            factory.scopeFactory,\n            topLevelNamespaceScope,\n            topLevelScope,\n            factory.valueFactory\n        );\n    }\n});\n\nmodule.exports = ToolsFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    OF_GENERIC_TYPE_EXPECTED = 'core.of_generic_type_expected',\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept an array value\n *\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction ArrayType(nullIsAllowed) {\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(ArrayType, TypeInterface);\n\n_.extend(ArrayType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        return value.getType() === 'array' ||\n            (this.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'array';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function (translator) {\n        return translator.translate(OF_GENERIC_TYPE_EXPECTED, {\n            expectedType: this.getDisplayName()\n        });\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = ArrayType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept a callable value:\n * - An array callable for calling an instance object method (eg. `[$myInstance, 'myMethod']`)\n * - An array callable for calling a static method (eg. `['My\\Lib\\MyClass', 'myStaticMethod']`)\n * - A function name as a string\n * - A static method as a string (eg. `'My\\Lib\\MyClass::myStaticMethod'`)\n * - A Closure instance\n *\n * @param {NamespaceScope} namespaceScope\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction CallableType(namespaceScope, nullIsAllowed) {\n    /**\n     * @type {NamespaceScope}\n     */\n    this.namespaceScope = namespaceScope;\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(CallableType, TypeInterface);\n\n_.extend(CallableType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        return value.isCallable(this.namespaceScope.getGlobalNamespace()) ||\n            (this.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'callable';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function () {\n        return this.getDisplayName();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = CallableType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    INSTANCE_OF_TYPE_EXPECTED = 'core.instance_of_type_expected',\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept an instance of the specified class or interface or null (if allowed)\n *\n * @param {string} className\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction ClassType(className, nullIsAllowed) {\n    /**\n     * @type {string}\n     */\n    this.className = className;\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(ClassType, TypeInterface);\n\n_.extend(ClassType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        var typeObject = this;\n\n        return (value.getType() === 'object' && value.classIs(typeObject.className)) ||\n            (typeObject.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return this.className;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function (translator) {\n        return translator.translate(INSTANCE_OF_TYPE_EXPECTED, {\n            expectedType: this.getDisplayName()\n        });\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = ClassType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents a type that can only accept an iterable value:\n * - An array\n * - An object implementing Traversable\n *\n * @param {boolean} nullIsAllowed\n * @constructor\n */\nfunction IterableType(nullIsAllowed) {\n    /**\n     * @type {boolean}\n     */\n    this.nullIsAllowed = nullIsAllowed;\n}\n\nutil.inherits(IterableType, TypeInterface);\n\n_.extend(IterableType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        var typeObject = this;\n\n        return typeObject.nullIsAllowed;\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function (value) {\n        return value.isIterable() ||\n            (this.allowsNull() && value.getType() === 'null');\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'iterable';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function () {\n        return this.getDisplayName();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = IterableType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    TypeInterface = require('./TypeInterface');\n\n/**\n * Represents an unspecified type, where any value is allowed,\n * such as a function parameter with no type specified\n *\n * @constructor\n */\nfunction MixedType() {\n\n}\n\nutil.inherits(MixedType, TypeInterface);\n\n_.extend(MixedType.prototype, {\n    /**\n     * {@inheritdoc}\n     */\n    allowsNull: function () {\n        return true; // When no type is specified, null is always allowed\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    allowsValue: function () {\n        return true; // When no type is specified, any value is allowed\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getDisplayName: function () {\n        return 'mixed';\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    getExpectedMessage: function () {\n        return this.getDisplayName();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isScalar: function () {\n        return false; // This is not a scalar type hint\n    }\n});\n\nmodule.exports = MixedType;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    ArrayType = require('./ArrayType'),\n    CallableType = require('./CallableType'),\n    ClassType = require('./ClassType'),\n    IterableType = require('./IterableType'),\n    MixedType = require('./MixedType');\n\n/**\n * Creates objects related to Types\n *\n * @constructor\n */\nfunction TypeFactory() {\n\n}\n\n_.extend(TypeFactory.prototype, {\n    /**\n     * Creates a new ArrayType\n     *\n     * @param {boolean=} nullIsAllowed\n     * @returns {ArrayType}\n     */\n    createArrayType: function (nullIsAllowed) {\n        return new ArrayType(nullIsAllowed);\n    },\n\n    /**\n     * Creates a new CallableType\n     *\n     * @param {NamespaceScope} namespaceScope\n     * @param {boolean=} nullIsAllowed\n     * @returns {CallableType}\n     */\n    createCallableType: function (namespaceScope, nullIsAllowed) {\n        return new CallableType(namespaceScope, nullIsAllowed);\n    },\n\n    /**\n     * Creates a new ClassType\n     *\n     * @param {string} className\n     * @param {boolean=} nullIsAllowed\n     * @returns {ClassType}\n     */\n    createClassType: function (className, nullIsAllowed) {\n        return new ClassType(className, nullIsAllowed);\n    },\n\n    /**\n     * Creates a new IterableType\n     *\n     * @param {boolean=} nullIsAllowed\n     * @returns {IterableType}\n     */\n    createIterableType: function (nullIsAllowed) {\n        return new IterableType(nullIsAllowed);\n    },\n\n    /**\n     * Creates a new MixedType\n     *\n     * @returns {MixedType}\n     */\n    createMixedType: function () {\n        return new MixedType();\n    }\n});\n\nmodule.exports = TypeFactory;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    throwUnimplemented = function (functionName) {\n        return function () {\n            throw new Error(functionName + '() :: Not implemented');\n        };\n    };\n\n/**\n * @interface\n */\nfunction TypeInterface() {\n    throw new Error('TypeInterface cannot be instantiated');\n}\n\n_.extend(TypeInterface.prototype, {\n    /**\n     * Determines whether a parameter defined with this type (for example)\n     * would allow a null value\n     *\n     * @returns {bool}\n     */\n    allowsNull: throwUnimplemented('allowsNull'),\n\n    /**\n     * Determines whether a parameter defined with this type (for example)\n     * would allow the given value\n     *\n     * @param {Value} value\n     * @returns {bool}\n     */\n    allowsValue: throwUnimplemented('allowsValue'),\n\n    /**\n     * Fetches the display name for this type (eg. \"string\" or \"My\\Lib\\MyClass\")\n     *\n     * @returns {string}\n     */\n    getDisplayName: throwUnimplemented('getDisplayName'),\n\n    /**\n     * Fetches the message to display when this type is an expected type,\n     * eg. in an error message where the given argument did not match\n     *\n     * @param {Translator} translator\n     * @returns {string}\n     */\n    getExpectedMessage: throwUnimplemented('getExpectedMessage'),\n\n    /**\n     * Determines whether this type is for a scalar value (integer, string or boolean)\n     *\n     * @returns {bool}\n     */\n    isScalar: throwUnimplemented('isScalar')\n});\n\nmodule.exports = TypeInterface;\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Reference/Null')\n], function (\n    _,\n    phpCommon,\n    NullReference\n) {\n    var PHPError = phpCommon.PHPError,\n\n        CLASS_NAME_NOT_VALID = 'core.class_name_not_valid',\n        METHOD_CALLED_ON_NON_OBJECT = 'core.method_called_on_non_object',\n        NON_OBJECT_METHOD_CALL = 'core.non_object_method_call',\n        UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types',\n\n        createNullReference = function (value) {\n            var callStack = value.callStack;\n\n            return new NullReference(value.factory, {\n                onSet: function () {\n                    callStack.raiseError(PHPError.E_WARNING, 'Cannot use a scalar value as an array');\n                }\n            });\n        },\n        throwUnimplemented = function () {\n            throw new Error('Unimplemented');\n        };\n\n    function Value(factory, callStack, type, value) {\n        this.factory = factory;\n        this.callStack = callStack;\n        this.type = type;\n        this.value = value;\n    }\n\n    _.extend(Value.prototype, {\n        /**\n         * Adds this value to an array\n         */\n        addToArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        addToFloat: function (floatValue) {\n            var leftValue = this;\n\n            // Coerce to float and return a float if either operand is a float\n            return leftValue.factory.createFloat(leftValue.coerceToFloat().getNative() + floatValue.getNative());\n        },\n\n        addToNull: function () {\n            return this;\n        },\n\n        addToString: function (stringValue) {\n            return stringValue.coerceToNumber().add(this.coerceToNumber());\n        },\n\n        /**\n         * Calculates the bitwise-AND of this and a right-operand\n         *\n         * @param {Value} rightValue\n         * @returns {IntegerValue}\n         */\n        bitwiseAnd: function (rightValue) {\n            var value = this;\n\n            /*jshint bitwise:false */\n            return value.factory.createInteger(\n                (\n                    value.coerceToInteger().getNative() & rightValue.coerceToInteger().getNative()\n                ) >>> 0 // Force unsigned native JS number\n            );\n        },\n\n        /**\n         * Calculates the bitwise-OR of this and a right-operand\n         *\n         * @param {Value} rightValue\n         * @returns {IntegerValue}\n         */\n        bitwiseOr: function (rightValue) {\n            var value = this;\n\n            /*jshint bitwise:false */\n            return value.factory.createInteger(\n                (\n                    value.coerceToInteger().getNative() | rightValue.coerceToInteger().getNative()\n                ) >>> 0 // Force unsigned native JS number\n            );\n        },\n\n        /**\n         * Calls a method on an object\n         *\n         * @param {string} name\n         */\n        callMethod: function (name) {\n            var value = this;\n\n            value.callStack.raiseTranslatedError(PHPError.E_ERROR, NON_OBJECT_METHOD_CALL, {\n                name: name,\n                type: value.type\n            });\n        },\n\n        /**\n         * Calls a static method of a given class or the class of a given object\n         */\n        callStaticMethod: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Returns a clone of this value, or throws an Error if not supported\n         *\n         * @throws {ObjectValue}\n         */\n        clone: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, METHOD_CALLED_ON_NON_OBJECT, {\n                method: '__clone'\n            });\n        },\n\n        /**\n         * Coerces this value to an array. For all Value types except ArrayValue,\n         * the result will be wrapped in an array using this default implementation\n         *\n         * @returns {FloatValue}\n         */\n        coerceToArray: function () {\n            var value = this;\n\n            return value.factory.createArray([value]);\n        },\n\n        /**\n         * Coerces this value to a number as a FloatValue\n         *\n         * @returns {FloatValue}\n         */\n        coerceToFloat: function () {\n            var value = this;\n\n            return value.factory.createFloat(Number(value.value));\n        },\n\n        /**\n         * Coerces this value to an IntegerValue\n         *\n         * @returns {IntegerValue}\n         */\n        coerceToInteger: function () {\n            var value = this;\n\n            /*jshint bitwise:false */\n            return value.factory.createInteger(Number(value.value) >>> 0);\n        },\n\n        /**\n         * Unwraps an instance of Throwable to a native JS error\n         *\n         * @throws {Error}\n         */\n        coerceToNativeError: function () {\n            // NB: This is actually only implemented by ObjectValue\n            throw new Error('Only instances of Throwable may be thrown: tried to throw a(n) ' + this.type);\n        },\n\n        /**\n         * Coerces this value to a number as a FloatValue\n         *\n         * @returns {FloatValue}\n         */\n        coerceToNumber: function () {\n            return this.coerceToFloat();\n        },\n\n        coerceToObject: function () {\n            var value = this,\n                object = value.factory.createStdClassObject();\n\n            /**\n             * Scalars are coerced to objects as follows:\n             *\n             * > var_dump((object)21);\n             *\n             * object(stdClass)#1 (1) {\n             *   [\"scalar\"]=>\n             *   int(21)\n             * }\n             */\n            object.getInstancePropertyByName(value.factory.createString('scalar')).setValue(value);\n\n            return object;\n        },\n\n        coerceToString: throwUnimplemented,\n\n        /**\n         * Concatenates this value's string representation with the provided other value's\n         *\n         * @param {StringValue} rightValue\n         * @returns {StringValue}\n         */\n        concat: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createString(\n                leftValue.coerceToString().getNative() + rightValue.coerceToString().getNative()\n            );\n        },\n\n        decrement: throwUnimplemented,\n\n        /**\n         * Divides this value by another\n         */\n        divide: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Divides an array value by this one\n         */\n        divideByArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Divides a boolean value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByBoolean: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides a float value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByFloat: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides an integer value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByInteger: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides a non-array value by this value\n         *\n         * @throws {PHPFatalError}\n         */\n        divideByNonArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Divides a null value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNull: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides an object value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByObject: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Divides a string value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByString: function (leftValue) {\n            return this.divideByNonArray(leftValue);\n        },\n\n        /**\n         * Formats the value for display in stack traces etc.\n         *\n         * @returns {string}\n         */\n        formatAsString: throwUnimplemented,\n\n        getCallableName: throwUnimplemented,\n\n        /**\n         * Fetches a constant of a class by its name\n         */\n        getConstantByName: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Fetches the type of this value for display purposes, eg. \"boolean\"\n         *\n         * @returns {string}\n         */\n        getDisplayType: function () {\n            return this.type;\n        },\n\n        getElementByKey: function () {\n            return createNullReference(this);\n        },\n\n        getForAssignment: function () {\n            return this;\n        },\n\n        getInstancePropertyByName: throwUnimplemented,\n\n        getLength: function () {\n            return this.coerceToString().getLength();\n        },\n\n        /**\n         * Fetches a native representation of this value\n         *\n         * @returns {*}\n         */\n        getNative: function () {\n            return this.value;\n        },\n\n        /**\n         * Exports a \"proxying\" version of the native value. For normal primitive values\n         * (string, boolean, int, float) this will just be the native value,\n         * but for objects it will be an instance of PHPObject (see ObjectValue.prototype.getProxy())\n         *\n         * @returns {*}\n         */\n        getProxy: function () {\n            return this.getNative();\n        },\n\n        getPushElement: function () {\n            return createNullReference(this);\n        },\n\n        getReference: function () {\n            throw new Error('Cannot get a reference to a value');\n        },\n\n        /**\n         * Fetches a static property for a class by its name\n         */\n        getStaticPropertyByName: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        getType: function () {\n            return this.type;\n        },\n\n        getValue: function () {\n            return this;\n        },\n\n        /**\n         * Returns this value if defined (this is for the Reference/Value interface -\n         * values are always classed as defined)\n         *\n         * @return {Value}\n         */\n        getValueOrNull: function () {\n            return this;\n        },\n\n        /**\n         * Coerces this value to a number and adds one to it\n         *\n         * @returns {Value}\n         */\n        increment: throwUnimplemented,\n\n        /**\n         * Creates an instance of the class this value refers to\n         *\n         * @throws {PHPFatalError}\n         */\n        instantiate: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        isAnInstanceOf: throwUnimplemented,\n\n        /**\n         * Determines whether this value is callable\n         *\n         * @param {Namespace} globalNamespace\n         * @returns {boolean}\n         */\n        isCallable: throwUnimplemented,\n\n        /**\n         * Determines whether this value is iterable\n         *\n         * @returns {boolean}\n         */\n        isIterable: throwUnimplemented,\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfBoolean: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfFloat: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfInteger: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfNull: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfObject: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether this value is the class of another value\n         */\n        isTheClassOfString: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, CLASS_NAME_NOT_VALID);\n        },\n\n        /**\n         * Determines whether the value is classed as \"empty\" or not\n         *\n         * @returns {boolean}\n         */\n        isEmpty: throwUnimplemented,\n\n        /**\n         * Determines whether this value is loosely equal to the provided other value\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualTo: function (rightValue) {\n            /*jshint eqeqeq:false */\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.value == leftValue.value);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided array value\n         *\n         * @param {ArrayValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToArray: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided boolean value\n         *\n         * @param {BooleanValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToBoolean: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided float value\n         *\n         * @param {FloatValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToFloat: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided integer value\n         *\n         * @param {IntegerValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToInteger: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided null value\n         *\n         * @param {NullValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToNull: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided object value\n         *\n         * @param {ObjectValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToObject: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is loosely equal to the provided string value\n         *\n         * @param {StringValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToString: function (rightValue) {\n            return this.isEqualTo(rightValue);\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is greater than the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isGreaterThan: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() > rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is greater than or equal to the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isGreaterThanOrEqual: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() >= rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Determines whether this value is strictly equal\n         * to the provided other value\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isIdenticalTo: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(\n                rightValue.type === leftValue.type &&\n                rightValue.value === leftValue.value\n            );\n        },\n\n        /**\n         * Determines whether this value is strictly equal\n         * to the provided array value\n         *\n         * @param {ArrayValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isIdenticalToArray: function (rightValue) {\n            return this.isIdenticalTo(rightValue);\n        },\n\n        /**\n         * Determines whether this value is strictly equal\n         * to the provided object value\n         *\n         * @param {ObjectValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isIdenticalToObject: function (rightValue) {\n            return this.isIdenticalTo(rightValue);\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is less than the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isLessThan: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() < rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Compares this value to another value, returning bool(true)\n         * if this value is less than or equal to the other and false otherwise\n         *\n         * @param {Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isLessThanOrEqual: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(\n                leftValue.coerceToNumber().getNative() <= rightValue.coerceToNumber().getNative()\n            );\n        },\n\n        /**\n         * Loosely compares this value to the provided other value,\n         * returning true if they are not equal and false otherwise\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isNotEqualTo: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(!leftValue.isEqualTo(rightValue).getNative());\n        },\n\n        /**\n         * Strictly compares this value to the provided other value,\n         * returning true if they are not of the same type\n         * or of the same type but with a different value,\n         * and false otherwise\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        isNotIdenticalTo: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(!leftValue.isIdenticalTo(rightValue).getNative());\n        },\n\n        /**\n         * Returns true if this value is numeric and false otherwise\n         *\n         * @returns {boolean}\n         */\n        isNumeric: throwUnimplemented,\n\n        /**\n         * Determines whether this value is classed as \"set\" or not\n         *\n         * @returns {boolean}\n         */\n        isSet: function () {\n            // All values except NULL are classed as 'set'\n            return true;\n        },\n\n        /**\n         * Performs a logical-AND of this value and the other value given\n         *\n         * @param {Reference|Value} rightValue\n         * @returns {BooleanValue}\n         */\n        logicalAnd: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(\n                leftValue.coerceToBoolean().getNative() &&\n                rightValue.coerceToBoolean().getNative()\n            );\n        },\n\n        /**\n         * Performs a logical-NOT of this value.\n         * If this value is truthy this will return false,\n         * otherwise if falsy it will return true\n         *\n         * @returns {BooleanValue}\n         */\n        logicalNot: function () {\n            var value = this;\n\n            return value.factory.createBoolean(!value.coerceToBoolean().getNative());\n        },\n\n        /**\n         * Calculates the modulo (remainder of an integer division) of this value with another\n         *\n         * @param {Value} rightValue\n         * @returns {IntegerValue}\n         */\n        modulo: function (rightValue) {\n            var value = this,\n                // Coerce both operands to integers first, to ensure an integer division\n                dividend = value.coerceToInteger().getNative(),\n                divisor = rightValue.coerceToInteger().getNative();\n\n            if (divisor === 0) {\n                value.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return value.factory.createBoolean(false);\n            }\n\n            return value.factory.createInteger(dividend % divisor);\n        },\n\n        /**\n         * Multiplies this value with another\n         */\n        multiply: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Multiplies an array value by this value\n         *\n         * @throws {PHPFatalError}\n         */\n        multiplyByArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Multiplies a boolean value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByBoolean: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies a float value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByFloat: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies an integer value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByInteger: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies a non-array value by this value\n         *\n         * @throws {PHPFatalError}\n         */\n        multiplyByNonArray: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Multiplies a null value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNull: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies an object value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByObject: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Multiplies a string value by this value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByString: function (leftValue) {\n            return this.multiplyByNonArray(leftValue);\n        },\n\n        /**\n         * Subtracts another value from this one\n         *\n         * @returns {Value}\n         */\n        subtract: throwUnimplemented,\n\n        /**\n         * Subtracts this value from null\n         */\n        subtractFromNull: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        }\n    });\n\n    return Value;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Reference/Element'),\n    require('../KeyReferencePair'),\n    require('../KeyValuePair'),\n    require('../Reference/Null'),\n    require('../Reference/Reference'),\n    require('../Value'),\n    require('../Variable')\n], function (\n    _,\n    phpCommon,\n    util,\n    ElementReference,\n    KeyReferencePair,\n    KeyValuePair,\n    NullReference,\n    Reference,\n    Value,\n    Variable\n) {\n    var FUNCTION_NAME_MUST_BE_STRING = 'core.function_name_must_be_string',\n        UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types',\n        hasOwn = {}.hasOwnProperty,\n        PHPError = phpCommon.PHPError,\n        /**\n         * Prefixes any key called `length` with an underscore to avoid collisions\n         * with the native array `length` property (an array is used to maintain numeric indices).\n         * Any key that is already `_length` must also be prefixed again to avoid collisions there too.\n         *\n         * @param {*} keyNative\n         * @returns {*}\n         */\n        sanitiseKey = function (keyNative) {\n            if (typeof keyNative === 'number') {\n                return keyNative;\n            }\n\n            if (typeof keyNative === 'string') {\n                return keyNative.replace(/^_*length/, '_$&');\n            }\n\n            return keyNative;\n        };\n\n    function ArrayValue(factory, callStack, orderedElements, type, elementProvider) {\n        var elements = [],\n            keysToElements = [],\n            value = this;\n\n        _.each(orderedElements, function (orderedElement, key) {\n            var element,\n                elementReference = null,\n                elementValue = null;\n\n            if (orderedElement instanceof KeyValuePair) {\n                key = orderedElement.getKey();\n                elementValue = orderedElement.getValue();\n            } else if (orderedElement instanceof KeyReferencePair) {\n                key = orderedElement.getKey();\n                elementReference = orderedElement.getReference();\n            } else {\n                if (_.isNumber(key)) {\n                    key = factory.createInteger(keysToElements.length);\n                } else {\n                    key = factory.createFromNative(key);\n                }\n\n                if (orderedElement instanceof Reference) {\n                    elementReference = orderedElement;\n                } else if (orderedElement instanceof Variable) {\n                    // TODO: Prevent Variables ever being passed to the ArrayValue ctor, only References\n                    elementValue = orderedElement.getValue();\n                } else {\n                    elementValue = factory.coerce(orderedElement);\n                }\n            }\n\n            if (elementValue) {\n                element = elementProvider.createElement(factory, callStack, value, key, elementValue);\n            } else {\n                element = elementProvider.createElement(factory, callStack, value, key, null, elementReference);\n            }\n\n            elements.push(element);\n            keysToElements[sanitiseKey(key.getNative())] = element;\n        });\n\n        Value.call(this, factory, callStack, type || 'array', elements);\n\n        this.elementProvider = elementProvider;\n        this.keysToElements = keysToElements;\n        this.pointer = 0;\n    }\n\n    util.inherits(ArrayValue, Value);\n\n    _.extend(ArrayValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToArray(this);\n        },\n\n        addToArray: function (leftValue) {\n            var rightValue = this,\n                resultArray = leftValue.getForAssignment();\n\n            _.forOwn(rightValue.keysToElements, function (element, key) {\n                if (!hasOwn.call(resultArray.keysToElements, key)) {\n                    resultArray.getElementByKey(element.getKey()).setValue(element.getValue());\n                }\n            });\n\n            return resultArray;\n        },\n\n        /**\n         * Adds this value to a boolean\n         */\n        addToBoolean: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to a float\n         */\n        addToFloat: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to an integer\n         */\n        addToInteger: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to null\n         */\n        addToNull: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to an object\n         */\n        addToObject: function (objectValue) {\n            return objectValue.addToArray(this);\n        },\n\n        /**\n         * Adds this value to a string\n         */\n        addToString: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Calls a static or instance method, referenced by the first two elements of this array\n         *\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         * @throws {PHPFatalError} Throws when the given function name is not a string\n         */\n        call: function (args, namespaceOrNamespaceScope) {\n            var methodNameValue,\n                objectOrClassValue,\n                arrayValue = this,\n                value = arrayValue.value;\n\n            if (value.length < 2) {\n                arrayValue.callStack.raiseTranslatedError(PHPError.E_ERROR, FUNCTION_NAME_MUST_BE_STRING);\n            }\n\n            objectOrClassValue = value[0].getValue();\n            methodNameValue = value[1].getValue();\n\n            if (objectOrClassValue.getType() === 'string') {\n                return objectOrClassValue.callStaticMethod(\n                    methodNameValue,\n                    args,\n                    namespaceOrNamespaceScope\n                );\n            }\n\n            return objectOrClassValue.callMethod(\n                methodNameValue.getNative(),\n                args,\n                namespaceOrNamespaceScope\n            );\n        },\n\n        coerceToArray: function () {\n            return this;\n        },\n\n        coerceToBoolean: function () {\n            var value = this;\n\n            return value.factory.createBoolean(value.value.length > 0);\n        },\n\n        coerceToInteger: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value.length === 0 ? 0 : 1);\n        },\n\n        coerceToKey: function () {\n            this.callStack.raiseError(PHPError.E_WARNING, 'Illegal offset type');\n        },\n\n        coerceToNumber: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToObject: function () {\n            var value = this,\n                object = value.factory.createStdClassObject();\n\n            _.each(value.value, function (element) {\n                object.getInstancePropertyByName(element.getKey()).setValue(element.getValue());\n            });\n\n            return object;\n        },\n\n        coerceToString: function () {\n            return this.factory.createString('Array');\n        },\n\n        defineElement: function (elementReference) {\n            var value = this;\n\n            if (value.value.indexOf(elementReference) === -1) {\n                value.value.push(elementReference);\n            }\n        },\n\n        formatAsString: function () {\n            return 'Array';\n        },\n\n        /**\n         * Fetches a copy of this array, as in PHP arrays are always passed by value\n         * and not by reference\n         *\n         * @return {ArrayValue}\n         */\n        getForAssignment: function () {\n            var arrayValue = this,\n                orderedElements = [];\n\n            _.each(arrayValue.value, function (element) {\n                if (element.isDefined()) {\n                    orderedElements.push(element.getPairForAssignment());\n                }\n            });\n\n            return new ArrayValue(\n                arrayValue.factory,\n                arrayValue.callStack,\n                orderedElements,\n                arrayValue.type,\n                arrayValue.elementProvider\n            );\n        },\n\n        getKeys: function () {\n            var keys = [];\n\n            _.each(this.value, function (element) {\n                keys.push(element.getKey());\n            });\n\n            return keys;\n        },\n\n        /**\n         * Exports a wrapped PHP indexed array to a native array, or\n         * an associative array to a plain JS object\n         *\n         * @returns {Array|object}\n         */\n        getNative: function () {\n            var hasNonNumericKey = false,\n                result = [],\n                value = this;\n\n            _.each(value.value, function (element) {\n                // Treat string keys that have a numeric value as numeric\n                if (!isFinite(element.getKey().getNative())) {\n                    hasNonNumericKey = true;\n                }\n            });\n\n            result = hasNonNumericKey ? {} : [];\n\n            _.each(value.value, function (element) {\n                result[element.getKey().getNative()] = element.getValue().getNative();\n            });\n\n            return result;\n        },\n\n        getCurrentElement: function () {\n            var value = this;\n\n            return value.value[value.pointer] || value.factory.createNull();\n        },\n\n        getElementByKey: function (key) {\n            var element,\n                keyValue,\n                value = this;\n\n            key = key.coerceToKey(value.callStack);\n\n            if (!key) {\n                // Could not be coerced to a key: error will already have been handled, just return NULL\n                return new NullReference(value.factory);\n            }\n\n            keyValue = sanitiseKey(key.getNative());\n\n            if (!hasOwn.call(value.keysToElements, keyValue)) {\n                element = value.elementProvider.createElement(value.factory, value.callStack, value, key, null);\n\n                value.keysToElements[keyValue] = element;\n            }\n\n            return value.keysToElements[keyValue];\n        },\n\n        getElementByIndex: function (index) {\n            var value = this;\n\n            return value.value[index] || (function () {\n                    value.callStack.raiseError(PHPError.E_NOTICE, 'Undefined ' + value.referToElement(index));\n\n                    return new NullReference(value.factory);\n                }());\n        },\n\n        /**\n         * Fetches a KeyValuePair or KeyReferencePair for the specified array element,\n         * optionally allowing the key to be overridden\n         *\n         * @param {Value} key\n         * @param {Value|undefined} overrideKey\n         * @returns {KeyValuePair|KeyReferencePair}\n         */\n        getElementPairByKey: function (key, overrideKey) {\n            return this.getElementByKey(key).getPairForAssignment(overrideKey);\n        },\n\n        /**\n         * Creates an ArrayIterator for iterating over this array. Used by transpiled foreach loops.\n         *\n         * @returns {ArrayIterator}\n         */\n        getIterator: function () {\n            var value = this;\n\n            return value.factory.createArrayIterator(value);\n        },\n\n        getValueReferences: function () {\n            var references = [];\n\n            _.each(this.value, function (element) {\n                references.push(element.getValueReference());\n            });\n\n            return references;\n        },\n\n        getKeyByIndex: function (index) {\n            var value = this,\n                element = value.value[index];\n\n            return element ? element.key : null;\n        },\n\n        getLength: function () {\n            return this.value.length;\n        },\n\n        getPointer: function () {\n            return this.pointer;\n        },\n\n        getPushElement: function () {\n            var value = this;\n\n            return value.elementProvider.createElement(value.factory, value.callStack, value, null, null);\n        },\n\n        getValues: function () {\n            var values = [];\n\n            _.each(this.value, function (element) {\n                values.push(element.getValue());\n            });\n\n            return values;\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfArray(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function (globalNamespace) {\n            var classObject,\n                methodNameValue,\n                objectOrClassValue,\n                arrayValue = this,\n                value = arrayValue.value;\n\n            if (value.length < 2) {\n                return false;\n            }\n\n            objectOrClassValue = value[0].getValue();\n            methodNameValue = value[1].getValue();\n\n            if (objectOrClassValue.getType() === 'string') {\n                if (!globalNamespace.hasClass(objectOrClassValue.getNative())) {\n                    return false;\n                }\n\n                classObject = globalNamespace.getClass(objectOrClassValue.getNative());\n            } else if (objectOrClassValue.getType() === 'object') {\n                classObject = objectOrClassValue.getClass();\n            } else {\n                // First element must either be an object or a string\n                return false;\n            }\n\n            if (methodNameValue.getType() !== 'string') {\n                // Second, method name element must be a string containing the name of a method\n                return false;\n            }\n\n            return classObject.getMethodSpec(methodNameValue.getNative()) !== null;\n        },\n\n        /**\n         * Determines whether this array is classed as \"empty\" or not.\n         * Only empty arrays (with no elements) are classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value.length === 0;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToArray(this);\n        },\n\n        isEqualToNull: function () {\n            var value = this;\n\n            return value.factory.createBoolean(value.value.length === 0);\n        },\n\n        isEqualToArray: function (rightValue) {\n            var equal = true,\n                leftValue = this,\n                factory = leftValue.factory;\n\n            if (rightValue.value.length !== leftValue.value.length) {\n                return factory.createBoolean(false);\n            }\n\n            _.forOwn(rightValue.keysToElements, function (element, nativeKey) {\n                if (!hasOwn.call(leftValue.keysToElements, nativeKey) || element.getValue().isNotEqualTo(leftValue.keysToElements[nativeKey].getValue()).getNative()) {\n                    equal = false;\n                    return false;\n                }\n            });\n\n            return factory.createBoolean(equal);\n        },\n\n        isEqualToBoolean: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.getNative() === (leftValue.value.length > 0));\n        },\n\n        isEqualToFloat: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToInteger: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToObject: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isIdenticalTo: function (rightValue) {\n            return rightValue.isIdenticalToArray(this);\n        },\n\n        isIdenticalToArray: function (rightValue) {\n            var identical = true,\n                leftValue = this,\n                factory = leftValue.factory;\n\n            if (rightValue.value.length !== leftValue.value.length) {\n                return factory.createBoolean(false);\n            }\n\n            _.each(rightValue.value, function (element, index) {\n                if (\n                    leftValue.value[index].getKey().isNotIdenticalTo(element.getKey()).getNative() ||\n                    leftValue.value[index].getValue().isNotIdenticalTo(element.getValue()).getNative()\n                ) {\n                    identical = false;\n                    return false;\n                }\n            });\n\n            return factory.createBoolean(identical);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return true;\n        },\n\n        /**\n         * Arrays are never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        next: function () {\n            this.pointer++;\n        },\n\n        /**\n         * Calculates the ones' complement of this value\n         */\n        onesComplement: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        pointToElement: function (elementReference) {\n            var value = this;\n\n            _.each(value.value, function (element, index) {\n                if (element.getKey().isEqualTo(elementReference.getKey()).getNative()) {\n                    value.setPointer(index);\n                }\n            });\n        },\n\n        /**\n         * Removes the last element from the array and then returns it, if any.\n         * If the array is empty (so that there is no last element), NULL is returned\n         *\n         * @returns {Value}\n         */\n        pop: function () {\n            var value = this,\n                length = value.getLength();\n\n            if (length === 0) {\n                // Array is empty: nothing to pop off\n                return value.factory.createNull();\n            }\n\n            delete value.keysToElements[value.getKeyByIndex(length - 1).getNative()];\n\n            value.pointer = 0;\n\n            return value.value.pop().getValue();\n        },\n\n        /**\n         * Pushes an indexed element onto the array and then returns the array\n         *\n         * @param {Value} otherValue\n         * @returns {ArrayValue}\n         */\n        push: function (otherValue) {\n            var value = this,\n                index = value.factory.createInteger(value.keysToElements.length);\n\n            value.getElementByKey(index).setValue(otherValue);\n\n            return value;\n        },\n\n        /**\n         * Pushes an indexed element onto the array and then returns the key generated for it\n         *\n         * @param {ElementReference} elementReference\n         * @returns {IntegerValue}\n         */\n        pushElement: function (elementReference) {\n            var value = this,\n                key = value.keysToElements.length,\n                keyValue;\n\n            value.keysToElements[key] = elementReference;\n            value.value.push(elementReference);\n\n            keyValue = value.factory.createInteger(key);\n            elementReference.setKey(keyValue);\n\n            return keyValue;\n        },\n\n        referToElement: function (key) {\n            return 'offset: ' + key;\n        },\n\n        reset: function () {\n            var value = this;\n\n            value.pointer = 0;\n\n            return value;\n        },\n\n        setPointer: function (pointer) {\n            this.pointer = pointer;\n        },\n\n        /**\n         * Removes the first element from the array, returning it\n         * and renumbering any numeric keys\n         *\n         * @returns {Value}\n         */\n        shift: function () {\n            var value = this,\n                elements = value.value,\n                newElements = [],\n                newKeysToElements = {},\n                nextNumericKey = 0;\n\n            if (elements.length === 0) {\n                return value.factory.createNull();\n            }\n\n            _.each(elements.slice(1), function (element) {\n                var key = element.getKey(),\n                    nativeKey = key.getNative();\n\n                if (isFinite(nativeKey)) {\n                    // All numeric keys need to be renumbered to start from zero\n                    nativeKey = nextNumericKey++;\n                    key = value.factory.createInteger(nativeKey);\n                }\n\n                element = value.elementProvider.createElement(value.factory, value.callStack, value, key, element.getValue());\n\n                newKeysToElements[sanitiseKey(nativeKey)] = element;\n                newElements.push(element);\n            });\n\n            // Internal array pointer needs to be reset to the start of the array.\n            // As we are removing an element and renumbering any numerically indexed ones,\n            // the pointer could be left invalid if we didn't anyway\n            value.pointer = 0;\n            value.keysToElements = newKeysToElements;\n            value.value = newElements;\n\n            return elements[0].getValue();\n        },\n\n        shiftLeftBy: function (rightValue) {\n            return this.coerceToInteger().shiftLeftBy(rightValue);\n        },\n\n        shiftRightBy: function (rightValue) {\n            return this.coerceToInteger().shiftRightBy(rightValue);\n        },\n\n        sort: function (callback) {\n            this.value.sort(callback);\n        }\n    });\n\n    return ArrayValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('util'),\n    require('./String')\n], function (\n    _,\n    util,\n    StringValue\n) {\n    function BarewordStringValue(factory, callStack, value) {\n        StringValue.call(this, factory, callStack, value);\n    }\n\n    util.inherits(BarewordStringValue, StringValue);\n\n    _.extend(BarewordStringValue.prototype, {\n        call: function (args, namespaceOrNamespaceScope) {\n            return namespaceOrNamespaceScope.getFunction(this.value).apply(null, args);\n        },\n\n        /**\n         * Calls a static method of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @param {bool} isForwarding eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value}\n         */\n        callStaticMethod: function (nameValue, args, namespaceOrNamespaceScope, isForwarding) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getClass(value.value);\n\n            return classObject.callMethod(nameValue.getNative(), args, null, null, null, isForwarding);\n        },\n\n        /**\n         * Fetches the fully-qualified version of this name (function or class)\n         *\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {StringValue}\n         */\n        getCallableName: function (namespaceOrNamespaceScope) {\n            var rightValue = this,\n                resolvedClass = namespaceOrNamespaceScope.resolveClass(rightValue.value);\n\n            return resolvedClass.namespace.getPrefix() + resolvedClass.name;\n        },\n\n        /**\n         * Fetches the value of a constant from the class this string refers to\n         *\n         * @param {string} name\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getConstantByName: function (name, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getClass(value.value);\n\n            return classObject.getConstantByName(name);\n        },\n\n        /**\n         * Fetches the value of a static property of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getStaticPropertyByName: function (nameValue, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getClass(value.value);\n\n            return classObject.getStaticPropertyByName(nameValue.getNative());\n        },\n\n        /**\n         * Creates an instance of the class this string contains the name of,\n         * relative to the current namespace\n         *\n         * @param {Value[]} args\n         * @param {NamespaceScope} namespaceScope\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args, namespaceScope) {\n            var value = this,\n                classObject = namespaceScope.getClass(value.value);\n\n            return classObject.instantiate(args);\n        },\n\n        /**\n         * Determines whether the class this string references is the class of the specified object\n         *\n         * @param {ObjectValue} objectValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {BooleanValue}\n         */\n        isTheClassOfObject: function (objectValue, namespaceOrNamespaceScope) {\n            var rightValue = this,\n                fqcn = rightValue.getCallableName(namespaceOrNamespaceScope);\n\n            return rightValue.factory.createBoolean(\n                objectValue.classIs(fqcn)\n            );\n        }\n    });\n\n    return BarewordStringValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types',\n        PHPError = phpCommon.PHPError;\n\n    function BooleanValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'boolean', !!value);\n    }\n\n    util.inherits(BooleanValue, Value);\n\n    _.extend(BooleanValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToBoolean(this);\n        },\n\n        addToBoolean: function (rightValue) {\n            var value = this;\n\n            return value.factory.createInteger(value.value + rightValue.value);\n        },\n\n        addToInteger: function (integerValue) {\n            return integerValue.addToBoolean(this);\n        },\n\n        addToNull: function () {\n            return this.coerceToInteger();\n        },\n\n        addToObject: function (objectValue) {\n            return objectValue.addToBoolean(this);\n        },\n\n        coerceToBoolean: function () {\n            return this;\n        },\n\n        coerceToInteger: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value ? 1 : 0);\n        },\n\n        coerceToKey: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToNumber: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToString: function () {\n            var value = this;\n\n            return value.factory.createString(value.value ? '1' : '');\n        },\n\n        /**\n         * Divides this boolean by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByBoolean(this);\n        },\n\n        /**\n         * Divides a non-array value by this boolean\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative(),\n                quotient;\n\n            if (divisor === false) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n            quotient = coercedLeftValue.getNative() / divisor;\n\n            return coercedLeftValue.getType() === 'float' ?\n                rightValue.factory.createFloat(quotient) :\n                rightValue.factory.createInteger(quotient);\n        },\n\n        formatAsString: function () {\n            return this.value ? 'true' : 'false';\n        },\n\n        getElement: function () {\n            // Array access on booleans always returns null, no notice or warning is raised\n            return this.factory.createNull();\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfBoolean(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Determines whether this boolean is classed as \"empty\" or not.\n         * Only false is classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value === false;\n        },\n\n        isEqualTo: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(rightValue.coerceToBoolean().value === leftValue.value);\n        },\n\n        isEqualToObject: function () {\n            return this;\n        },\n\n        isEqualToString: function (stringValue) {\n            var booleanValue = this;\n\n            return stringValue.factory.createBoolean(\n                stringValue.coerceToBoolean().getNative() === booleanValue.getNative()\n            );\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Booleans are never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        /**\n         * Multiplies this boolean by the specified value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByBoolean(this);\n        },\n\n        /**\n         * Multiplies a non-array value by this boolean\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedLeftValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.getNative(),\n                product = coercedLeftValue.getNative() * multiplier;\n\n            return coercedLeftValue.getType() === 'float' ?\n                rightValue.factory.createFloat(product) :\n                rightValue.factory.createInteger(product);\n        },\n\n        /**\n         * Calculates the ones' complement of this value\n         */\n        onesComplement: function () {\n            this.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        shiftLeftBy: function (rightValue) {\n            return this.coerceToInteger().shiftLeftBy(rightValue);\n        },\n\n        shiftRightBy: function (rightValue) {\n            return this.coerceToInteger().shiftRightBy(rightValue);\n        }\n    });\n\n    return BooleanValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    util,\n    Value\n) {\n    function ExitValue(factory, callStack, statusValue) {\n        Value.call(this, factory, callStack, 'exit', null);\n\n        this.statusValue = statusValue;\n    }\n\n    util.inherits(ExitValue, Value);\n\n    _.extend(ExitValue.prototype, {\n        getStatus: function () {\n            var value = this;\n\n            return value.statusValue ? value.statusValue.getNative() : 0;\n        }\n    });\n\n    return ExitValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function FloatValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'float', value);\n    }\n\n    util.inherits(FloatValue, Value);\n\n    _.extend(FloatValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToFloat(this);\n        },\n\n        addToBoolean: function (booleanValue) {\n            var value = this;\n\n            return value.factory.createFloat(value.value + Number(booleanValue.value));\n        },\n\n        addToInteger: function (integerValue) {\n            var value = this;\n\n            return value.factory.createFloat(value.value + integerValue.value);\n        },\n\n        addToObject: function (objectValue) {\n            return objectValue.addToFloat(this);\n        },\n\n        addToNull: function () {\n            return this.coerceToNumber();\n        },\n\n        coerceToBoolean: function () {\n            var value = this;\n\n            return value.factory.createBoolean(!!value.value);\n        },\n\n        coerceToFloat: function () {\n            return this;\n        },\n\n        coerceToInteger: function () {\n            /*jshint bitwise: false */\n            var value = this;\n\n            return value.factory.createInteger(value.value >> 0);\n        },\n\n        coerceToKey: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToNumber: function () {\n            return this;\n        },\n\n        coerceToString: function () {\n            var value = this;\n\n            return value.factory.createString(value.value + '');\n        },\n\n        /**\n         * Divides this float by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByFloat(this);\n        },\n\n        /**\n         * Divides a non-array value by this float\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative();\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() / divisor);\n        },\n\n        formatAsString: function () {\n            return this.value + '';\n        },\n\n        getElement: function () {\n            // Array access on floats always returns null, no notice or warning is raised\n            return this.factory.createNull();\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfFloat(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Determines whether this float is classed as \"empty\" or not.\n         * Only zero is classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value === 0;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToFloat(this);\n        },\n\n        isEqualToFloat: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.value === leftValue.value);\n        },\n\n        isEqualToInteger: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.coerceToFloat().value === leftValue.value);\n        },\n\n        isEqualToNull: function () {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(leftValue.value === 0);\n        },\n\n        isEqualToObject: function (objectValue) {\n            return objectValue.isEqualToFloat(this);\n        },\n\n        isEqualToString: function (stringValue) {\n            var floatValue = this;\n\n            return floatValue.factory.createBoolean(floatValue.value === stringValue.coerceToFloat().value);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Floats are always numeric: always returns true\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return true;\n        },\n\n        /**\n         * Multiplies this float by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByFloat(this);\n        },\n\n        /**\n         * Multiplies a non-array value by this float\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedMultiplicand = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.value;\n\n            return rightValue.factory.createFloat(coercedMultiplicand.getNative() * multiplier);\n        },\n\n        onesComplement: function () {\n            /*jshint bitwise: false */\n            return this.factory.createInteger(~this.value);\n        },\n\n        shiftLeftBy: function (rightValue) {\n            return this.coerceToInteger().shiftLeftBy(rightValue);\n        },\n\n        shiftRightBy: function (rightValue) {\n            return this.coerceToInteger().shiftRightBy(rightValue);\n        },\n\n        subtract: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            rightValue = rightValue.coerceToNumber();\n\n            return factory.createFloat(leftValue.getNative() - rightValue.getNative());\n        },\n\n        toNegative: function () {\n            var value = this;\n\n            return value.factory.createFloat(-value.value);\n        },\n\n        toPositive: function () {\n            var value = this;\n\n            return value.factory.createInteger(+value.value);\n        }\n    });\n\n    return FloatValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function IntegerValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'int', value);\n    }\n\n    util.inherits(IntegerValue, Value);\n\n    _.extend(IntegerValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToInteger(this);\n        },\n\n        addToBoolean: function (booleanValue) {\n            var value = this;\n\n            return value.factory.createInteger(value.value + booleanValue.value);\n        },\n\n        addToInteger: function (rightValue) {\n            var value = this;\n\n            return value.factory.createInteger(value.value + rightValue.value);\n        },\n\n        coerceToBoolean: function () {\n            var value = this;\n\n            return value.factory.createBoolean(!!value.value);\n        },\n\n        coerceToFloat: function () {\n            var value = this;\n\n            return value.factory.createFloat(value.value);\n        },\n\n        coerceToInteger: function () {\n            return this;\n        },\n\n        coerceToKey: function () {\n            return this;\n        },\n\n        coerceToNumber: function () {\n            return this;\n        },\n\n        coerceToString: function () {\n            var value = this;\n\n            return value.factory.createString(value.value.toString());\n        },\n\n        decrement: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value - 1);\n        },\n\n        /**\n         * Divides this integer by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByInteger(this);\n        },\n\n        /**\n         * Divides a float value by this integer\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        divideByFloat: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative();\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() / divisor);\n        },\n\n        /**\n         * Divides a non-array value by this integer\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.getNative(),\n                quotient;\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            quotient = coercedLeftValue.getNative() / divisor;\n\n            // Return result as a float if needed, otherwise keep as integer\n            return Math.round(quotient) === quotient ?\n                rightValue.factory.createInteger(quotient) :\n                rightValue.factory.createFloat(quotient);\n        },\n\n        formatAsString: function () {\n            return this.value + '';\n        },\n\n        getElement: function () {\n            // Array access on integers always returns null, no notice or warning is raised\n            return this.factory.createNull();\n        },\n\n        increment: function () {\n            var value = this;\n\n            return value.factory.createInteger(value.value + 1);\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfInteger(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Determines whether this integer is classed as \"empty\" or not.\n         * Only zero is classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return this.value === 0;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToInteger(this);\n        },\n\n        isEqualToInteger: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(rightValue.value === leftValue.value);\n        },\n\n        isEqualToNull: function () {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(leftValue.value === 0);\n        },\n\n        isEqualToObject: function (objectValue) {\n            return objectValue.isEqualToInteger(this);\n        },\n\n        isEqualToString: function (stringValue) {\n            var integerValue = this;\n\n            return integerValue.factory.createBoolean(integerValue.getNative() === parseFloat(stringValue.getNative()));\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Integers are always numeric: always returns true\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return true;\n        },\n\n        /**\n         * Multiplies another value by this integer\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByInteger(this);\n        },\n\n        /**\n         * Multiplies a float value by this integer\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        multiplyByFloat: function (leftValue) {\n            var coercedLeftValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.value;\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() * multiplier);\n        },\n\n        /**\n         * Multiplies a non-array value by this integer\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedMultiplicand = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.value,\n                product = coercedMultiplicand.getNative() * multiplier;\n\n            // Return result as a float if needed, otherwise keep as integer\n            return Math.round(product) === product ?\n                rightValue.factory.createInteger(product) :\n                rightValue.factory.createFloat(product);\n        },\n\n        onesComplement: function () {\n            /*jshint bitwise: false */\n            return this.factory.createInteger(~this.value);\n        },\n\n        shiftLeftBy: function (rightValue) {\n            /*jshint bitwise: false */\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createInteger(leftValue.getNative() << rightValue.coerceToInteger().getNative());\n        },\n\n        shiftRightBy: function (rightValue) {\n            /*jshint bitwise: false */\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createInteger(leftValue.getNative() >> rightValue.coerceToInteger().getNative());\n        },\n\n        subtract: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            rightValue = rightValue.coerceToNumber();\n\n            // Coerce to float and return a float if either operand is a float\n            if (rightValue.getType() === 'float') {\n                return factory.createFloat(leftValue.coerceToFloat().getNative() - rightValue.coerceToFloat().getNative());\n            }\n\n            return factory.createInteger(leftValue.getNative() - rightValue.getNative());\n        },\n\n        subtractFromNull: function () {\n            var value = this;\n\n            return value.factory.createInteger(-value.getNative());\n        },\n\n        toNegative: function () {\n            var value = this;\n\n            return value.factory.createInteger(-value.value);\n        },\n\n        toPositive: function () {\n            var value = this;\n\n            return value.factory.createInteger(+value.value);\n        }\n    });\n\n    return IntegerValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function NullValue(factory, callStack) {\n        Value.call(this, factory, callStack, 'null', null);\n    }\n\n    util.inherits(NullValue, Value);\n\n    _.extend(NullValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToNull();\n        },\n\n        addToBoolean: function (booleanValue) {\n            return booleanValue.coerceToInteger();\n        },\n\n        coerceToArray: function () {\n            // Null just casts to an empty array\n            return this.factory.createArray();\n        },\n\n        coerceToBoolean: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        coerceToKey: function () {\n            return this.factory.createString('');\n        },\n\n        coerceToString: function () {\n            return this.factory.createString('');\n        },\n\n        /**\n         * Divides this null by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByNull(this);\n        },\n\n        /**\n         * Divides a non-array value by this null\n         *\n         * @returns {Value}\n         */\n        divideByNonArray: function () {\n            var rightValue = this;\n\n            rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n            return rightValue.factory.createBoolean(false);\n        },\n\n        formatAsString: function () {\n            return 'NULL';\n        },\n\n        getInstancePropertyByName: function () {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Trying to get property of non-object'\n            );\n\n            return value.factory.createNull();\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfNull(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            return false;\n        },\n\n        /**\n         * Null is always classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return true;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToNull(this);\n        },\n\n        isEqualToFloat: function (floatValue) {\n            return floatValue.isEqualToNull();\n        },\n\n        isEqualToNull: function () {\n            return this.factory.createBoolean(true);\n        },\n\n        isEqualToObject: function (objectValue) {\n            return objectValue.isEqualToNull();\n        },\n\n        isEqualToString: function (stringValue) {\n            return stringValue.isEqualToNull();\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Null is never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        isSet: function () {\n            return false;\n        },\n\n        /**\n         * Multiplies this null by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByNull(this);\n        },\n\n        /**\n         * Multiplies this value by a float\n         *\n         * @returns {FloatValue}\n         */\n        multiplyByFloat: function () {\n            return this.factory.createFloat(0);\n        },\n\n        /**\n         * Multiplies a non-array value by this null\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var value = this;\n\n            return leftValue.coerceToNumber().getType() === 'float' ?\n                value.factory.createFloat(0) :\n                value.factory.createInteger(0);\n        },\n\n        subtract: function (rightValue) {\n            return rightValue.subtractFromNull();\n        }\n    });\n\n    return NullValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Closure'),\n    require('../KeyValuePair'),\n    require('../Reference/Null'),\n    require('../Reference/ObjectElement'),\n    require('../Reference/Property'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    Closure,\n    KeyValuePair,\n    NullReference,\n    ObjectElement,\n    PropertyReference,\n    Value\n) {\n    var hasOwn = {}.hasOwnProperty,\n        getPropertyCaseInsensitive = function (object, property) {\n            var found = false,\n                lowerCaseProperty = property.toLowerCase(),\n                otherObject,\n                value = null;\n\n            _.forOwn(object, function (propertyValue, propertyName) {\n                if (propertyName.toLowerCase() === lowerCaseProperty) {\n                    found = true;\n                    value = propertyValue;\n                    return false;\n                }\n            });\n\n            if (!found) {\n                otherObject = Object.getPrototypeOf(object);\n\n                if (!otherObject) {\n                    return null;\n                }\n\n                return getPropertyCaseInsensitive(otherObject, property);\n            }\n\n            return {\n                object: object,\n                value: value\n            };\n        },\n        Exception = phpCommon.Exception,\n        MAGIC_CLONE = '__clone',\n        PHPError = phpCommon.PHPError,\n\n        CANNOT_ACCESS_PROPERTY = 'core.cannot_access_property',\n        CANNOT_USE_WRONG_TYPE_AS = 'core.cannot_use_wrong_type_as',\n        OBJECT_FROM_GET_ITERATOR_MUST_BE_TRAVERSABLE = 'core.object_from_get_iterator_must_be_traversable',\n        UNDEFINED_PROPERTY = 'core.undefined_property',\n        UNSUPPORTED_OPERAND_TYPES = 'core.unsupported_operand_types';\n\n    /**\n     * Represents an instance of a class. There is a JS<->PHP bridge\n     * that wraps objects passed in from JS-land in instances of a special JSObject builtin class.\n     *\n     * @param {ValueFactory} factory\n     * @param {CallStack} callStack\n     * @param {Translator} translator\n     * @param {object} object\n     * @param {Class} classObject\n     * @param {number} id\n     * @constructor\n     */\n    function ObjectValue(factory, callStack, translator, object, classObject, id) {\n        Value.call(this, factory, callStack, 'object', object);\n\n        /**\n         * @type {Class}\n         */\n        this.classObject = classObject;\n        /**\n         * @type {number}\n         */\n        this.id = id;\n        /**\n         * Internal properties allow JS-defined classes to store data against objects\n         * without exposing it to PHP-land, which avoids the risk of any internal data names\n         * conflicting with PHP class properties\n         *\n         * @type {Object.<string, *>}\n         */\n        this.internalProperties = {};\n        /**\n         * @type {number}\n         */\n        this.nextPropertyIndex = 0;\n        /**\n         * @type {Object.<string, PropertyReference>}\n         */\n        this.nonPrivateProperties = {};\n        /**\n         * @type {number}\n         */\n        this.pointer = 0;\n        /**\n         * Different classes in the hierarchy may declare their own private property\n         * with the same name as an ancestor. For this reason we need to store private properties\n         * indexed by the fully-qualified name of the class that defines them\n         * (Effectively: {Object.<string, {Object.<string, PropertyReference>}>})\n         *\n         * @type {Object.<string, object>}\n         */\n        this.privatePropertiesByFQCN = {};\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n    }\n\n    util.inherits(ObjectValue, Value);\n\n    _.extend(ObjectValue.prototype, {\n        /**\n         * Adds this value to another\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        add: function (rightValue) {\n            return rightValue.addToObject(this);\n        },\n\n        /**\n         * Adds this value to an array\n         */\n        addToArray: function () {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            value.callStack.raiseTranslatedError(PHPError.E_ERROR, UNSUPPORTED_OPERAND_TYPES);\n        },\n\n        /**\n         * Adds this value to a boolean\n         *\n         * @param {BooleanValue} booleanValue\n         */\n        addToBoolean: function (booleanValue) {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            return value.factory.createInteger((booleanValue.getNative() ? 1 : 0) + 1);\n        },\n\n        /**\n         * Adds this value to a float\n         *\n         * @param {FloatValue} floatValue\n         */\n        addToFloat: function (floatValue) {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            return value.factory.createFloat(floatValue.getNative() + 1);\n        },\n\n        /**\n         * Moves the iterator to its next position.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         */\n        advance: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('Object.advance() :: Object does not implement Iterator');\n            }\n\n            value.callMethod('next');\n        },\n\n        /**\n         * When this object is a Closure instance, returns a new Closure\n         * with the specified bound `$this` object and a new current class scope\n         *\n         * @param {ObjectValue|NullValue} thisValue\n         * @param {Class|undefined} scopeClass\n         * @returns {Closure}\n         */\n        bindClosure: function (thisValue, scopeClass) {\n            var closure,\n                value = this;\n\n            if (!value.classIs('Closure')) {\n                throw new Error('bindClosure() :: Value is not a Closure');\n            }\n\n            closure = value.getInternalProperty('closure');\n\n            return closure.bind(thisValue, scopeClass);\n        },\n\n        /**\n         * Calls the magic __invoke() method for this object\n         *\n         * @param {Reference[]|Value[]|Variable[]} args\n         * @returns {Reference|Value}\n         */\n        call: function (args) {\n            return this.callMethod('__invoke', args);\n        },\n\n        /**\n         * Calls the specified method of this object\n         *\n         * @param {string} name\n         * @param {Value[]?} args\n         * @returns {Value} Returns the result of the method if it exists\n         * @throws {PHPFatalError} Throws when the method does not exist\n         */\n        callMethod: function (name, args) {\n            var value = this;\n\n            return value.classObject.callMethod(name, args, value);\n        },\n\n        /**\n         * Calls a static method of the class this object is an instance of\n         *\n         * @param {StringValue} nameValue\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @param {bool} isForwarding eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value}\n         */\n        callStaticMethod: function (nameValue, args, namespaceOrNamespaceScope, isForwarding) {\n            // Could be a static call in object context, in which case we want to pass\n            // the object value through.\n            // This will be handled by a fetch of `callStack.getThisObject()` inside `.callMethod(...)`\n            return this.classObject.callMethod(nameValue.getNative(), args, null, null, null, isForwarding);\n        },\n\n        /**\n         * Determines whether this object is an instance of the given class\n         *\n         * @param {string} className\n         * @returns {boolean}\n         */\n        classIs: function (className) {\n            return this.classObject.is(className);\n        },\n\n        /**\n         * Returns a clone of this object value\n         *\n         * @returns {ObjectValue}\n         */\n        clone: function () {\n            var value = this,\n                // Avoid calling the __construct() class constructor when cloning,\n                // however note that the native constructor will still be called\n                // as that is used to initialise properties for PHP-defined classes etc.\n                cloneObjectValue = value.classObject.instantiateBare(\n                    // TODO: Consider storing the arguments passed to the constructor,\n                    //       so that they may be passed here - however this may then leak memory\n                    //       as we would be holding on to references to those arguments' values\n                    []\n                );\n\n            // Clones are shallow: each property's value is simply copied over to the clone.\n            // (Note that arrays will be copied as is done for assignments.)\n            // If a deep clone is required then the user must implement the magic __clone method\n            // and perform the recursion themselves.\n            _.each(value.getPropertyNames(), function (name) {\n                cloneObjectValue.setProperty(name, value.getProperty(name));\n            });\n\n            // Call the magic __clone method if defined\n            if (cloneObjectValue.isMethodDefined(MAGIC_CLONE)) {\n                cloneObjectValue.callMethod(MAGIC_CLONE);\n            }\n\n            return cloneObjectValue;\n        },\n\n        /**\n         * Coerces this ObjectValue to an ArrayValue\n         *\n         * @returns {ArrayValue}\n         */\n        coerceToArray: function () {\n            var elements = [],\n                value = this,\n                factory = value.factory;\n\n            _.forOwn(value.nonPrivateProperties, function (propertyReference) {\n                elements.push(\n                    new KeyValuePair(\n                        factory.coerce(propertyReference.getExternalName()),\n                        propertyReference.getValue()\n                    )\n                );\n            });\n            _.forOwn(value.privatePropertiesByFQCN, function (fqcnMap) {\n                _.forOwn(fqcnMap, function (propertyReference) {\n                    elements.push(\n                        new KeyValuePair(\n                            factory.coerce(propertyReference.getExternalName()),\n                            propertyReference.getValue()\n                        )\n                    );\n                });\n            });\n\n            return value.factory.createArray(elements);\n        },\n\n        coerceToBoolean: function () {\n            return this.factory.createBoolean(true);\n        },\n\n        coerceToInteger: function () {\n            var value = this;\n\n            value.callStack.raiseError(\n                PHPError.E_NOTICE,\n                'Object of class ' + value.classObject.getName() + ' could not be converted to number'\n            );\n\n            return value.factory.createInteger(1);\n        },\n\n        /**\n         * Unwraps this instance of Exception to a native JS error\n         *\n         * TODO: Move the Throwable check elsewhere and deprecate this method in favour of .getNative()?\n         *\n         * @returns {Error|*}\n         */\n        coerceToNativeError: function () {\n            var value = this;\n\n            // Uncaught PHP Throwables become E_FATAL errors\n\n            if (!value.classIs('Throwable')) {\n                // TODO: Change for PHP 7:\n                //       \"Fatal error: Uncaught Error: Can only throw objects in Command line code:1\"\n                //       \"Fatal error: Uncaught Error: Cannot throw objects that do not implement Throwable in Command line code:1\"\n                //       These will probably need to be handled with transpiler-level changes,\n                //       so that a throw statement becomes eg. `tools.throw(...)` as it is too late\n                //       to make these checks at this point, due to the original stack/context being lost\n                throw new Exception('Weird value class thrown: ' + value.getClassName());\n            }\n\n            return value.getNative();\n        },\n\n        coerceToNumber: function () {\n            return this.coerceToInteger();\n        },\n\n        coerceToKey: function () {\n            this.callStack.raiseError(PHPError.E_WARNING, 'Illegal offset type');\n        },\n\n        coerceToObject: function () {\n            // Already an object: no coercion needed\n            return this;\n        },\n\n        coerceToString: function () {\n            return this.callMethod('__toString');\n        },\n\n        /**\n         * Declares an instance property for this object, with the specified visibility\n         *\n         * @param {string} name\n         * @param {Class} classObject The class in the hierarchy that defines the property\n         * @param {string} visibility \"private\", \"protected\" or \"public\"\n         * @returns {PropertyReference}\n         */\n        declareProperty: function (name, classObject, visibility) {\n            var value = this,\n                propertyReference;\n\n            function createProperty() {\n                return new PropertyReference(\n                    value.factory,\n                    value.callStack,\n                    value,\n                    value.factory.coerce(name),\n                    classObject,\n                    visibility,\n                    value.nextPropertyIndex++\n                );\n            }\n\n            if (visibility === 'private') {\n                if (!value.privatePropertiesByFQCN[classObject.getName()]) {\n                    value.privatePropertiesByFQCN[classObject.getName()] = {};\n                }\n\n                propertyReference = value.privatePropertiesByFQCN[classObject.getName()][name];\n\n                if (!propertyReference) {\n                    propertyReference = createProperty();\n\n                    value.privatePropertiesByFQCN[classObject.getName()][name] = propertyReference;\n                }\n            } else {\n                propertyReference = value.nonPrivateProperties[name];\n\n                if (!propertyReference) {\n                    propertyReference = createProperty();\n\n                    value.nonPrivateProperties[name] = propertyReference;\n                }\n            }\n\n            return propertyReference;\n        },\n\n        /**\n         * Divides (the numeric coercion of) this object by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByObject(this);\n        },\n\n        /**\n         * Divides a non-array value by this object\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            // Trigger notice due to coercion\n            this.coerceToInteger();\n\n            // Objects are always cast to int(1), so divisor will always be 1\n            return leftValue.coerceToNumber();\n        },\n\n        /**\n         * Builds a string representation of this value\n         *\n         * @returns {string}\n         */\n        formatAsString: function () {\n            return 'Object(' + this.getClassName() + ')';\n        },\n\n        /**\n         * Fetches the callable name of the value this reference resolves to\n         *\n         * @returns {string}\n         */\n        getCallableName: function () {\n            var value = this;\n\n            if (value.classObject.is('Closure')) {\n                return value.value.functionSpec.getFunctionName(true);\n            }\n\n            return value.getClassName() + '::__invoke()';\n        },\n\n        /**\n         * Fetches the Class of this object\n         *\n         * @returns {Class}\n         */\n        getClass: function () {\n            return this.classObject;\n        },\n\n        /**\n         * Fetches the name of the class of this object\n         *\n         * @returns {string}\n         */\n        getClassName: function () {\n            return this.classObject.getName();\n        },\n\n        /**\n         * Fetches a constant for the class of this object\n         *\n         * @param {string} name\n         * @returns {Value}\n         */\n        getConstantByName: function (name) {\n            return this.classObject.getConstantByName(name);\n        },\n\n        /**\n         * Fetches a reference to the value at the current position of the iterator.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {Reference}\n         */\n        getCurrentElementReference: function () {\n            // FIXME: Should this raise a warning or something?\n            //        What if the current() method is marked as return-by-reference?\n            return this.getCurrentElementValue();\n        },\n\n        /**\n         * Fetches the value at the current position of the iterator.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {Value}\n         */\n        getCurrentElementValue: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('Object.getCurrentElementValue() :: Object does not implement Iterator');\n            }\n\n            return value.callMethod('current');\n        },\n\n        /**\n         * Fetches the key for the current position of the iterator.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {Value}\n         */\n        getCurrentKey: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('Object.getCurrentKey() :: Object does not implement Iterator');\n            }\n\n            return value.callMethod('key').coerceToKey();\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        getDisplayType: function () {\n            // For objects, we want to display the class FQCN and not just \"object\"\n            return this.getClassName();\n        },\n\n        /**\n         * Fetches an element of the value this reference resolves to\n         *\n         * @param {number} index\n         * @returns {Reference}\n         */\n        getElementByIndex: function (index) {\n            var value = this,\n                names = value.getInstancePropertyNames();\n\n            if (!hasOwn.call(names, index)) {\n                value.callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'Undefined ' + value.referToElement(index)\n                );\n\n                return new NullReference(value.factory);\n            }\n\n            return value.getInstancePropertyByName(names[index]);\n        },\n\n        /**\n         * Fetches a property of this object using the array dereference notation if its class implements ArrayAccess\n         *\n         * @param {*} keyValue\n         * @returns {Reference}\n         */\n        getElementByKey: function (keyValue) {\n            var value = this;\n\n            keyValue = keyValue.coerceToKey(value.callStack);\n\n            if (!keyValue) {\n                // Could not be coerced to a key: error will already have been handled, just return NULL\n                return new NullReference(value.factory);\n            }\n\n            if (value.classObject.is('ArrayAccess')) {\n                return new ObjectElement(value.factory, value, keyValue);\n            }\n\n            value.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_USE_WRONG_TYPE_AS, {\n                actual: value.classObject.getName(),\n                expected: 'array'\n            });\n        },\n\n        /**\n         * Returns either the current value or one based on it as part of an assignment.\n         * Objects are passed around by reference so this should just return this\n         *\n         * @returns {Value}\n         */\n        getForAssignment: function () {\n            return this;\n        },\n\n        /**\n         * Fetches the unique internal ID of this object. Used by eg. var_dump(...)\n         *\n         * @returns {number}\n         */\n        getID: function () {\n            return this.id;\n        },\n\n        /**\n         * Fetches the value of an instance property of this object\n         *\n         * @param {string} name\n         * @returns {Value}\n         */\n        getProperty: function (name) {\n            var value = this,\n                nameValue = value.factory.createString(name);\n\n            return value.getInstancePropertyByName(nameValue).getValue();\n        },\n\n        /**\n         * Fetches an instance property of this object\n         *\n         * @param {Value} nameValue\n         * @returns {PropertyReference}\n         */\n        getInstancePropertyByName: function (nameValue) {\n            var callingClass,\n                nameKey = nameValue.coerceToKey(),\n                name = nameKey.getNative(),\n                propertyReference,\n                value = this,\n                classInHierarchy,\n                classOfObject = value.classObject;\n\n            if (value.classObject.hasStaticPropertyByName(name)) {\n                // TODO: Change for PHP 7 (see https://www.php.net/manual/en/migration70.incompatible.php)\n                value.callStack.raiseError(\n                    PHPError.E_STRICT,\n                    'Accessing static property ' + value.classObject.getName() + '::$' + name + ' as non static'\n                );\n\n                // Allow to continue, so that a further notice will be emitted when the property is accessed\n            }\n\n            // Fetch the class that the current line of PHP code is executing inside (if any)\n            callingClass = value.callStack.getCurrentClass();\n\n            // First check whether the property is defined as private for the calling class -\n            // it could also exist at different levels in the hierarchy, but the same property\n            // can have different values at different levels if it is private there\n            propertyReference = callingClass && value.privatePropertiesByFQCN[callingClass.getName()] ?\n                value.privatePropertiesByFQCN[callingClass.getName()][name] :\n                null;\n\n            if (propertyReference) {\n                // Property is private, and we're inside the class that defines it so we're good to go.\n                // Private properties should be the most common, so this is the first case for speed\n                return propertyReference;\n            }\n\n            propertyReference = value.nonPrivateProperties[name];\n\n            if (propertyReference) {\n                /*\n                 * Property is protected; may be read from methods of this class and methods of derivatives.\n                 * This case is checked before the privates-check hierarchy walk below for speed,\n                 * as invalid accesses to private properties should be rare\n                 */\n                if (propertyReference.getVisibility() === 'protected') {\n                    if (\n                        !callingClass ||\n                        (\n                            classOfObject.getName() !== callingClass.getName() &&\n                            !callingClass.isInFamilyOf(classOfObject)\n                        )\n                    ) {\n                        value.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                            className: classOfObject.getName(),\n                            propertyName: name,\n                            visibility: 'protected'\n                        });\n                    }\n                }\n            } else {\n                classInHierarchy = classOfObject;\n\n                // Check whether the property is in fact defined, but is defined as private\n                // for a class that is not the calling class - if so then we are not allowed to access it\n                do {\n                    propertyReference = value.privatePropertiesByFQCN[classInHierarchy.getName()] ?\n                        value.privatePropertiesByFQCN[classInHierarchy.getName()][name] :\n                        null;\n\n                    if (propertyReference) {\n                        if (callingClass && callingClass.extends(classInHierarchy)) {\n                            // We're in a class that is a descendant of the one that defines the private property\n                            value.callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_PROPERTY, {\n                                className: callingClass.getName(),\n                                propertyName: name\n                            });\n                        } else if (callingClass && classInHierarchy !== classOfObject) {\n                            // The current object is a descendant of the one that defines the private property,\n                            // but we're in a class that is an ancestor of the definer -\n                            // just treat the property as not defined\n                            break;\n                        } else {\n                            // Property is private, but we're not trying to access it from inside the class\n                            value.callStack.raiseTranslatedError(PHPError.E_ERROR, CANNOT_ACCESS_PROPERTY, {\n                                className: classOfObject.getName(),\n                                propertyName: name,\n                                visibility: 'private'\n                            });\n                        }\n                    }\n\n                    classInHierarchy = classInHierarchy.getSuperClass();\n                } while (classInHierarchy !== null);\n\n                /*\n                 * Property is not yet defined for this object by any of its class hierarchy or dynamically -\n                 * define it dynamically as a public property.\n                 * This is a relatively slow case as it is only done after the privates-check hierarchy walk above,\n                 * but this _should_ be a rare scenario so it makes sense not to optimise for it\n                 */\n                propertyReference = value.declareProperty(name, value.classObject, 'public');\n            }\n\n            return propertyReference;\n        },\n\n        /**\n         * Fetches the names of all visible instance properties of this object, wrapped as values\n         *\n         * @returns {Value[]}\n         */\n        getInstancePropertyNames: function () {\n            var callingClass,\n                nameHash = {},\n                sortedNames,\n                value = this;\n\n            // Include the names of all properties of the wrapped native object\n            // TODO: Move this custom logic to JSObject, called via a magic method?\n            _.forOwn(value.value, function (value, name) {\n                nameHash[name] = -1;\n            });\n\n            // Fetch the class that the current line of PHP code is executing inside (if any)\n            callingClass = value.callStack.getCurrentClass();\n\n            // Include the names of all private properties defined on the calling class\n            if (callingClass) {\n                _.forOwn(value.privatePropertiesByFQCN, function (propertyReferences, fqcn) {\n                    if (fqcn === callingClass.getName()) {\n                        _.forOwn(propertyReferences, function (propertyReference, propertyName) {\n                            if (propertyReference.isDefined()) {\n                                nameHash[propertyName] = propertyReference.getIndex();\n                            }\n                        });\n                    }\n                });\n            }\n\n            // Include all public properties and all protected properties that belong\n            // to ancestor or descendant classes of the calling class\n            _.forOwn(value.nonPrivateProperties, function (propertyReference, propertyName) {\n                if (propertyReference.isDefined() && propertyReference.isVisible()) {\n                    nameHash[propertyName] = propertyReference.getIndex();\n                }\n            });\n\n            sortedNames = Object.keys(nameHash);\n            sortedNames.sort(function (nameA, nameB) {\n                return nameHash[nameA] - nameHash[nameB];\n            });\n\n            // Wrap all the names in Value objects before returning\n            return sortedNames.map(function (name) {\n                return value.factory.coerce(name);\n            });\n        },\n\n        /**\n         * Sets the value of an internal property for this object. Internal properties\n         * have nothing to do with the native object they wrap, so this mechanism\n         * is useful for native classes to store data without PHP code having access to it\n         *\n         * @param {string} name\n         * @returns {*}\n         */\n        getInternalProperty: function (name) {\n            var value = this;\n\n            if (!hasOwn.call(value.internalProperties, name)) {\n                throw new Error(\n                    'Object of class \"' + value.getClassName() + '\" has no internal property \"' + name + '\"'\n                );\n            }\n\n            return value.internalProperties[name];\n        },\n\n        /**\n         * Fetches either an ArrayIterator (for a normal object)\n         * or the object itself if it implements Traversable via Iterator or IteratorAggregate.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {ArrayIterator|ObjectValue}\n         */\n        getIterator: function () {\n            var value = this,\n                iteratorValue = value;\n\n            value.pointer = 0;\n\n            if (iteratorValue.classIs('IteratorAggregate')) {\n                // IteratorAggregate requires its ->getIterator() method to return something iterable\n                iteratorValue = iteratorValue.callMethod('getIterator');\n\n                if (iteratorValue.getType() !== 'object' || !iteratorValue.classIs('Iterator')) {\n                    throw value.factory.createTranslatedExceptionObject(\n                        'Exception',\n                        OBJECT_FROM_GET_ITERATOR_MUST_BE_TRAVERSABLE,\n                        {\n                            className: value.getClassName()\n                        }\n                    );\n                }\n            }\n\n            if (!iteratorValue.classIs('Iterator')) {\n                // Objects not implementing Traversable are iterated like arrays\n                return value.factory.createArrayIterator(value);\n            }\n\n            iteratorValue.callMethod('rewind');\n\n            return iteratorValue;\n        },\n\n        /**\n         * Fetches a key (property name) of this object by its index\n         *\n         * @param {number} index\n         * @returns {Value|null}\n         */\n        getKeyByIndex: function (index) {\n            var value = this,\n                keys = value.getInstancePropertyNames();\n\n            return keys[index] || null;\n        },\n\n        /**\n         * Fetches the length (number of properties) for this object, regardless of their visibility\n         *\n         * @returns {number}\n         */\n        getLength: function () {\n            var value = this,\n                // Fetch the class that the current line of PHP code is executing inside (if any)\n                callingClass = value.callStack.getCurrentClass(),\n                count = 0;\n\n            // Include the names of all private properties defined on the calling class\n            if (callingClass) {\n                _.forOwn(value.privatePropertiesByFQCN, function (propertyReferences, fqcn) {\n                    if (fqcn === callingClass.getName()) {\n                        _.forOwn(propertyReferences, function (propertyReference) {\n                            if (propertyReference.isDefined()) {\n                                count++;\n                            }\n                        });\n                    }\n                });\n            }\n\n            // Include all public properties and all protected properties that belong\n            // to ancestor or descendant classes of the calling class\n            _.forOwn(value.nonPrivateProperties, function (propertyReference) {\n                if (propertyReference.isDefined() && propertyReference.isVisible()) {\n                    count++;\n                }\n            });\n\n            return count;\n        },\n\n        /**\n         * Unwraps this PHP object value to something that non-PHPCore JS code will understand.\n         * Special PHP classes like Closure and stdClass are unwrapped specially\n         *\n         * @returns {Object|*}\n         */\n        getNative: function () {\n            var value = this;\n\n            return value.classObject.exportInstanceForJS(value);\n        },\n\n        /**\n         * Fetches a map of all non-private property names to values\n         *\n         * @returns {Object.<string, Value>}\n         */\n        getNonPrivateProperties: function () {\n            var value = this,\n                propertyNamesToValues = {};\n\n            _.forOwn(value.nonPrivateProperties, function (propertyReference, propertyName) {\n                propertyNamesToValues[propertyName] = propertyReference.getValue();\n            });\n\n            return propertyNamesToValues;\n        },\n\n        /**\n         * Fetches the wrapped native JS object\n         *\n         * @returns {object}\n         */\n        getObject: function () {\n            return this.value;\n        },\n\n        getPointer: function () {\n            return this.pointer;\n        },\n\n        /**\n         * Fetches the names of all instance properties of this object\n         *\n         * @returns {string[]}\n         */\n        getPropertyNames: function () {\n            return this.getInstancePropertyNames().map(function (nameValue) {\n                return nameValue.getNative();\n            });\n        },\n\n        /**\n         * Exports a proxy object that allows JS code to call any method of this object\n         * (including magic ones implemented with __call)\n         *\n         * @returns {PHPObject}\n         */\n        getProxy: function () {\n            var value = this;\n\n            return value.classObject.proxyInstanceForJS(value);\n        },\n\n        /**\n         * Fetches a reference to a static property of this object's class by its name\n         *\n         * @param {Reference|Value} nameValue\n         * @returns {StaticPropertyReference|UndeclaredStaticPropertyReference}\n         */\n        getStaticPropertyByName: function (nameValue) {\n            return this.classObject.getStaticPropertyByName(nameValue.getNative());\n        },\n\n        /**\n         * Fetches either this ObjectValue or its inner native object, based on the class' auto-coercion mode\n         *\n         * @returns {ObjectValue|Object}\n         */\n        getThisObject: function () {\n            var value = this;\n\n            return value.classObject.getThisObjectForInstance(value);\n        },\n\n        /**\n         * Creates a new instance of the class of this object for a normal PHP object.\n         * For a JSObject, if the wrapped object is a function then it will create\n         * a new instance of the wrapped JS class instead,\n         * returning the resulting new JSObject instance\n         *\n         * @param {Value[]} args\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args) {\n            var value = this,\n                nativeObject,\n                objectValue,\n                unwrappedArgs;\n\n            if (value.getClassName() !== 'JSObject') {\n                // A normal PHP object is being instantiated as a class -\n                // we just need to create a new instance of this object's class\n                return value.classObject.instantiate(args);\n            }\n\n            // A JS function is being instantiated as a class from PHP (bridge integration)\n\n            if (!_.isFunction(value.value)) {\n                throw new Error('Cannot create a new instance of a non-function JSObject');\n            }\n\n            // Unwrap the arguments to native values (as the constructor will be native JS)\n            unwrappedArgs = _.map(args, function (argValue) {\n                return argValue.getNative();\n            });\n\n            /**\n             * Create a new instance of the native class, using bind.apply(...)\n             * to support passing varargs to the constructor (and ES6+ classes).\n             *\n             * JS constructor functions can override the normal constructor process\n             * and return a completely different object, which this will handle automatically too.\n             */\n            nativeObject = new (function () {}.bind.apply(value.value, [undefined].concat(unwrappedArgs)))();\n\n            objectValue = value.factory.coerceObject(nativeObject);\n\n            return objectValue;\n        },\n\n        /**\n         * Invokes the native function this object wraps when it is an instance of Closure\n         *\n         * @param {Value[]} args\n         * @returns {Value}\n         */\n        invokeClosure: function (args) {\n            var closure,\n                value = this;\n\n            if (!value.classIs('Closure')) {\n                throw new Error('invokeClosure() :: Value is not a Closure');\n            }\n\n            closure = value.getInternalProperty('closure');\n\n            return closure.invoke(args);\n        },\n\n        /**\n         * Determines whether the object this reference resolves to is an instance of the specified class\n         *\n         * @param {Reference|Value} classNameValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {BooleanValue}\n         */\n        isAnInstanceOf: function (classNameValue, namespaceOrNamespaceScope) {\n            return classNameValue.isTheClassOfObject(this, namespaceOrNamespaceScope);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function () {\n            var value = this;\n\n            return value.classIs('Closure') ||\n                value.isMethodDefined('__invoke');\n        },\n\n        /**\n         * Objects are never classed as empty\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            return false;\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToObject(this);\n        },\n\n        isEqualToArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToFloat: function (floatValue) {\n            return this.factory.createBoolean(floatValue.getNative() === 1);\n        },\n\n        isEqualToInteger: function (integerValue) {\n            return this.factory.createBoolean(integerValue.getNative() === 1);\n        },\n\n        isEqualToNull: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        /**\n         * Determines whether this object is equal (but not necessarily identical) to another\n         *\n         * @param {ObjectValue} rightValue\n         * @returns {BooleanValue}\n         */\n        isEqualToObject: function (rightValue) {\n            var equal = true,\n                leftValue = this,\n                factory = leftValue.factory;\n\n            if (\n                rightValue.getLength() !== leftValue.getLength() ||\n                rightValue.getClassName() !== leftValue.getClassName()\n            ) {\n                return factory.createBoolean(false);\n            }\n\n            // Check public and protected properties\n            _.forOwn(rightValue.nonPrivateProperties, function (propertyReference, propertyName) {\n                if (\n                    !hasOwn.call(leftValue.nonPrivateProperties, propertyName) ||\n                    propertyReference.getValue().isNotEqualTo(\n                        leftValue.nonPrivateProperties[propertyName].getValue()\n                    ).getNative()\n                ) {\n                    equal = false;\n                    return false;\n                }\n            });\n            // Check private properties\n            _.forOwn(rightValue.privatePropertiesByFQCN, function (propertyReferences, fqcn) {\n                _.forOwn(propertyReferences, function (propertyReference, propertyName) {\n                    if (\n                        !hasOwn.call(leftValue.privatePropertiesByFQCN, fqcn) ||\n                        !hasOwn.call(leftValue.privatePropertiesByFQCN[fqcn], propertyName) ||\n                        propertyReference.getValue().isNotEqualTo(\n                            leftValue.privatePropertiesByFQCN[fqcn][propertyName].getValue()\n                        ).getNative()\n                    ) {\n                        equal = false;\n                        return false;\n                    }\n                });\n            });\n\n            return factory.createBoolean(equal);\n        },\n\n        isEqualToString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isIdenticalTo: function (rightValue) {\n            return rightValue.isIdenticalToObject(this);\n        },\n\n        isIdenticalToArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isIdenticalToObject: function (rightValue) {\n            var leftValue = this,\n                factory = leftValue.factory;\n\n            return factory.createBoolean(rightValue.value === leftValue.value);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return this.classIs('Traversable');\n        },\n\n        /**\n         * Determines whether the class of this object defines an instance or static method with the given name\n         *\n         * @param {string} methodName\n         * @returns {boolean}\n         */\n        isMethodDefined: function (methodName) {\n            return this.classObject.getMethodSpec(methodName) !== null;\n        },\n\n        /**\n         * Determines whether this iterator has finished iterating or not.\n         * Used by transpiled foreach loops over objects implementing Iterator.\n         *\n         * @returns {boolean}\n         */\n        isNotFinished: function () {\n            var value = this;\n\n            if (!value.classIs('Iterator')) {\n                throw new Exception('ObjectValue.isNotFinished() :: Object does not implement Iterator');\n            }\n\n            return value.callMethod('valid').coerceToBoolean().getNative();\n        },\n\n        /**\n         * Objects are never numeric: always returns false\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return false;\n        },\n\n        isTheClassOfArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfBoolean: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfFloat: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfInteger: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfNull: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfObject: function (leftValue) {\n            var rightValue = this;\n\n            return rightValue.factory.createBoolean(\n                rightValue.classObject === leftValue.classObject ||\n                    leftValue.classObject.extends(rightValue.classObject)\n            );\n        },\n\n        isTheClassOfString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        /**\n         * Multiplies this object by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByObject(this);\n        },\n\n        /**\n         * Multiplies this object by a non-array value\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            // Trigger notice due to coercion\n            this.coerceToInteger();\n\n            // Objects are always cast to int(1), so multiplier will always be 1\n            return leftValue.coerceToNumber();\n        },\n\n        /**\n         * Moves the internal array-like pointer to the specified property\n         *\n         * @param {PropertyReference} propertyReference\n         */\n        pointToProperty: function (propertyReference) {\n            var index = 0,\n                propertyName = propertyReference.getKey().getNative(),\n                value = this;\n\n            // Find the property in the set of properties visible to the current scope\n            _.each(value.getInstancePropertyNames(), function (name) {\n                if (name.getNative() === propertyName) {\n                    value.setPointer(index);\n                }\n\n                index++;\n            });\n        },\n\n        referToElement: function (key) {\n            return 'property: ' + this.getClassName() + '::$' + key;\n        },\n\n        reset: function () {\n            var value = this;\n\n            value.pointer = 0;\n\n            return value;\n        },\n\n        /**\n         * Sets the value of an internal property for this object. Internal properties\n         * have nothing to do with the native object they wrap, so this mechanism\n         * is useful for native classes to store data without PHP code having access to it\n         *\n         * @param {string} name\n         * @param {*} newValue\n         */\n        setInternalProperty: function (name, newValue) {\n            this.internalProperties[name] = newValue;\n        },\n\n        setPointer: function (pointer) {\n            this.pointer = pointer;\n        },\n\n        setProperty: function (name, newValue) {\n            var value = this,\n                nameValue = value.factory.createString(name);\n\n            value.getInstancePropertyByName(nameValue).setValue(newValue);\n        }\n    });\n\n    return ObjectValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('util'),\n    require('../Reference/Null'),\n    require('../Value')\n], function (\n    _,\n    phpCommon,\n    util,\n    NullReference,\n    Value\n) {\n    var PHPError = phpCommon.PHPError;\n\n    function StringValue(factory, callStack, value) {\n        Value.call(this, factory, callStack, 'string', value);\n    }\n\n    util.inherits(StringValue, Value);\n\n    _.extend(StringValue.prototype, {\n        add: function (rightValue) {\n            return rightValue.addToString(this);\n        },\n\n        addToBoolean: function (booleanValue) {\n            return this.coerceToNumber().add(booleanValue);\n        },\n\n        /**\n         * Calls a function or static method based on the contents of the string\n         *\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        call: function (args, namespaceOrNamespaceScope) {\n            var classNameValue,\n                match,\n                methodNameValue,\n                value = this;\n\n            if (value.value.indexOf('::') > -1) {\n                /**\n                 * Handle static method call format:\n                 *\n                 *     $func = 'My\\Stuff\\MyClass::myStaticMethod';\n                 *     $func(...);\n                 */\n                match = value.value.match(/(.*)::(.*)/);\n\n                classNameValue = value.factory.createString(match[1]);\n                methodNameValue = value.factory.createString(match[2]);\n\n                return classNameValue.callStaticMethod(\n                    methodNameValue,\n                    args,\n                    namespaceOrNamespaceScope\n                );\n            }\n\n            // Otherwise must just be the name of a function\n            return namespaceOrNamespaceScope.getGlobalNamespace().getFunction(value.value).apply(null, args);\n        },\n\n        /**\n         * Calls a static method of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Value[]} args\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @param {bool=} isForwarding eg. self::f() is forwarding, MyParentClass::f() is non-forwarding\n         * @returns {Value}\n         */\n        callStaticMethod: function (nameValue, args, namespaceOrNamespaceScope, isForwarding) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.callMethod(nameValue.getNative(), args, null, null, null, !!isForwarding);\n        },\n\n        coerceToBoolean: function () {\n            return this.factory.createBoolean(this.value !== '' && this.value !== '0');\n        },\n\n        /**\n         * Coerces this string to a float value\n         *\n         * @returns {FloatValue}\n         */\n        coerceToFloat: function () {\n            var value = this;\n\n            return value.factory.createFloat(/^(\\d|-[\\d.])/.test(value.value) ? parseFloat(value.value) : 0);\n        },\n\n        /**\n         * Coerces this string to an integer value\n         *\n         * @returns {IntegerValue}\n         */\n        coerceToInteger: function () {\n            var value = this;\n\n            return value.factory.createInteger(/^(\\d|-[\\d.])/.test(value.value) ? parseInt(value.value, 10) : 0);\n        },\n\n        coerceToKey: function () {\n            return this;\n        },\n\n        /**\n         * Coerces this string to either a FloatValue or IntegerValue, depending on its contents\n         *\n         * @returns {FloatValue|IntegerValue}\n         */\n        coerceToNumber: function () {\n            var value = this,\n                isFloat = /^-?\\d*(\\.|[eE][-+]?)\\d/.test(value.value);\n\n            if (isFloat) {\n                return value.coerceToFloat();\n            } else {\n                return value.coerceToInteger();\n            }\n        },\n\n        coerceToString: function () {\n            return this;\n        },\n\n        /**\n         * Divides this string by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        divide: function (rightValue) {\n            return rightValue.divideByString(this);\n        },\n\n        /**\n         * Divides a float by this string\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        divideByFloat: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisor = rightValue.coerceToNumber().getNative();\n\n            if (divisor === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            return rightValue.factory.createFloat(coercedLeftValue.getNative() / divisor);\n        },\n\n        /**\n         * Divides a non-array value by this string\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        divideByNonArray: function (leftValue) {\n            var coercedLeftValue,\n                rightValue = this,\n                divisorValue = rightValue.coerceToNumber(),\n                quotient;\n\n            if (divisorValue.getNative() === 0) {\n                rightValue.callStack.raiseError(PHPError.E_WARNING, 'Division by zero');\n\n                return rightValue.factory.createBoolean(false);\n            }\n\n            coercedLeftValue = leftValue.coerceToNumber();\n\n            quotient = coercedLeftValue.getNative() / divisorValue.getNative();\n\n            // Return result as a float if needed, otherwise keep as integer\n            return Math.round(quotient) !== quotient || divisorValue.getType() === 'float' ?\n                rightValue.factory.createFloat(quotient) :\n                rightValue.factory.createInteger(quotient);\n        },\n\n        /**\n         * Formats the string for display in stack traces etc.\n         *\n         * @returns {string}\n         */\n        formatAsString: function () {\n            // To match Zend's output, simply wrap the string value in single-quotes,\n            // leaving any embedded single-quotes unescaped\n            var textValue = this.value;\n\n            if (textValue.length > 15) {\n                // Truncate long strings to improve readability (as per Zend's output)\n                textValue = textValue.substr(0, 15) + '...';\n            }\n\n            return '\\'' + textValue + '\\'';\n        },\n\n        getCallableName: function () {\n            // Strip any leading backslash off to normalise\n            return this.value.replace(/^\\\\/, '');\n        },\n\n        /**\n         * Fetches the value of a constant from the class this string refers to\n         *\n         * @param {string} name\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getConstantByName: function (name, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.getConstantByName(name);\n        },\n\n        getElementByKey: function (key) {\n            var keyValue,\n                value = this;\n\n            key = key.coerceToKey(value.callStack);\n\n            if (!key) {\n                // Could not be coerced to a key: error will already have been handled, just return NULL\n                return new NullReference(value.factory);\n            }\n\n            keyValue = key.getNative();\n\n            return value.factory.createString(value.value.charAt(keyValue));\n        },\n\n        getLength: function () {\n            return this.value.length;\n        },\n\n        /**\n         * Fetches the value of a static property of the class this string refers to\n         *\n         * @param {StringValue} nameValue\n         * @param {Namespace|NamespaceScope} namespaceOrNamespaceScope\n         * @returns {Value}\n         */\n        getStaticPropertyByName: function (nameValue, namespaceOrNamespaceScope) {\n            var value = this,\n                classObject = namespaceOrNamespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.getStaticPropertyByName(nameValue.getNative());\n        },\n\n        /**\n         * Creates an instance of the class this string contains the FQCN of\n         *\n         * @param {Value[]} args\n         * @param {NamespaceScope} namespaceScope\n         * @returns {ObjectValue}\n         */\n        instantiate: function (args, namespaceScope) {\n            var value = this,\n                classObject = namespaceScope.getGlobalNamespace().getClass(value.value);\n\n            return classObject.instantiate(args);\n        },\n\n        isAnInstanceOf: function (classNameValue) {\n            return classNameValue.isTheClassOfString(this);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isCallable: function (globalNamespace) {\n            // Must just be the name of a function or static method - as this is a normal string\n            // and not a bareword, it should just be resolved as a FQCN\n            // and not relative to the current namespace scope\n\n            var className,\n                classObject,\n                match,\n                methodName,\n                value = this;\n\n            if (value.value.indexOf('::') > -1) {\n                /**\n                 * Handle static method call format:\n                 *\n                 *     $func = 'My\\Stuff\\MyClass::myStaticMethod';\n                 *     $func(...);\n                 */\n                match = value.value.match(/(.*)::(.*)/);\n\n                className = match[1];\n                methodName = match[2];\n\n                if (!globalNamespace.hasClass(className)) {\n                    return false;\n                }\n\n                classObject = globalNamespace.getClass(className);\n\n                return classObject.getMethodSpec(methodName) !== null;\n            }\n\n            return globalNamespace.hasFunction(value.value);\n        },\n\n        /**\n         * Determines whether this value is classed as \"empty\" or not\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            var value = this;\n\n            // NB: string(\"0.0\") is _not_ classed as empty\n            return value.value === '' || value.value === '0';\n        },\n\n        isEqualTo: function (rightValue) {\n            return rightValue.isEqualToString(this);\n        },\n\n        isEqualToNull: function () {\n            var value = this;\n\n            return value.factory.createBoolean(value.getNative() === '');\n        },\n\n        isEqualToObject: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isEqualToString: function (rightValue) {\n            var leftValue = this;\n\n            return leftValue.factory.createBoolean(leftValue.value === rightValue.value);\n        },\n\n        /**\n         * {@inheritdoc}\n         */\n        isIterable: function () {\n            return false;\n        },\n\n        /**\n         * Returns true if the string is numeric, false otherwise\n         *\n         * @returns {boolean}\n         */\n        isNumeric: function () {\n            return /(\\d+(\\.)?)?\\d+([Ee][+-]\\d+)?/.test(this.value);\n        },\n\n        isTheClassOfArray: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfBoolean: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfFloat: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfInteger: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfNull: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        isTheClassOfObject: function (objectValue) {\n            var rightValue = this;\n\n            return rightValue.factory.createBoolean(\n                objectValue.classIs(rightValue.value)\n            );\n        },\n\n        isTheClassOfString: function () {\n            return this.factory.createBoolean(false);\n        },\n\n        /**\n         * Multiplies this string by another value\n         *\n         * @param {Value} rightValue\n         * @returns {Value}\n         */\n        multiply: function (rightValue) {\n            return rightValue.multiplyByString(this);\n        },\n\n        /**\n         * Multiplies a float by this string\n         *\n         * @param {FloatValue} leftValue\n         * @returns {Value}\n         */\n        multiplyByFloat: function (leftValue) {\n            var coercedMultiplicandValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                multiplier = rightValue.coerceToNumber().getNative();\n\n            return rightValue.factory.createFloat(coercedMultiplicandValue.getNative() * multiplier);\n        },\n\n        /**\n         * Multiplies a non-array value by this string\n         *\n         * @param {Value} leftValue\n         * @returns {Value}\n         */\n        multiplyByNonArray: function (leftValue) {\n            var coercedMultiplicandValue = leftValue.coerceToNumber(),\n                rightValue = this,\n                coercedMultiplierValue = rightValue.coerceToNumber(),\n                product = coercedMultiplicandValue.getNative() * coercedMultiplierValue.getNative();\n\n            // Return result as a float if either coerced operand is a float, otherwise keep as integer\n            return coercedMultiplicandValue.getType() === 'float' || coercedMultiplierValue.getType() === 'float' ?\n                rightValue.factory.createFloat(product) :\n                rightValue.factory.createInteger(product);\n        },\n\n        onesComplement: function () {\n            return this.factory.createString('?');\n        }\n    });\n\n    return StringValue;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('is-promise'),\n    require('phpcommon'),\n    require('./Iterator/ArrayIterator'),\n    require('./Value/Array'),\n    require('./Value/BarewordString'),\n    require('./Value/Boolean'),\n    require('./Reference/Element/ElementProvider'),\n    require('./Value/Exit'),\n    require('./FFI/Result'),\n    require('./Value/Float'),\n    require('./Value/Integer'),\n    require('./KeyValuePair'),\n    require('./Value/Null'),\n    require('./Value/Object'),\n    require('./FFI/Value/PHPObject'),\n    require('./Value/String'),\n    require('./Value'),\n    require('./FFI/Value/ValueStorage')\n], function (\n    _,\n    isPromise,\n    phpCommon,\n    ArrayIterator,\n    ArrayValue,\n    BarewordStringValue,\n    BooleanValue,\n    ElementProvider,\n    ExitValue,\n    FFIResult,\n    FloatValue,\n    IntegerValue,\n    KeyValuePair,\n    NullValue,\n    ObjectValue,\n    PHPObject,\n    StringValue,\n    Value,\n    ValueStorage\n) {\n    var Exception = phpCommon.Exception;\n\n    /**\n     * Creates Value and related objects\n     *\n     * @param {Resumable|null} pausable\n     * @param {string} mode\n     * @param {ElementProvider} elementProvider\n     * @param {Translator} translator\n     * @param {CallFactory} callFactory\n     * @param {ErrorPromoter} errorPromoter\n     * @param {ValueStorage} valueStorage\n     * @constructor\n     */\n    function ValueFactory(\n        pausable,\n        mode,\n        elementProvider,\n        translator,\n        callFactory,\n        errorPromoter,\n        valueStorage\n    ) {\n        /**\n         * @type {CallFactory}\n         */\n        this.callFactory = callFactory;\n        /**\n         * @type {ElementProvider}\n         */\n        this.elementProvider = elementProvider || new ElementProvider();\n        /**\n         * Used for generating a unique ID for the next ObjectValue that is created\n         * (shown in the output of var_dump(...), for example)\n         *\n         * @type {number}\n         */\n        this.nextObjectID = 1;\n        /**\n         * @type {CallStack|null}\n         */\n        this.callStack = null;\n        /**\n         * @type {ErrorPromoter}\n         */\n        this.errorPromoter = errorPromoter;\n        /**\n         * @type {Namespace|null}\n         */\n        this.globalNamespace = null;\n        /**\n         * @type {string}\n         */\n        this.mode = mode;\n        /**\n         * The single NullValue for efficiency, created lazily in .createNull(...).\n         * It must be created lazily there as it depends on CallStack, which due to a circular dependency\n         * is injected via setter: .setCallStack(...). That setter is not always called, eg. by various unit tests,\n         * for simplicity.\n         *\n         * @type {NullValue|null}\n         */\n        this.nullValue = null;\n        /**\n         * @type {Resumable|null}\n         */\n        this.pausable = pausable;\n        /**\n         * @type {Translator}\n         */\n        this.translator = translator;\n        /**\n         * @type {ValueStorage}\n         */\n        this.valueStorage = valueStorage || new ValueStorage();\n    }\n\n    _.extend(ValueFactory.prototype, {\n        /**\n         * Attempts to resolve the given value to a Value object instance.\n         * - If already a Value instance, simply returns it.\n         * - If an FFIResult, it is handled as appropriate (pausing PHP execution if in async mode)\n         * - If any other primitive or object, it is coerced to a Value instance\n         *\n         * @param {*} value\n         * @return {Value}\n         */\n        coerce: function (value) {\n            var factory = this;\n\n            if (value instanceof Value) {\n                return value;\n            }\n\n            if (value instanceof FFIResult) {\n                // An FFI Result was returned, so we need to handle it as appropriate\n                return value.resolve(factory);\n            }\n\n            // TODO: Consider removing this behaviour altogether now that we have FFIResult?\n            if (isPromise(value) && factory.pausable) {\n                // A promise was returned (note that returning an FFIResult is preferred)\n                return this.coercePromise(value);\n            }\n\n            return factory.createFromNative(value);\n        },\n\n        /**\n         * Coerces the given array-like of natives and/or values\n         * into an array where all have been coerced to values\n         *\n         * @param {*[]} arrayLike\n         * @returns {Value[]}\n         */\n        coerceList: function (arrayLike) {\n            var coercedValues = [],\n                factory = this;\n\n            _.each(arrayLike, function (element) {\n                coercedValues.push(factory.coerce(element));\n            });\n\n            return coercedValues;\n        },\n\n        /**\n         * Coerces a JavaScript object to a PHP object instance of the special JSObject class\n         *\n         * @param {Object|Value} value\n         * @return {ObjectValue|Value}\n         * @throws {Error} Throws when a value other than an ObjectValue instance, null or undefined is given\n         */\n        coerceObject: function (value) {\n            var factory = this;\n\n            if (value instanceof Value) {\n                if (value.getType() !== 'object') {\n                    throw new Exception('Tried to coerce a Value of type \"' + value.getType() + '\" to object');\n                }\n\n                return value;\n            }\n\n            if (value === null || typeof value === 'undefined') {\n                return factory.createNull();\n            }\n\n            if (typeof value !== 'object') {\n                throw new Error('Only objects, null or undefined may be coerced to an object');\n            }\n\n            return factory.createObject(value, factory.globalNamespace.getClass('JSObject'));\n        },\n\n        /**\n         * Awaits a promise (in async mode). Throws if in psync or sync mode\n         *\n         * @param {Promise} promise\n         * @returns {Value}\n         */\n        coercePromise: function (promise) {\n            var factory = this,\n                pause;\n\n            if (!factory.pausable) {\n                throw new Exception('Cannot await a promise in non-async mode');\n            }\n\n            pause = factory.pausable.createPause();\n\n            // Wait for the returned promise to resolve or reject before continuing\n            promise.then(function (resultValue) {\n                // Remember we still need to coerce the result\n                pause.resume(factory.coerce(resultValue));\n            }, function (error) {\n                pause.throw(error);\n            });\n\n            return pause.now();\n        },\n\n        /**\n         * Creates a PHP ArrayValue. A custom element provider may optionally be provided,\n         * if special elements are required (for example, HookableElements, which are used\n         * by the special $GLOBALS superglobal for two-way binding to global variables)\n         *\n         * @param {Array} value\n         * @param {ElementProvider|HookableElementProvider=} elementProvider\n         * @return {ArrayValue}\n         */\n        createArray: function (value, elementProvider) {\n            var factory = this;\n\n            return new ArrayValue(\n                factory,\n                factory.callStack,\n                value,\n                null,\n                elementProvider || factory.elementProvider\n            );\n        },\n\n        /**\n         * Creates an ArrayIterator\n         *\n         * @param {ArrayValue|ObjectValue} arrayLikeValue\n         * @returns {ArrayIterator}\n         */\n        createArrayIterator: function (arrayLikeValue) {\n            return new ArrayIterator(arrayLikeValue);\n        },\n\n        /**\n         * Creates a BarewordStringValue\n         *\n         * @param {string} value\n         * @return {BarewordStringValue}\n         */\n        createBarewordString: function (value) {\n            var factory = this;\n\n            return new BarewordStringValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Creates a BooleanValue\n         *\n         * TODO: Consider having only two instances of BooleanValue, one for true and one for false,\n         *       to save on memory usage\n         *\n         * @param {boolean} value\n         * @return {BooleanValue}\n         */\n        createBoolean: function (value) {\n            var factory = this;\n\n            return new BooleanValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Instantiates a PHP Closure instance with the given internal closure object\n         *\n         * @param {Closure} closure Internal closure object\n         * @return {ObjectValue}\n         */\n        createClosureObject: function (closure) {\n            var factory = this,\n                closureClass = factory.globalNamespace.getClass('Closure');\n\n            return closureClass.instantiateWithInternals([], {\n                'closure': closure\n            });\n        },\n\n        /**\n         * Creates an ObjectValue wrapping a PHP Error instance (eg. a call to an undefined method)\n         *\n         * @param {string} className eg. Error, ParseError, DivisionByZeroError\n         * @param {string|null=} message\n         * @param {number|null=} code\n         * @param {ObjectValue|null=} previousThrowable\n         * @param {string=} filePath To override the file path\n         * @param {number=} lineNumber To override the line number\n         * @param {boolean=} reportsOwnContext Whether the error handles reporting its own file/line context\n         * @returns {ObjectValue}\n         */\n        createErrorObject: function (\n            className,\n            message,\n            code,\n            previousThrowable,\n            filePath,\n            lineNumber,\n            reportsOwnContext\n        ) {\n            var factory = this,\n                errorObject = factory.globalNamespace.getClass(className).instantiate([\n                    factory.createString(message || ''),\n                    factory.createInteger(code || 0),\n                    previousThrowable || factory.createNull()\n                ]);\n\n            if (reportsOwnContext) {\n                errorObject.setInternalProperty('reportsOwnContext', true);\n            }\n\n            // File and line cannot be passed as constructor args,\n            // so we need to manually set them here if specified\n\n            if (filePath !== null && filePath !== undefined) {\n                errorObject.setProperty('file', factory.createString(filePath));\n            }\n\n            if (lineNumber !== null && lineNumber !== undefined) {\n                errorObject.setProperty('line', factory.createInteger(lineNumber));\n            }\n\n            return errorObject;\n        },\n\n        /**\n         * Creates an ExitValue. This is a special type of value only returned as the result\n         * of an `exit;` or `die;` statement being executed from PHP\n         *\n         * @param {Value} statusValue\n         * @return {ExitValue}\n         */\n        createExit: function (statusValue) {\n            var factory = this;\n\n            return new ExitValue(factory, factory.callStack, statusValue);\n        },\n\n        /**\n         * Creates a FloatValue\n         *\n         * @param {number} value\n         * @return {FloatValue}\n         */\n        createFloat: function (value) {\n            var factory = this;\n\n            return new FloatValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Coerces a native JavaScript value to a suitable *Value object,\n         * based on its type. For example, a string primitive value from JS\n         * will be coerced to a StringValue instance for PHP\n         *\n         * @param {*} nativeValue\n         * @returns {Value}\n         */\n        createFromNative: function (nativeValue) {\n            var factory = this;\n\n            if (nativeValue === null || typeof nativeValue === 'undefined') {\n                return factory.createNull();\n            }\n\n            if (_.isString(nativeValue)) {\n                return factory.createString(nativeValue);\n            }\n\n            if (_.isNumber(nativeValue)) {\n                return factory.createInteger(nativeValue);\n            }\n\n            if (_.isBoolean(nativeValue)) {\n                return factory.createBoolean(nativeValue);\n            }\n\n            if (_.isArray(nativeValue)) {\n                return factory.createFromNativeArray(nativeValue);\n            }\n\n            return factory.createFromNativeObject(nativeValue);\n        },\n\n        /**\n         * Coerces a native JavaScript object to either an ArrayValue or ObjectValue object,\n         * depending on its suitability to be cast as an associative array\n         *\n         * @param {object} nativeObject\n         * @returns {ArrayValue|ObjectValue}\n         */\n        createFromNativeObject: function (nativeObject) {\n            var factory = this,\n                hasAMethod = false,\n                orderedElements = [];\n\n            if (nativeObject instanceof PHPObject) {\n                // PHPObjects wrap instances of PHP classes when exported with .getProxy()\n                return nativeObject.getObjectValue();\n            }\n\n            if (factory.valueStorage.hasObjectValueForExport(nativeObject)) {\n                // Objects exported with .getNative() are mapped back to their original ObjectValue\n                return factory.valueStorage.getObjectValueForExport(nativeObject);\n            }\n\n            // Handle plain objects -> associative arrays\n            if (Object.getPrototypeOf(nativeObject) === Object.prototype) {\n                _.forOwn(nativeObject, function (value) {\n                    if (_.isFunction(value)) {\n                        hasAMethod = true;\n                        return false;\n                    }\n                });\n\n                if (!hasAMethod) {\n                    // Plain object has no methods: can be safely cast to an associative array\n                    _.forOwn(nativeObject, function (value, key) {\n                        orderedElements.push(new KeyValuePair(factory.coerce(key), factory.coerce(value)));\n                    });\n\n                    return factory.createArray(orderedElements);\n                }\n\n                // Plain object, but has methods: needs to be cast to a JSObject\n            }\n\n            return factory.createObject(nativeObject, factory.globalNamespace.getClass('JSObject'));\n        },\n\n        /**\n         * Takes a native Array object and converts it to a wrapped ArrayValue for PHP\n         *\n         * @param {Array} nativeArray\n         * @returns {ArrayValue}\n         */\n        createFromNativeArray: function (nativeArray) {\n            var factory = this,\n                orderedElements = [];\n\n            _.each(nativeArray, function (value, index) {\n                orderedElements[index] = value;\n            });\n\n            _.forOwn(nativeArray, function (value, key) {\n                if (!isFinite(key) || key >= nativeArray.length) {\n                    orderedElements.push(new KeyValuePair(factory.coerce(key), factory.coerce(value)));\n                }\n            });\n\n            return factory.createArray(orderedElements);\n        },\n\n        /**\n         * Creates an IntegerValue\n         *\n         * @param {number} value\n         * @return {IntegerValue}\n         */\n        createInteger: function (value) {\n            var factory = this;\n\n            return new IntegerValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Creates a NullValue\n         *\n         * Note that there is only ever a single instance of NullValue to save on memory usage.\n         *\n         * @return {NullValue}\n         */\n        createNull: function () {\n            var factory = this;\n\n            if (factory.nullValue === null) {\n                factory.nullValue = new NullValue(factory, factory.callStack);\n            }\n\n            return factory.nullValue;\n        },\n\n        /**\n         * Creates an ObjectValue for a given native value and class\n         *\n         * @param {object} nativeValue\n         * @param {Class} classObject\n         * @returns {ObjectValue}\n         */\n        createObject: function (nativeValue, classObject) {\n            var factory = this;\n\n            // Object ID tracking is incomplete: ID should be freed when all references are lost\n            return new ObjectValue(\n                factory,\n                factory.callStack,\n                factory.translator,\n                nativeValue,\n                classObject,\n                factory.nextObjectID++\n            );\n        },\n\n        /**\n         * Creates an instance of the builtin stdClass class\n         *\n         * @return {ObjectValue}\n         */\n        createStdClassObject: function () {\n            var factory = this;\n\n            return factory.globalNamespace.getClass('stdClass').instantiate();\n        },\n\n        /**\n         * Creates a StringValue\n         *\n         * @param {string} value\n         * @return {StringValue}\n         */\n        createString: function (value) {\n            var factory = this;\n\n            return new StringValue(factory, factory.callStack, value);\n        },\n\n        /**\n         * Creates an ObjectValue wrapping a PHP Error instance (eg. a call to an undefined method)\n         *\n         * @param {string} className eg. Error, ParseError, DivisionByZeroError\n         * @param {string} translationKey\n         * @param {Object.<string, string>=} placeholderVariables\n         * @param {number|null=} code\n         * @param {ObjectValue|null=} previousThrowable\n         * @param {string=} filePath To override the file path\n         * @param {number=} lineNumber To override the line number\n         * @returns {ObjectValue}\n         */\n        createTranslatedErrorObject: function (\n            className,\n            translationKey,\n            placeholderVariables,\n            code,\n            previousThrowable,\n            filePath,\n            lineNumber\n        ) {\n            var factory = this,\n                message = factory.translator.translate(translationKey, placeholderVariables);\n\n            return factory.createErrorObject(\n                className,\n                message,\n                code,\n                previousThrowable,\n                filePath,\n                lineNumber\n            );\n        },\n\n        /**\n         * Creates an ObjectValue wrapping a PHP Exception instance (eg. a RuntimeException)\n         *\n         * @param {string} className eg. Exception, LogicException, RuntimeException\n         * @param {string} translationKey\n         * @param {Object.<string, string>=} placeholderVariables\n         * @param {number|null=} code\n         * @param {ObjectValue|null=} previousThrowable\n         * @returns {ObjectValue}\n         */\n        createTranslatedExceptionObject: function (\n            className,\n            translationKey,\n            placeholderVariables,\n            code,\n            previousThrowable\n        ) {\n            var factory = this,\n                message = factory.translator.translate(translationKey, placeholderVariables);\n\n            return factory.instantiateObject(\n                className,\n                [\n                    message,\n                    code,\n                    previousThrowable\n                ]\n            );\n        },\n\n        /**\n         * Creates an ObjectValue instance of the specified class\n         *\n         * @param {string} className\n         * @param {Array} constructorArgNatives\n         * @returns {ObjectValue}\n         */\n        instantiateObject: function (className, constructorArgNatives) {\n            var factory = this,\n                constructorArgValues = _.map(constructorArgNatives, function (argNative) {\n                    return factory.coerce(argNative);\n                });\n\n            return factory.globalNamespace.getClass(className).instantiate(constructorArgValues);\n        },\n\n        /**\n         * Determines whether the given object is a PHP Value instance\n         *\n         * @param {Object} object\n         * @return {boolean}\n         */\n        isValue: function (object) {\n            return object instanceof Value;\n        },\n\n        /**\n         * Sets the CallStack to use for created value objects\n         *\n         * @param {CallStack} callStack\n         */\n        setCallStack: function (callStack) {\n            this.callStack = callStack;\n        },\n\n        /**\n         * Sets the root/global namespace\n         *\n         * @param {Namespace} globalNamespace\n         */\n        setGlobalNamespace: function (globalNamespace) {\n            this.globalNamespace = globalNamespace;\n        }\n    });\n\n    return ValueFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash'),\n    require('phpcommon'),\n    require('./Reference/ReferenceSlot')\n], function (\n    _,\n    phpCommon,\n    ReferenceSlot\n) {\n    var USED_THIS_OUTSIDE_OBJECT_CONTEXT = 'core.used_this_outside_object_context',\n        PHPError = phpCommon.PHPError;\n\n    /**\n     * Variables can either hold a value directly or hold a pointer\n     * to a reference (an array element, object instance property or static class property etc.)\n     *\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @param {string} name\n     * @constructor\n     */\n    function Variable(callStack, valueFactory, name) {\n        /**\n         * @type {string}\n         */\n        this.name = name;\n        /**\n         * @type {Reference|null}\n         */\n        this.reference = null;\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {Value|null}\n         */\n        this.value = null;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n    }\n\n    _.extend(Variable.prototype, {\n        /**\n         * Coerces this value and the specified one to strings,\n         * concatenates them together and then assigns the result back to this variable\n         *\n         * @param {Value} rightValue\n         */\n        concatWith: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().concat(rightValue));\n        },\n\n        decrementBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().subtract(rightValue));\n        },\n\n        /**\n         * Divides the value of this variable by the specified value\n         *\n         * Used by the `/=` operator\n         *\n         * @param {Value} rightValue\n         */\n        divideBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().divide(rightValue));\n        },\n\n        /**\n         * Formats the variable (which may not be defined) for display in stack traces etc.\n         *\n         * @returns {string}\n         */\n        formatAsString: function () {\n            var variable = this;\n\n            return variable.isDefined() ?\n                variable.getValue().formatAsString() :\n                'NULL';\n        },\n\n        /**\n         * Fetches a property of an object stored in this variable\n         *\n         * @param {Value} nameValue\n         * @returns {PropertyReference}\n         */\n        getInstancePropertyByName: function (nameValue) {\n            var variable = this;\n\n            if (variable.name === 'this' && variable.value === null) {\n                variable.callStack.raiseTranslatedError(PHPError.E_ERROR, USED_THIS_OUTSIDE_OBJECT_CONTEXT);\n            }\n\n            return variable.getValue().getInstancePropertyByName(nameValue);\n        },\n\n        /**\n         * Fetches the name of this variable, which must be unique within its scope\n         *\n         * @returns {string}\n         */\n        getName: function () {\n            return this.name;\n        },\n\n        /**\n         * Fetches the value of this variable. If it holds a value directly\n         * this will be returned, otherwise if it is a reference to another\n         * variable or reference (array element/object property etc.)\n         * then the value of the reference will be fetched\n         *\n         * @returns {Value}\n         */\n        getValue: function () {\n            var variable = this;\n\n            if (variable.value) {\n                return variable.value;\n            }\n\n            if (variable.reference) {\n                return variable.reference.getValue();\n            }\n\n            if (variable.name === 'this') {\n                variable.callStack.raiseTranslatedError(PHPError.E_ERROR, USED_THIS_OUTSIDE_OBJECT_CONTEXT);\n            }\n\n            variable.callStack.raiseError(PHPError.E_NOTICE, 'Undefined variable: ' + variable.name);\n\n            return variable.valueFactory.createNull();\n        },\n\n        /**\n         * Returns this variable's value if defined, NULL otherwise.\n         * No notice/warning will be raised if the variable has no value defined.\n         *\n         * @return {Value}\n         */\n        getValueOrNull: function () {\n            var variable = this;\n\n            return variable.isDefined() ?\n                variable.getValue() :\n                variable.valueFactory.createNull();\n        },\n\n        getNative: function () {\n            return this.getValue().getNative();\n        },\n\n        /**\n         * Fetches a reference to this variable's value\n         *\n         * @returns {Reference}\n         */\n        getReference: function () {\n            var variable = this;\n\n            if (variable.reference) {\n                // This variable already refers to something else, so return its target\n                return variable.reference;\n            }\n\n            // Implicitly define a \"slot\" to contain this variable's value\n            variable.reference = new ReferenceSlot(variable.valueFactory);\n\n            if (variable.value) {\n                variable.reference.setValue(variable.value);\n                variable.value = null; // This variable now has a reference (to the slot) and not a value\n            }\n\n            return variable.reference;\n        },\n\n        incrementBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().add(rightValue));\n        },\n\n        /**\n         * Determines whether this variable is defined,\n         * either with a value directly assigned or by being\n         * a reference to another variable/reference\n         *\n         * @returns {boolean}\n         */\n        isDefined: function () {\n            var variable = this;\n\n            return !!(variable.value || variable.reference);\n        },\n\n        /**\n         * Determines whether this variable is classed as \"empty\" or not\n         *\n         * @returns {boolean}\n         */\n        isEmpty: function () {\n            var variable = this;\n\n            return !variable.isDefined() || variable.getValue().isEmpty();\n        },\n\n        /**\n         * Determines whether this variable is classed as \"set\" or not\n         *\n         * @returns {boolean}\n         */\n        isSet: function () {\n            var variable = this;\n\n            return variable.isDefined() && variable.getValue().isSet();\n        },\n\n        /**\n         * Multiplies the value of this variable by the specified value\n         *\n         * Used by the `*=` operator\n         *\n         * @param {Value} rightValue\n         */\n        multiplyBy: function (rightValue) {\n            var variable = this;\n\n            variable.setValue(variable.getValue().multiply(rightValue));\n        },\n\n        /**\n         * Decrements the stored value, returning its original value\n         *\n         * @returns {Value}\n         */\n        postDecrement: function () {\n            var variable = this,\n                decrementedValue = variable.getValue().decrement(),\n                result = variable.getValue();\n\n            if (decrementedValue) {\n                variable.setValue(decrementedValue);\n            }\n\n            return result;\n        },\n\n        /**\n         * Decrements the stored value, returning its new value\n         *\n         * @returns {Value}\n         */\n        preDecrement: function () {\n            var variable = this,\n                decrementedValue = variable.getValue().decrement();\n\n            if (decrementedValue) {\n                variable.setValue(decrementedValue);\n            }\n\n            return variable.getValue();\n        },\n\n        /**\n         * Increments the stored value, returning its original value\n         *\n         * @returns {Value}\n         */\n        postIncrement: function () {\n            var variable = this,\n                incrementedValue = variable.getValue().increment(),\n                result = variable.getValue();\n\n            if (incrementedValue) {\n                variable.setValue(incrementedValue);\n            }\n\n            return result;\n        },\n\n        /**\n         * Increments the stored value, returning its new value\n         *\n         * @returns {Value}\n         */\n        preIncrement: function () {\n            var variable = this,\n                incrementedValue = variable.getValue().increment();\n\n            if (incrementedValue) {\n                variable.setValue(incrementedValue);\n            }\n\n            return variable.getValue();\n        },\n\n        /**\n         * Sets either the value or the reference of this variable depending on the argument provided\n         *\n         * @param {Reference|Value|Variable} referenceOrValue\n         */\n        setReferenceOrValue: function (referenceOrValue) {\n            var variable = this;\n\n            if (variable.valueFactory.isValue(referenceOrValue)) {\n                variable.setValue(referenceOrValue);\n            } else {\n                variable.setReference(referenceOrValue.getReference());\n            }\n        },\n\n        /**\n         * Sets the value of this variable. If it holds a value directly\n         * this will be overwritten, otherwise if it is a reference to another\n         * variable or reference (array element/object property etc.)\n         * then the value of the reference will be changed instead.\n         * Returns the value that was assigned\n         *\n         * @param {Reference|Value} value\n         * @returns {Value}\n         */\n        setValue: function (value) {\n            var variable = this;\n\n            if (variable.name === 'this' && value.getType() === 'null') {\n                // Normalise the value of $this to either be set to an ObjectValue\n                // or be unset\n                variable.value = null;\n\n                return value;\n            }\n\n            if (variable.reference) {\n                variable.reference.setValue(value);\n            } else {\n                variable.value = value.getForAssignment();\n            }\n\n            return value;\n        },\n\n        setReference: function (reference) {\n            var variable = this;\n\n            variable.reference = reference;\n            variable.value = null;\n\n            return variable;\n        },\n\n        toArray: function () {\n            return this.value.toArray();\n        },\n\n        toBoolean: function () {\n            return this.value.toBoolean();\n        },\n\n        toFloat: function () {\n            return this.value.toFloat();\n        },\n\n        toInteger: function () {\n            return this.value.toInteger();\n        },\n\n        unset: function () {\n            var variable = this;\n\n            variable.value = variable.reference = null;\n        }\n    });\n\n    return Variable;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('microdash')\n], function (\n    _\n) {\n    /**\n     * @param {class} Variable\n     * @param {CallStack} callStack\n     * @param {ValueFactory} valueFactory\n     * @constructor\n     */\n    function VariableFactory(\n        Variable,\n        callStack,\n        valueFactory\n    ) {\n        /**\n         * @type {CallStack}\n         */\n        this.callStack = callStack;\n        /**\n         * @type {ValueFactory}\n         */\n        this.valueFactory = valueFactory;\n        /**\n         * @type {class}\n         */\n        this.Variable = Variable;\n    }\n\n    _.extend(VariableFactory.prototype, {\n        /**\n         * Creates a new Variable\n         *\n         * @param {string} variableName\n         * @returns {Variable}\n         */\n        createVariable: function (variableName) {\n            var factory = this;\n\n            return new factory.Variable(factory.callStack, factory.valueFactory, variableName);\n        }\n    });\n\n    return VariableFactory;\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('./functions/optionsAndInfo/config'),\n    require('./constants/errorHandling'),\n    require('./ini/errorHandling'),\n    require('./messages/error.en_GB'),\n    require('./messages/misc.en_GB'),\n    require('./messages/notice.en_GB'),\n    require('./constants/reserved'),\n    require('./functions/spl'),\n    require('./classes/stdClass'),\n    require('./classes/Error/ArgumentCountError'),\n    require('./interfaces/ArrayAccess'),\n    require('./classes/Closure'),\n    require('./classes/Error/CompileError'),\n    require('./classes/Error'),\n    require('./classes/Exception'),\n    require('./interfaces/Iterator'),\n    require('./interfaces/IteratorAggregate'),\n    require('./classes/JSObject'),\n    require('./classes/Error/ParseError'),\n    require('./interfaces/Throwable'),\n    require('./interfaces/Traversable'),\n    require('./classes/Error/TypeError')\n], function (\n    configOptionsAndInfoFunctions,\n    errorHandlingConstants,\n    errorHandlingDefaultINIOptions,\n    errorMessages,\n    miscellaneousMessages,\n    noticeMessages,\n    reservedConstants,\n    splFunctions,\n    stdClass,\n    ArgumentCountError,\n    ArrayAccess,\n    Closure,\n    CompileError,\n    Error,\n    Exception,\n    Iterator,\n    IteratorAggregate,\n    JSObject,\n    ParseError,\n    Throwable,\n    Traversable,\n    TypeError\n) {\n    return {\n        classes: [\n            {'stdClass': stdClass},\n            {'ArrayAccess': ArrayAccess},\n            {'Closure': Closure},\n            {'Throwable': Throwable},\n            {'Error': Error},\n            {'CompileError': CompileError},\n            {'ParseError': ParseError},\n            {'TypeError': TypeError},\n            {'ArgumentCountError': ArgumentCountError},\n            {'Exception': Exception},\n            {'Iterator': Iterator},\n            {'IteratorAggregate': IteratorAggregate},\n            {'JSObject': JSObject},\n            {'Traversable': Traversable}\n        ],\n        constantGroups: [\n            errorHandlingConstants,\n            reservedConstants\n        ],\n        functionGroups: [\n            configOptionsAndInfoFunctions,\n            splFunctions\n        ],\n        defaultINIGroups: [\n            errorHandlingDefaultINIOptions\n        ],\n        translationCatalogues: [\n            errorMessages,\n            noticeMessages,\n            miscellaneousMessages\n        ]\n    };\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    PHPError = require('phpcommon').PHPError,\n    Promise = require('lie');\n\nmodule.exports = function (internals) {\n    var callFactory = internals.callFactory,\n        callStack = internals.callStack,\n        createStaticMethod = function (method) {\n            method.isStatic = true;\n\n            return method;\n        },\n        errorPromoter = internals.errorPromoter,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    /**\n     * Class used to represent anonymous functions or \"closures\"\n     *\n     * @see {@link https://secure.php.net/manual/en/class.closure.php}\n     * @see {@link https://secure.php.net/manual/en/closure.construct.php}\n     *\n     * @constructor\n     */\n    function Closure() {\n\n    }\n\n    _.extend(Closure.prototype, {\n        /**\n         * Duplicates a closure with a specific bound object and class scope\n         *\n         * @see {@link https://secure.php.net/manual/en/closure.bind.php}\n         *\n         * @param {ObjectValue|Variable} closureReference\n         * @param {ObjectValue|Variable|undefined} newThisReference\n         * @param {StringValue|Variable|undefined} newScopeReference\n         */\n        'bind': createStaticMethod(function (closureReference, newThisReference, newScopeReference) {\n            var closureValue,\n                newScopeValue,\n                newThisValue,\n                scopeClass,\n                scopeClassName;\n\n            if (!closureReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects at least 2 parameters, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            if (!newThisReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects at least 2 parameters, 1 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            closureValue = closureReference.getValue();\n\n            if (closureValue.getType() !== 'object' || !closureValue.classIs('Closure')) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects parameter 1 to be Closure, ' + closureValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newThisValue = newThisReference.getValue();\n\n            if (newThisValue.getType() !== 'object' && newThisValue.getType() !== 'null') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bind() expects parameter 2 to be object, ' + newThisValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newScopeValue = newScopeReference ? newScopeReference.getValue() : null;\n\n            if (newScopeValue) {\n                if (newScopeValue.getType() === 'object') {\n                    // Use object's class as the scope class\n                    scopeClassName = newScopeValue.getClassName();\n                } else {\n                    // For any other type, coerce to string to use as class name\n                    // (yes, even integers/floats or resources)\n                    scopeClassName = newScopeValue.coerceToString().getNative();\n                }\n            } else {\n                scopeClassName = null;\n            }\n\n            // Fetch the class to use as the static scope if specified,\n            // otherwise if not specified or \"static\", use the class of the `$this` object\n            if (scopeClassName && scopeClassName !== 'static') {\n                scopeClass = globalNamespace.getClass(scopeClassName);\n            } else if (newThisValue.getType() !== 'null') {\n                scopeClass = newThisValue.getClass();\n            } else {\n                scopeClass = null;\n            }\n\n            return valueFactory.createClosureObject(closureValue.bindClosure(newThisValue, scopeClass));\n        }),\n\n        /**\n         * Duplicates a closure with a specific bound object and class scope\n         *\n         * @see {@link https://secure.php.net/manual/en/closure.bindto.php}\n         *\n         * @param {ObjectValue|Variable|undefined} newThisReference\n         * @param {StringValue|Variable|undefined} newScopeReference\n         */\n        'bindTo': function (newThisReference, newScopeReference) {\n            var closureValue = this,\n                newScopeValue,\n                newThisValue,\n                scopeClass,\n                scopeClassName;\n\n            if (!newThisReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bindTo() expects at least 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newThisValue = newThisReference.getValue();\n\n            if (newThisValue.getType() !== 'object' && newThisValue.getType() !== 'null') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Closure::bindTo() expects parameter 1 to be object, ' + newThisValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            newScopeValue = newScopeReference ? newScopeReference.getValue() : null;\n\n            if (newScopeValue) {\n                if (newScopeValue.getType() === 'object') {\n                    // Use object's class as the scope class\n                    scopeClassName = newScopeValue.getClassName();\n                } else {\n                    // For any other type, coerce to string to use as class name\n                    // (yes, even integers/floats or resources)\n                    scopeClassName = newScopeValue.coerceToString().getNative();\n                }\n            } else {\n                scopeClassName = null;\n            }\n\n            // Fetch the class to use as the static scope if specified,\n            // otherwise if not specified or \"static\", use the class of the `$this` object\n            if (scopeClassName && scopeClassName !== 'static') {\n                scopeClass = globalNamespace.getClass(scopeClassName);\n            } else if (newThisValue.getType() !== 'null') {\n                scopeClass = newThisValue.getClass();\n            } else {\n                scopeClass = null;\n            }\n\n            return valueFactory.createClosureObject(closureValue.bindClosure(newThisValue, scopeClass));\n        },\n\n        /**\n         * Invokes the closure with the specified arguments, using calling magic.\n         *\n         * @see {@link http://php.net/manual/en/language.oop5.magic.php#language.oop5.magic.invoke}\n         *\n         * @returns {Value}\n         */\n        '__invoke': function () {\n            return this.invokeClosure([].slice.call(arguments));\n        }\n    });\n\n    internals.disableAutoCoercion();\n\n    /**\n     * This unwrapper will be used when an instance of this builtin PHP class Closure\n     * is returned from PHP-land to JS-land. We need to export a callable native JS function\n     * so that JS-land code can neatly call into the PHP-land closure like this.\n     */\n    internals.defineUnwrapper(function (objectValue) {\n        var closure = objectValue.getInternalProperty('closure');\n\n        // Unwrap PHP Closures to native JS functions that may be called\n        // just like any other (with arguments coerced from JS->PHP\n        // and the return value coerced from PHP->JS automatically)\n        return function __uniterInboundStackMarker__() {\n            // Wrap thisObj in *Value object\n            var thisObj = valueFactory.coerceObject(this),\n                // Wrap all native JS values in *Value objects\n                args = valueFactory.coerceList(arguments);\n\n            // Push an FFI call onto the stack, representing the call from JavaScript-land\n            callStack.push(callFactory.createFFICall([].slice.call(arguments)));\n\n            function popFFICall() {\n                callStack.pop();\n            }\n\n            if (internals.mode === 'async') {\n                return new Promise(function (resolve, reject) {\n                    // Call the method via Pausable to allow for blocking operation\n                    internals.pausable.call(\n                        closure.invoke,\n                        [args, thisObj],\n                        closure\n                    )\n                        // Pop the call off the stack _before_ returning, to mirror sync mode's behaviour\n                        .finally(popFFICall)\n                        .then(\n                            function (resultValue) {\n                                resolve(resultValue.getNative());\n                            },\n                            function (error) {\n                                if (valueFactory.isValue(error) && error.getType() === 'object') {\n                                    // Method threw a PHP Throwable, so throw a native JS error for it\n\n                                    // Feed the error into the ErrorReporting mechanism,\n                                    // so it will be written to stdout/stderr as applicable\n                                    reject(errorPromoter.promote(error));\n                                    return;\n                                }\n\n                                // Normal error: just pass it up to the caller\n                                reject(error);\n                            }\n                        );\n                });\n            }\n\n            function invoke() {\n                var nativeError;\n\n                // Call the closure, and then unwrap its result value back to a native one\n                try {\n                    return closure.invoke(args, thisObj).getNative();\n                } catch (error) {\n                    if (valueFactory.isValue(error) && error.getType() === 'object') {\n                        // Feed the error into the ErrorReporting mechanism,\n                        // so it will be written to stdout/stderr as applicable\n                        nativeError = errorPromoter.promote(error);\n\n                        throw nativeError;\n                    }\n\n                    throw error;\n                } finally {\n                    popFFICall();\n                }\n            }\n\n            if (internals.mode === 'psync') {\n                // For Promise-synchronous mode, we need to return a promise\n                // even though the actual invocation must return synchronously\n                return new Promise(function (resolve, reject) {\n                    try {\n                        resolve(invoke());\n                    } catch (error) {\n                        reject(error);\n                    }\n                });\n            }\n\n            // Otherwise we're in sync mode\n            return invoke();\n        };\n    });\n\n    return Closure;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        traceFormatter = internals.traceFormatter,\n        valueFactory = internals.valueFactory;\n\n    /**\n     * Base class for all internal non-warning/non-notice Errors\n     *\n     * @see {@link https://secure.php.net/manual/en/class.error.php}\n     * @see {@link https://secure.php.net/manual/en/error.construct.php}\n     *\n     * @param {Reference|Value|Variable=} messageReference\n     * @constructor\n     */\n    function Error(messageReference) {\n        var messageValue = messageReference ?\n                messageReference.getValue() :\n                valueFactory.createString('');\n\n        /**\n         * The internal `line` property is defined by the shadow constructor.\n         *\n         * If this class is extended but a parent constructor call is not used,\n         * then no parent constructor will be called (even this native constructor function).\n         *\n         * To run code regardless of whether the parent constructor is called, we use\n         * a \"shadow constructor\", defined below.\n         */\n\n        /**\n         * A message describing the error\n         *\n         * (Default to empty here - unless overridden by calling the constructor defined above\n         * or overridden by a subclass)\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.message}\n         */\n        this.setProperty('message', messageValue);\n    }\n\n    Error.shadowConstructor = function () {\n        // Define these data properties here, so they are always defined for any derived class of error,\n        // regardless of whether a parent constructor call is used or not\n\n        /**\n         * The file the error was created inside\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.file}\n         */\n        this.setProperty('file', valueFactory.coerce(callStack.getLastFilePath()));\n\n        /**\n         * The line the error was created on\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.line}\n         */\n        this.setProperty('line', valueFactory.coerce(callStack.getLastLine()));\n\n        /**\n         * A message describing the error\n         *\n         * (Default to empty here - unless overridden by calling the constructor defined above\n         * or overridden by a subclass)\n         *\n         * @see {@link https://secure.php.net/manual/en/class.error.php#error.props.message}\n         */\n        this.setProperty('message', valueFactory.createString(''));\n\n        this.setInternalProperty('reportsOwnContext', false);\n\n        // This internal trace prop will not be visible to PHP code\n        // except for read-only via the ->getTraceAsString() method.\n        this.setInternalProperty('trace', callStack.getTrace());\n    };\n\n    // Error class should implement Throwable in PHP 7+\n    internals.implement('Throwable');\n\n    _.extend(Error.prototype, {\n        /**\n         * Fetches the path to the file containing the line this error was created from\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/error.getfile.php}\n         *\n         * @returns {StringValue}\n         */\n        getFile: function () {\n            return this.getProperty('file');\n        },\n\n        /**\n         * Fetches the line number this error was created on\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/error.getline.php}\n         *\n         * @returns {IntegerValue}\n         */\n        getLine: function () {\n            return this.getProperty('line');\n        },\n\n        /**\n         * Fetches the message for the error\n         *\n         * @see {@link https://secure.php.net/manual/en/error.getmessage.php}\n         *\n         * @returns {StringValue}\n         */\n        getMessage: function () {\n            return this.getProperty('message');\n        },\n\n        /**\n         * Gets the stack trace as a string\n         *\n         * @see {@link https://secure.php.net/manual/en/error.gettraceasstring.php}\n         *\n         * @returns {StringValue}\n         */\n        getTraceAsString: function () {\n            var trace = this.getInternalProperty('trace');\n\n            return valueFactory.createString(traceFormatter.format(trace));\n        }\n    });\n\n    internals.disableAutoCoercion();\n\n    return Error;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Thrown when an invalid number of arguments are passed to a user-defined function or method\n     *\n     * @see {@link https://secure.php.net/manual/en/class.argumentcounterror.php}\n     * @constructor\n     */\n    function ArgumentCountError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base TypeError class\n    internals.extendClass('TypeError');\n\n    internals.disableAutoCoercion();\n\n    return ArgumentCountError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Base class for compilation errors\n     *\n     * @see {@link https://secure.php.net/manual/en/class.compileerror.php}\n     * @constructor\n     */\n    function CompileError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base Error class\n    internals.extendClass('Error');\n\n    internals.disableAutoCoercion();\n\n    return CompileError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPParseError = phpCommon.PHPParseError;\n\nmodule.exports = function (internals) {\n    /**\n     * Thrown when an error occurs during parsing of PHP code, eg. when eval(...) is called\n     *\n     * @see {@link https://secure.php.net/manual/en/class.parseerror.php}\n     * @constructor\n     */\n    function ParseError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    internals.extendClass('CompileError');\n\n    internals.disableAutoCoercion();\n\n    internals.defineUnwrapper(function (errorValue) {\n        /*\n         * When throwing/returning a ParseError instance to JS-land, convert it to a PHPParseError from PHPCommon.\n         * Note that this is also used when returning rather than throwing, due to use of this unwrapper.\n         * This is useful for consistency, in the scenario where a ParseError is returned (not thrown)\n         * to JS-land, then later thrown from JS-land.\n         *\n         * Note that this unwrapper shadows the one defined on the Throwable interface.\n         */\n        return new PHPParseError(\n            errorValue.getProperty('message').getNative(),\n            errorValue.getProperty('file').getNative(),\n            errorValue.getProperty('line').getNative()\n        );\n    });\n\n    return ParseError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Base class for type errors\n     *\n     * @see {@link https://secure.php.net/manual/en/class.typeerror.php}\n     * @constructor\n     */\n    function TypeError() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base Error class\n    internals.extendClass('Error');\n\n    internals.disableAutoCoercion();\n\n    return TypeError;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        traceFormatter = internals.traceFormatter,\n        valueFactory = internals.valueFactory;\n\n    /**\n     * Base class for all user Exceptions\n     *\n     * @see {@link https://secure.php.net/manual/en/class.exception.php}\n     * @see {@link https://secure.php.net/manual/en/exception.construct.php}\n     *\n     * @param {Reference|Value|Variable=} messageReference\n     * @constructor\n     */\n    function Exception(messageReference) {\n        var messageValue = messageReference ?\n            messageReference.getValue() :\n            valueFactory.createString(''); // The default exception message is the empty string\n\n        /**\n         * The internal `trace` property is defined by the shadow constructor.\n         *\n         * If this class is extended but a parent constructor call is not used,\n         * then no parent constructor will be called (even this native constructor function).\n         *\n         * To run code regardless of whether the parent constructor is called, we use\n         * a \"shadow constructor\", defined below.\n         */\n\n        this.setProperty('message', messageValue);\n    }\n\n    Exception.shadowConstructor = function () {\n        // Define these data properties here, so they are always defined for any derived class of Exception,\n        // regardless of whether a parent constructor call is used or not\n\n        /**\n         * The file the exception was created inside\n         *\n         * @see {@link https://secure.php.net/manual/en/class.exception.php#exception.props.file}\n         */\n        this.setProperty('file', valueFactory.coerce(callStack.getLastFilePath()));\n\n        /**\n         * The line the exception was created on\n         *\n         * @see {@link https://secure.php.net/manual/en/class.exception.php#exception.props.line}\n         */\n        this.setProperty('line', valueFactory.coerce(callStack.getLastLine()));\n\n        /**\n         * A message describing the exception\n         *\n         * (Default to empty here - unless overridden by calling the constructor defined above\n         * or overridden by a subclass)\n         *\n         * @see {@link https://secure.php.net/manual/en/class.exception.php#exception.props.message}\n         */\n        this.setProperty('message', valueFactory.createString(''));\n\n        this.setInternalProperty('reportsOwnContext', false);\n\n        // This internal trace prop will not be visible to PHP code\n        // except for read-only via the ->getTraceAsString() method.\n        this.setInternalProperty('trace', callStack.getTrace());\n    };\n\n    // Exception class should implement Throwable in PHP 7+\n    internals.implement('Throwable');\n\n    _.extend(Exception.prototype, {\n        /**\n         * Fetches the path to the file containing the line this exception was created from\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.getfile.php}\n         *\n         * @returns {StringValue}\n         */\n        getFile: function () {\n            return this.getProperty('file');\n        },\n\n        /**\n         * Fetches the line number this exception was created on\n         * (not the line it was thrown from, if it was thrown at all)\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.getline.php}\n         *\n         * @returns {IntegerValue}\n         */\n        getLine: function () {\n            return this.getProperty('line');\n        },\n\n        /**\n         * Fetches the message for the exception\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.getmessage.php}\n         *\n         * @returns {StringValue}\n         */\n        getMessage: function () {\n            return this.getProperty('message');\n        },\n\n        /**\n         * Gets the stack trace as a string\n         *\n         * @see {@link https://secure.php.net/manual/en/exception.gettraceasstring.php}\n         *\n         * @returns {StringValue}\n         */\n        getTraceAsString: function () {\n            var trace = this.getInternalProperty('trace');\n\n            return valueFactory.createString(traceFormatter.format(trace));\n        }\n    });\n\n    internals.disableAutoCoercion();\n\n    return Exception;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError,\n    UNDEFINED_METHOD = 'core.undefined_method';\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack;\n\n    function JSObject() {\n\n    }\n\n    _.extend(JSObject.prototype, {\n        /**\n         * JSObject needs to implement its own way of calling out to native JS methods,\n         * because the method property lookup needs to be case-sensitive, unlike PHP\n         *\n         * @param {string} name\n         * @param {*[]} args\n         * @returns {*}\n         */\n        '__call': function __uniterOutboundStackMarker__(name, args) {\n            var object = this,\n                result;\n\n            if (!_.isFunction(object[name])) {\n                callStack.raiseTranslatedError(PHPError.E_ERROR, UNDEFINED_METHOD, {\n                    className: 'JSObject',\n                    methodName: name\n                });\n            }\n\n            result = object[name].apply(object, args);\n\n            return result;\n        },\n\n        /**\n         * Fetches a property from the native JS object\n         *\n         * @param {string} propertyName\n         * @returns {*}\n         */\n        '__get': function (propertyName) {\n            return this[propertyName];\n        },\n\n        /**\n         * In JavaScript, objects cannot normally be made callable, only functions\n         * (and Proxies with the \"apply\" trap) -\n         * this magic method is implemented to allow imported JS functions to be callable.\n         *\n         * @returns {*}\n         */\n        '__invoke': function () {\n            var object = this,\n                result;\n\n            if (!_.isFunction(object)) {\n                throw new Error('Attempted to invoke a non-function JS object');\n            }\n\n            result = object.apply(null, arguments);\n\n            return result;\n        },\n\n        /**\n         * Sets a property on the native JS object\n         *\n         * @param {string} propertyName\n         * @param {*} nativeValue\n         */\n        '__set': function (propertyName, nativeValue) {\n            // Ensure we write the native value to properties on native JS objects -\n            // as JSObject is auto-coercing we already have it\n            this[propertyName] = nativeValue;\n        },\n\n        /**\n         * Deletes a property from the native JS object when `unset($jsObject->prop)` is called from PHP-land\n         *\n         * @param {string} propertyName\n         */\n        '__unset': function (propertyName) {\n            delete this[propertyName];\n        }\n    });\n\n    internals.defineUnwrapper(function (nativeObject) {\n        /*\n         * JSObjects are objects that originate from JS-land and were subsequently passed into PHP-land -\n         * when we want to unwrap them to pass back to JS-land, simply return the original native object\n         */\n        return nativeObject;\n    });\n\n    return JSObject;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\nmodule.exports = function (internals) {\n    function stdClass() {\n\n    }\n\n    internals.disableAutoCoercion();\n\n    internals.defineUnwrapper(function () {\n        // When exporting via the public FFI API, unwrap stdClass instances to a plain object\n        // with native property values\n        var objectValue = this,\n            result = {};\n\n        _.forOwn(objectValue.getNonPrivateProperties(), function (propertyValue, propertyName) {\n            result[propertyName] = propertyValue.getNative();\n        });\n\n        return result;\n    });\n\n    return stdClass;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'E_ERROR': 1,\n        'E_WARNING': 2,\n        'E_PARSE': 4,\n        'E_NOTICE': 8,\n        'E_CORE_ERROR': 16,\n        'E_CORE_WARNING': 32,\n        'E_COMPILE_ERROR': 64,\n        'E_COMPILE_WARNING': 128,\n        'E_USER_ERROR': 256,\n        'E_USER_WARNING': 512,\n        'E_USER_NOTICE': 1024,\n        'E_STRICT': 2048,\n        'E_RECOVERABLE_ERROR': 4096,\n        'E_DEPRECATED': 8192,\n        'E_USER_DEPRECATED': 16384,\n        'E_ALL': 32767\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'PHP_EOL': '\\n'\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        iniState = internals.iniState,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the value of a PHP configuration option.\n         * Any changes made at runtime (eg. with ini_set(...)) will be taken into account.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ini-get.php}\n         *\n         * @param {Reference|Value|Variable} optionNameReference\n         * @returns {Value}\n         */\n        'ini_get': function (optionNameReference) {\n            var optionName,\n                optionValue;\n\n            if (arguments.length !== 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'ini_get() expects exactly 1 parameter, ' + arguments.length + ' given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            optionName = optionNameReference.getValue().getNative();\n            optionValue = iniState.get(optionName);\n\n            if (optionValue === null) {\n                // Indicate that the option is not defined with bool(false)\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.coerce(optionValue);\n        },\n\n        /**\n         * Sets the value of a defined PHP configuration option at runtime,\n         * returning its previous value.\n         * If the option does not exist, false will be returned.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ini-set.php}\n         *\n         * @param {Reference|Value|Variable} optionNameReference\n         * @param {Reference|Value|Variable} optionValueReference\n         * @returns {Value}\n         */\n        'ini_set': function (optionNameReference, optionValueReference) {\n            var previousOptionValue,\n                optionName,\n                optionValue;\n\n            if (arguments.length !== 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'ini_set() expects exactly 2 parameters, ' + arguments.length + ' given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            optionName = optionNameReference.getValue().getNative();\n            previousOptionValue = iniState.get(optionName);\n\n            if (previousOptionValue === null) {\n                // Indicate that the option is not defined with bool(false)\n                return valueFactory.createBoolean(false);\n            }\n\n            optionValue = optionValueReference.getValue().getNative();\n\n            iniState.set(optionName, optionValue);\n\n            return valueFactory.coerce(previousOptionValue);\n        }\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = require('pauser')([\n    require('../../Variable')\n], function (\n    Variable\n) {\n    return function (internals) {\n        var classAutoloader = internals.classAutoloader,\n            valueFactory = internals.valueFactory;\n\n        return {\n            'spl_autoload_register': function (callableReference) {\n                var isReference = (callableReference instanceof Variable),\n                    callableValue = isReference ? callableReference.getValue() : callableReference;\n\n                classAutoloader.appendAutoloadCallable(callableValue);\n            },\n            'spl_autoload_unregister': function (callableReference) {\n                var isReference = (callableReference instanceof Variable),\n                    callableValue = isReference ? callableReference.getValue() : callableReference;\n\n                return valueFactory.createBoolean(\n                    classAutoloader.removeAutoloadCallable(callableValue)\n                );\n            }\n        };\n    };\n}, {strict: true});\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /*jshint bitwise: false */\n    var E_ALL = internals.getConstant('E_ALL'),\n        E_DEPRECATED = internals.getConstant('E_DEPRECATED'),\n        E_NOTICE = internals.getConstant('E_NOTICE'),\n        E_STRICT = internals.getConstant('E_STRICT');\n\n    return {\n        /**\n         * Determines whether errors should be printed to stdout or hidden from the user.\n         * Errors are always written to stderr regardless of this setting.\n         *\n         * The value `stderr` will cause both messages to be written to stderr.\n         *\n         * @see {@link https://www.php.net/manual/en/errorfunc.configuration.php#ini.display-errors}\n         */\n        'display_errors': true,\n\n        /**\n         * Controls what levels of error are reported to the user.\n         *\n         * @see {@link https://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting}\n         */\n        'error_reporting': E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    function ArrayAccess() {\n\n    }\n\n    return ArrayAccess;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Interface for user-defined iterators or objects that can be iterated themselves internally\n     *\n     * @see {@link https://secure.php.net/manual/en/class.iterator.php}\n     *\n     * @interface\n     */\n    function Iterator() {\n\n    }\n\n    internals.implement('Traversable');\n\n    Iterator.shadowConstructor = function () {\n        var iteratorValue = this;\n\n        iteratorValue.setInternalProperty('getIterator', function () {\n            // Implementors of Iterator are themselves iterable\n            return iteratorValue;\n        });\n    };\n\n    return Iterator;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Interface for user-defined iterators or objects that can be iterated themselves internally\n     *\n     * @see {@link https://secure.php.net/manual/en/class.iteratoraggregate.php}\n     *\n     * @interface\n     */\n    function IteratorAggregate() {\n\n    }\n\n    internals.implement('Traversable');\n\n    IteratorAggregate.shadowConstructor = function () {\n        var aggregateValue = this;\n\n        aggregateValue.setInternalProperty('getIterator', function () {\n            // Implementors of IteratorAggregate expose their iterator via a ->getIterator() method\n            return aggregateValue.callMethod('getIterator');\n        });\n    };\n\n    IteratorAggregate.prototype.getIterator = function () {\n        throw new Error('Interface method should be implemented by sub-classes');\n    };\n\n    return IteratorAggregate;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    util = require('util'),\n    PHPError = phpCommon.PHPError,\n    PHPFatalError = phpCommon.PHPFatalError,\n\n    UNCAUGHT_EMPTY_THROWABLE = 'core.uncaught_empty_throwable',\n    UNCAUGHT_THROWABLE = 'core.uncaught_throwable';\n\nmodule.exports = function (internals) {\n    var translator = internals.translator;\n\n    /**\n     * PHP 7 Throwable interface\n     *\n     * @see {@link https://secure.php.net/manual/en/class.throwable.php}\n     *\n     * @constructor\n     */\n    function Throwable() {\n    }\n\n    util.inherits(Throwable, PHPError);\n\n    internals.disableAutoCoercion();\n\n    internals.defineUnwrapper(function (errorValue) {\n        /*\n         * When throwing/returning a Throwable instance to JS-land, by default convert it to a PHPFatalError from PHPCommon.\n         * Note that this is also used when returning rather than throwing, due to use of this unwrapper.\n         * This is useful for consistency, in the scenario where an Error or Exception is returned (not thrown)\n         * to JS-land, then later thrown from JS-land.\n         */\n        var message = errorValue.getProperty('message').getNative();\n\n        if (message !== '') {\n            message = translator.translate(UNCAUGHT_THROWABLE, {\n                name: errorValue.getClassName(),\n                message: message\n            });\n        } else {\n            message = translator.translate(UNCAUGHT_EMPTY_THROWABLE, {\n                name: errorValue.getClassName()\n            });\n        }\n\n        return new PHPFatalError(\n            message,\n            errorValue.getProperty('file').getNative(),\n            errorValue.getProperty('line').getNative()\n        );\n    });\n\n    return Throwable;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Interface for classes traversable using foreach (extended by Iterator and IteratorAggregate)\n     *\n     * @see {@link https://secure.php.net/manual/en/class.traversable.php}\n     *\n     * @interface\n     */\n    function Traversable() {\n\n    }\n\n    Traversable.shadowConstructor = function () {\n        var traversableValue = this;\n\n        traversableValue.setInternalProperty('getIterator', function () {\n            throw new Error('\\\\Traversable: Sub-interface should have set the iterator getter');\n        });\n    };\n\n    internals.disableAutoCoercion();\n\n    return Traversable;\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*\n * Translations for error-level error messages\n */\nmodule.exports = {\n    'en_GB': {\n        'core': {\n            'break_or_continue_in_wrong_context': '\\'${type}\\' not in the \\'loop\\' or \\'switch\\' context',\n            'call_to_undefined_function': 'Call to undefined function ${name}()',\n            'cannot_access_property': 'Cannot access ${visibility} property ${className}::$${propertyName}',\n            'cannot_access_when_no_active_class': 'Cannot access ${className}:: when no class scope is active',\n            'cannot_declare_class_as_name_already_in_use': 'Cannot declare class ${className} because the name is already in use',\n            // NB: This translation is in fact different to the above, by a comma\n            'cannot_redeclare_class_as_name_already_in_use': 'Cannot declare class ${className}, because the name is already in use',\n            'cannot_implement_throwable': 'Class ${className} cannot implement interface Throwable, extend Exception or Error instead',\n            'cannot_unset_static_property': 'Attempt to unset static property ${className}::$${propertyName}',\n            'cannot_use_as_name_already_in_use': 'Cannot use ${source} as ${alias} because the name is already in use',\n            'cannot_use_wrong_type_as': 'Cannot use object of type ${actual} as ${expected}',\n            'class_name_not_valid': 'Class name must be a valid object or a string',\n            'class_not_found': 'Class \\'${name}\\' not found',\n            'function_name_must_be_string': 'Function name must be a string',\n            'invalid_value_for_type': 'Argument ${index} passed to ${func}() must be ${expectedType}, ${actualType} given, called in ${callerFile} on line ${callerLine} and defined in ${definitionFile}:${definitionLine}',\n            'method_called_on_non_object': '${method} method called on non-object',\n            'no_parent_class': 'Cannot access parent:: when current class scope has no parent',\n            'non_object_method_call': 'Call to a member function ${name}() on ${type}',\n            'object_from_get_iterator_must_be_traversable': 'Objects returned by ${className}::getIterator() must be traversable or implement interface Iterator',\n            'only_variables_by_reference': 'Only variables can be passed by reference',\n            'too_few_args_for_exact_count': 'Too few arguments to function ${func}(), ${actualCount} passed in ${callerFile} on line ${callerLine} and exactly ${expectedCount} expected',\n            'uncaught_throwable': 'Uncaught ${name}: ${message}',\n            'uncaught_empty_throwable': 'Uncaught ${name}',\n            'undeclared_static_property': 'Access to undeclared static property: ${className}::$${propertyName}',\n            'undefined_class_constant': 'Undefined class constant \\'${name}\\'',\n            'undefined_constant': 'Undefined constant \\'${name}\\'',\n            'undefined_method': 'Call to undefined method ${className}::${methodName}()',\n            'undefined_property': 'Undefined property: ${className}::$${propertyName}',\n            'unsupported_operand_types': 'Unsupported operand types',\n            'used_this_outside_object_context': 'Using $this when not in object context'\n        }\n    }\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*\n * Miscellaneous translations\n */\nmodule.exports = {\n    'en_GB': {\n        'core': {\n            // For uncaught errors (see ErrorReporting)\n            'error_with_context_and_trace': ' in ${filePath}:${line}\\n' +\n                'Stack trace:' + '\\n' +\n                '${formattedTrace}\\n' +\n                '  thrown in ${filePath} on line ${line}',\n            'error_without_context_but_with_trace': '\\n' +\n                'Stack trace:' + '\\n' +\n                '${formattedTrace}\\n' +\n                '  thrown in ${filePath} on line ${line}',\n\n            // For warnings/notices/uncatchable errors etc.\n            'error_without_trace': ' in ${filePath} on line ${line}',\n\n            // The path used in stack traces etc. for eval'd code\n            'eval_path': '${path}(${lineNumber}) : eval()\\'d code',\n\n            // Used for building messages referencing types\n            'instance_of_type_expected': 'an instance of ${expectedType}',\n            'instance_of_type_actual': 'instance of ${actualType}',\n            'of_generic_type_expected': 'of the type ${expectedType}',\n\n            // For any type of error that needs to be scoped to the current function\n            'scoped_error': '${function}(): ${message}',\n\n            // For unknown file paths, line numbers etc.\n            'unknown': 'unknown'\n        }\n    }\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*\n * Translations for notice-level error messages\n */\nmodule.exports = {\n    'en_GB': {\n        'core': {\n            'constant_already_defined': 'Constant ${name} already defined'\n        }\n    }\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * DebugFormatterInstaller shared service.\n *\n * Allows current & future class dependencies to be added in a single place.\n */\n\n'use strict';\n\nvar DebugFactory = require('../Debug/DebugFactory'),\n    DebugFormatter = require('../Debug/DebugFormatter'),\n    DebugFormatterInstaller = require('../Debug/DebugFormatterInstaller'),\n    DebugValue = require('../Debug/DebugValue'),\n    ValueFormatter = require('../Debug/ValueFormatter'),\n    debugFactory = new DebugFactory(DebugFormatter, DebugValue, ValueFormatter);\n\nmodule.exports = new DebugFormatterInstaller(global, debugFactory);\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * GlobalStackHooker shared service.\n *\n * Allows current & future class dependencies to be added in a single place.\n */\n\n'use strict';\n\nvar usingV8StackTraceAPI = typeof Error.captureStackTrace === 'function' &&\n        Function.prototype.toString.call(Error.captureStackTrace).indexOf('[native code]') > -1,\n    GlobalStackHooker = require('../FFI/Stack/GlobalStackHooker'),\n    NonV8FrameStackHooker = require('../FFI/Stack/NonV8FrameStackHooker'),\n    StackCleaner = require('../FFI/Stack/StackCleaner'),\n    V8FrameStackHooker = require('../FFI/Stack/V8FrameStackHooker'),\n    stackCleaner = new StackCleaner(),\n    frameStackHooker = usingV8StackTraceAPI ?\n        new V8FrameStackHooker(stackCleaner) :\n        new NonV8FrameStackHooker(stackCleaner);\n\nmodule.exports = new GlobalStackHooker(frameStackHooker, global);\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * RuntimeFactory shared service.\n *\n * Allows current & future class dependencies to be added in a single place.\n */\n\n'use strict';\n\nvar Engine = require('../Engine'),\n    Environment = require('../Environment'),\n    globalStackHooker = require('./globalStackHooker'),\n    phpCommon = require('phpcommon'),\n    PHPStateWrapper = require('../PHPState'),\n    RuntimeFactory = require('../RuntimeFactory'),\n    RuntimeWrapper = require('../Runtime');\n\nmodule.exports = new RuntimeFactory(\n    Environment,\n    Engine,\n    PHPStateWrapper,\n    RuntimeWrapper,\n    phpCommon,\n    globalStackHooker\n);\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\n/*global global */\nvar API = require('../src/API'),\n    EnvironmentProvider = require('../src/EnvironmentProvider'),\n    FileSystem = require('../src/FileSystem'),\n    IO = require('../src/IO'),\n    Loader = require('../src/Loader'),\n    ModuleRepository = require('../src/ModuleRepository'),\n    Performance = require('../src/Performance'),\n    performance = new Performance(Date, global),\n    phpConfigImporter = require('phpconfig').configImporter,\n    phpRuntime = require('phpruntime/psync'),\n    io = new IO(console),\n    environmentProvider = new EnvironmentProvider(phpRuntime, performance, io),\n    api = new API(FileSystem, Loader, ModuleRepository, environmentProvider, phpConfigImporter, require.cache),\n    loader = api.createLoader();\n\nmodule.exports = loader;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * API entry point for creating Loaders for compiled PHP modules to use\n *\n * @param {class} FileSystem\n * @param {class} Loader\n * @param {class} ModuleRepository\n * @param {EnvironmentProvider} environmentProvider\n * @param {ConfigImporter} phpConfigImporter\n * @param {Object} requireCache\n * @constructor\n */\nfunction API(\n    FileSystem,\n    Loader,\n    ModuleRepository,\n    environmentProvider,\n    phpConfigImporter,\n    requireCache\n) {\n    /**\n     * @type {EnvironmentProvider}\n     */\n    this.environmentProvider = environmentProvider;\n    /**\n     * @type {class}\n     */\n    this.FileSystem = FileSystem;\n    /**\n     * @type {class}\n     */\n    this.Loader = Loader;\n    /**\n     * @type {class}\n     */\n    this.ModuleRepository = ModuleRepository;\n    /**\n     * @type {ConfigImporter}\n     */\n    this.phpConfigImporter = phpConfigImporter;\n    /**\n     * @type {Object}\n     */\n    this.requireCache = requireCache;\n}\n\n_.extend(API.prototype, {\n    /**\n     * Creates a new, isolated Loader along with a FileSystem\n     * and PHPCore/PHPRuntime environment for compiled PHP modules to use\n     *\n     * @returns {Loader}\n     */\n    createLoader: function () {\n        var api = this,\n            moduleRepository = new api.ModuleRepository(api.requireCache),\n            fileSystem = new api.FileSystem(moduleRepository);\n\n        return new api.Loader(moduleRepository, fileSystem, api.environmentProvider, api.phpConfigImporter);\n    }\n});\n\nmodule.exports = API;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Creates the Environment for a loader\n *\n * @param {Object} phpRuntime\n * @param {Performance} performance\n * @param {IO} io\n * @constructor\n */\nfunction EnvironmentProvider(phpRuntime, performance, io) {\n    /**\n     * @type {IO}\n     */\n    this.io = io;\n    /**\n     * @type {Performance}\n     */\n    this.performance = performance;\n    /**\n     * @type {Object}\n     */\n    this.phpRuntime = phpRuntime;\n}\n\n_.extend(EnvironmentProvider.prototype, {\n    /**\n     * Creates a new Environment\n     *\n     * @param {FileSystem} fileSystem\n     * @param {Object} phpifyConfig\n     * @param {Object} phpCoreConfig\n     * @returns {Environment}\n     */\n    createEnvironment: function (fileSystem, phpifyConfig, phpCoreConfig) {\n        var provider = this,\n            environmentOptions = Object.assign({}, phpCoreConfig, {\n                fileSystem: fileSystem,\n                include: function (filePath, promise) {\n                    var result;\n\n                    try {\n                        result = fileSystem.getModuleFactory(filePath);\n                    } catch (error) {\n                        promise.reject(error);\n                        return;\n                    }\n\n                    promise.resolve(result);\n                },\n                performance: provider.performance\n            }),\n            addons = environmentOptions.addons || [],\n            environment;\n\n        delete environmentOptions.addons;\n\n        environment = provider.phpRuntime.createEnvironment(\n            environmentOptions,\n            addons\n        );\n\n        provider.io.install(environment, phpifyConfig);\n\n        return environment;\n    }\n});\n\nmodule.exports = EnvironmentProvider;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    path = require('path'),\n    Promise = require('lie');\n\n/**\n * Virtual FileSystem for use in the browser with compiled PHP modules\n *\n * @param {ModuleRepository} moduleRepository\n * @constructor\n */\nfunction FileSystem(moduleRepository) {\n    /**\n     * @type {ModuleRepository}\n     */\n    this.moduleRepository = moduleRepository;\n}\n\n_.extend(FileSystem.prototype, {\n    /**\n     * Fetches the module wrapper factory function for a compiled PHP module,\n     * if it exists in the compiled bundle\n     *\n     * @param {string} filePath\n     * @returns {Function}\n     * @throws {Error} Throws when the specified compiled module does not exist\n     */\n    getModuleFactory: function (filePath) {\n        var fileSystem = this;\n\n        filePath = fileSystem.realPath(filePath);\n\n        // TODO: If a PHP source file has been written to the virtual FS, and eval-ish support\n        //       is installed, allow the dynamically-generated module to be compiled and run\n\n        return fileSystem.moduleRepository.getModuleFactory(filePath);\n    },\n\n    /**\n     * Determines whether the specified directory path exists in the FileSystem.\n     * Currently always returns true, as we cannot be sure from the info we have\n     *\n     * @returns {boolean}\n     */\n    isDirectory: function () {\n        // TODO: Implement once we have support for non-PHP files in the VFS\n        return false;\n    },\n\n    /**\n     * Determines whether the specified file exists in the FileSystem.\n     * Currently only compiled PHP modules can be in the FileSystem, so only those\n     * may be detected.\n     *\n     * @param {string} filePath\n     * @returns {boolean}\n     */\n    isFile: function (filePath) {\n        var fileSystem = this;\n\n        filePath = fileSystem.realPath(filePath);\n\n        return fileSystem.moduleRepository.moduleExists(filePath);\n    },\n\n    /**\n     * Opens a Stream for the specified file asynchronously\n     *\n     * @param {string} filePath\n     * @returns {Promise} Resolves with a Stream for the file on success, rejects on failure\n     */\n    open: function (filePath) {\n        return new Promise(function (resolve, reject) {\n            reject(new Error('Could not open \"' + filePath + '\" :: Streams are not currently supported by PHPify'));\n        });\n    },\n\n    /**\n     * Opens a Stream for the specified file synchronously\n     *\n     * @param {string} filePath\n     * @returns {Stream}\n     */\n    openSync: function (filePath) {\n        throw new Error('Could not open \"' + filePath + '\" :: Streams are not currently supported by PHPify');\n    },\n\n    /**\n     * Converts the specified module path to a full one,\n     * normalizing any parent- or current-directory symbols\n     *\n     * @param {string} filePath\n     * @returns {string}\n     */\n    realPath: function (filePath) {\n        filePath = path.normalize(filePath);\n\n        // Strip any leading slash, as the virtual FS does not expect it\n        filePath = filePath.replace(/^\\/+/, '');\n\n        return filePath;\n    },\n\n    /**\n     * Deletes a file or folder asynchronously\n     *\n     * @param {string} filePath\n     * @returns {Promise} Resolves on success, rejects on failure\n     */\n    unlink: function (filePath) {\n        return new Promise(function (resolve, reject) {\n            reject(new Error('Could not delete \"' + filePath + '\" :: not currently supported by PHPify'));\n        });\n    },\n\n    /**\n     * Deletes a file or folder synchronously\n     *\n     * @param {string} filePath\n     */\n    unlinkSync: function (filePath) {\n        throw new Error('Could not delete \"' + filePath + '\" :: not currently supported by PHPify');\n    }\n});\n\nmodule.exports = FileSystem;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Hooks Uniter's PHP stdout and stderr streams up to the console, if available and enabled\n *\n * @param {Console} console\n * @constructor\n */\nfunction IO(console) {\n    /**\n     * @type {Console}\n     */\n    this.console = console;\n}\n\n_.extend(IO.prototype, {\n    /**\n     * Hooks the IO for a PHP engine up to the console\n     *\n     * @param {Environment} environment\n     * @param {Object} phpifyConfig\n     */\n    install: function (environment, phpifyConfig) {\n        var io = this;\n\n        if (!io.console) {\n            // Console is not available - nothing to do\n            return;\n        }\n\n        if (phpifyConfig.stdio === false) {\n            // Standard I/O has been disabled in config - nothing to do\n            return;\n        }\n\n        environment.getStdout().on('data', function (data) {\n            io.console.info(data);\n        });\n\n        environment.getStderr().on('data', function (data) {\n            io.console.warn(data);\n        });\n    }\n});\n\nmodule.exports = IO;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Public API for compiled PHP modules\n *\n * @param {ModuleRepository} moduleRepository\n * @param {FileSystem} fileSystem\n * @param {EnvironmentProvider} environmentProvider\n * @param {ConfigImporterInterface} phpConfigImporter\n * @constructor\n */\nfunction Loader(\n    moduleRepository,\n    fileSystem,\n    environmentProvider,\n    phpConfigImporter\n) {\n    /**\n     * @type {Environment|null} Lazily-initialised by .getEnvironment()\n     */\n    this.environment = null;\n    /**\n     * @type {EnvironmentProvider}\n     */\n    this.environmentProvider = environmentProvider;\n    /**\n     * @type {FileSystem}\n     */\n    this.fileSystem = fileSystem;\n    /**\n     * @type {ModuleRepository}\n     */\n    this.moduleRepository = moduleRepository;\n    /**\n     * @type {ConfigImporterInterface}\n     */\n    this.phpConfigImporter = phpConfigImporter;\n    /**\n     * @type {Object} Populated from the Initialiser by .configure(...)\n     */\n    this.phpCoreConfig = {};\n    /**\n     * @type {Object} Populated from the Initialiser by .configure(...)\n     */\n    this.phpifyConfig = {};\n}\n\n_.extend(Loader.prototype, {\n    /**\n     * Executes zero or more bootstrap modules within the environment.\n     * Must be done as a separate method call from .installModules(...), as the PHP module factory fetcher\n     * function installed needs to be available here, because bootstrap modules may themselves\n     * be PHP modules (useful for including Composer's autoloader, for example)\n     *\n     * @param {Function[]} bootstraps\n     * @returns {Loader} For chaining\n     */\n    bootstrap: function (bootstraps) {\n        var loader = this;\n\n        // Now execute any bootstraps against the environment, before any modules run\n        bootstraps.forEach(function (bootstrap) {\n            // If the bootstrap returned a function, invoke it with the environment,\n            // otherwise do nothing (the bootstrap module has already had the chance to run)\n            if (typeof bootstrap === 'function') {\n                bootstrap(loader.getEnvironment());\n            }\n        });\n\n        return loader;\n    },\n\n    /**\n     * Populates the PHPify and PHPCore configurations\n     *\n     * @param {Object} phpifyConfig\n     * @param {Object[]} phpCoreConfigs\n     * @returns {Loader} For chaining\n     */\n    configure: function (phpifyConfig, phpCoreConfigs) {\n        var loader = this;\n\n        loader.phpifyConfig = phpifyConfig;\n        loader.phpCoreConfig = loader.phpConfigImporter\n            .importLibrary({configs: phpCoreConfigs})\n            .mergeAll();\n\n        return loader;\n    },\n\n    /**\n     * Fetches the Environment for this loader, creating it if necessary\n     *\n     * @return {Environment}\n     */\n    getEnvironment: function () {\n        var loader = this;\n\n        if (!loader.environment) {\n            loader.environment = loader.environmentProvider.createEnvironment(\n                loader.fileSystem,\n                loader.phpifyConfig,\n                loader.phpCoreConfig\n            );\n        }\n\n        return loader.environment;\n    },\n\n    /**\n     * Fetches the module wrapper factory function for a compiled PHP module,\n     * if it exists in the compiled bundle\n     *\n     * @param {string} filePath\n     * @returns {Function}\n     * @throws {Error} Throws when the specified compiled module does not exist\n     */\n    getModuleFactory: function (filePath) {\n        return this.moduleRepository.getModuleFactory(filePath);\n    },\n\n    /**\n     * Installs a function into the loader for fetching the compiled module wrappers of PHP modules\n     *\n     * @param {Function} phpModuleFactoryFetcher\n     * @returns {Loader} For chaining\n     */\n    installModules: function (phpModuleFactoryFetcher) {\n        var loader = this;\n\n        loader.moduleRepository.init(phpModuleFactoryFetcher);\n\n        return loader;\n    },\n\n    /**\n     * Determines whether this loader has already been initialised\n     * (whether the Environment has been created, lazily, when loading a PHP module)\n     *\n     * @return {boolean}\n     */\n    isInitialised: function () {\n        return this.environment !== null;\n    },\n\n    /**\n     * Configures the environment and path for the given module, and either executes it\n     * and exports the result or just exports the module factory depending on mode.\n     * Used by all compiled PHP modules.\n     *\n     * @param {string} filePath\n     * @param {Object} module CommonJS module object\n     * @param {Function} moduleFactory\n     */\n    load: function (filePath, module, moduleFactory) {\n        var loader = this;\n\n        module.exports = loader.moduleRepository.load(filePath, module.id, moduleFactory, loader.getEnvironment());\n    }\n});\n\nmodule.exports = Loader;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty;\n\n/**\n * Contains a cache of configured PHP modules and the module factory fetcher\n * to use for both fetching any as-yet unloaded modules and determining their existence\n *\n * @param {Object} requireCache\n * @constructor\n */\nfunction ModuleRepository(requireCache) {\n    /**\n     * @type {Object.<string, {id: string|number, factory: Function}>} PHP module factories, indexed by path\n     */\n    this.configuredModules = {};\n    /**\n     * @type {boolean} Indicates that a module's factory function should be returned without execution\n     */\n    this.loadingModuleFactoryOnly = false;\n    /**\n     * A special function, generated by the PHP module compiler,\n     * that can be called to fetch the module wrapper of any compiled modules\n     * or return true/false to determine whether they exist.\n     * Note that this is set by the special Initialiser module\n     * generated at compile-time (see Transformer)\n     *\n     * @type {Function|null}\n     */\n    this.moduleFactoryFetcher = null;\n    /**\n     * @type {Object} require.cache\n     */\n    this.requireCache = requireCache;\n}\n\n_.extend(ModuleRepository.prototype, {\n    /**\n     * Fetches the module wrapper factory function for a compiled PHP module,\n     * if it exists in the compiled bundle\n     *\n     * @param {string} filePath\n     * @returns {Function}\n     * @throws {Error} Throws when the specified compiled module does not exist\n     */\n    getModuleFactory: function (filePath) {\n        var cachePath,\n            configuredModule,\n            configuredModuleFactory,\n            repository = this;\n\n        if (hasOwn.call(repository.configuredModules, filePath)) {\n            // Module has already been configured: return the cached module factory\n            return repository.configuredModules[filePath].factory;\n        }\n\n        // Module has not yet been loaded: require it via the fetcher function. The transpiled module\n        // will call back into the loader via `.load(...)` to configure it.\n        // The `loadingModuleFactoryOnly` flag ensures that the module is not executed,\n        // only its module factory is exported instead\n        repository.loadingModuleFactoryOnly = true;\n        configuredModuleFactory = repository.moduleFactoryFetcher(filePath, false);\n        repository.loadingModuleFactoryOnly = false;\n\n        if (configuredModuleFactory === null) {\n            throw new Error('File \"' + filePath + '\" is not in the compiled PHP file map');\n        }\n\n        // By this point, the require()'d module should have called back via .prepare()\n        // [via <Public API::Loader>.run()] and so its wrapper should be in the\n        if (!hasOwn.call(repository.configuredModules, filePath)) {\n            throw new Error('Unexpected state: module \"' + filePath + '\" should have been loaded by now');\n        }\n        if (repository.configuredModules[filePath].factory !== configuredModuleFactory) {\n            throw new Error('Unexpected state: factory for module \"' + filePath + '\" loaded incorrectly');\n        }\n\n        cachePath = './' + filePath;\n        configuredModule = repository.configuredModules[filePath];\n\n        if (!hasOwn.call(repository.requireCache, configuredModule.id)) {\n            throw new Error(\n                'Expected path \"' + cachePath + '\" (id \"' + configuredModule.id + '\") to be in require.cache, ' +\n                'but it was not'\n            );\n        }\n\n        // Delete the module's exports object from the cache: it was not executed as we only wanted\n        // to extract the factory function, so that will have been stored instead.\n        // If the module's factory function is ever needed again, it will be fetched from the\n        // .configuredModules[...] cache instead\n        delete repository.requireCache[configuredModule.id];\n\n        return repository.configuredModules[filePath].factory;\n    },\n\n    /**\n     * Initializes the repository with a function\n     * for fetching the compiled module wrappers of PHP modules\n     *\n     * @param {Function} phpModuleFactoryFetcher\n     */\n    init: function (phpModuleFactoryFetcher) {\n        this.moduleFactoryFetcher = phpModuleFactoryFetcher;\n    },\n\n    /**\n     * Configures the environment and path for the given module, and either executes it\n     * and returns the result or just returns the module factory depending on mode.\n     * Used by all compiled PHP modules\n     *\n     * @param {string} filePath\n     * @param {string|number} moduleID\n     * @param {Function} moduleFactory\n     * @param {Environment} environment\n     * @returns {Function}\n     */\n    load: function (filePath, moduleID, moduleFactory, environment) {\n        var repository = this,\n            configuredModuleFactory = moduleFactory.using({path: filePath}, environment);\n\n        repository.configuredModules[filePath] = {\n            id: moduleID,\n            factory: configuredModuleFactory\n        };\n\n        if (repository.loadingModuleFactoryOnly) {\n            // Only the factory is needed, don't execute\n            return configuredModuleFactory;\n        }\n\n        // Create, execute and return the result of the module\n        return configuredModuleFactory().execute();\n    },\n\n    /**\n     * Determines whether the module with the given path exists in the bundle\n     *\n     * @param {string} filePath\n     * @return {boolean}\n     */\n    moduleExists: function (filePath) {\n        var repository = this;\n\n        if (hasOwn.call(repository.configuredModules, filePath)) {\n            // Module has already been configured: return the cached module factory\n            return true;\n        }\n\n        // Module has not yet been loaded: determine its existence using the fetcher function.\n        // To save space in the compiled bundle, the large switch statement with a case for each\n        // compiled PHP module doubles as an existence-check (see Transformer for details)\n        return repository.moduleFactoryFetcher(filePath, true);\n    }\n});\n\nmodule.exports = ModuleRepository;\n","/*\n * PHPify - Compiles PHP modules to CommonJS with Uniter\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpify\n *\n * Released under the MIT license\n * https://github.com/uniter/phpify/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Performance option wrapper\n *\n * @param {class} Date\n * @param {global} global\n * @constructor\n */\nfunction Performance(Date, global) {\n    /**\n     * @type {class}\n     */\n    this.Date = Date;\n    /**\n     * @type {global}\n     */\n    this.global = global;\n}\n\n_.extend(Performance.prototype, {\n    /**\n     * Returns the time since the Unix epoch in microseconds\n     *\n     * @returns {number}\n     */\n    getTimeInMicroseconds: function () {\n        var performance = this;\n\n        if (performance.global.performance) {\n            // Use 5-microsecond-precise Performance API, if available\n            return (\n                performance.global.performance.timing.navigationStart + performance.global.performance.now()\n            ) * 1000;\n        }\n\n        // Fall back to fake microsecond accuracy (will be correct to the nearest millisecond)\n        return new performance.Date().getTime() * 1000;\n    }\n});\n\nmodule.exports = Performance;\n","require(\"/Users/danielp/work/dan/uniter-projects/uniter-markdown-plugin-example/node_modules/phpify/api/psync\").installModules(function (path, checkExistence) {\n    var exists = false;\n\n    function handlePath(aPath) {\n        if (!checkExistence) {\n            return aPath;\n        }\n\n        if (aPath === path) {\n            exists = true;\n        }\n\n        // Return something that should not match with the path variable,\n        // so that the case itself is not executed and we eventually\n        // reach the return after the end of the switch\n        return null;\n    }\n\n    switch (path) {\n    case handlePath(\"src/Markdown.php\"): return require(\"./../../../../src/Markdown.php\");\n    case handlePath(\"vendor/autoload.php\"): return require(\"./../../../../vendor/autoload.php\");\n    case handlePath(\"vendor/composer/ClassLoader.php\"): return require(\"./../../../../vendor/composer/ClassLoader.php\");\n    case handlePath(\"vendor/composer/InstalledVersions.php\"): return require(\"./../../../../vendor/composer/InstalledVersions.php\");\n    case handlePath(\"vendor/composer/autoload_classmap.php\"): return require(\"./../../../../vendor/composer/autoload_classmap.php\");\n    case handlePath(\"vendor/composer/autoload_namespaces.php\"): return require(\"./../../../../vendor/composer/autoload_namespaces.php\");\n    case handlePath(\"vendor/composer/autoload_psr4.php\"): return require(\"./../../../../vendor/composer/autoload_psr4.php\");\n    case handlePath(\"vendor/composer/autoload_real.php\"): return require(\"./../../../../vendor/composer/autoload_real.php\");\n    case handlePath(\"vendor/composer/autoload_static.php\"): return require(\"./../../../../vendor/composer/autoload_static.php\");\n    case handlePath(\"vendor/composer/installed.php\"): return require(\"./../../../../vendor/composer/installed.php\");\n    }\n\n    return checkExistence ? exists : null;\n})\n.configure({\"stdio\":true}, [require(\"/Users/danielp/work/dan/uniter-projects/uniter-markdown-plugin-example/node_modules/uniter-markdown-plugin/dist/config.phpcore\"), {}])\n.bootstrap([require(\"./../../../../browser/bootstrap.js\")]);","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = {\n    sapi: 'cli',\n\n    operatingSystem: {\n        name: 'Uniter',           // Operating system name. eg. FreeBSD\n        hostName: 'localhost',    // Host name. eg. localhost.example.com\n        releaseName: '1.0.0',     // Release name. eg. 5.1.2-RELEASE\n        versionInfo: '(Generic)', // Version information. Varies a lot between operating systems\n        machineType: 'JavaScript' // Machine type. eg. i386\n    },\n\n    phpVersion: {\n        major: 5,\n        minor: 4,\n        release: 0\n    },\n\n    zendVersion: {\n        major: 2,\n        minor: 5,\n        release: 0\n    }\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n/**\n * \"Promise-synchronous\" (psync) mode entrypoint\n *\n * Allows the public API to be Promise-based even when not using Pausable,\n * so that switching to/from async mode does not require changes to the consuming application.\n */\n\n'use strict';\n\nvar builtins = require('./src/builtin/builtins'),\n    runtime = require('phpcore/psync');\n\nruntime.install(builtins);\n\nmodule.exports = runtime;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar FormatConverter = require('./string/FormatConverter'),\n    FormatParser = require('./string/FormatParser'),\n    Formatter = require('./string/Formatter'),\n    NativeFormatter = require('./string/NativeFormatter');\n\n/**\n * String handling bindings\n */\nmodule.exports = function () {\n    return {\n        stringFormatter: function () {\n            return new Formatter(new NativeFormatter(new FormatParser(), new FormatConverter()));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar util = require('util'),\n    phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception;\n\n/**\n * Thrown when a format by the printf(...) family of functions is missing an argument\n *\n * @param {number} argumentPosition\n * @constructor\n */\nfunction MissingFormatArgumentException(argumentPosition) {\n    Exception.call(this, 'Missing argument #' + (argumentPosition + 1));\n\n    /**\n     * @type {number}\n     */\n    this.argumentPosition = argumentPosition;\n}\n\nutil.inherits(MissingFormatArgumentException, Exception);\n\nmodule.exports = MissingFormatArgumentException;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Processes a conversion specification supported by the printf(...) family of functions\n *\n * @constructor\n */\nfunction FormatConverter() {\n}\n\n_.extend(FormatConverter.prototype, {\n    /**\n     * Processes a conversion specification, converting the specified value to a string\n     *\n     * @param {*} value\n     * @param {object} directive\n     * @returns {string}\n     */\n    convert: function (value, directive) {\n        switch (directive.type) {\n            case 'signed-decimal': // eg. \"%d\"\n                /*jshint bitwise: false */\n                value = value >> 0; // Cast to signed integer number\n\n                if (directive.showPositiveSign && value > 0) {\n                    value = '+' + value;\n                }\n\n                value += ''; // Cast to string\n\n                // Alignment specifiers for printf(...) refer to which side the number should be on,\n                // but .padStart(...) and .padEnd(...) refer to which side the _padding_ should be on (the opposite)\n                // which is why these might seem reversed\n                value = directive.alignmentSpecifier === 'right' ?\n                    value.padStart(directive.widthSpecifier, directive.paddingCharacter) :\n                    value.padEnd(directive.widthSpecifier, directive.paddingCharacter);\n\n                return value;\n            case 'string': // eg. \"%s\"\n                return value;\n            default:\n                throw new Error('Unsupported conversion specification type \"' + directive.type + '\"');\n        }\n    }\n});\n\nmodule.exports = FormatConverter;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    TYPE_SPECIFIER_TO_TYPE = {\n        'b': 'binary',\n        'c': 'ascii-character',\n        'd': 'signed-decimal',\n        'e': 'lower-exponent',\n        'E': 'upper-exponent',\n        'f': 'locale-aware-float',\n        'F': 'locale-unaware-float',\n        'g': 'lower-exponent-or-float',\n        'G': 'upper-exponent-or-float',\n        'o': 'octal',\n        's': 'string',\n        'u': 'unsigned-decimal',\n        'x': 'lower-hexadecimal',\n        'X': 'upper-hexadecimal'\n    };\n\n/**\n * Parses strings that use the format supported by the printf(...) family of functions\n *\n * @constructor\n */\nfunction FormatParser() {\n}\n\n_.extend(FormatParser.prototype, {\n    /**\n     * Parses the provided format string to a list of directives\n     *\n     * @param {string} formatString\n     * @returns {object[]}\n     */\n    parse: function (formatString) {\n        var alignmentSpecifier,\n            directives = [],\n            explicitArgumentPosition,\n            lastMatchEnd = 0,\n            match,\n            nextArgumentPosition = 0,\n            regex = /%(?:(\\d+)\\$)?(\\+)?(?:([ 0])|'(.))?(-)?(\\d+)?(?:\\.(\\D)?(\\d+))?([%bcdeEfFgGosuxX])/g,\n            paddingCharacter,\n            precisionSpecifier,\n            showPositiveNumberSigns,\n            typeSpecifier,\n            widthSpecifier;\n\n        while ((match = regex.exec(formatString)) !== null) {\n            if (match[9] === '%') {\n                continue;\n            }\n\n            if (lastMatchEnd < match.index) {\n                directives.push({\n                    kind: 'ordinary',\n                    text: formatString.substring(lastMatchEnd, match.index)\n                        // Resolve escapes back to a single literal \"%\" character\n                        .replace(/%%/g, '%')\n                });\n            }\n\n            explicitArgumentPosition = match[1] ? match[1] * 1 - 1 : null;\n\n            // Sign specifier - prefix positive numbers with \"+\"\n            // (by default only negatives are prefixed, with \"-\")\n            showPositiveNumberSigns = !!match[2];\n\n            // Padding character - 0 or a space, or another character if prefixed with a single quote\n            paddingCharacter = match[3] || match[4] || ' ';\n\n            // Whether to justify to the left or to the right (default is to the right)\n            alignmentSpecifier = match[5] === '-' ? 'left': 'right';\n\n            // The minimum no. of characters this conversion should result in\n            // (using the padding character determined above)\n            widthSpecifier = (match[6] || 0) * 1;\n\n            if (match[7]) {\n                // The character to use to pad a number may optionally be specified\n                // between the period and the digit\n                paddingCharacter = match[7];\n            }\n\n            // For a number this specifies how many decimal digits to display after the decimal point.\n            // For a string this acts as a cutoff, specifying the maximum length it will be truncated to\n            precisionSpecifier = (match[8] || 0) * 1;\n\n            typeSpecifier = match[9];\n\n            if (typeSpecifier === 's') {\n                directives.push({\n                    kind: 'conversion-specification',\n                    argumentPosition: explicitArgumentPosition || nextArgumentPosition,\n                    type: 'string'\n                });\n            } else {\n                directives.push({\n                    kind: 'conversion-specification',\n                    argumentPosition: explicitArgumentPosition || nextArgumentPosition,\n                    type: TYPE_SPECIFIER_TO_TYPE[typeSpecifier],\n                    showPositiveSign: showPositiveNumberSigns,\n                    paddingCharacter: paddingCharacter,\n                    alignmentSpecifier: alignmentSpecifier,\n                    widthSpecifier: widthSpecifier,\n                    precisionSpecifier: precisionSpecifier\n                });\n            }\n\n            if (explicitArgumentPosition === null) {\n                nextArgumentPosition++;\n            }\n\n            lastMatchEnd = match.index + match[0].length;\n        }\n\n        if (lastMatchEnd < formatString.length) {\n            directives.push({\n                kind: 'ordinary',\n                text: formatString.substr(lastMatchEnd)\n                    // Resolve escapes back to a single literal \"%\" character\n                    .replace(/%%/g, '%')\n            });\n        }\n\n        return directives;\n    }\n});\n\nmodule.exports = FormatParser;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash');\n\n/**\n * Formats a string according to the format supported by the printf(...) family of functions\n *\n * @param {NativeFormatter} nativeFormatter\n * @constructor\n */\nfunction Formatter(nativeFormatter) {\n    /**\n     * @type {NativeFormatter}\n     */\n    this.nativeFormatter = nativeFormatter;\n}\n\n_.extend(Formatter.prototype, {\n    /**\n     * Builds and returns the provided format string populated with the given arguments\n     *\n     * @param {string} formatString\n     * @param {Reference[]|Value[]|Variable[]} argReferences\n     * @returns {string}\n     */\n    format: function (formatString, argReferences) {\n        var argNatives = argReferences.map(function (argReference) {\n            var argValue = argReference.getValue();\n\n            if (argValue.getType() === 'object' || argValue.getType() === 'array') {\n                argValue = argValue.coerceToString();\n            }\n\n            return argValue.getNative();\n        });\n\n        return this.nativeFormatter.format(formatString, argNatives);\n    }\n});\n\nmodule.exports = Formatter;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception,\n    MissingFormatArgumentException = require('./Exception/MissingFormatArgumentException');\n\n/**\n * Formats a string according to the format supported by the printf(...) family of functions\n *\n * @param {FormatParser} formatParser\n * @param {FormatConverter} formatConverter\n * @constructor\n */\nfunction NativeFormatter(formatParser, formatConverter) {\n    /**\n     * @type {FormatConverter}\n     */\n    this.formatConverter = formatConverter;\n    /**\n     * @type {FormatParser}\n     */\n    this.formatParser = formatParser;\n}\n\n_.extend(NativeFormatter.prototype, {\n    /**\n     * Builds and returns the provided format string populated with the given arguments\n     *\n     * @param {string} formatString\n     * @param {array} args\n     * @returns {string}\n     */\n    format: function (formatString, args) {\n        var formatter = this,\n            directives = formatter.formatParser.parse(formatString);\n\n        args = args || [];\n\n        return directives\n            .map(function (directive) {\n                var arg;\n\n                if (directive.kind === 'ordinary') {\n                    // Plain text - just output as it was in the format string\n                    return directive.text;\n                }\n\n                if (directive.kind === 'conversion-specification') {\n                    // Conversion specifications are the placeholders \"%s\", \"%d\" etc.\n\n                    if (directive.argumentPosition >= args.length) {\n                        throw new MissingFormatArgumentException(directive.argumentPosition);\n                    }\n\n                    arg = args[directive.argumentPosition];\n\n                    // Perform the conversion\n                    return formatter.formatConverter.convert(arg, directive);\n                }\n\n                throw new Exception('Unsupported directive kind \"' + directive.kind + '\"');\n            })\n            .join('');\n    }\n});\n\nmodule.exports = NativeFormatter;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar arrayConstants = require('./constants/array'),\n    arrayFunctions = require('./functions/array'),\n    baseConversionMathFunctions = require('./functions/math/baseConversion'),\n    classFunctions = require('./functions/class'),\n    configOptionsAndInfoFunctions = require('./functions/optionsAndInfo/config'),\n    constantFunctions = require('./functions/misc/constant'),\n    Countable = require('./interfaces/SPL/Countable'),\n    environmentFunctions = require('./functions/optionsAndInfo/environment'),\n    errorHandlingFunctions = require('./functions/errorHandling'),\n    extensionOptionsAndInfoFunctions = require('./functions/optionsAndInfo/extension'),\n    filesystemConstants = require('./constants/filesystem'),\n    filesystemFunctions = require('./functions/filesystem'),\n    functionHandlingFunctions = require('./functions/functionHandling'),\n    htmlStringFunctions = require('./functions/string/html'),\n    InvalidArgumentException = require('./classes/Exception/InvalidArgumentException'),\n    LogicException = require('./classes/Exception/LogicException'),\n    outputControlFunctions = require('./functions/outputControl'),\n    pcreCommonFunctions = require('./functions/pcre/common'),\n    pcreConstants = require('./constants/pcre'),\n    phpConstants = require('./constants/php'),\n    phpOptionsAndInfoFunctions = require('./functions/optionsAndInfo/php'),\n    splFunctions = require('./functions/spl'),\n    stringBindings = require('./bindings/string'),\n    stringConstants = require('./constants/string'),\n    stringFunctions = require('./functions/string'),\n    timeDateAndTimeFunctions = require('./functions/dateAndTime/time'),\n    timeFunctions = require('./functions/misc/time'),\n    variableHandlingFunctions = require('./functions/variableHandling');\n\nmodule.exports = {\n    bindingGroups: [\n        stringBindings\n    ],\n    classGroups: [\n        function () {\n            return {\n                'Countable': Countable\n            };\n        },\n        function () {\n            return {\n                'LogicException': LogicException\n            };\n        },\n        function () {\n            return {\n                'InvalidArgumentException': InvalidArgumentException\n            };\n        }\n    ],\n    constantGroups: [\n        arrayConstants,\n        filesystemConstants,\n        pcreConstants,\n        phpConstants,\n        stringConstants\n    ],\n    functionGroups: [\n        arrayFunctions,\n        baseConversionMathFunctions,\n        classFunctions,\n        configOptionsAndInfoFunctions,\n        constantFunctions,\n        environmentFunctions,\n        errorHandlingFunctions,\n        extensionOptionsAndInfoFunctions,\n        filesystemFunctions,\n        functionHandlingFunctions,\n        htmlStringFunctions,\n        outputControlFunctions,\n        pcreCommonFunctions,\n        phpOptionsAndInfoFunctions,\n        splFunctions,\n        stringFunctions,\n        timeDateAndTimeFunctions,\n        timeFunctions,\n        variableHandlingFunctions\n    ]\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Exception thrown if an argument is not of the expected type\n     *\n     * @see {@link https://secure.php.net/manual/en/class.invalidargumentexception.php}\n     * @constructor\n     */\n    function InvalidArgumentException() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base PHP LogicException class\n    internals.extendClass('LogicException');\n\n    internals.disableAutoCoercion();\n\n    return InvalidArgumentException;\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    /**\n     * Exception representing an issue with the logic of the program\n     *\n     * @see {@link https://secure.php.net/manual/en/class.logicexception.php}\n     * @constructor\n     */\n    function LogicException() {\n        internals.callSuperConstructor(this, arguments);\n    }\n\n    // Extend the base PHP Exception class\n    internals.extendClass('Exception');\n\n    internals.disableAutoCoercion();\n\n    return LogicException;\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'COUNT_NORMAL': 0,\n        'COUNT_RECURSIVE': 1\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'DIRECTORY_SEPARATOR': '/',\n        'PATH_SEPARATOR': ':' // Be Unix-y and use colon rather than semi-colon (Windows)\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'PREG_OFFSET_CAPTURE': 256,\n        'PREG_PATTERN_ORDER': 1,\n        'PREG_SET_ORDER': 2\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar systemConstants = require('../../../constants');\n\nmodule.exports = function () {\n    // NB: Some of the most basic constants (eg. PHP_EOL) are defined by the PHPCore library\n\n    return {\n        'PHP_OS': 'Uniter',\n        'PHP_SAPI': systemConstants.sapi,\n        'PHP_VERSION':\n            systemConstants.phpVersion.major + '.' +\n            systemConstants.phpVersion.minor + '.' +\n            systemConstants.phpVersion.release,\n        'PHP_VERSION_ID':\n            systemConstants.phpVersion.major * 10000 +\n            systemConstants.phpVersion.minor * 100 +\n            systemConstants.phpVersion.release\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    return {\n        'HTML_SPECIALCHARS': 0,\n        'HTML_ENTITIES': 1,\n\n        'ENT_NOQUOTES': 0,\n        'ENT_COMPAT': 2,\n        'ENT_QUOTES': 3,\n\n        'ENT_HTML401': 0,\n\n        'ENT_SUBSTITUTE': 8 // Not applicable, as JS string literals cannot contain invalid Unicode escape sequences\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty,\n    phpCommon = require('phpcommon'),\n    COUNT_NORMAL = 0,\n    IMPLODE = 'implode',\n    KeyValuePair = require('phpcore/src/KeyValuePair'),\n    SORT_REGULAR = 0,\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        methods,\n        valueFactory = internals.valueFactory;\n\n    methods = {\n        /**\n         * Determines the difference between arrays. A new array will be returned,\n         * with all the elements of the first array that are not present in any of the other arrays\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-diff.php}\n         *\n         * @returns {ArrayValue|NullValue}\n         */\n        'array_diff': function () {\n            var firstArrayValue,\n                remainingElementPairs,\n                returnNull = false;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'array_diff() expects at least 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            firstArrayValue = arguments[0].getValue();\n\n            if (firstArrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'array_diff(): Argument #0 is not an array'\n                );\n                return valueFactory.createNull();\n            }\n\n            // Start with the key-value pairs for the elements of the first array,\n            // as for each successive array we will compare their values against the values\n            // of this first one\n            remainingElementPairs = firstArrayValue.getKeys().map(function (keyValue) {\n                return firstArrayValue.getElementPairByKey(keyValue);\n            });\n\n            _.each([].slice.call(arguments, 1), function (arrayReference, argumentIndex) {\n                var arrayValue = arrayReference.getValue();\n\n                if (arrayValue.getType() !== 'array') {\n                    callStack.raiseError(\n                        PHPError.E_WARNING,\n                        'array_diff(): Argument #' + (argumentIndex + 2) + ' is not an array'\n                    );\n                    returnNull = true;\n                    return false;\n                }\n\n                _.each(arrayValue.getKeys(), function (keyValue) {\n                    var elementValue = arrayValue.getElementByKey(keyValue).getValue();\n\n                    remainingElementPairs = remainingElementPairs.filter(function (remainingElementPair) {\n                        return elementValue.getValue().isNotEqualTo(remainingElementPair.getValue()).getNative();\n                    });\n                });\n            });\n\n            if (returnNull) {\n                return valueFactory.createNull();\n            }\n\n            return valueFactory.createArray(remainingElementPairs);\n        },\n\n        /**\n         * Determines whether the given key or index exists in the array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-key-exists.php}\n         *\n         * @param {Variable|Value} keyReference\n         * @param {Variable|ArrayValue} arrayReference\n         * @returns {BooleanValue}\n         */\n        'array_key_exists': function (keyReference, arrayReference) {\n            var arrayValue,\n                keyValue;\n\n            keyValue = keyReference.getValue();\n            arrayValue = arrayReference.getValue();\n\n            return valueFactory.createBoolean(arrayValue.getElementByKey(keyValue).isDefined());\n        },\n\n        /**\n         * Fetch all keys (or a subset of the keys) in an array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-keys.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @param {Variable|Value} searchValueReference\n         * @param {Variable|BooleanValue} strictMatchReference\n         * @returns {ArrayValue}\n         */\n        'array_keys': function (arrayReference, searchValueReference, strictMatchReference) {\n            var arrayValue;\n\n            if (searchValueReference || strictMatchReference) {\n                throw new Error('array_keys() :: Search functionality is not yet supported');\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            return valueFactory.createArray(arrayValue.getKeys());\n        },\n\n        /**\n         * Maps one or more arrays to a new array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-map.php}\n         *\n         * @param {Variable|Value} callbackReference\n         * @param {Variable|ArrayValue} firstArrayReference\n         * @returns {ArrayValue}\n         */\n        'array_map': function (callbackReference, firstArrayReference) {\n            var callbackValue = callbackReference.getValue(),\n                firstArrayValue = firstArrayReference.getValue(),\n                result = [];\n\n            if (arguments.length > 2) {\n                throw new Error('array_map() :: Multiple input arrays are not yet supported');\n            }\n\n            _.each(firstArrayValue.getKeys(), function (keyValue) {\n                // Pass the global namespace as the namespace scope -\n                // any normal function callback will need to be fully-qualified\n                // TODO: Test what happens with barewords, eg. `array_map(MyClass::staticMethod, [...])`\n                var elementValue = firstArrayValue.getElementByKey(keyValue),\n                    mappedElementValue = callbackValue.call([elementValue], globalNamespace);\n\n                result.push(new KeyValuePair(keyValue, mappedElementValue));\n            });\n\n            return valueFactory.createArray(result);\n        },\n\n        /**\n         * Merges one or more arrays together, returning a new array with the result\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-merge.php}\n         *\n         * @returns {IntegerValue}\n         */\n        'array_merge': function () {\n            var nativeKeyToElementMap = {},\n                mergedElements,\n                nativeKeys = [],\n                nextIndex = 0,\n                returnNull = false;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'array_merge() expects at least 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            _.each(arguments, function (arrayReference, argumentIndex) {\n                var arrayValue = arrayReference.getValue();\n\n                if (arrayValue.getType() !== 'array') {\n                    callStack.raiseError(\n                        PHPError.E_WARNING,\n                        'array_merge(): Argument #' + (argumentIndex + 1) + ' is not an array'\n                    );\n                    returnNull = true;\n                    return false;\n                }\n\n                _.each(arrayValue.getKeys(), function (key) {\n                    var mergedKey,\n                        nativeKey;\n\n                    if (key.isNumeric()) {\n                        nativeKey = nextIndex++;\n                        mergedKey = valueFactory.createInteger(nativeKey);\n                        nativeKeys.push(nativeKey);\n                    } else {\n                        nativeKey = key.getNative();\n                        mergedKey = key;\n\n                        if (!hasOwn.call(nativeKeyToElementMap, nativeKey)) {\n                            nativeKeys.push(nativeKey);\n                        }\n                    }\n\n                    nativeKeyToElementMap[nativeKey] = arrayValue.getElementPairByKey(key, mergedKey);\n                });\n            });\n\n            if (returnNull) {\n                return valueFactory.createNull();\n            }\n\n            mergedElements = _.map(nativeKeys, function (nativeKey) {\n                return nativeKeyToElementMap[nativeKey];\n            });\n\n            return valueFactory.createArray(mergedElements);\n        },\n\n        /**\n         * Pops the last element off the end of an array and returns it\n         *\n         * - Also resets the internal array pointer\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-pop.php}\n         *\n         * @param {Value|Variable|Reference} arrayReference\n         * @return {Value}\n         */\n        'array_pop': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            return arrayValue.pop();\n        },\n\n        /**\n         * Pushes one or more elements onto the end of an array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-push.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @returns {IntegerValue} The new length of the array after pushing\n         */\n        'array_push': function (arrayReference) {\n            var arrayValue,\n                i,\n                reference,\n                value;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'array_push() expects at least 2 parameters, 0 given');\n                return valueFactory.createNull();\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            for (i = 1; i < arguments.length; i++) {\n                reference = arguments[i];\n                value = reference.getValue();\n                arrayValue.push(value);\n            }\n\n            return valueFactory.createInteger(arrayValue.getLength());\n        },\n\n        /**\n         * Shifts an element off the beginning of an array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-shift.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @returns {ArrayValue}\n         */\n        'array_shift': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            return arrayValue.shift();\n        },\n\n        /**\n         * Returns a new array without duplicate values from a source array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.array-unique.php}\n         *\n         * @param {Variable|ArrayValue} arrayReference\n         * @param {Variable|IntegerValue} sortFlagsReference\n         * @returns {ArrayValue}\n         */\n        'array_unique': function (arrayReference, sortFlagsReference) {\n            var arrayValue,\n                resultPairs = [],\n                usedValues = {};\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'array_unique() expects at least 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            if (sortFlagsReference) {\n                throw new Error('array_unique() :: Sort flags are not yet supported');\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            // Work on a copy, so we don't mutate the original array\n            arrayValue = arrayValue.getForAssignment();\n\n            // First sort the elements alphabetically by value (default/SORT_STRING behaviour)\n            arrayValue.sort(function (elementA, elementB) {\n                var nativeValueA = elementA.getValue().coerceToString().getNative(),\n                    nativeValueB = elementB.getValue().coerceToString().getNative();\n\n                return String(nativeValueB).localeCompare(nativeValueA);\n            });\n\n            _.each(arrayValue.getKeys(), function (keyValue) {\n                var elementPair = arrayValue.getElementPairByKey(keyValue),\n                    nativeValue = elementPair.getValue().coerceToString().getNative();\n\n                if (hasOwn.call(usedValues, nativeValue)) {\n                    return;\n                }\n\n                usedValues[nativeValue] = true;\n\n                resultPairs.push(elementPair);\n            });\n\n            return valueFactory.createArray(resultPairs);\n        },\n\n        /**\n         * Returns all the values from the array and indexes the array numerically.\n         *\n         * @see {@link http://php.net/manual/en/function.array-values.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @returns {ArrayValue}\n         */\n        'array_values': function (arrayReference) {\n            var arrayValue;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'array_values() expects exactly 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            return valueFactory.createArray(arrayValue.getValues());\n        },\n\n        /**\n         * Counts the specified array or object. May be hooked\n         * by implementing interface Countable\n         *\n         * @see {@link https://secure.php.net/manual/en/function.count.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @param {Variable|Value} modeReference\n         * @returns {IntegerValue}\n         */\n        'count': function (arrayReference, modeReference) {\n            var array = arrayReference.getValue(),\n                mode = modeReference ? modeReference.getNative() : 0,\n                type = array.getType();\n\n            if (type === 'object' && array.classIs('Countable')) {\n                return array.callMethod('count');\n            }\n\n            if (mode !== COUNT_NORMAL) {\n                throw new Error('Unsupported mode for count(...) :: ' + mode);\n            }\n\n            return valueFactory.createInteger(\n                type === 'array' || type === 'object' ? array.getLength() : 1\n            );\n        },\n        'current': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            if (arrayValue.getPointer() >= arrayValue.getLength()) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return arrayValue.getCurrentElement().getValue();\n        },\n\n        /**\n         * Set the internal pointer of an array to its last element,\n         * returning the value of that last element.\n         * False will be returned for an empty array\n         *\n         * @see {@link https://secure.php.net/manual/en/function.end.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @returns {Value}\n         */\n        'end': function (arrayReference) {\n            var arrayValue = arrayReference.getValue(),\n                keys = arrayValue.getKeys();\n\n            if (keys.length === 0) {\n                return valueFactory.createBoolean(false);\n            }\n\n            // Advance the array's internal pointer to the last element\n            arrayValue.setPointer(keys.length - 1);\n\n            return arrayValue.getElementByKey(keys[keys.length - 1]).getValue();\n        },\n\n        'implode': function (glueReference, piecesReference) {\n            var glueValue = glueReference.getValue(),\n                piecesValue = piecesReference.getValue(),\n                tmp,\n                values;\n\n            // For backwards-compatibility, PHP supports receiving args in either order\n            if (glueValue.getType() === 'array') {\n                tmp = glueValue;\n                glueValue = piecesValue;\n                piecesValue = tmp;\n            }\n\n            values = piecesValue.getValues();\n\n            _.each(values, function (value, key) {\n                values[key] = value.coerceToString().getNative();\n            });\n\n            return valueFactory.createString(values.join(glueValue.getNative()));\n        },\n\n        /**\n         * Determines whether a value (the \"needle\") exists in a given array (the \"haystack\")\n         *\n         * @see {@link https://secure.php.net/manual/en/function.in-array.php}\n         *\n         * @param {Variable|Value} needleReference\n         * @param {Variable|Value} haystackReference\n         * @param {Variable|Value} strictMatchReference\n         * @returns {BooleanValue}\n         */\n        'in_array': function (needleReference, haystackReference, strictMatchReference) {\n            var contains = false,\n                haystackValue,\n                needleValue,\n                strictMatch;\n\n            haystackValue = haystackReference.getValue();\n            needleValue = needleReference.getValue();\n            strictMatch = strictMatchReference ? strictMatchReference.getNative() : false;\n\n            _.each(haystackValue.getValues(), function (elementValue) {\n                if (\n                    (strictMatch && elementValue.isIdenticalTo(needleValue).getNative()) ||\n                    (!strictMatch && elementValue.isEqualTo(needleValue).getNative())\n                ) {\n                    contains = true;\n                    return false;\n                }\n            });\n\n            return valueFactory.createBoolean(contains);\n        },\n\n        'join': function (glueReference, piecesReference) {\n            return methods[IMPLODE](glueReference, piecesReference);\n        },\n\n        /**\n         * Fetches the key for the element the array's internal pointer is pointing at\n         *\n         * @see {@link https://secure.php.net/manual/en/function.key.php}\n         *\n         * @param {ArrayValue|Reference|Variable|Value} arrayReference\n         * @return {Value}\n         */\n        'key': function (arrayReference) {\n            var arrayValue,\n                currentKey;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'key() expects exactly 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            arrayValue = arrayReference.getValue();\n\n            if (arrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'key() expects parameter 1 to be array, ' +\n                    arrayValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            currentKey = arrayValue.getKeyByIndex(arrayValue.getPointer());\n\n            return currentKey !== null ?\n                currentKey :\n                valueFactory.createNull();\n        },\n\n        /**\n         * Sorts an array in-place, by key, in reverse order\n         *\n         * @see {@link https://secure.php.net/manual/en/function.krsort.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @param {Variable|Value|undefined} sortFlagsReference\n         * @returns {IntegerValue}\n         */\n        'krsort': function (arrayReference, sortFlagsReference) {\n            var arrayValue,\n                sortFlags;\n\n            if (!arrayReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'krsort() expects at least 1 parameter, 0 given');\n                return valueFactory.createBoolean(false);\n            }\n\n            arrayValue = arrayReference.getValue();\n            sortFlags = sortFlagsReference ? sortFlagsReference.getValue().getNative() : SORT_REGULAR;\n\n            if (arrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'krsort() expects parameter 1 to be array, ' +\n                    arrayValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createBoolean(false);\n            }\n\n            if (sortFlags !== SORT_REGULAR) {\n                throw new Error(\n                    'krsort() :: Only SORT_REGULAR (' +\n                    SORT_REGULAR +\n                    ') is supported, ' +\n                    sortFlags +\n                    ' given'\n                );\n            }\n\n            arrayValue.sort(function (elementA, elementB) {\n                var nativeKeyA = elementA.getKey().getNative(),\n                    nativeKeyB = elementB.getKey().getNative();\n\n                return String(nativeKeyB).localeCompare(nativeKeyA);\n            });\n\n            return valueFactory.createBoolean(true);\n        },\n        'next': function (arrayReference) {\n            var arrayValue = arrayReference.getValue();\n\n            if (arrayValue.getType() !== 'array') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'next() expects parameter 1 to be array, ' +\n                    arrayValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            arrayValue.setPointer(arrayValue.getPointer() + 1);\n\n            if (arrayValue.getPointer() >= arrayValue.getLength()) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return arrayValue.getCurrentElement().getValue();\n        },\n\n        /**\n         * Alias of count()\n         *\n         * @see {@link https://secure.php.net/manual/en/function.sizeof.php}\n         *\n         * @param {Variable|Value} arrayReference\n         * @param {Variable|Value} modeReference\n         * @returns {IntegerValue}\n         */\n        'sizeof': 'count'\n    };\n\n    return methods;\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        classAutoloader = internals.classAutoloader,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Determines whether the specified class exists\n         *\n         * @see {@link https://secure.php.net/manual/en/function.class-exists.php}\n         *\n         * @param {Variable|Value} classNameReference      The name of the class to check for\n         * @param {Variable|Value} callAutoloaderReference True to invoke the autoloader, false otherwise\n         * @returns {BooleanValue}\n         */\n        'class_exists': function (classNameReference, callAutoloaderReference) {\n            var className = classNameReference.getNative(),\n                callAutoloader = callAutoloaderReference ? callAutoloaderReference.getNative() : true;\n\n            // Autoload the class if not already defined and autoloading is requested\n            if (!globalNamespace.hasClass(className) && callAutoloader) {\n                classAutoloader.autoloadClass(className);\n            }\n\n            return valueFactory.createBoolean(globalNamespace.hasClass(className));\n        },\n\n        /**\n         * Fetches the name of either the current class or the class of a specified object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-class.php}\n         *\n         * @param {Variable|Value} objectReference\n         * @returns {StringValue|BooleanValue}\n         */\n        'get_class': function (objectReference) {\n            var currentClass,\n                objectValue;\n\n            if (!objectReference) {\n                currentClass = callStack.getCallerScope().getCurrentClass();\n\n                if (!currentClass) {\n                    callStack.raiseError(\n                        PHPError.E_WARNING,\n                        'get_class() called without object from outside a class'\n                    );\n\n                    return valueFactory.createBoolean(false);\n                }\n\n                return valueFactory.createString(currentClass.getName());\n            }\n\n            objectValue = objectReference.getValue();\n\n            if (objectValue.getType() !== 'object') {\n                // If specified, the value must be an object\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'get_class() expects parameter 1 to be object, ' + objectValue.getType() + ' given'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createString(objectValue.getClassName());\n        },\n\n        /**\n         * Checks if the object is of this class or has this class as one of its parents\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-a.php}\n         *\n         * @param {Variable|Value} objectReference\n         * @param {Variable|Value} classNameReference\n         * @param {Variable|Value} allowStringReference\n         * @returns {BooleanValue}\n         */\n        'is_a': function (objectReference, classNameReference, allowStringReference) {\n            var allowString,\n                className,\n                classNameValue,\n                objectValue;\n\n            objectValue = objectReference.getValue();\n            classNameValue = classNameReference.getValue();\n\n            className = classNameValue.getNative();\n            allowString = allowStringReference ? allowStringReference.getNative() : false;\n\n            if (objectValue.getType() === 'object') {\n                return valueFactory.createBoolean(objectValue.classIs(className));\n            }\n\n            if (objectValue.getType() === 'string') {\n                if (!allowString) {\n                    // First arg is not allowed to be a string - just return false (no warning/notice)\n                    return valueFactory.createBoolean(false);\n                }\n\n                return valueFactory.createBoolean(\n                    globalNamespace.getClass(objectValue.getNative()).is(className)\n                );\n            }\n\n            // Invalid \"object\" given - just return false (no warning/notice)\n            return valueFactory.createBoolean(false);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        optionSet = internals.optionSet,\n        valueFactory = internals.valueFactory;\n\n    function getPerformance() {\n        var performance = optionSet.getOption('performance');\n\n        if (!performance) {\n            throw new Error('performance :: No `performance` option is configured');\n        }\n\n        return performance;\n    }\n\n    return {\n        /**\n         * Fetches the current Unix timestamp with microseconds\n         *\n         * @see {@link https://secure.php.net/manual/en/function.microtime.php}\n         *\n         * @param {Variable|Value} getAsFloatReference Whether to return a float with seconds + us\n         * @returns {FloatValue|StringValue}\n         */\n        'microtime': function (getAsFloatReference) {\n            var getAsFloat,\n                getAsFloatValue = getAsFloatReference ?\n                    getAsFloatReference.getValue() :\n                    null,\n                timeInSeconds;\n\n            if (getAsFloatValue && /^(array|object)$/.test(getAsFloatValue.getType())) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'microtime() expects parameter 1 to be boolean, ' +\n                    getAsFloatValue.getType() +\n                    ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            // Default value (if argument is omitted) is `false`\n            getAsFloat = getAsFloatValue ? getAsFloatValue.coerceToBoolean().getNative() : false;\n\n            // Convert microseconds to seconds (with decimal precision to maintain microsecond accuracy)\n            timeInSeconds = getPerformance().getTimeInMicroseconds() / 1000000;\n\n            if (getAsFloat) {\n                // Return the time since the Unix epoch in seconds, with microsecond accuracy\n                // as a float\n                return valueFactory.createFloat(timeInSeconds);\n            }\n\n            // Return the number of microseconds into the current second first, followed by\n            // the number of whole seconds since the Unix epoch\n            return valueFactory.createString(\n                (timeInSeconds % 1).toFixed(6) + ' ' +\n                Math.floor(timeInSeconds)\n            );\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        errorConfiguration = internals.errorConfiguration,\n        valueFactory = internals.valueFactory,\n        // Maps the error type PHP constant name to the internal PHPError type that should be raised\n        ERROR_CONSTANT_NAME_TO_LEVEL = {\n            'E_USER_DEPRECATED': PHPError.E_DEPRECATED,\n            'E_USER_ERROR': PHPError.E_ERROR,\n            'E_USER_NOTICE': PHPError.E_NOTICE,\n            'E_USER_WARNING': PHPError.E_WARNING\n        };\n\n    return {\n        /**\n         * Sets or determines which PHP errors will be reported\n         *\n         * @see {@link https://secure.php.net/manual/en/function.error-reporting.php}\n         *\n         * @returns {IntegerValue}\n         */\n        'error_reporting': function (levelReference) {\n            var currentLevelValue = valueFactory.coerce(errorConfiguration.getErrorReportingLevel());\n\n            if (!levelReference) {\n                // When no argument is given, just return the current reporting level\n\n                return currentLevelValue;\n            }\n\n            errorConfiguration.setErrorReportingLevel(levelReference.getValue().getNative());\n\n            return currentLevelValue;\n        },\n\n        /**\n         * Generates a user-level error/warning/notice message\n         *\n         * @see {@link https://secure.php.net/manual/en/function.trigger-error.php}\n         *\n         * @returns {BooleanValue}\n         */\n        'trigger_error': function (errorMessageReference, errorTypeReference) {\n            var errorConstantName,\n                errorLevel,\n                errorMessage,\n                errorType;\n\n            errorMessage = errorMessageReference.getNative();\n            errorType = errorTypeReference ? errorTypeReference.getNative() : null;\n\n            if (errorType === null) {\n                errorConstantName = 'E_USER_NOTICE';\n            } else {\n                errorConstantName = Object.keys(ERROR_CONSTANT_NAME_TO_LEVEL).find(function (constantName) {\n                    return internals.getConstant(constantName) === errorType;\n                });\n\n                if (!errorConstantName) {\n                    callStack.raiseError(PHPError.E_WARNING, 'Invalid error type specified');\n\n                    return valueFactory.createBoolean(false);\n                }\n            }\n\n            errorLevel = ERROR_CONSTANT_NAME_TO_LEVEL[errorConstantName];\n\n            callStack.raiseError(errorLevel, errorMessage);\n\n            return valueFactory.createBoolean(true);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar INCLUDE_PATH_INI = 'include_path',\n    PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        iniState = internals.iniState,\n        optionSet = internals.optionSet,\n        valueFactory = internals.valueFactory;\n\n    function getFileSystem() {\n        var fileSystem = optionSet.getOption('fileSystem');\n\n        if (!fileSystem) {\n            throw new Error('filesystem :: No `fileSystem` option is configured');\n        }\n\n        return fileSystem;\n    }\n\n    return {\n        'dirname': function (pathReference) {\n            var pathValue = pathReference.getValue(),\n                path = pathValue.getNative();\n\n            if (path && path.indexOf('/') === -1) {\n                path = '.';\n            } else {\n                path = path.replace(/\\/[^\\/]+$/, '');\n            }\n\n            pathValue = valueFactory.createString(path);\n\n            return pathValue;\n        },\n        /**\n         * Determines whether a file or directory exists with the given path\n         *\n         * @see {@link https://secure.php.net/manual/en/function.file-exists.php}\n         *\n         * @returns {BooleanValue}\n         */\n        'file_exists': function (pathReference) {\n            var fileSystem,\n                path;\n\n            if (!pathReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'file_exists() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            fileSystem = getFileSystem();\n            path = pathReference.getValue().getNative();\n\n            return valueFactory.createBoolean(fileSystem.isFile(path) || fileSystem.isDirectory(path));\n        },\n\n        /**\n         * Determines whether a file (not a directory) exists with the given path\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-include-path.php}\n         *\n         * @returns {StringValue}\n         */\n        'get_include_path': function () {\n            return valueFactory.createString(iniState.get(INCLUDE_PATH_INI));\n        },\n\n        /**\n         * Determines whether a file (not a directory) exists with the given path\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-file.php}\n         *\n         * @returns {BooleanValue}\n         */\n        'is_file': function (pathReference) {\n            var fileSystem,\n                path;\n\n            if (!pathReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'is_file() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            fileSystem = getFileSystem();\n            path = pathReference.getValue().getNative();\n\n            return valueFactory.createBoolean(fileSystem.isFile(path));\n        },\n\n        /**\n         * Changes the include path, returning the old one\n         *\n         * @see {@link https://secure.php.net/manual/en/function.set-include-path.php}\n         *\n         * @returns {StringValue} Returns the old include path that was set previously\n         */\n        'set_include_path': function (newIncludePathReference) {\n            var oldIncludePath = iniState.get(INCLUDE_PATH_INI);\n\n            iniState.set(INCLUDE_PATH_INI, newIncludePathReference.getValue().getNative());\n\n            return valueFactory.createString(oldIncludePath);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    CallbackValue = require('./functionHandling/CallbackValue'),\n    PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Calls the specified function, returning its result\n         *\n         * @see {@link https://secure.php.net/manual/en/function.call-user-func.php}\n         *\n         * @param {Variable|Value} callbackReference       The function or callable to call\n         * @param {...Variable|...Value} argumentReference Variable no. of arguments to pass to the callable\n         * @returns {Value}\n         */\n        'call_user_func': function (callbackReference, argumentReference) { //jshint ignore:line\n            var callbackValue = callbackReference.getValue(),\n                expectedReferenceArgumentIndex = null,\n                expectedReferenceError = {},\n                argumentValues = _.map(\n                    [].slice.call(arguments, 1),\n                    function (argumentReference, argumentIndex) {\n                        return new CallbackValue(\n                            function () {\n                                expectedReferenceArgumentIndex = argumentIndex;\n                                throw expectedReferenceError;\n                            },\n                            function () {\n                                return argumentReference.getValue();\n                            }\n                        );\n                    }\n                );\n\n            try {\n                return callbackValue.call(argumentValues, globalNamespace);\n            } catch (error) {\n                // Allow any other errors through\n                if (error !== expectedReferenceError) {\n                    throw error;\n                }\n\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'Parameter ' + (expectedReferenceArgumentIndex + 1) +\n                        ' to ' + callbackValue.getCallableName(globalNamespace) +\n                        '() expected to be a reference, value given'\n                );\n\n                return valueFactory.createNull();\n            }\n        },\n        /**\n         * Calls the specified function, returning its result\n         *\n         * @see {@link https://secure.php.net/manual/en/function.call-user-func-array.php}\n         *\n         * @param {Variable|Value} callbackReference      The function or callable to call\n         * @param {Variable|Value} argumentArrayReference An array of arguments to pass to the callable\n         * @returns {Value}\n         */\n        'call_user_func_array': function (callbackReference, argumentArrayReference) {\n            var callbackValue = callbackReference.getValue(),\n                argumentArrayValue = argumentArrayReference.getValue(),\n                argumentValues = argumentArrayValue.getValueReferences();\n\n            return callbackValue.call(argumentValues, globalNamespace);\n        },\n\n        /**\n         * Fetches an array containing all arguments passed to the function.\n         * If called from outside a function, FALSE will be returned.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.func-get-args.php}\n         *\n         * @returns {ArrayValue|BooleanValue}\n         */\n        'func_get_args': function () {\n            var callerCall = callStack.getCaller();\n\n            if (callerCall === null) {\n                // We're not in a function scope - no args to get\n\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'func_get_args(): Called from the global scope - no function context'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createArray(callerCall.getFunctionArgs());\n        },\n\n        /**\n         * Fetches the number of arguments passed to the function.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.func-num-args.php}\n         *\n         * @returns {IntegerValue}\n         */\n        'func_num_args': function () {\n            var callerCall = callStack.getCaller();\n\n            if (callerCall === null) {\n                // We're not in a function scope - no args to get\n\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'func_num_args(): Called from the global scope - no function context'\n                );\n\n                return valueFactory.createInteger(-1);\n            }\n\n            return valueFactory.createInteger(callerCall.getFunctionArgs().length);\n        },\n\n        /**\n         * Determines whether the specified function exists,\n         * returning true if so and false otherwise\n         *\n         * @see {@link https://secure.php.net/manual/en/function.function-exists.php}\n         *\n         * @param {Variable|Value} nameReference The name of the function to check for\n         * @returns {BooleanValue}\n         */\n        'function_exists': function (nameReference) {\n            var name = nameReference.getValue().getNative().replace(/^\\\\/, '');\n\n            return valueFactory.createBoolean(globalNamespace.hasFunction(name));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    util = require('util'),\n    Reference = require('phpcore/src/Reference/Reference');\n\n/**\n * Represents a Value object whose reference or value\n * are fetched with a callback function\n *\n * @param {Function} referenceCallback\n * @param {Function} valueCallback\n * @constructor\n */\nfunction CallbackValue(referenceCallback, valueCallback) {\n    /**\n     * @type {Function}\n     */\n    this.referenceCallback = referenceCallback;\n    /**\n     * @type {Function}\n     */\n    this.valueCallback = valueCallback;\n}\n\nutil.inherits(CallbackValue, Reference);\n\n_.extend(CallbackValue.prototype, {\n    /**\n     * Fetches the eventual native value of this value via the provided callback\n     *\n     * @returns {*}\n     */\n    getNative: function () {\n        return this.getValue().getNative();\n    },\n\n    /**\n     * Fetches the reference for this value via the provided callback\n     *\n     * @returns {Reference|Value}\n     */\n    getReference: function () {\n        return this.referenceCallback();\n    },\n\n    /**\n     * Fetches the eventual value of this value via the provided callback\n     *\n     * @returns {Value}\n     */\n    getValue: function () {\n        return this.valueCallback();\n    },\n\n    /**\n     * {@inheritdoc}\n     */\n    isDefined: function () {\n        return true;\n    }\n});\n\nmodule.exports = CallbackValue;\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Converts a decimal integer to hexadecimal\n         *\n         * @see {@link https://secure.php.net/manual/en/function.dechex.php}\n         *\n         * @param {Variable|Value} numberReference\n         * @returns {StringValue}\n         */\n        'dechex': function (numberReference) {\n            /*jshint bitwise:false */\n            var number,\n                unsignedNumber;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'dechex() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            number = numberReference ?\n                numberReference.getValue().getNative() :\n                null;\n            unsignedNumber = number >>> 0; // Cast to a 32-bit unsigned integer\n\n            return valueFactory.createString(unsignedNumber.toString(16));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar PHPError = require('phpcommon').PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Defines a new constant, optionally making it case-insensitive (in name)\n         *\n         * @see {@link https://secure.php.net/manual/en/function.define.php}\n         *\n         * @param {Value|Variable} nameValue\n         * @param {Value|Variable} valueValue\n         * @param {Value|Variable|undefined} isCaseInsensitive\n         * @returns {IntegerValue}\n         */\n        'define': function (nameValue, valueValue, isCaseInsensitive) {\n            var match,\n                name,\n                namespace,\n                path;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'define() expects at least 2 parameters, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            name = nameValue.getValue().getNative();\n            isCaseInsensitive = isCaseInsensitive ? isCaseInsensitive.getValue().getNative() : false;\n            valueValue = valueValue.getValue();\n\n            name = name.replace(/^\\//, '');\n            match = name.match(/^(.*?)\\\\([^\\\\]+)$/);\n\n            if (match) {\n                path = match[1];\n                name = match[2];\n                namespace = globalNamespace.getDescendant(path);\n            } else {\n                namespace = globalNamespace;\n            }\n\n            namespace.defineConstant(name, valueValue, {\n                caseInsensitive: isCaseInsensitive\n            });\n        },\n        /**\n         * Returns true if a constant is defined with the given name, false otherwise\n         *\n         * @see {@link https://secure.php.net/manual/en/function.defined.php}\n         *\n         * @param {Value|Variable} nameValue\n         * @returns {BooleanValue}\n         */\n        'defined': function (nameValue) {\n            var match,\n                name,\n                namespace,\n                path;\n\n            if (arguments.length === 0) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'defined() expects exactly 1 parameter, 0 given'\n                );\n                return valueFactory.createNull();\n            }\n\n            name = nameValue.getValue().getNative();\n\n            name = name.replace(/^\\//, '');\n            match = name.match(/^(.*?)\\\\([^\\\\]+)$/);\n\n            if (match) {\n                path = match[1];\n                name = match[2];\n                namespace = globalNamespace.getDescendant(path);\n            } else {\n                namespace = globalNamespace;\n            }\n\n            return valueFactory.createBoolean(namespace.hasConstant(name));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        optionSet = internals.optionSet,\n        pausable = internals.pausable;\n\n    function getPerformance() {\n        var performance = optionSet.getOption('performance');\n\n        if (!performance) {\n            throw new Error('performance :: No `performance` option is configured');\n        }\n\n        return performance;\n    }\n\n    return {\n        /**\n         * Pauses execution for the specified number of microseconds.\n         * Note that in async mode, this will be implemented by pausing execution\n         * via Pausable and setting a timeout to later resume.\n         * In (p)sync mode, an (inefficient!) busy wait loop is used to perform the wait.\n         * Relying on the busy-wait version is not recommended for production usage!\n         *\n         * @see {@link https://secure.php.net/manual/en/function.usleep.php}\n         *\n         * @param {Variable|Value} microsecondsReference\n         */\n        'usleep': function (microsecondsReference) {\n            var endMicroseconds,\n                microsecondsValue = microsecondsReference.getValue(),\n                pause,\n                performance;\n\n            if (microsecondsValue.getType() !== 'int' && microsecondsValue.getType() !== 'float') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'usleep() expects parameter 1 to be integer or float, ' +\n                        microsecondsValue.getType() + ' given'\n                );\n                return;\n            }\n\n            if (pausable) {\n                // Efficient version, if we're using async mode\n\n                pause = pausable.createPause();\n\n                setTimeout(function () {\n                    pause.resume();\n                }, microsecondsValue.getNative() / 1000);\n\n                pause.now();\n            } else {\n                // Inefficient version, if we're in (p)sync mode\n\n                performance = getPerformance();\n                endMicroseconds = performance.getTimeInMicroseconds() + microsecondsValue.getNative();\n\n                while (performance.getTimeInMicroseconds() < endMicroseconds) { //jshint ignore:line\n                    // Busy wait\n                }\n            }\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the value of a PHP configuration option as it was set in the INI file.\n         * Any changes made at runtime (eg. with ini_set(...)) will _not_ be taken into account.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-cfg-var.php}\n         *\n         * @param {Reference|Value|Variable} optionNameReference\n         * @return {Value}\n         */\n        'get_cfg_var': function (optionNameReference) {\n            var optionName = optionNameReference ?\n                optionNameReference.getValue().getNative() :\n                null;\n\n            if (optionName === 'cfg_file_path') {\n                return valueFactory.createString('/pseudo/uniter/php.ini');\n            }\n\n            throw new Error(\n                'Cannot fetch option \"' + optionName + '\" - only cfg_file_path config option is currently supported'\n            );\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the value of an environment variable\n         *\n         * @see {@link https://secure.php.net/manual/en/function.getenv.php}\n         *\n         * @param {Reference|Value|Variable|null} variableNameReference\n         * @return {Value}\n         */\n        'getenv': function (variableNameReference) {\n            if (variableNameReference) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createArray([]);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the names of all extension modules that have been loaded\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-loaded-extensions.php}\n         *\n         * @param {Reference|Value|Variable|null} onlyZendExtensions\n         * @return {ArrayValue}\n         */\n        'get_loaded_extensions': function (/* onlyZendExtensions */) {\n            return valueFactory.createArray([]);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar systemConstants = require('../../../../constants');\n\nmodule.exports = function (internals) {\n    var valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Returns information about the operating system PHP is running on\n         *\n         * @see {@link https://secure.php.net/manual/en/function.php-uname.php}\n         *\n         * @param {Variable|Value} modeReference\n         * @returns {StringValue}\n         */\n        'php_uname': function (modeReference) {\n            var mode = modeReference ? modeReference.getValue().getNative() : 'a',\n                string;\n\n            switch (mode) {\n                case 's': // Operating system name. eg. FreeBSD\n                    string = systemConstants.operatingSystem.name;\n                    break;\n                case 'n': // Host name. eg. localhost.example.com\n                    string = systemConstants.operatingSystem.hostName;\n                    break;\n                case 'r': // Release name. eg. 5.1.2-RELEASE\n                    string = systemConstants.operatingSystem.releaseName;\n                    break;\n                case 'v': // Version information. Varies a lot between operating systems\n                    string = systemConstants.operatingSystem.versionInfo;\n                    break;\n                case 'm': // Machine type. eg. i386\n                    string = systemConstants.operatingSystem.machineType;\n                    break;\n                default:\n                case 'a': // All modes together (default)\n                    string = systemConstants.operatingSystem.name + ' ' +\n                        systemConstants.operatingSystem.hostName + ' ' +\n                        systemConstants.operatingSystem.releaseName + ' ' +\n                        systemConstants.operatingSystem.versionInfo + ' ' +\n                        systemConstants.operatingSystem.machineType;\n            }\n\n            return valueFactory.createString(string);\n        },\n\n        /**\n         * Returns the PHP version that this version of Uniter is targeting\n         *\n         * @see {@link https://secure.php.net/manual/en/function.phpversion.php}\n         *\n         * @returns {BooleanValue|StringValue}\n         */\n        'phpversion': function (extensionName) {\n            if (extensionName) {\n                // No extensions are supported (yet)\n                return valueFactory.createBoolean(false);\n            }\n\n            // Default behaviour is just to return the PHP version string\n            return valueFactory.createString(\n                systemConstants.phpVersion.major + '.' +\n                systemConstants.phpVersion.minor + '.' +\n                systemConstants.phpVersion.release\n            );\n        },\n\n        /**\n         * Returns the version of the current Zend engine (different to the PHP version)\n         *\n         * Uniter is not related to Zend's engine at all, so this function makes little sense here.\n         * It is required by some scripts though (eg. Zend's test runner `run-tests.php` script),\n         * so it is added for completeness. HHVM also defines this function for compatibility.\n         *\n         * @see {@link https://secure.php.net/manual/en/function.zend-version.php}\n         *\n         * @returns {StringValue}\n         */\n        'zend_version': function () {\n            return valueFactory.createString(\n                systemConstants.zendVersion.major + '.' +\n                systemConstants.zendVersion.minor + '.' +\n                systemConstants.zendVersion.release\n            );\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    Exception = phpCommon.Exception,\n    NoActiveOutputBufferException = require('phpcore/src/Exception/NoActiveOutputBufferException'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * Output control functions\n *\n * @param {object} internals\n * @return {object}\n */\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        output = internals.output,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Erases the current output buffer without turning it off\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-clean.php}\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_clean': function () {\n            try {\n                output.cleanCurrentBuffer();\n            } catch (error) {\n                if (!(error instanceof NoActiveOutputBufferException)) {\n                    throw error;\n                }\n\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_clean(): failed to delete buffer. No buffer to delete'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Erases the output buffer and then turns it off, essentially discarding the current buffer\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-end-clean.php}\n         * @TODO: Output E_NOTICE on failure\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_end_clean': function () {\n            try {\n                output.popBuffer();\n            } catch (error) {\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_end_clean(): failed to delete buffer. No buffer to delete'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Sends the output buffer to the next buffer in the chain, then turns off the output buffer.\n         * If the next one in the chain is the default StdoutBuffer, then the buffer contents\n         * will be written to stdout\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-end-flush.php}\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_end_flush': function () {\n            try {\n                output.flushCurrentBuffer();\n                output.popBuffer();\n            } catch (error) {\n                if (!(error instanceof NoActiveOutputBufferException)) {\n                    throw error;\n                }\n\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_end_flush(): failed to delete and flush buffer. No buffer to delete or flush'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Sends the output buffer to the next buffer in the chain.\n         * If the next one in the chain is the default StdoutBuffer, then the buffer contents\n         * will be written to stdout\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-flush.php}\n         *\n         * @returns {BooleanValue} Returns true on success or false on failure\n         */\n        'ob_flush': function () {\n            try {\n                output.flushCurrentBuffer();\n            } catch (error) {\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_flush(): failed to flush buffer. No buffer to flush'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(true);\n        },\n\n        /**\n         * Fetches the contents of the output buffer and deletes the current buffer\n         * (essentially executing `ob_get_contents()` and then `ob_end_clean()`)\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-clean.php}\n         *\n         * @returns {StringValue|BooleanValue} Returns the output buffer or FALSE if no buffer is active\n         */\n        'ob_get_clean': function () {\n            var contents;\n\n            if (output.getDepth() === 0) {\n                // No buffer is active (except the default StdoutBuffer, which does not count for this)\n                return valueFactory.createBoolean(false);\n            }\n\n            contents = output.getCurrentBufferContents();\n            output.popBuffer();\n\n            return valueFactory.createString(contents);\n        },\n\n        /**\n         * Fetches the contents of the output buffer without clearing it\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-contents.php}\n         *\n         * @returns {StringValue|BooleanValue} Returns the output buffer or FALSE if no buffer is active\n         */\n        'ob_get_contents': function () {\n            var contents;\n\n            if (output.getDepth() === 0) {\n                // No buffer is active (except the default StdoutBuffer, which does not count for this)\n                return valueFactory.createBoolean(false);\n            }\n\n            contents = output.getCurrentBufferContents();\n\n            return valueFactory.createString(contents);\n        },\n\n        /**\n         * Flushes the output buffer, returns it as a string and turns off output buffering\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-flush.php}\n         *\n         * @returns {StringValue|BooleanValue} Returns the output buffer or FALSE if no buffer is active\n         */\n        'ob_get_flush': function () {\n            var contents;\n\n            if (output.getDepth() === 0) {\n                callStack.raiseError(\n                    PHPError.E_NOTICE,\n                    'ob_get_flush(): failed to delete and flush buffer. No buffer to delete or flush'\n                );\n\n                // No buffer is active (except the default StdoutBuffer, which does not count for this)\n                return valueFactory.createBoolean(false);\n            }\n\n            contents = output.getCurrentBufferContents();\n            output.flushCurrentBuffer();\n\n            return valueFactory.createString(contents);\n        },\n\n        /**\n         * Fetches the nesting level of the output buffering mechanism\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-get-level.php}\n         *\n         * @returns {IntegerValue} Returns the nesting level of the output buffering mechanism\n         */\n        'ob_get_level': function () {\n            return valueFactory.createInteger(output.getDepth());\n        },\n\n        /**\n         * Turns on output buffering, or adds a new buffer to the stack if it is already on\n         *\n         * @see {@link https://secure.php.net/manual/en/function.ob-start.php}\n         *\n         * @param {Variable|Value} outputCallbackReference\n         */\n        'ob_start': function (outputCallbackReference, chunkSizeReference, flagsReference) {\n            if (outputCallbackReference || chunkSizeReference || flagsReference) {\n                throw new Exception('ob_start() :: No arguments are supported yet');\n            }\n\n            output.pushBuffer();\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar REGEX_SPECIAL_CHAR_PATTERN = /[.\\\\+*?[^\\]$(){}=!<>|:#-]/g,\n    phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * Basic-level PCRE support module. JavaScript's own RegExp implementation is used,\n * meaning that only the JavaScript-compliant subset of regular expression is supported.\n */\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Quote (escape) regular expression characters\n         *\n         * @see {@link https://secure.php.net/manual/en/function.preg-quote.php}\n         *\n         * @param {Reference|Variable|Value} stringReference\n         * @param {Reference|Variable|Value} delimiterReference\n         * @returns {StringValue}\n         */\n        'preg_quote': function (stringReference, delimiterReference) {\n            var delimiter,\n                quoted,\n                string;\n\n            if (!stringReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'preg_quote() expects at least 1 parameter, 0 given');\n                return valueFactory.createNull();\n            }\n\n            string = stringReference.getNative();\n\n            quoted = string.replace(REGEX_SPECIAL_CHAR_PATTERN, '\\\\$&');\n\n            if (delimiterReference) {\n                delimiter = delimiterReference.getNative().charAt(0); // We only consider the first char of delimiter\n                delimiter = delimiter.replace(REGEX_SPECIAL_CHAR_PATTERN, '');\n\n                if (delimiter !== '') {\n                    quoted = quoted.replace(new RegExp('\\\\' + delimiter, 'g'), '\\\\$&');\n                }\n            }\n\n            return valueFactory.createString(quoted);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar phpCommon = require('phpcommon'),\n    PHPError = phpCommon.PHPError;\n\n/**\n * SPL-related PHP builtin functions.\n * Note that some functions (eg. spl_autoload_register) are provided by PHPCore\n *\n * @param {object} internals\n * @return {object}\n */\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Fetches the unique identifier \"hash\" for a PHP object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.spl-object-hash.php}\n         *\n         * @param {Variable|Value} haystackReference    The object to get a unique identifier for\n         * @returns {StringValue}                       The unique identifier\n         */\n        'spl_object_hash': function (objectReference) {\n            var objectValue = objectReference.getValue(),\n                idString,\n                padding;\n\n            if (objectValue.getType() !== 'object') {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'spl_object_hash() expects parameter 1 to be object, ' + objectValue.getType() + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            // Use Uniter's internal unique object IDs to build the \"hash\"\n            idString = objectValue.getID().toString();\n            // PHP object \"hashes\" are 32 bytes long, so emulate that here\n            padding = new Array(32 - idString.length + 1).join('0');\n\n            return valueFactory.createString(padding + idString);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon'),\n    MissingFormatArgumentException = require('../bindings/string/Exception/MissingFormatArgumentException'),\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        formatter = internals.getBinding('stringFormatter'),\n        valueFactory = internals.valueFactory;\n\n    return {\n        /**\n         * Split a string into an array by a certain substring\n         *\n         * @see {@link https://secure.php.net/manual/en/function.explode.php}\n         *\n         * @param {Reference|StringValue|Variable} delimiterReference  The substring to split the input string on\n         * @param {Reference|StringValue|Variable} stringReference  The string to split\n         * @param {Reference|IntegerValue|Variable} limitReference  The string to split\n         * @returns {ArrayValue|BooleanValue} The resulting array on success, or false on failure\n         */\n        'explode': function (delimiterReference, stringReference, limitReference) {\n            var delimiter,\n                elements,\n                limit,\n                string;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'explode() expects at least 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            delimiter = delimiterReference.getValue().coerceToString().getNative();\n            limit = limitReference ? limitReference.getValue().getNative() : null;\n            string = stringReference.getValue().coerceToString().getNative();\n\n            elements = string.split(delimiter);\n\n            if (limit === 0) {\n                limit = 1;\n            }\n\n            if (limit < 0) {\n                elements = elements.slice(0, elements.length + limit);\n            } else if (limit !== null) {\n                if (limit > elements.length) {\n                    limit = elements.length;\n                }\n\n                elements = elements.slice(0, limit - 1).concat(elements.slice(limit - 1).join(delimiter));\n            }\n\n            return valueFactory.createArray(elements);\n        },\n\n        'strlen': function (stringReference) {\n            var stringValue = stringReference.getValue();\n\n            if (stringValue.getType() === 'array' || stringValue.getType() === 'object') {\n                callStack.raiseError(PHPError.E_WARNING, 'strlen() expects parameter 1 to be string, ' + stringValue.getType() + ' given');\n                return valueFactory.createNull();\n            }\n\n            return valueFactory.createInteger(stringValue.getLength());\n        },\n\n        /**\n         * Builds and returns a formatted string\n         *\n         * @see {@link https://secure.php.net/manual/en/function.sprintf.php}\n         *\n         * @param {Reference|Value|Variable} templateReference  The template format string\n         * @returns {StringValue|BooleanValue} The built string on success, or false on failure\n         */\n        'sprintf': function (templateReference) {\n            var args = [].slice.call(arguments, 1);\n\n            try {\n                return valueFactory.createString(\n                    formatter.format(templateReference.getNative(), args)\n                );\n            } catch (error) {\n                if (error instanceof MissingFormatArgumentException) {\n                    callStack.raiseError(PHPError.E_WARNING, 'sprintf(): Too few arguments');\n\n                    return valueFactory.createBoolean(false);\n                }\n\n                throw error;\n            }\n        },\n\n        'str_replace': function (\n            searchReference,\n            replaceReference,\n            subjectReference,\n            countReference\n        ) {\n            function getNative(reference) {\n                var value = reference.getValue();\n\n                return value.getNative();\n            }\n\n            var count = 0,\n                search,\n                replacement,\n                subject,\n                replace = countReference ?\n                    function replace(search, replacement, subject) {\n                        return subject.replace(search, function () {\n                            count++;\n\n                            return replacement;\n                        });\n                    } :\n                    function replace(search, replacement, subject) {\n                        return subject.replace(search, replacement);\n                    };\n\n            if (arguments.length < 3) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'str_replace() expects at least 3 parameters, ' + arguments.length + ' given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            search = getNative(searchReference);\n            replacement = getNative(replaceReference);\n            subject = getNative(subjectReference);\n\n            // Use a regex to search for substrings, for speed\n            function buildRegex(search) {\n                return new RegExp(\n                    _.escapeRegExp(search),\n                    'g'\n                );\n            }\n\n            if (_.isArray(search)) {\n                if (_.isArray(replacement)) {\n                    // Search and replacement are both arrays\n                    _.each(search, function (search, index) {\n                        subject = replace(\n                            buildRegex(search),\n                            index < replacement.length ? replacement[index] : '',\n                            subject\n                        );\n                    });\n                } else {\n                    // Only search is an array, replacement is just a string\n                    _.each(search, function (search) {\n                        subject = replace(\n                            buildRegex(search),\n                            replacement,\n                            subject\n                        );\n                    });\n                }\n            } else {\n                // Simple case: search and replacement are both strings\n                subject = replace(\n                    buildRegex(search),\n                    replacement,\n                    subject\n                );\n            }\n\n            if (countReference) {\n                countReference.setValue(valueFactory.createInteger(count));\n            }\n\n            return valueFactory.createString(subject);\n        },\n\n        'strpos': function (haystackReference, needleReference, offsetReference) {\n            var haystack = haystackReference.getNative(),\n                needle = needleReference.getNative(),\n                offset = offsetReference ? offsetReference.getNative() : 0,\n                position;\n\n            // Negative offsets indicate no. of chars at end of haystack to scan\n            if (offset < 0) {\n                offset = haystack.length + offset;\n            }\n\n            position = haystack.substr(offset).indexOf(needle);\n\n            if (position === -1) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createInteger(offset + position);\n        },\n\n        /**\n         * Fetch the substring after (and including) the last occurrence of a needle\n         *\n         * @see {@link https://secure.php.net/manual/en/function.strrchr.php}\n         *\n         * @param {Reference|StringValue|Variable} haystackReference  The string to search for the needle inside\n         * @param {Reference|StringValue|Variable} needleReference  The substring to look for in the haystack\n         * @returns {StringValue|BooleanValue|NullValue} The resulting string on success, false if not found and null on error\n         */\n        'strrchr': function (haystackReference, needleReference) {\n            var haystack,\n                needleValue,\n                needle,\n                position;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'strrchr() expects exactly 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            haystack = haystackReference.getValue().coerceToString().getNative();\n            needleValue = needleReference.getValue();\n            needle = needleValue.getType() === 'string' ?\n                needleValue.getNative().charAt(0) :\n                String.fromCharCode(needleValue.coerceToInteger().getNative());\n            position = haystack.lastIndexOf(needle);\n\n            if (position === -1) {\n                // Return FALSE if needle is not found in haystack\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createString(haystack.substr(position));\n        },\n\n        'strrpos': function (haystackReference, needleReference, offsetReference) {\n            var haystack = haystackReference.getValue().getNative(),\n                needle = needleReference.getValue().getNative(),\n                offset = offsetReference ? offsetReference.getValue().getNative() : 0,\n                position;\n\n            // Negative offsets indicate no. of chars at end of haystack to scan\n            if (offset < 0) {\n                offset = haystack.length + offset;\n            }\n\n            position = haystack.substr(offset).lastIndexOf(needle);\n\n            if (position === -1) {\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createInteger(offset + position);\n        },\n\n        /**\n         * Convert a string to lowercase\n         *\n         * @see {@link https://secure.php.net/manual/en/function.strtolower.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference  The string to convert to lowercase\n         * @returns {StringValue|NullValue} The resulting string on success, or null on failure\n         */\n        'strtolower': function (stringReference) {\n            var string;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'strtolower() expects exactly 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            string = stringReference.getValue().coerceToString().getNative();\n\n            return valueFactory.createString(string.toLowerCase());\n        },\n\n        /**\n         * Convert a string to uppercase\n         *\n         * @see {@link https://secure.php.net/manual/en/function.strtoupper.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference  The string to convert to uppercase\n         * @returns {StringValue|NullValue} The resulting string on success, or null on failure\n         */\n        'strtoupper': function (stringReference) {\n            var string;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'strtoupper() expects exactly 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            string = stringReference.getValue().coerceToString().getNative();\n\n            return valueFactory.createString(string.toUpperCase());\n        },\n\n        'strtr': function (stringReference) {\n            var from,\n                to,\n                i,\n                replacePairs,\n                replaceKeys,\n                replaceValues,\n                string = stringReference.getValue().getNative();\n\n            if (arguments.length === 2) {\n                // 2-operand form: second argument is an associative array\n                // mapping substrings to search for to their replacements\n                replacePairs = arguments[1].getValue();\n                replaceKeys = replacePairs.getKeys();\n                replaceValues = replacePairs.getValues();\n\n                _.each(replaceKeys, function (key, index) {\n                    var find = key.coerceToString().getNative(),\n                        replace = replaceValues[index].coerceToString().getNative();\n\n                    string = string.replace(\n                        new RegExp(_.escapeRegExp(find), 'g'),\n                        replace\n                    );\n                });\n            } else {\n                // 3-operand form: replace all characters in $from\n                // with their counterparts at that index in $to\n                from = arguments[1].getValue().getNative();\n                to = arguments[2].getValue().getNative();\n\n                for (i = 0; i < from.length && i < to.length; i++) {\n                    string = string.replace(\n                        new RegExp(_.escapeRegExp(from.charAt(i)), 'g'),\n                        to.charAt(i)\n                    );\n                }\n            }\n\n            return valueFactory.createString(string);\n        },\n\n        'substr': function (stringReference, startReference, lengthReference) {\n            var string = stringReference.getValue().getNative(),\n                start = startReference.getValue().getNative(),\n                length = lengthReference ? lengthReference.getValue().getNative() : string.length,\n                substring;\n\n            if (start < 0) {\n                start = string.length + start;\n            }\n\n            if (length < 0) {\n                length = string.length - start + length;\n            }\n\n            substring = string.substr(start, length);\n\n            return valueFactory.createString(substring);\n        },\n\n        /**\n         * Counts the number of substring occurrences\n         *\n         * @see {@link https://secure.php.net/manual/en/function.substr-count.php}\n         *\n         * @param {Variable|Value} haystackReference    The string to search inside\n         * @param {Variable|Value} needleReference      The string to search inside\n         * @param {Variable|Value} offsetReference      The position to start searching from\n         * @param {Variable|Value} lengthReference      The no. of chars from the offset to search inside\n         * @returns {IntegerValue}                      The number of occurrences found\n         */\n        'substr_count': function (haystackReference, needleReference, offsetReference, lengthReference) {\n            var haystack,\n                needle,\n                offset,\n                length,\n                trimmedHaystack;\n\n            if (arguments.length < 2) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'substr_count() expects at least 2 parameters, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            haystack = haystackReference.getValue().coerceToString().getNative();\n            needle = needleReference.getValue().coerceToString().getNative();\n            // Negative offsets are natively supported by JS .substr()\n            offset = offsetReference ? offsetReference.getNative() : 0;\n\n            if (lengthReference) {\n                length = lengthReference.getNative();\n\n                // Negative lengths count back from the end of the string\n                if (length < 0) {\n                    length = haystack.length - offset + length;\n                }\n            }\n\n            trimmedHaystack = haystack.substr(offset, length);\n\n            return valueFactory.createInteger(trimmedHaystack.split(needle).length - 1);\n        },\n\n        /**\n         * Strip whitespace or other characters from both ends of a string\n         *\n         * @see {@link https://secure.php.net/manual/en/function.trim.php}\n         *\n         * @param {Variable|Value} stringReference          The string to trim\n         * @param {Variable|Value} characterMaskReference   Which characters to strip\n         * @returns {StringValue}                           The trimmed string\n         */\n        'trim': function (stringReference, characterMaskReference) {\n            var nativeString = stringReference.getValue().coerceToString().getNative(),\n                characterMask = characterMaskReference ?\n                    characterMaskReference.getValue().getNative() :\n                    ' \\t\\n\\r\\0\\x0b',\n                characterMaskRegex = new RegExp(\n                    '^[' +\n                    _.escapeRegExp(characterMask) +\n                    ']+|[' +\n                    _.escapeRegExp(characterMask) +\n                    ']+$',\n                    'g'\n                );\n\n            return valueFactory.createString(nativeString.replace(characterMaskRegex, ''));\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    phpCommon = require('phpcommon');\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        characterRegexCache = {}, // For caching the regexes used to do entity replacements, for speed\n        hasOwn = {}.hasOwnProperty,\n        valueFactory = internals.valueFactory,\n        PHPError = phpCommon.PHPError,\n        ENT_COMPAT = internals.getConstant('ENT_COMPAT'),\n        ENT_HTML401 = internals.getConstant('ENT_HTML401'),\n        ENT_NOQUOTES = internals.getConstant('ENT_NOQUOTES'),\n        ENT_QUOTES = internals.getConstant('ENT_QUOTES'),\n        HTML_ENTITIES = internals.getConstant('HTML_ENTITIES'),\n        HTML_SPECIALCHARS = internals.getConstant('HTML_SPECIALCHARS'),\n        TRANSLATION_TABLES = {\n            HTML_ENTITIES: {\n                '&': '&amp;',\n                '<': '&lt;',\n                '>': '&gt;',\n\n                '£': '&pound;' // TODO: Support adding remaining entities via addons\n            },\n            HTML_SPECIALCHARS: {\n                '&': '&amp;',\n                '<': '&lt;',\n                '>': '&gt;'\n            }\n        };\n\n    /**\n     * Fetches a translation table\n     *\n     * @param {string} functionName\n     * @param {number} tableID\n     * @param {number} flags\n     * @param {string} encoding\n     * @return {object}\n     */\n    function getTranslationTable(functionName, tableID, flags, encoding) {\n        /*jshint bitwise: false */\n        var quotesMode = 'double',\n            tableData;\n\n        switch (tableID) {\n            case HTML_SPECIALCHARS:\n                tableData = TRANSLATION_TABLES.HTML_SPECIALCHARS;\n                break;\n            case HTML_ENTITIES:\n                tableData = TRANSLATION_TABLES.HTML_ENTITIES;\n                break;\n            default:\n                throw new Error('Invalid table ID \"' + tableID + '\" given');\n        }\n\n        if ((flags & 3) === ENT_COMPAT) {\n            quotesMode = 'double';\n        } else if ((flags & 3) === ENT_QUOTES) {\n            quotesMode = 'both';\n        } else if ((flags & 3) === ENT_NOQUOTES) {\n            quotesMode = 'none';\n        }\n\n        switch (quotesMode) {\n            case 'double':\n                tableData = Object.assign({}, tableData, { // Don't edit the original table object\n                    '\"': '&quot;'\n                });\n                break;\n            case 'both':\n                tableData = Object.assign({}, tableData, { // Don't edit the original table object\n                    '\"': '&quot;',\n                    '\\'': '&#039;'\n                });\n                break;\n            default:\n            case 'none':\n            // Do nothing\n        }\n\n        if (encoding.toLowerCase() !== 'utf-8') {\n            // Only UTF-8 is supported for now\n            callStack.raiseError(\n                PHPError.E_WARNING,\n                functionName + '(): charset `' + encoding + '\\' not supported, assuming utf-8'\n            );\n        }\n\n        return tableData;\n    }\n\n    /**\n     * Performs the actual HTML-encoding of a string using a given translation table\n     *\n     * @param {string} string String to encode\n     * @param {object} translationTable Translation table (as returned from getTranslationTable())\n     * @param {boolean} doubleEncode\n     */\n    function htmlEncode(string, translationTable, doubleEncode) {\n        _.forOwn(translationTable, function (entityHTML, character) {\n            var cacheKey = (doubleEncode ? '<double>' : '<single>') + character,\n                pattern,\n                regex;\n\n            if (!hasOwn.call(characterRegexCache, cacheKey)) {\n                pattern = '\\\\' + character;\n\n                if (character === '&' && !doubleEncode) {\n                    // Ensure we don't double-encode any entities in the two possible formats\n                    // \"&lt;\" or \"&#012\"\n                    pattern += '(?!\\\\w+;|#\\\\d+;)';\n                }\n\n                regex = new RegExp(pattern, 'g');\n\n                characterRegexCache[cacheKey] = regex;\n            } else {\n                regex = characterRegexCache[cacheKey];\n            }\n\n            string = string.replace(regex, entityHTML);\n        });\n\n        return string;\n    }\n\n    return {\n        /**\n         * Fetches the translation table used by htmlspecialchars(...) or htmlentities(...)\n         *\n         * @see {@link https://secure.php.net/manual/en/function.get-html-translation-table.php}\n         *\n         * @param {IntegerValue|Reference|Variable} tableReference\n         * @param {IntegerValue|Reference|Variable} flagsReference\n         * @param {Reference|StringValue|Variable} encodingReference\n         * @returns {ArrayValue}\n         */\n        'get_html_translation_table': function (tableReference, flagsReference, encodingReference) {\n            /*jshint bitwise: false */\n            var tableID = tableReference ?\n                    tableReference.getValue().coerceToInteger().getNative() :\n                    // Default to the htmlspecialchars(...) table\n                    HTML_SPECIALCHARS,\n                flags = flagsReference ?\n                    flagsReference.getValue().coerceToInteger().getNative() :\n                    ENT_COMPAT | ENT_HTML401,\n                encoding = encodingReference ?\n                    encodingReference.getValue().coerceToString().getNative() :\n                    'UTF-8';\n\n            return valueFactory.createArray(\n                getTranslationTable('get_html_translation_table', tableID, flags, encoding)\n            );\n        },\n\n        /**\n         * Converts all applicable characters to HTML entities\n         *\n         * @see {@link https://secure.php.net/manual/en/function.htmlentities.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference\n         * @param {IntegerValue|Reference|Variable} flagsReference\n         * @param {Reference|StringValue|Variable} encodingReference\n         * @param {BooleanValue|Reference|Variable} doubleEncodeReference\n         * @returns {StringValue}\n         */\n        'htmlentities': function (stringReference, flagsReference, encodingReference, doubleEncodeReference) {\n            /*jshint bitwise: false */\n            var doubleEncode,\n                string,\n                flags,\n                encoding,\n                translationTable;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'htmlentities() expects at least 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            doubleEncode = doubleEncodeReference ?\n                doubleEncodeReference.getValue().coerceToBoolean().getNative() :\n                true;\n            string = stringReference.getValue().coerceToString().getNative();\n            flags = flagsReference ?\n                flagsReference.getValue().coerceToInteger().getNative() :\n                ENT_COMPAT | ENT_HTML401;\n            encoding = encodingReference ?\n                encodingReference.getValue().coerceToString().getNative() :\n                'UTF-8';\n            translationTable = getTranslationTable(\n                'htmlentities',\n                HTML_ENTITIES,\n                flags,\n                encoding\n            );\n\n            string = htmlEncode(string, translationTable, doubleEncode);\n\n            return valueFactory.createString(string);\n        },\n\n        /**\n         * Converts all special characters to HTML entities\n         *\n         * @see {@link https://secure.php.net/manual/en/function.htmlspecialchars.php}\n         *\n         * @param {Reference|StringValue|Variable} stringReference\n         * @param {IntegerValue|Reference|Variable} flagsReference\n         * @param {Reference|StringValue|Variable} encodingReference\n         * @param {BooleanValue|Reference|Variable} doubleEncodeReference\n         * @returns {StringValue}\n         */\n        'htmlspecialchars': function (stringReference, flagsReference, encodingReference, doubleEncodeReference) {\n            /*jshint bitwise: false */\n            var doubleEncode,\n                string,\n                flags,\n                encoding,\n                translationTable;\n\n            if (arguments.length < 1) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'htmlspecialchars() expects at least 1 parameter, ' + arguments.length + ' given'\n                );\n                return valueFactory.createNull();\n            }\n\n            doubleEncode = doubleEncodeReference ?\n                doubleEncodeReference.getValue().coerceToBoolean().getNative() :\n                true;\n            string = stringReference.getValue().coerceToString().getNative();\n            flags = flagsReference ?\n                flagsReference.getValue().coerceToInteger().getNative() :\n                ENT_COMPAT | ENT_HTML401;\n            encoding = encodingReference ?\n                encodingReference.getValue().coerceToString().getNative() :\n                'UTF-8';\n            translationTable = getTranslationTable(\n                'htmlspecialchars',\n                HTML_SPECIALCHARS,\n                flags,\n                encoding\n            );\n\n            string = htmlEncode(string, translationTable, doubleEncode);\n\n            return valueFactory.createString(string);\n        }\n    };\n};\n","/*\n * PHPRuntime - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpruntime/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpruntime/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar _ = require('microdash'),\n    hasOwn = {}.hasOwnProperty,\n    phpCommon = require('phpcommon'),\n    MAX_DUMPS = 20000,\n    MAX_RECURSION_DEPTH = 5,\n    MAX_STRING_LENGTH = 2048,\n    PHPError = phpCommon.PHPError;\n\nmodule.exports = function (internals) {\n    var callStack = internals.callStack,\n        globalNamespace = internals.globalNamespace,\n        output = internals.output,\n        valueFactory = internals.valueFactory;\n\n    function createTypeChecker(name, type) {\n        return function (valueReference) {\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    name + '() expects exactly 1 parameter, 0 given'\n                );\n\n                return valueFactory.createBoolean(false);\n            }\n\n            return valueFactory.createBoolean(valueReference.getValue().getType() === type);\n        };\n    }\n\n    return {\n        /**\n         * Fetches the type of a variable or value\n         *\n         * @see {@link https://secure.php.net/manual/en/function.gettype.php}\n         *\n         * @param {Variable|Value} valueReference The variable or value to fetch the type of\n         * @returns {StringValue}\n         */\n        'gettype': function (valueReference) {\n            var value,\n                type;\n\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'gettype() expects exactly 1 parameter, 0 given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            value = valueReference.getValue();\n            type = value.getType();\n\n            if (type === 'float') {\n                // For historical reasons \"double\" is returned rather than \"float\"\n                type = 'double';\n            } else if (type === 'null') {\n                type = 'NULL';\n            }\n\n            return valueFactory.createString(type);\n        },\n\n        'is_array': createTypeChecker('is_array', 'array'),\n\n        'is_bool': createTypeChecker('is_bool', 'boolean'),\n\n        /**\n         * Determines whether a value is a valid callable function, method, closure or invokable object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-callable.php}\n         *\n         * @param {Reference|Value|Variable} valueReference\n         * @param {BooleanValue|Reference|Variable=} syntaxOnlyReference\n         * @param {Reference|Variable=} callableNameReference\n         * @returns {BooleanValue}\n         */\n        'is_callable': function (valueReference, syntaxOnlyReference, callableNameReference) {\n            var syntaxOnly = syntaxOnlyReference && syntaxOnlyReference.getValue().getNative(),\n                value = valueReference.getValue();\n\n            if (syntaxOnly) {\n                throw new Error('is_callable() :: syntax_only=true is not supported');\n            }\n\n            if (callableNameReference) {\n                throw new Error('is_callable() :: callable_name is not supported');\n            }\n\n            return valueFactory.createBoolean(value.isCallable(globalNamespace));\n        },\n\n        'is_float': createTypeChecker('is_float', 'float'),\n\n        /**\n         * Determines whether the type of a variable is an integer\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-int.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the type of\n         * @returns {BooleanValue}\n         */\n        'is_int': createTypeChecker('is_int', 'int'),\n\n        /**\n         * Determines whether a variable is a number or a string containing a number\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-numeric.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the numericness of\n         * @returns {BooleanValue}\n         */\n        'is_numeric': function (valueReference) {\n            var value;\n\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'is_numeric() expects exactly 1 parameter, 0 given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            value = valueReference.getValue();\n\n            return valueFactory.createBoolean(\n                value.getType() === 'int' ||\n                value.getType() === 'float' ||\n                (\n                    value.getType() === 'string' &&\n                    isFinite(value.getNative())\n                )\n            );\n        },\n\n        /**\n         * Determines whether the type of a variable is an object\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-object.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the type of\n         * @returns {BooleanValue}\n         */\n        'is_object': createTypeChecker('is_object', 'object'),\n\n        /**\n         * Determines whether the type of a variable is a string\n         *\n         * @see {@link https://secure.php.net/manual/en/function.is-string.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to check the type of\n         * @returns {BooleanValue}\n         */\n        'is_string': createTypeChecker('is_string', 'string'),\n\n        /**\n         * Outputs or returns a valid PHP code string that will evaluate to the given value\n         *\n         * @see {@link https://secure.php.net/manual/en/function.var-export.php}\n         *\n         * @param {Variable|Reference|Value} valueReference The variable or value to export\n         * @param {Variable|Reference|Value} returnReference Whether to return the string rather than output\n         * @returns {NullValue|StringValue} Returns NULL when outputting, the code string when return=true\n         */\n        'var_export': function (valueReference, returnReference) {\n            var exportedCodeString,\n                shouldReturn,\n                value;\n\n            function exportValue(value) {\n                var parts;\n\n                switch (value.getType()) {\n                    case 'array':\n                        parts = [];\n                        value.getKeys().forEach(function (keyValue) {\n                            var elementPair = value.getElementPairByKey(keyValue);\n\n                            parts.push(\n                                '  ' +\n                                exportValue(elementPair.getKey()) +\n                                ' => ' +\n                                exportValue(elementPair.getValue()) +\n                                ',\\n'\n                            );\n                        });\n                        return 'array (\\n' + parts.join('') + ')';\n                    case 'boolean':\n                    case 'float':\n                    case 'int':\n                        return '' + value.getNative();\n                    case 'null':\n                        return 'NULL';\n                    case 'object':\n                        if (value.getLength() > 0) {\n                            throw new Error('var_export() :: Non-empty objects not implemented');\n                        }\n\n                        return value.getClassName() + '::__set_state(array(\\n))';\n                    case 'string':\n                        return '\\'' + value.getNative().replace(/['\\\\]/g, '\\\\$&') + '\\'';\n                    default:\n                        throw new Error('var_export() :: Unexpected value type \"' + value.getType() + '\"');\n                }\n            }\n\n            if (!valueReference) {\n                callStack.raiseError(\n                    PHPError.E_WARNING,\n                    'var_export() expects at least 1 parameter, 0 given'\n                );\n\n                return valueFactory.createNull();\n            }\n\n            value = valueReference.getValue();\n\n            // Output the string representation by default, or return it if specified\n            shouldReturn = returnReference ? returnReference.getNative() : false;\n\n            exportedCodeString = exportValue(value);\n\n            if (shouldReturn) {\n                return valueFactory.createString(exportedCodeString);\n            }\n\n            // No trailing newline should be output\n            output.write(exportedCodeString);\n\n            return valueFactory.createNull();\n        },\n\n        // NB: This output matches that of PHP with XDebug disabled\n        'var_dump': function (valueReference) {\n            var dumps = 0,\n                value,\n                objectIDHash = {};\n\n            if (!valueReference) {\n                callStack.raiseError(PHPError.E_WARNING, 'var_dump() expects at least 1 parameter, 0 given');\n                return;\n            }\n\n            value = valueReference.getValue();\n\n            function dump(value, depth, isReference, arraysEncountered) {\n                var currentIndentation = new Array(depth).join('  '),\n                    names,\n                    nativeLength,\n                    nativeValue,\n                    nextIndentation = new Array(depth + 1).join('  '),\n                    representation = currentIndentation;\n\n                dumps++;\n\n                if (depth > MAX_RECURSION_DEPTH || dumps > MAX_DUMPS) {\n                    representation += '*RECURSION*';\n                    return representation + '\\n';\n                }\n\n                if (value.getType() === 'array') {\n                    nativeValue = value.getValue();\n\n                    if (arraysEncountered.indexOf(nativeValue) > -1) {\n                        // Within the current branch of values being dumped, we've already\n                        // dumped this array - bail out to avoid infinite recursion\n                        representation += '*RECURSION*';\n\n                        return representation + '\\n';\n                    }\n\n                    if (depth > 1) {\n                        arraysEncountered.push(nativeValue);\n                    }\n\n                    if (isReference) {\n                        representation += '&';\n                    }\n\n                    representation += 'array(' + value.getLength() + ') {\\n';\n\n                    _.each(value.getKeys(), function (key) {\n                        var element = value.getElementByKey(key),\n                            elementRepresentation;\n\n                        elementRepresentation = dump(\n                            element.getValue(),\n                            depth + 1,\n                            element.isReference(),\n                            arraysEncountered.slice()\n                        );\n\n                        representation += nextIndentation +\n                            '[' +\n                            JSON.stringify(key.getNative()) +\n                            ']=>\\n' +\n                            elementRepresentation;\n                    });\n\n                    representation += currentIndentation + '}';\n                } else if (value.getType() === 'object') {\n                    if (hasOwn.call(objectIDHash, value.getID())) {\n                        representation += '*RECURSION*';\n                        return representation + '\\n';\n                    }\n\n                    if (isReference) {\n                        representation += '&';\n                    }\n\n                    names = value.getInstancePropertyNames();\n\n                    representation += 'object(' + value.getClassName() + ')#' + value.getID() + ' (' + names.length + ') {\\n';\n\n                    objectIDHash[value.getID()] = true;\n\n                    _.each(names, function (nameValue) {\n                        var property = value.getInstancePropertyByName(nameValue);\n                        representation += nextIndentation +\n                            '[' +\n                            JSON.stringify(nameValue.getNative()) +\n                            ']=>\\n' +\n                            dump(\n                                property.getValue(),\n                                depth + 1,\n                                property.isReference(),\n                                arraysEncountered.slice()\n                            );\n                    });\n\n                    representation += currentIndentation + '}';\n                } else {\n                    if (isReference) {\n                        representation += '&';\n                    }\n\n                    switch (value.getType()) {\n                    case 'boolean':\n                        representation += 'bool(' + (value.getNative() ? 'true' : 'false') + ')';\n                        break;\n                    case 'float':\n                        representation += 'float(' + value.getNative() + ')';\n                        break;\n                    case 'int':\n                        representation += 'int(' + value.getNative() + ')';\n                        break;\n                    case 'null':\n                        representation += 'NULL';\n                        break;\n                    case 'string':\n                        nativeValue = value.getNative();\n                        nativeLength = nativeValue.length;\n\n                        if (nativeLength > MAX_STRING_LENGTH) {\n                            nativeValue = nativeValue.substr(0, MAX_STRING_LENGTH) + '...';\n                        }\n\n                        representation += 'string(' + nativeLength + ') \"' + nativeValue + '\"';\n                        break;\n                    default:\n                        throw new Error('var_dump() :: Unsupported value type \"' + value.getType() + '\"');\n                    }\n                }\n\n                return representation + '\\n';\n            }\n\n            output.write(dump(value, 1, false, []));\n        }\n    };\n};\n","/*\n * PHPCore - PHP environment runtime components\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/phpcore/\n *\n * Released under the MIT license\n * https://github.com/uniter/phpcore/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nmodule.exports = function () {\n    function Countable() {\n\n    }\n\n    return {\n        'Countable': Countable\n    };\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n * TemplateString - Simple template strings\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/asmblah/template-string/\n *\n * Released under the MIT license\n * https://github.com/asmblah/template-string/raw/master/MIT-LICENSE.txt\n */\n\n'use strict';\n\nvar hasOwn = {}.hasOwnProperty;\n\n/**\n * Replaces placeholders in `string` of the form `${...}`\n * if they are specified as own properties of `variables`\n *\n * @param {string} string\n * @param {Object.<string, string>} variables\n * @returns {string}\n */\nfunction templateString(string, variables) {\n    if (!variables) {\n        // Nothing to do if no variables object was provided\n        return string;\n    }\n\n    return string.replace(/\\$\\{([^}]+)}/g, function (all, name) {\n        if (hasOwn.call(variables, name)) {\n            return variables[name];\n        }\n\n        return all;\n    });\n}\n\nmodule.exports = templateString;\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isValue       = require(\"../value/is\")\n  , isObject      = require(\"../object/is\")\n  , stringCoerce  = require(\"../string/coerce\")\n  , toShortString = require(\"./to-short-string\");\n\nvar resolveMessage = function (message, value) {\n\treturn message.replace(\"%v\", toShortString(value));\n};\n\nmodule.exports = function (value, defaultMessage, inputOptions) {\n\tif (!isObject(inputOptions)) throw new TypeError(resolveMessage(defaultMessage, value));\n\tif (!isValue(value)) {\n\t\tif (\"default\" in inputOptions) return inputOptions[\"default\"];\n\t\tif (inputOptions.isOptional) return null;\n\t}\n\tvar errorMessage = stringCoerce(inputOptions.errorMessage);\n\tif (!isValue(errorMessage)) errorMessage = defaultMessage;\n\tthrow new TypeError(resolveMessage(errorMessage, value));\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\ttry {\n\t\treturn value.toString();\n\t} catch (error) {\n\t\ttry { return String(value); }\n\t\tcatch (error2) { return null; }\n\t}\n};\n","\"use strict\";\n\nvar safeToString = require(\"./safe-to-string\");\n\nvar reNewLine = /[\\n\\r\\u2028\\u2029]/g;\n\nmodule.exports = function (value) {\n\tvar string = safeToString(value);\n\tif (string === null) return \"<Non-coercible to string value>\";\n\t// Trim if too long\n\tif (string.length > 100) string = string.slice(0, 99) + \"…\";\n\t// Replace eventual new lines\n\tstring = string.replace(reNewLine, function (char) {\n\t\tswitch (char) {\n\t\t\tcase \"\\n\":\n\t\t\t\treturn \"\\\\n\";\n\t\t\tcase \"\\r\":\n\t\t\t\treturn \"\\\\r\";\n\t\t\tcase \"\\u2028\":\n\t\t\t\treturn \"\\\\u2028\";\n\t\t\tcase \"\\u2029\":\n\t\t\t\treturn \"\\\\u2029\";\n\t\t\t/* istanbul ignore next */\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"Unexpected character\");\n\t\t}\n\t});\n\treturn string;\n};\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"%v is not a plain function\", arguments[1]);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue  = require(\"../value/is\")\n  , isObject = require(\"../object/is\");\n\nvar objectToString = Object.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return null;\n\tif (isObject(value)) {\n\t\t// Reject Object.prototype.toString coercion\n\t\tvar valueToString = value.toString;\n\t\tif (typeof valueToString !== \"function\") return null;\n\t\tif (valueToString === objectToString) return null;\n\t\t// Note: It can be object coming from other realm, still as there's no ES3 and CSP compliant\n\t\t// way to resolve its realm's Object.prototype.toString it's left as not addressed edge case\n\t}\n\ttry {\n\t\treturn \"\" + value; // Ensure implicit coercion\n\t} catch (error) {\n\t\treturn null;\n\t}\n};\n","\"use strict\";\n\nvar resolveException = require(\"../lib/resolve-exception\")\n  , is               = require(\"./is\");\n\nmodule.exports = function (value/*, options*/) {\n\tif (is(value)) return value;\n\treturn resolveException(value, \"Cannot use %v\", arguments[1]);\n};\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar BoldNode = /** @class */ (function () {\n    function BoldNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    BoldNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<strong>' +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</strong>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<strong>' + htmls.join('') + '</strong>';\n            });\n        });\n    };\n    return BoldNode;\n}());\nexports.default = BoldNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificBoldNode, _super);\n        function ModeSpecificBoldNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificBoldNode;\n    }(BoldNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=BoldNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\n/**\n * Represents an entire Markdown document\n */\nvar DocumentNode = /** @class */ (function () {\n    function DocumentNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    DocumentNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return _this.elements\n                .map(function (element) { return valueHelper.toNativeWithSyncApi(element); }) // checks a ProxyClass instance was passed in\n                .map(function (element) { return element.toHtml(); })\n                .join('');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return htmls.join('');\n            });\n        });\n    };\n    return DocumentNode;\n}());\nexports.default = DocumentNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificDocumentNode, _super);\n        function ModeSpecificDocumentNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificDocumentNode;\n    }(DocumentNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=DocumentNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar ExpressionNode = /** @class */ (function () {\n    function ExpressionNode(expression) {\n        this.expression = expression;\n    }\n    ExpressionNode.prototype.toHtml = function () {\n        if (this.expression === null) {\n            // Use this placeholder for obviousness rather than an empty string as per PHP\n            return '[NULL]';\n        }\n        if (typeof this.expression !== 'string' &&\n            typeof this.expression !== 'number') {\n            throw new Error(\"Expression is of unknown type: \" + typeof this.expression);\n        }\n        return String(this.expression);\n    };\n    return ExpressionNode;\n}());\nexports.default = ExpressionNode;\nvar factory = function () {\n    return ExpressionNode;\n};\nexports.factory = factory;\n//# sourceMappingURL=ExpressionNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar HeadingNode = /** @class */ (function () {\n    function HeadingNode(internals, level, elements) {\n        this.internals = internals;\n        this.level = level;\n        this.elements = elements;\n    }\n    HeadingNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        var tagName = 'h' + this.level;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return (\"<\" + tagName + \">\" +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                (\"</\" + tagName + \">\"));\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return \"<\" + tagName + \">\" + htmls.join('') + (\"</\" + tagName + \">\");\n            });\n        });\n    };\n    return HeadingNode;\n}());\nexports.default = HeadingNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificHeadingNode, _super);\n        function ModeSpecificHeadingNode(level, elements) {\n            return _super.call(this, internals, level, elements) || this;\n        }\n        return ModeSpecificHeadingNode;\n    }(HeadingNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=HeadingNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar InlineCodeNode = /** @class */ (function () {\n    function InlineCodeNode(code) {\n        this.code = code;\n    }\n    InlineCodeNode.prototype.toHtml = function () {\n        return '<code>' + this.code + '</code>';\n    };\n    return InlineCodeNode;\n}());\nexports.default = InlineCodeNode;\nvar factory = function () {\n    return InlineCodeNode;\n};\nexports.factory = factory;\n//# sourceMappingURL=InlineCodeNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar ItalicNode = /** @class */ (function () {\n    function ItalicNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    ItalicNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<em>' +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</em>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<em>' + htmls.join('') + '</em>';\n            });\n        });\n    };\n    return ItalicNode;\n}());\nexports.default = ItalicNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificItalicNode, _super);\n        function ModeSpecificItalicNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificItalicNode;\n    }(ItalicNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=ItalicNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar ListItemNode = /** @class */ (function () {\n    function ListItemNode(internals, elements) {\n        this.internals = internals;\n        this.elements = elements;\n    }\n    ListItemNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<li>' +\n                _this.elements\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</li>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.elements.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<li>' + htmls.join('') + '</li>';\n            });\n        });\n    };\n    return ListItemNode;\n}());\nexports.default = ListItemNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificListItemNode, _super);\n        function ModeSpecificListItemNode(elements) {\n            return _super.call(this, internals, elements) || this;\n        }\n        return ModeSpecificListItemNode;\n    }(ListItemNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=ListItemNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar PlainTextNode = /** @class */ (function () {\n    function PlainTextNode(text) {\n        this.text = text;\n    }\n    PlainTextNode.prototype.toHtml = function () {\n        return this.text;\n    };\n    return PlainTextNode;\n}());\nexports.default = PlainTextNode;\nvar factory = function () {\n    return PlainTextNode;\n};\nexports.factory = factory;\n//# sourceMappingURL=PlainTextNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.factory = void 0;\nvar UnorderedListNode = /** @class */ (function () {\n    function UnorderedListNode(internals, listItemNodes) {\n        this.internals = internals;\n        this.listItemNodes = listItemNodes;\n    }\n    UnorderedListNode.prototype.toHtml = function () {\n        var _this = this;\n        var valueHelper = this.internals.valueHelper;\n        return this.internals.createFFIResult(function () {\n            // For both sync and psync modes\n            return ('<ul>' +\n                _this.listItemNodes\n                    .map(function (element) {\n                    return valueHelper.toNativeWithSyncApi(element);\n                })\n                    .map(function (element) { return element.toHtml(); })\n                    .join('') +\n                '</ul>');\n        }, function () {\n            // Only for async mode\n            return Promise.all(_this.listItemNodes.map(function (element) { return element.toHtml(); })).then(function (htmls) {\n                return '<ul>' + htmls.join('') + '</ul>';\n            });\n        });\n    };\n    return UnorderedListNode;\n}());\nexports.default = UnorderedListNode;\nvar factory = function (internals) {\n    return /** @class */ (function (_super) {\n        __extends(ModeSpecificUnorderedListNode, _super);\n        function ModeSpecificUnorderedListNode(listItemNodes) {\n            return _super.call(this, internals, listItemNodes) || this;\n        }\n        return ModeSpecificUnorderedListNode;\n    }(UnorderedListNode));\n};\nexports.factory = factory;\n//# sourceMappingURL=UnorderedListNode.js.map","\"use strict\";\n/*\n * Uniter Markdown Plugin - Adds support for an inline Markdown syntax to PHP\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin/\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin/raw/master/MIT-LICENSE.txt\n */\nvar BoldNode_1 = require(\"./Runtime/Node/BoldNode\");\nvar DocumentNode_1 = require(\"./Runtime/Node/DocumentNode\");\nvar ExpressionNode_1 = require(\"./Runtime/Node/ExpressionNode\");\nvar HeadingNode_1 = require(\"./Runtime/Node/HeadingNode\");\nvar InlineCodeNode_1 = require(\"./Runtime/Node/InlineCodeNode\");\nvar ItalicNode_1 = require(\"./Runtime/Node/ItalicNode\");\nvar ListItemNode_1 = require(\"./Runtime/Node/ListItemNode\");\nvar PlainTextNode_1 = require(\"./Runtime/Node/PlainTextNode\");\nvar UnorderedListNode_1 = require(\"./Runtime/Node/UnorderedListNode\");\nmodule.exports = {\n    addons: [\n        {\n            // Expose all the classes that will be instantiated to represent the nodes\n            // of the Markdown document to PHP-land:\n            classGroups: function () {\n                return {\n                    'Uniter\\\\Markdown\\\\Node\\\\BoldNode': BoldNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\DocumentNode': DocumentNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\ExpressionNode': ExpressionNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\HeadingNode': HeadingNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\InlineCodeNode': InlineCodeNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\ItalicNode': ItalicNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\ListItemNode': ListItemNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\PlainTextNode': PlainTextNode_1.factory,\n                    'Uniter\\\\Markdown\\\\Node\\\\UnorderedListNode': UnorderedListNode_1.factory,\n                };\n            },\n        },\n    ],\n};\n//# sourceMappingURL=config.phpcore.js.map","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","<?php\n\n/**\n * Example of how to use Uniter's experimental inline PHP Markdown plugin\n * Copyright (c) Dan Phillimore (asmblah)\n * https://github.com/uniter/markdown-plugin-example\n *\n * Released under the MIT license\n * https://github.com/uniter/markdown-plugin-example/raw/master/MIT-LICENSE.txt\n */\n\nnamespace MyUniterProjects\\MarkdownPluginExample;\n\nclass Markdown\n{\n    public function getHtml()\n    {\n        $name = 'Archie';\n        $where = 'just where exactly';\n\n        // Use our custom inline Markdown syntax to embed a document\n        $myMarkdownTree = markdown {\n### My intro\n- Firstly, hello *$name*, how are _you_?\n- Secondly, $where did you go?\n        };\n\n        return $myMarkdownTree->toHtml();\n    }\n}\n","<?php\n\n// autoload.php @generated by Composer\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190::getLoader();\n","<?php\n\n/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Composer\\Autoload;\n\n/**\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n *\n *     $loader = new \\Composer\\Autoload\\ClassLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     // to enable searching the include path (eg. for PEAR packages)\n *     $loader->setUseIncludePath(true);\n *\n * In this example, if you try to use a class in the Symfony\\Component\n * namespace or one of its children (Symfony\\Component\\Console for instance),\n * the autoloader will first look for the class under the component/\n * directory, and it will then fallback to the framework/ directory if not\n * found before giving up.\n *\n * This class is loosely based on the Symfony UniversalClassLoader.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Jordi Boggiano <j.boggiano@seld.be>\n * @see    https://www.php-fig.org/psr/psr-0/\n * @see    https://www.php-fig.org/psr/psr-4/\n */\nclass ClassLoader\n{\n    private $vendorDir;\n\n    // PSR-4\n    private $prefixLengthsPsr4 = array();\n    private $prefixDirsPsr4 = array();\n    private $fallbackDirsPsr4 = array();\n\n    // PSR-0\n    private $prefixesPsr0 = array();\n    private $fallbackDirsPsr0 = array();\n\n    private $useIncludePath = false;\n    private $classMap = array();\n    private $classMapAuthoritative = false;\n    private $missingClasses = array();\n    private $apcuPrefix;\n\n    private static $registeredLoaders = array();\n\n    public function __construct($vendorDir = null)\n    {\n        $this->vendorDir = $vendorDir;\n    }\n\n    public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return array();\n    }\n\n    public function getPrefixesPsr4()\n    {\n        return $this->prefixDirsPsr4;\n    }\n\n    public function getFallbackDirs()\n    {\n        return $this->fallbackDirsPsr0;\n    }\n\n    public function getFallbackDirsPsr4()\n    {\n        return $this->fallbackDirsPsr4;\n    }\n\n    public function getClassMap()\n    {\n        return $this->classMap;\n    }\n\n    /**\n     * @param array $classMap Class to filename map\n     */\n    public function addClassMap(array $classMap)\n    {\n        if ($this->classMap) {\n            $this->classMap = array_merge($this->classMap, $classMap);\n        } else {\n            $this->classMap = $classMap;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix, either\n     * appending or prepending to the ones previously set for this prefix.\n     *\n     * @param string       $prefix  The prefix\n     * @param array|string $paths   The PSR-0 root directories\n     * @param bool         $prepend Whether to prepend the directories\n     */\n    public function add($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            if ($prepend) {\n                $this->fallbackDirsPsr0 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr0\n                );\n            } else {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $this->fallbackDirsPsr0,\n                    (array) $paths\n                );\n            }\n\n            return;\n        }\n\n        $first = $prefix[0];\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n            $this->prefixesPsr0[$first][$prefix] = (array) $paths;\n\n            return;\n        }\n        if ($prepend) {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixesPsr0[$first][$prefix]\n            );\n        } else {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $this->prefixesPsr0[$first][$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace, either\n     * appending or prepending to the ones previously set for this namespace.\n     *\n     * @param string       $prefix  The prefix/namespace, with trailing '\\\\'\n     * @param array|string $paths   The PSR-4 base directories\n     * @param bool         $prepend Whether to prepend the directories\n     *\n     * @throws \\InvalidArgumentException\n     */\n    public function addPsr4($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            // Register directories for the root namespace.\n            if ($prepend) {\n                $this->fallbackDirsPsr4 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr4\n                );\n            } else {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $this->fallbackDirsPsr4,\n                    (array) $paths\n                );\n            }\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n            // Register directories for a new namespace.\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        } elseif ($prepend) {\n            // Prepend directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixDirsPsr4[$prefix]\n            );\n        } else {\n            // Append directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $this->prefixDirsPsr4[$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix,\n     * replacing any others previously set for this prefix.\n     *\n     * @param string       $prefix The prefix\n     * @param array|string $paths  The PSR-0 base directories\n     */\n    public function set($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr0 = (array) $paths;\n        } else {\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace,\n     * replacing any others previously set for this namespace.\n     *\n     * @param string       $prefix The prefix/namespace, with trailing '\\\\'\n     * @param array|string $paths  The PSR-4 base directories\n     *\n     * @throws \\InvalidArgumentException\n     */\n    public function setPsr4($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr4 = (array) $paths;\n        } else {\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Turns on searching the include path for class files.\n     *\n     * @param bool $useIncludePath\n     */\n    public function setUseIncludePath($useIncludePath)\n    {\n        $this->useIncludePath = $useIncludePath;\n    }\n\n    /**\n     * Can be used to check if the autoloader uses the include path to check\n     * for classes.\n     *\n     * @return bool\n     */\n    public function getUseIncludePath()\n    {\n        return $this->useIncludePath;\n    }\n\n    /**\n     * Turns off searching the prefix and fallback directories for classes\n     * that have not been registered with the class map.\n     *\n     * @param bool $classMapAuthoritative\n     */\n    public function setClassMapAuthoritative($classMapAuthoritative)\n    {\n        $this->classMapAuthoritative = $classMapAuthoritative;\n    }\n\n    /**\n     * Should class lookup fail if not found in the current class map?\n     *\n     * @return bool\n     */\n    public function isClassMapAuthoritative()\n    {\n        return $this->classMapAuthoritative;\n    }\n\n    /**\n     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.\n     *\n     * @param string|null $apcuPrefix\n     */\n    public function setApcuPrefix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n    }\n\n    /**\n     * The APCu prefix in use, or null if APCu caching is not enabled.\n     *\n     * @return string|null\n     */\n    public function getApcuPrefix()\n    {\n        return $this->apcuPrefix;\n    }\n\n    /**\n     * Registers this instance as an autoloader.\n     *\n     * @param bool $prepend Whether to prepend the autoloader or not\n     */\n    public function register($prepend = false)\n    {\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n\n        if (null === $this->vendorDir) {\n            //no-op\n        } elseif ($prepend) {\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n        } else {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n            self::$registeredLoaders[$this->vendorDir] = $this;\n        }\n    }\n\n    /**\n     * Unregisters this instance as an autoloader.\n     */\n    public function unregister()\n    {\n        spl_autoload_unregister(array($this, 'loadClass'));\n\n        if (null !== $this->vendorDir) {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n        }\n    }\n\n    /**\n     * Loads the given class or interface.\n     *\n     * @param  string    $class The name of the class\n     * @return bool|null True if loaded, null otherwise\n     */\n    public function loadClass($class)\n    {\n        if ($file = $this->findFile($class)) {\n            includeFile($file);\n\n            return true;\n        }\n    }\n\n    /**\n     * Finds the path to the file where the class is defined.\n     *\n     * @param string $class The name of the class\n     *\n     * @return string|false The path if found, false otherwise\n     */\n    public function findFile($class)\n    {\n        // class map lookup\n        if (isset($this->classMap[$class])) {\n            return $this->classMap[$class];\n        }\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n            return false;\n        }\n        if (null !== $this->apcuPrefix) {\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n            if ($hit) {\n                return $file;\n            }\n        }\n\n        $file = $this->findFileWithExtension($class, '.php');\n\n        // Search for Hack files if we are running on HHVM\n        if (false === $file && defined('HHVM_VERSION')) {\n            $file = $this->findFileWithExtension($class, '.hh');\n        }\n\n        if (null !== $this->apcuPrefix) {\n            apcu_add($this->apcuPrefix.$class, $file);\n        }\n\n        if (false === $file) {\n            // Remember that this class does not exist.\n            $this->missingClasses[$class] = true;\n        }\n\n        return $file;\n    }\n\n    /**\n     * Returns the currently registered loaders indexed by their corresponding vendor directories.\n     *\n     * @return self[]\n     */\n    public static function getRegisteredLoaders()\n    {\n        return self::$registeredLoaders;\n    }\n\n    private function findFileWithExtension($class, $ext)\n    {\n        // PSR-4 lookup\n        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n\n        $first = $class[0];\n        if (isset($this->prefixLengthsPsr4[$first])) {\n            $subPath = $class;\n            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n                $subPath = substr($subPath, 0, $lastPos);\n                $search = $subPath . '\\\\';\n                if (isset($this->prefixDirsPsr4[$search])) {\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n                        if (file_exists($file = $dir . $pathEnd)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-4 fallback dirs\n        foreach ($this->fallbackDirsPsr4 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 lookup\n        if (false !== $pos = strrpos($class, '\\\\')) {\n            // namespaced class name\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n        } else {\n            // PEAR-like class name\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n        }\n\n        if (isset($this->prefixesPsr0[$first])) {\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n                if (0 === strpos($class, $prefix)) {\n                    foreach ($dirs as $dir) {\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-0 fallback dirs\n        foreach ($this->fallbackDirsPsr0 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 include paths.\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n            return $file;\n        }\n\n        return false;\n    }\n}\n\n/**\n * Scope isolated include.\n *\n * Prevents access to $this/self from included files.\n */\nfunction includeFile($file)\n{\n    include $file;\n}\n","<?php\n\n\n\n\n\n\n\n\n\n\n\nnamespace Composer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Composer\\Semver\\VersionParser;\n\n\n\n\n\n\nclass InstalledVersions\n{\nprivate static $installed = array (\n  'root' => \n  array (\n    'pretty_version' => '1.0.0+no-version-set',\n    'version' => '1.0.0.0',\n    'aliases' => \n    array (\n    ),\n    'reference' => NULL,\n    'name' => 'uniter/markdown-plugin-example',\n  ),\n  'versions' => \n  array (\n    'uniter/markdown-plugin-example' => \n    array (\n      'pretty_version' => '1.0.0+no-version-set',\n      'version' => '1.0.0.0',\n      'aliases' => \n      array (\n      ),\n      'reference' => NULL,\n    ),\n  ),\n);\nprivate static $canGetVendors;\nprivate static $installedByVendor = array();\n\n\n\n\n\n\n\npublic static function getInstalledPackages()\n{\n$packages = array();\nforeach (self::getInstalled() as $installed) {\n$packages[] = array_keys($installed['versions']);\n}\n\n\nif (1 === \\count($packages)) {\nreturn $packages[0];\n}\n\nreturn array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n}\n\n\n\n\n\n\n\n\n\npublic static function isInstalled($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (isset($installed['versions'][$packageName])) {\nreturn true;\n}\n}\n\nreturn false;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npublic static function satisfies(VersionParser $parser, $packageName, $constraint)\n{\n$constraint = $parser->parseConstraints($constraint);\n$provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n\nreturn $provided->matches($constraint);\n}\n\n\n\n\n\n\n\n\n\n\npublic static function getVersionRanges($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\n$ranges = array();\nif (isset($installed['versions'][$packageName]['pretty_version'])) {\n$ranges[] = $installed['versions'][$packageName]['pretty_version'];\n}\nif (array_key_exists('aliases', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n}\nif (array_key_exists('replaced', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n}\nif (array_key_exists('provided', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n}\n\nreturn implode(' || ', $ranges);\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getVersion($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['version'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['version'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getPrettyVersion($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['pretty_version'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['pretty_version'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getReference($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['reference'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['reference'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getRootPackage()\n{\n$installed = self::getInstalled();\n\nreturn $installed[0]['root'];\n}\n\n\n\n\n\n\n\npublic static function getRawData()\n{\nreturn self::$installed;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npublic static function reload($data)\n{\nself::$installed = $data;\nself::$installedByVendor = array();\n}\n\n\n\n\nprivate static function getInstalled()\n{\nif (null === self::$canGetVendors) {\nself::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n}\n\n$installed = array();\n\nif (self::$canGetVendors) {\n\nforeach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\nif (isset(self::$installedByVendor[$vendorDir])) {\n$installed[] = self::$installedByVendor[$vendorDir];\n} elseif (is_file($vendorDir.'/composer/installed.php')) {\n$installed[] = self::$installedByVendor[$vendorDir] = require $vendorDir.'/composer/installed.php';\n}\n}\n}\n\n$installed[] = self::$installed;\n\nreturn $installed;\n}\n}\n","<?php\n\n// autoload_classmap.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Composer\\\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',\n);\n","<?php\n\n// autoload_namespaces.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n);\n","<?php\n\n// autoload_psr4.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'MyUniterProjects\\\\MarkdownPluginExample\\\\' => array($baseDir . '/src'),\n);\n","<?php\n\n// autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190\n{\n    private static $loader;\n\n    public static function loadClassLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader\n     */\n    public static function getLoader()\n    {\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        spl_autoload_register(array('ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190', 'loadClassLoader'), true, true);\n        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(\\dirname(__FILE__)));\n        spl_autoload_unregister(array('ComposerAutoloaderInita938c0f9513fc8fb70dd34967ae81190', 'loadClassLoader'));\n\n        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());\n        if ($useStaticLoader) {\n            require __DIR__ . '/autoload_static.php';\n\n            call_user_func(\\Composer\\Autoload\\ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::getInitializer($loader));\n        } else {\n            $map = require __DIR__ . '/autoload_namespaces.php';\n            foreach ($map as $namespace => $path) {\n                $loader->set($namespace, $path);\n            }\n\n            $map = require __DIR__ . '/autoload_psr4.php';\n            foreach ($map as $namespace => $path) {\n                $loader->setPsr4($namespace, $path);\n            }\n\n            $classMap = require __DIR__ . '/autoload_classmap.php';\n            if ($classMap) {\n                $loader->addClassMap($classMap);\n            }\n        }\n\n        $loader->register(true);\n\n        return $loader;\n    }\n}\n","<?php\n\n// autoload_static.php @generated by Composer\n\nnamespace Composer\\Autoload;\n\nclass ComposerStaticInita938c0f9513fc8fb70dd34967ae81190\n{\n    public static $prefixLengthsPsr4 = array (\n        'M' => \n        array (\n            'MyUniterProjects\\\\MarkdownPluginExample\\\\' => 39,\n        ),\n    );\n\n    public static $prefixDirsPsr4 = array (\n        'MyUniterProjects\\\\MarkdownPluginExample\\\\' => \n        array (\n            0 => __DIR__ . '/../..' . '/src',\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n    );\n\n    public static function getInitializer(ClassLoader $loader)\n    {\n        return \\Closure::bind(function () use ($loader) {\n            $loader->prefixLengthsPsr4 = ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::$prefixLengthsPsr4;\n            $loader->prefixDirsPsr4 = ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::$prefixDirsPsr4;\n            $loader->classMap = ComposerStaticInita938c0f9513fc8fb70dd34967ae81190::$classMap;\n\n        }, null, ClassLoader::class);\n    }\n}\n","<?php return array (\n  'root' => \n  array (\n    'pretty_version' => '1.0.0+no-version-set',\n    'version' => '1.0.0.0',\n    'aliases' => \n    array (\n    ),\n    'reference' => NULL,\n    'name' => 'uniter/markdown-plugin-example',\n  ),\n  'versions' => \n  array (\n    'uniter/markdown-plugin-example' => \n    array (\n      'pretty_version' => '1.0.0+no-version-set',\n      'version' => '1.0.0.0',\n      'aliases' => \n      array (\n      ),\n      'reference' => NULL,\n    ),\n  ),\n);\n"],"sourceRoot":""}